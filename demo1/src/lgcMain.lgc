if (errorNumber > 0)  {  call(lgcError);  }if (currentRoom == 0)  {  configure.screen(1, 22, 0);  status.line.off();  display(23, 16, "Welcome");  script.size(200);  accept.input();  prevent.input();  set.key(0, 59, cHelp);  set.key(0, 60, cToggleSound);  set.key(19, 0, cToggleSound);  set.key(0, 61, cEchoLine);  set.key(5, 0, cEchoLine);  set.key(0, 62, cF4);  set.key(0, 63, cSave);  set.key(0, 64, cF6);  set.key(0, 65, cRestore);  set.key(0, 66, cF8);  set.key(0, 67, cRestart);  set.key(0, 68, cSpeed);  set.key(9, 0, c10);  set.key(0, 32, cDebug);  set.key(10, 0, cInitJoy);  set.key(3, 0, cCancelLine);  set.key(27, 0, cPause);  set.key(18, 0, cToggleMonitor);  set.key(0, 44, cQuit);  set.key(43, 0, cCrescendo);  set.key(44, 0, cCrescendo);  set.key(45, 0, cDecrescendo);  set.menu("File");  set.menu("Game");  set.menu.item("Restart Game   <F9>", cRestart);  set.menu.item("Pause         <Esc>", cPause);  set.menu.item("Quit            ", cQuit);  set.menu("Sound");  set.menu.item("Toggle Sound   <F1>", cToggleSound);  submit.menu();  set.game.id("DEMO");  if (machineType == PCJR)    {    set.key(49, 0, cHelp);    set.key(50, 0, cToggleSound);    set.key(51, 0, cEchoLine);    set.key(52, 0, cF4);    set.key(53, 0, cSave);    set.key(54, 0, cF6);    set.key(55, 0, cRestore);    set.key(56, 0, cF8);    set.key(57, 0, cRestart);    }  new.room(rmSQStart);  }if (newRoom)  {  [Clear any local and dynamic flags and variables  work = 220;mrLooper:  *work = 0;  reset.v(work);  if (work < 254)    {    ++work;    goto(mrLooper);    }  work = 2;  animationInterval = work;  load.logics.v(currentRoom);  load.logics(lgcDebug);  roomSeconds = 0;  }if (currentRoom != 13)  [ no room 13  {  if (controller(cPause))    {    print("Demonstration Paused");    }  if ((controller(cQuit) ||       said("quit")))    {    stop.sound();    quit(0);    }  }if (controller(cCrescendo))  {  --attenuation;  }if (controller(cDecrescendo))  {  if (attenuation < 15)    {    ++attenuation;    }  }if (controller(cToggleSound))  {  toggle(soundOn);  if (isset(soundOn))    {    printTimeout = 6;    print("Sound now On");    }  else    {    printTimeout = 6;    print("Sound now Off");    }  }if (controller(cToggleMonitor))  {  toggle.monitor();  }if (controller(cRestart))  {  new.room(rmSQStart);  }if (said("fast"))  {  animationInterval = FAST_SPEED;  }if (said("normal"))  {  animationInterval = NORMAL_SPEED;  }if (said("slow"))  {  animationInterval = SLOW_SPEED;  }if (elapsedSeconds != oldSeconds)  {  oldSeconds = elapsedSeconds;  set(aSecondPassed);  ++roomSeconds;  }call.v(currentRoom);reset(aSecondPassed);call(lgcDebug);return();[ Messages#message 1 "Demonstration Paused"#message 2 "Welcome"#message 3 "Sound now Off"#message 4 "Sound now On"#message 12 "DEMO"#message 20 "File"#message 25 "Game"#message 26 "Restart Game   <F9>"#message 27 "Pause         <Esc>"#message 28 "Quit            "#message 30 "Sound"#message 31 "Toggle Sound   <F1>"