[***********************************************************[[ rm.SF_Kitchen[ [ This room includes the fort's kitchen, brewery and shoe[ shop. There is nothing for Jerrod to do here.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDoor1                       o1#define oDoor2                       o2#define oDoor3                       o3[ f220 is not used#define fDoor1Moved                f221#define fDoor1Open                 f222#define fDoor2Moved                f223#define fDoor2Open                 f224#define fDoor3Moved                f225#define fDoor3Open                 f226#define fBehindWindow              f227[ f228 through f237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load mule logic  load.logics(lgc.Mule);    [ load picture for current room  load.pic(currentRoom);    [ load views used the room  load.view(vw.JerrodCA);  load.view(vw.SF_Doors1);  load.view(vw.SF_Doors3);  load.view(vw.SuttersFortArt2);  load.view(vw.WindowJerrod);    [ load sounds used in the room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ draw the current room picture  draw.pic(currentRoom);    [ add brewery features  add.to.pic(vw.SuttersFortArt2, 0, 0, 31, 88, 6, 0);  [ add kitchen features  add.to.pic(vw.SuttersFortArt2, 0, 1, 102, 94, 6, 0);  [ add shoe store features  add.to.pic(vw.SuttersFortArt2, 0, 2, 135, 108, 6, 6);    [ door to brewery  animate.obj(oDoor1);  set.view(oDoor1, vw.SF_Doors1);  set.loop(oDoor1, 4);  set.cel(oDoor1, 0);  ignore.objs(oDoor1);  ignore.blocks(oDoor1);  set.priority(oDoor1, 8);  position(oDoor1, 31, 104);  draw(oDoor1);  stop.update(oDoor1);    [ door to kitchen  animate.obj(oDoor2);  set.view(oDoor2, vw.SF_Doors1);  set.loop(oDoor2, 5);  set.cel(oDoor2, 0);  ignore.objs(oDoor2);  ignore.blocks(oDoor2);  set.priority(oDoor2, 8);  position(oDoor2, 102, 104);  draw(oDoor2);  stop.update(oDoor2);    [ door to shoe store  animate.obj(oDoor3);  set.view(oDoor3, vw.SF_Doors3);  set.loop(oDoor3, 0);  set.cel(oDoor3, 0);  ignore.objs(oDoor3);  ignore.blocks(oDoor3);  set.priority(oDoor3, 7);  position(oDoor3, 135, 115);  draw(oDoor3);  stop.update(oDoor3);    [ Jerrod in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);    [ if coming from Sutters Fort-North  if (previousRoom == rm.SuttersFortNorth)    {    [ change direction and loop    egoDir = STOPPED;    set.loop(ego, 2);    }  [ if coming from the corral  if (previousRoom == rm.SF_Corral)    {    [ change direction and loop    egoDir = RIGHT;    set.loop(ego, 0);    }  [ if coming from the administrative offices  if (previousRoom == rm.SF_Admin)    {    [ change direction and loop    egoDir = UP;    set.loop(ego, 3);    }  ignore.blocks(ego);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is on an alarm line and not marked as behind a[ windowif (isset(egoHitSpecial) && !isset(fBehindWindow))  {  [ show Jerrod behind window  set(fBehindWindow);  set.view(ego, vw.WindowJerrod);  }  [ if Jerrod is not on an alarm line but is marked as behind[ a windowif (!isset(egoHitSpecial) && isset(fBehindWindow))  {  [ no longer behind window  reset(fBehindWindow);  [ restore normal view  set.view(ego, vw.JerrodCA);  }  [ if Jerrod is by door to brewery and it is not openif (posn(ego, 1, 84, 43, 107) && !isset(fDoor1Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #1 to update  start.update(oDoor1);  [ temporarily halt Jerrod while door opens  stop.update(ego);  [ open door #1  end.of.loop(oDoor1, fDoor1Moved);  set(fDoor1Open);  }  [ if Jerrod is not by door to brewery and it is openif (!posn(ego, 1, 84, 43, 107) && isset(fDoor1Open))  {  [ allow door #1 to update  start.update(oDoor1);  [ close it  reverse.loop(oDoor1, fDoor1Moved);  reset(fDoor1Open);  }  [ if brewery door is done cyclingif (isset(fDoor1Moved))  {  [ stop updating door #1  stop.update(oDoor1);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoor1Moved);  [ if door #1 is now closed  if (!isset(fDoor1Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  } [ if Jerrod is by kitchen door and it is not open if (posn(ego, 80, 84, 117, 107) && !isset(fDoor2Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #2 to update  start.update(oDoor2);  [ temporarily halt Jerrod while door #2 opens  stop.update(ego);  [ open door #2  end.of.loop(oDoor2, fDoor2Moved);  set(fDoor2Open);  }  [ if not Jerrod is by kitchen door and it is openif (!posn(ego, 80, 84, 117, 107) && isset(fDoor2Open))  {  [ allow door #2 to update  start.update(oDoor2);  [ close it  reverse.loop(oDoor2, fDoor2Moved);  reset(fDoor2Open);  }[ if door #2 is done cyclingif (isset(fDoor2Moved))  {  [ stop updating door #2  stop.update(oDoor2);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoor2Moved);  [ if door #2 is now closed  if (!isset(fDoor2Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ if Jerrod is by shoe shop door and it is not openif (!isset(fDoor3Open) &&     (posn(ego, 126, 84, 143, 118) ||     posn(ego, 120, 84, 125, 100) ||     posn(ego, 144, 84, 159, 119)))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #3 to update  start.update(oDoor3);  [ temporarily halt Jerrod while door opens  stop.update(ego);  [ open door #3  end.of.loop(oDoor3, fDoor3Moved);  set(fDoor3Open);  }  [ if Jerrod is not by shoe shop door and it is openif (!posn(ego, 120, 84, 125, 100) &&     !posn(ego, 126, 84, 143, 118) &&     !posn(ego, 144, 84, 159, 119) &&     isset(fDoor3Open))  {  [ allow door #3 to update  start.update(oDoor3);  [ close it  reverse.loop(oDoor3, fDoor3Moved);  reset(fDoor3Open);  }  [ if door #3 is done cyclingif (isset(fDoor3Moved))  {  [ stop updating door #3  stop.update(oDoor3);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoor3Moved);  [ if door #3 is now closed  if (!isset(fDoor3Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ going left leads to corral - [ if along middle-top of left edgeif (posn(ego, 1, 108, 1, 131))  {  [ Jerrod's position in corral is   [ right of center  position(ego, 116, 165);  new.room(rm.SF_Corral); [ ##LE001##  }[ if along lower left edgeif (posn(ego, 1, 132, 1, 166))  {  [ Jerrod's position in corral is  [ on left edge  position(ego, 32, 165);  new.room(rm.SF_Corral); [ ##LE002##  }  [ going right leads to admin offices -[ if along upper to mid right edgeif (posn(ego, 1, 166, 129, 166))  {  [ Jerrod's position in admin offices  [ is lower-left corner  position(ego, 2, 158);  new.room(rm.SF_Admin); [ ##LE003##  }[ if along lower-right edgeif (posn(ego, 130, 166, 153, 166))  {  position(ego, 2, 126);  new.room(rm.SF_Admin); [ ##LE004##  }  [ if going out through the middle entrancewayif (posn(ego, 59, 74, 68, 74))  {  [ position Jerrod just north of Sutter's Fort  position(ego, 130, 93);  new.room(rm.SuttersFortNorth); [ ##LE005##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  [ response depends on Jerrod's location  if ((posn(ego, 1, 84, 43, 107) ||       posn(ego, 80, 84, 117, 107) ||       posn(ego, 120, 84, 159, 110) ||       posn(ego, 136, 111, 159, 119)))    {    if (posn(ego, 1, 84, 43, 107))      {      print("This is the most fermented place in the fort! This is the brewery.");      print("You don't need anything here!");      }    if (posn(ego, 80, 84, 117, 107))      {      print("This is the fort kitchen! Nothin' is on the stove.");      print("You don't need anything here!");      }    if ((posn(ego, 120, 84, 159, 110) ||         posn(ego, 136, 111, 159, 119)))      {      print("This is the fort's shoe shop. The boots on yer feet are all ya "            "need!");      print("You don't need anything here!");      }    }  else    {    print("The smell of mules is obvious here. There's a small mule corral not "          "far away.");    }  }  [ look muleif ((said("examine", "donkey") || said("examine", "animal")))  {  print("The smell of mules is obvious here. There's a small mule corral not "        "far away.");  }  [ get shoe/buy shoeif ((said("acquire", "shoe") || said("buy", "shoe")))  {  [ if in the shoe shop  if (posn(ego, 126, 84, 143, 118))    {    print("Shoes? Ha!! Shoes are fer sissies! Real men wear boots!!");    }  else    {    print("What %w2?");    }  }  [ look outside/look cemeteryif ((said("examine", "outside") ||     said("examine", "out", "side") ||     said("examine", "cemetery")))  {  print("Goin' outside makes it easy to get to the cemetery.");  }  [ smell/smell muleif ((said("smell") ||     said("smell", "donkey") ||     said("smell", "animal")))  {  print("There are definitely mules near by!");  }  [ look ground/look grassif ((said("examine", "dirt") || said("examine", "grass")))  {  print("The animals keep the grass short!");  }  [ look door/look openingif ((said("examine", "door") ||     said("examine", "opening") ||     said("examine", "gate")))  {  print("There's a opening to the outside of the fort. It's a short cut to the "        "cemetery.");  }  [ look windowif (said("examine", "glass"))  {  print("There's nothin' unusual 'bout these windows.");  }  [ open doorif (said("open", "door"))  {  print("Just walk up to one of 'em!");  }  [ look fort/look wallsif ((said("examine", "fort") ||     said("examine", "wall")))  {  print("There's an opening in the fort wall leadin' outside.");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Diggin' ain't allowed here! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  [ eat foodif ((said("eat") ||     said("eat", "food") ||     said("acquire", "food") ||     said("buy", "food")))  {  print("There ain't no food prepared here!");  }  Done:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ call mule logic to handle mule related commands  call(lgc.Mule);  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is the most fermented place in the fort! This is the brewery."#message 2 "This is the fort kitchen! Nothin' is on the stove."#message 3 "This is the fort's shoe shop. The boots on yer feet are all ya need!"#message 4 "The smell of mules is obvious here. There's a small mule corral not far away."#message 5 "Shoes? Ha!! Shoes are fer sissies! Real men wear boots!!"#message 6 "What %w2?"#message 15 "Goin' outside makes it easy to get to the cemetery."#message 16 "There are definitely mules near by!"#message 33 "The animals keep the grass short!"#message 34 "There's a opening to the outside of the fort. It's a short cut to the cemetery."#message 35 "There's nothin' unusual 'bout these windows."#message 36 "Just walk up to one of 'em!"#message 37 "There's an opening in the fort wall leadin' outside."#message 40 "Diggin' ain't allowed here! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"#message 43 "There ain't no food prepared here!"#message 74 "You don't need anything here!"