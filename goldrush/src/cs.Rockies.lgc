[***********************************************************[[ cs.Rockies[[ This logic manages the wagon trip cutscenes as Jerrod [ travels across the Rocky Mountains from Fort Laramie in[ Wyoming to the continental divide. Jerrod doesn't have to[ worry about dying in this cutscene; it just shows the[ wagon train's progress.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oCursor                      o1#define oMapExpander                 o2#define oWagon                       o3#define oTracks                      o4#define oSceneWindow                 o5#define vMapPic                    v220#define vOvlPic                    v221#define vMapStage                  v222#define vMapTimer                  v223#define vCursorStatus              v224#define vNormalSpeed               v225#define vTrackSpeed                v226#define vTmpY                      v227#define vFlashTimer                v228#define vSceneTimer                v229#define vSceneStage                v230#define vMsgStatus                 v231#define vTimeStatus                v232#define fCursorMoved               f220#define fFlashOn                   f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ pictures used in this scene are the main map of the USA  [ and the Rocky Mountain detail map  vMapPic = map.USA;  vOvlPic = map.RockiesSmall;    [ normal cursor speed is 2  vNormalSpeed = 2;    [ load, draw and discard main map of USA  load.pic(vMapPic);  draw.pic(vMapPic);  discard.pic(vMapPic);    [ set map stage to first sequence  vMapStage = 1;    [ load the main timing logic  load.logics(lgc.WagonTripTiming);    [ load views used in the room  load.view(vw.MapZoom);  load.view(vw.MapTracks);  load.view(vw.MapArt);    [ add blocks and tracks to show trail marker up to current  [ point  add.to.pic(vw.MapTracks, 5, 0, 131, 53, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 120, 54, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 57, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 45, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 105, 43, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 103, 55, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 98, 67, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 96, 79, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 89, 91, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 86, 92, 5, 5);  add.to.pic(vw.MapTracks, 0, 0, 73, 86, 9, 9);  add.to.pic(vw.MapTracks, 2, 0, 73, 86, 9, 9);  add.to.pic(vw.MapTracks, 0, 1, 58, 73, 9, 9);  add.to.pic(vw.MapTracks, 2, 1, 58, 73, 9, 9);    [ animate scene window (with mountain art)  animate.obj(oSceneWindow);  set.view(oSceneWindow, vw.MapArt);  set.loop(oSceneWindow, 8);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 9);  position(oSceneWindow, 12, 161);    [ animate wagon used in scene window  animate.obj(oWagon);  set.view(oWagon, vw.MapArt);  set.loop(oWagon, 1);  set.priority(oWagon, 11);  position(oWagon, 18, 148);    [ animate tracks used in scene window  animate.obj(oTracks);  set.view(oTracks, vw.MapArt);  set.loop(oTracks, 2);  set.priority(oTracks, 10);  position(oTracks, 15, 150);    [ animate cursor that shows track progress  animate.obj(oCursor);  set.view(oCursor, vw.MapTracks);  set.loop(oCursor, 3);  fix.loop(oCursor);  position(oCursor, 149, 113);  set.priority(oCursor, 7);  ignore.horizon(oCursor);  ignore.objs(oCursor);    [ animate map expander that shows the detail map expanding  [ out of main map  animate.obj(oMapExpander);  set.view(oMapExpander, vw.MapTracks);  set.loop(oMapExpander, 2);  set.cel(oMapExpander, 2);  fix.loop(oMapExpander);  position(oMapExpander, 46, 63);  set.priority(oMapExpander, 9);  ignore.horizon(oMapExpander);  ignore.objs(oMapExpander);  stop.cycling(oMapExpander);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if scene sequence hasn't started yet, and cursor has just[ started movingif (posn(oCursor, 149, 112, 149, 112) && vSceneStage == 0)  {  [ advance to next stage  vSceneStage = 1;  [ set cursor step time to normal speed  step.time(oCursor, vNormalSpeed);  [ show scene window with smallest image  draw(oSceneWindow);  stop.cycling(oSceneWindow);  }  [ if at scene stage 1if (vSceneStage == 1)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 2;    [ show mid size image of scene window    set.cel(oSceneWindow, 1);    }  }[ if at scene stage 2if (vSceneStage == 2)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 3;    [ show scene window with full size image    set.cel(oSceneWindow, 2);    [ force it to update right now    force.update(oSceneWindow);    [ draw the wagon    draw(oWagon);    [ set track speed to 2    vTrackSpeed = 2;    cycle.time(oTracks, vTrackSpeed);    [ then show the animal tracks    draw(oTracks);    }  }  [ in first map stageif (vMapStage == 1)  {  [ increment main scene timer  ++vMapTimer;    [ flash timer controls speed that the red box flashes  [ between on and off  ++vFlashTimer;    [ create flashing red box by drawing/erasing the box every  [ four cycles (why not just use a view, with a cycle time  [ of four???)  if (vFlashTimer == 4)    {    vFlashTimer = 0;    toggle(fFlashOn);    if (isset(fFlashOn))      {      draw(oMapExpander);      }    else      {      erase(oMapExpander);      }    }      [ after 80 cycles  if (vMapTimer == 80)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 2;    [ change expander object to show the first cel of the    [ Rocky Mountain map    set.priority(oMapExpander, 9);    set.view(oMapExpander, vw.MapZoom);    set.loop(oMapExpander, 2);    fix.loop(oMapExpander);    set.cel(oMapExpander, 0);    position(oMapExpander, 35, 80);    [ show it on screen    draw(oMapExpander);    }  }  [ if in map stage 2if (vMapStage == 2)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 3;    [ show mid size image of Rocky Mountain map    set.cel(oMapExpander, 1);    }  }  [ if in map stage 3if (vMapStage == 3)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset counter    vMapTimer = 0;    [ advance to next stage    vMapStage = 4;    [ show largest cel in expanding map    set.cel(oMapExpander, 2);    }  }  [ if in map stage 4if (vMapStage == 4)  {  [ increment timer  ++vMapTimer;  [ after five cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 5;    [ add the small Rocky Mountain overlay    load.pic(vOvlPic);    overlay.pic(vOvlPic);    discard.pic(vOvlPic);    [ then remove the expanding map object    erase(oMapExpander);    [ show pic to force the update    show.pic();    }  }  [ if in map stage 5if (vMapStage == 5)  {  [ increment timer  ++vMapTimer;  [ after 5 cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ advance to end stage    vMapStage = 6;    [ load the large Rocky Mountain overlay    load.pic(currentRoom);    overlay.pic(currentRoom);    discard.pic(currentRoom);    [ show picture to force update    show.pic();        [ now draw the cursor on the screen    draw(oCursor);    [ and begin moving it    move.obj(oCursor, 149, 109, 1, fCursorMoved);    vCursorStatus = 1;    }  }  [ need to periodically adjust cursor's destination so it[ follows the correct path across the screenif (isset(fCursorMoved) && vCursorStatus == 1)  {  reset(fCursorMoved);  vCursorStatus = 2;  move.obj(oCursor, 148, 107, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 2)  {  reset(fCursorMoved);  vCursorStatus = 3;  move.obj(oCursor, 140, 105, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 3)  {  reset(fCursorMoved);  vCursorStatus = 4;  move.obj(oCursor, 132, 86, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 4)  {  reset(fCursorMoved);  vCursorStatus = 5;  move.obj(oCursor, 127, 79, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 5)  {  reset(fCursorMoved);  vCursorStatus = 6;  move.obj(oCursor, 123, 77, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 6)  {  reset(fCursorMoved);  vCursorStatus = 7;  move.obj(oCursor, 120, 69, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 7)  {  reset(fCursorMoved);  vCursorStatus = 8;  move.obj(oCursor, 118, 68, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 8)  {  reset(fCursorMoved);  vCursorStatus = 9;  move.obj(oCursor, 117, 66, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 9)  {  reset(fCursorMoved);  vCursorStatus = 10;  move.obj(oCursor, 108, 65, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 10)  {  reset(fCursorMoved);  vCursorStatus = 11;  move.obj(oCursor, 106, 61, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 11)  {  reset(fCursorMoved);  vCursorStatus = 12;  move.obj(oCursor, 87, 51, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 12)  {  reset(fCursorMoved);  [ need to readjust cursor type and position here to  [ account for bend in the path  vCursorStatus = 13;  vTrackSpeed = -10; [ 246;  vTmpY = 1;  reposition(oCursor, vTrackSpeed, vTmpY);  set.loop(oCursor, 4);  move.obj(oCursor, 77, 66, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 13)  {  reset(fCursorMoved);  vCursorStatus = 14;  move.obj(oCursor, 76, 66, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 14)  {  reset(fCursorMoved);  vCursorStatus = 15;  move.obj(oCursor, 74, 72, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 15)  {  reset(fCursorMoved);  vCursorStatus = 16;  move.obj(oCursor, 73, 72, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 16)  {  reset(fCursorMoved);  vCursorStatus = 17;  move.obj(oCursor, 67, 86, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 17)  {  reset(fCursorMoved);  vCursorStatus = 18;  move.obj(oCursor, 66, 87, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 18)  {  reset(fCursorMoved);  vCursorStatus = 19;  move.obj(oCursor, 22, 87, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 19)  {  reset(fCursorMoved);  vCursorStatus = 20;  move.obj(oCursor, 17, 86, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 20)  {  reset(fCursorMoved);  vCursorStatus = 21;  move.obj(oCursor, 13, 94, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 21)  {  reset(fCursorMoved);  vCursorStatus = 22;  move.obj(oCursor, 2, 104, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 22)  {  [ when cursor gets to left edge, OK to continue to next  [ cutscene  set(ContinueJourney);  }  [ as cursor moves across the screen, add blocks to the[ picture to keep previous portions of the track permanently[ visibleif (posn(oCursor, 143, 105, 143, 105))  {  add.to.pic(vw.MapTracks, 5, 1, 143, 105, 6, 6);  }if (posn(oCursor, 132, 97, 132, 97))  {  add.to.pic(vw.MapTracks, 5, 1, 132, 97, 6, 6);  }if (posn(oCursor, 131, 85, 131, 85))  {  add.to.pic(vw.MapTracks, 5, 1, 131, 85, 6, 6);  }if (posn(oCursor, 121, 75, 121, 75))  {  add.to.pic(vw.MapTracks, 5, 1, 121, 75, 6, 6);  }if (posn(oCursor, 112, 65, 112, 65))  {  add.to.pic(vw.MapTracks, 5, 1, 112, 65, 6, 6);  }if (posn(oCursor, 101, 56, 101, 56))  {  add.to.pic(vw.MapTracks, 5, 1, 101, 56, 6, 6);  }if (posn(oCursor, 96, 51, 96, 51))  {  add.to.pic(vw.MapTracks, 5, 1, 96, 51, 6, 6);  }if (posn(oCursor, 87, 51, 87, 51))  {  add.to.pic(vw.MapTracks, 5, 1, 87, 51, 6, 6);  }if (posn(oCursor, 77, 63, 77, 63))  {  add.to.pic(vw.MapTracks, 5, 2, 77, 63, 6, 6);  }if (posn(oCursor, 70, 75, 70, 75))  {  add.to.pic(vw.MapTracks, 5, 2, 70, 75, 6, 6);  }if (posn(oCursor, 66, 87, 66, 87))  {  add.to.pic(vw.MapTracks, 5, 2, 66, 87, 6, 6);  }if (posn(oCursor, 55, 87, 55, 87))  {  add.to.pic(vw.MapTracks, 5, 2, 55, 87, 6, 6);  }if (posn(oCursor, 44, 87, 44, 87))  {  add.to.pic(vw.MapTracks, 5, 2, 44, 87, 6, 6);  }if (posn(oCursor, 33, 87, 33, 87))  {  add.to.pic(vw.MapTracks, 5, 2, 33, 87, 6, 6);  }if (posn(oCursor, 22, 87, 22, 87))  {  add.to.pic(vw.MapTracks, 5, 2, 22, 87, 6, 6);  }if (posn(oCursor, 13, 94, 13, 94))  {  add.to.pic(vw.MapTracks, 5, 2, 13, 94, 6, 6);  }  [ as the cursor moves across the screen, update the total[ game travel timeif (posn(oCursor, 132, 94, 132, 94) && vTimeStatus == 0)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 116, 65, 116, 65) && vTimeStatus == 1)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 96, 51, 96, 51) && vTimeStatus == 2)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 74, 69, 74, 69) && vTimeStatus == 3)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 60, 87, 60, 87) && vTimeStatus == 4)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 39, 87, 39, 87) && vTimeStatus == 5)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 16, 87, 16, 87) && vTimeStatus == 6)  {  ++vTimeStatus;  GameDays  += 3;  }  [ as cursor moves across the screen, display periodic[ messages to update player on the tripif (posn(oCursor, 135, 100, 135, 100) && vMsgStatus == 0)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("Leaving Ft. Laramie, the scenery changes abruptly.");    print("From the gentle slopes of the plain, you are now traveling on the "          "sandy, steep trails leading into the hills called the \"Black "          "Hills\" because of the dense growth of juniper and pine.");    }  }if (posn(oCursor, 125, 77, 125, 77) && vMsgStatus == 1)  {  ++vMsgStatus;  print("It is now obvious that many wagons on the trail are still extremely "        "overloaded, and they have been abandoning all unnecessary items in "        "mass quantities!");  print("Abandoned articles consisting of bacon, sugar, camp equipment, cooking "        "utensils, clothes, household furniture, stoves, gridirons, carpenter's "        "tools, blacksmith anvils, crowbars, drills, augers, gold washers, "        "chisels, axes, trunks, spades, plows, large grindstones, baking ovens, "        "kegs, and barrels, are everywhere.");  print("One company, once in the Black Hills, finally discarded an entire saw "        "mill they planned to operate in California!!");  print("Anything of any value that was discarded was usually ruined in some "        "way so that successive travelers would not be able to use the item.");  print("As for your company, the captain orders that every item that isn't "        "essential to the trip must be discarded, no matter how small!");          [ if Jerrod has the coin, bible or photo  if ((has("Gold coin") ||       JakesLetter == JL_DELIVERED ||       JakesLetter == JL_OPENED ||       has("Bible") ||       has("Family photo")))    {    [ he keeps those items    if (has("Gold coin"))      {      print("Fortunately for you, the solid gold coin you brought with you from "            "Brooklyn was in your pocket, so you still have that!");      }    if ((JakesLetter == JL_DELIVERED || JakesLetter == JL_OPENED))      {      if (isset(FoundGoldFlake))        {        print("The letter from your long-lost brother, Jake, was in your hip "              "pocket, along with the gold flake under the stamp. So that is "              "still with you.");        }      else        {        print("The letter from your long-lost brother, Jake, was in your hip "              "pocket. So that is still with you.");        }      }    if (has("Family photo"))      {      print("Your family photo fits in your pocket, so that isn't discarded!");      }    if (has("Bible"))      {      print("The company decides to allow you to keep the Bible, just in case "            "someone needs it later.");      }    [ he loses everything else    print("Everything else is thrown from the wagon beside the trail.");    }  else    {    [ Jerrod doesn't have anything worth keeping    print("For the good of the company, you throw all your earthly possessions "          "onto the dusty trail!!");    }  [ drop all non-essential items  if (has("Pipe"))    {    drop("Pipe");    }  if (has("House key"))    {    drop("House key");    }  if (has("Nails"))    {    drop("Nails");    }  if (has("Pure bull manure"))    {    drop("Pure bull manure");    }  if (has("Bank statement"))    {    drop("Bank statement");    }  if (has("Flowers"))    {    drop("Flowers");    }  if (MetalStatus == 1)    {    MetalStatus = 2;    drop("Metal scraps");    }  if (has("Lumber"))    {    drop("Lumber");    }  if (has("Rope"))    {    drop("Rope");    }  if (has("Bucket"))    {    drop("Bucket");    }  if (has("Chain"))    {    drop("Chain");    }  if (has("Mosquito net"))    {    drop("Mosquito net");    }  if (has("Lantern"))    {    drop("Lantern");    }  if (has("Citrus fruit"))    {    drop("Citrus fruit");    }  if (has("Flour"))    {    drop("Flour");    }  if (has("Peas"))    {    drop("Peas");    }  if (has("Beans"))    {    drop("Beans");    }  if (has("Vegetables"))    {    drop("Vegetables");    }  if (has("Shovel"))    {    drop("Shovel");    }  if (has("Pick"))    {    drop("Pick");    }  [ all cash is tossed as well  set(DropAllCash);  call(lgc.AdjustCash);  }  if (posn(oCursor, 106, 62, 106, 62) && vMsgStatus == 2)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("The only way to cross the North Platte River is by ferry. The line "          "of wagons waiting to cross the river sometimes reaches twenty miles "          "in length!!");    print("Impatient companies cut down trees and make their own rafts for "          "their wagons.");    }  }if (posn(oCursor, 90, 51, 90, 51) && vMsgStatus == 3)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("The scenery changes once again.");    print("The landscape is barren, and dotted with sagebrush.");    print("This desert-like region has a few widely scattered ponds, most of "          "which are poisonous pools of alkaline water.");    print("It is a gruesome sight to see the result of one of your animals "          "partaking of the poison.");    print("Surrounding these alkaline ponds, the sage bushes are outnumbered "          "only by animal carcasses.");    }  }if (posn(oCursor, 66, 87, 66, 87) && vMsgStatus == 4)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("It is a welcome relief to pass from the alkaline territory into the "          "region of the Sweetwater River where the water is just that - sweet!");    }  }if (posn(oCursor, 10, 97, 10, 97) && vMsgStatus == 5)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("At the west end of the Sweetwater Valley the trail crossed a broad "          "plateau to South Pass, the halfway point of your cross-country trek.");    print("A short break from the seemingly never-ending toil of crossing the "          "country is taken at South Pass to celebrate reaching the halfway "          "point of your journey, which coincides with the Continental Divide. "          "You are now on the Pacific side of the Rockies!");    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ (this boilerplate 'if' block isn't needed since no input[ is processed in this cutscene logic)Done:[ call the main timing logiccall(lgc.WagonTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Leaving Ft. Laramie, the scenery changes abruptly."#message 2 "From the gentle slopes of the plain, you are now traveling on the sandy, steep trails leading into the hills called the \"Black Hills\" because of the dense growth of juniper and pine."#message 5 "It is now obvious that many wagons on the trail are still extremely overloaded, and they have been abandoning all unnecessary items in mass quantities!"#message 6 "Abandoned articles consisting of bacon, sugar, camp equipment, cooking utensils, clothes, household furniture, stoves, gridirons, carpenter's tools, blacksmith anvils, crowbars, drills, augers, gold washers, chisels, axes, trunks, spades, plows, large grindstones, baking ovens, kegs, and barrels, are everywhere."#message 7 "One company, once in the Black Hills, finally discarded an entire saw mill they planned to operate in California!!"#message 8 "Anything of any value that was discarded was usually ruined in some way so that successive travelers would not be able to use the item."#message 9 "As for your company, the captain orders that every item that isn't essential to the trip must be discarded, no matter how small!"#message 13 "The only way to cross the North Platte River is by ferry. The line of wagons waiting to cross the river sometimes reaches twenty miles in length!!"#message 14 "Impatient companies cut down trees and make their own rafts for their wagons."#message 30 "The scenery changes once again."#message 31 "The landscape is barren, and dotted with sagebrush."#message 32 "This desert-like region has a few widely scattered ponds, most of which are poisonous pools of alkaline water."#message 33 "It is a gruesome sight to see the result of one of your animals partaking of the poison."#message 34 "Surrounding these alkaline ponds, the sage bushes are outnumbered only by animal carcasses."#message 50 "It is a welcome relief to pass from the alkaline territory into the region of the Sweetwater River where the water is just that - sweet!"#message 60 "At the west end of the Sweetwater Valley the trail crossed a broad plateau to South Pass, the halfway point of your cross-country trek."#message 61 "A short break from the seemingly never-ending toil of crossing the country is taken at South Pass to celebrate reaching the halfway point of your journey, which coincides with the Continental Divide. You are now on the Pacific side of the Rockies!"#message 127 "For the good of the company, you throw all your earthly possessions onto the dusty trail!!"#message 129 "Fortunately for you, the solid gold coin you brought with you from Brooklyn was in your pocket, so you still have that!"#message 130 "The letter from your long-lost brother, Jake, was in your hip pocket, along with the gold flake under the stamp. So that is still with you."#message 131 "The letter from your long-lost brother, Jake, was in your hip pocket. So that is still with you."#message 132 "The company decides to allow you to keep the Bible, just in case someone needs it later."#message 133 "Everything else is thrown from the wagon beside the trail."#message 134 "Your family photo fits in your pocket, so that isn't discarded!"