[***********************************************************[[ rm.ThickJungle[[ Third jungle scene. This is a dense jungle that the player[ has to negotiate carefully to avoid dying. There is also[ a gold disk.[[ There are four paths across the room to choose; the upper[ paths are safe; the two lower paths always result in[ death. For reference, paths are numbered 1-4, with path #1[ being the lowest one (highest Y value) and path #4 being[ the top one (lowest Y value).[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oTraveler2                   o1#define oTraveler3                   o2#define oSnake                       o3#define vCholeraTime                v86  [ override CoalFireTime#define vMosquitoTime               v87  [ override BoilerTime#define vYellowFeverTime            v88  [ override YoungOxDeathTime#define vDysenteryTime              v89  [ override AnimalStarveTime#define vJungleStatus              v220#define vTraveler2Status           v221#define vTraveler3Status           v222#define vTimer                     v223#define vTmpVal                    v224#define vTmpY                      v225#define vPath                      v226#define vToeTimer                  v227#define fDoneDying                 f220#define fTraveler2Moved            f221#define fTraveler3Moved            f222#define fSetPri11                  f223#define fSetPri10                  f224#define fSndDone                   f225#define fStubToe                   f226[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load logics used in the room  load.logics(lgc.DeathDisease);  load.logics(lgc.PanamaTripTiming);    [ load the current room picture  load.pic(currentRoom);    [ load the views used in the room  load.view(vw.JerrodNY);  load.view(vw.FallingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.Traveler2);  load.view(vw.Traveler3);  load.view(vw.Snake);    [ load sounds used in the room  load.sound(m.Death);  load.sound(m.FoundGold);    [ draw the picture  draw.pic(currentRoom);    [ if first time in this room (not past the poison plants)  if (!isset(PastPoisonPlants))    {    [ set flag    set(PastPoisonPlants);    [ only travelers 2 and 3 (at end of the caravan) are    [ still in this room) traveler #2 is near right edge    animate.obj(oTraveler2);    set.view(oTraveler2, vw.Traveler2);    position(oTraveler2, 145, 146);    draw(oTraveler2);    move.obj(oTraveler2, 152, 153, 1, fTraveler2Moved);    vTmpVal = 2;    step.time(oTraveler2, vTmpVal);    cycle.time(oTraveler2, vTmpVal);    vTraveler2Status = 1;    [ traveler 3 is just behind traveler #2    animate.obj(oTraveler3);    set.view(oTraveler3, vw.Traveler3);    position(oTraveler3, 134, 139);    draw(oTraveler3);    move.obj(oTraveler3, 145, 146, 1, fTraveler3Moved);    step.time(oTraveler3, vTmpVal);    cycle.time(oTraveler3, vTmpVal);    vTraveler3Status = 1;    }      [ snake is hiding in trees (but don't draw him yet)  animate.obj(oSnake);  set.view(oSnake, vw.Snake);  set.loop(oSnake, 2);  fix.loop(oSnake);  ignore.horizon(oSnake);  ignore.objs(oSnake);  ignore.blocks(oSnake);  position(oSnake, 86, 21);  vTmpVal = 2;  cycle.time(oSnake, vTmpVal);    [ ego object uses normal view  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ if coming from previous jungle room  if (previousRoom == rm.JungleAnts)    {    [ Jerrod starts on left edge    position(ego, 2, 135);    set.loop(ego, 0);    egoDir = STOPPED;    }      [ if backtracking (from the last jungle room)  if (previousRoom == rm.RiverCrossing)    {    [ Jerrod starts on right edge    position(ego, 151, 152);    set.loop(ego, 1);    egoDir = STOPPED;    }  [ add Jerrod to screen  draw(ego);    [ show the picture  show.pic();    [ if Jerrod is set to die from a disease  if ((CurrentTripTime == vMosquitoTime ||       CurrentTripTime == vCholeraTime ||       CurrentTripTime == vYellowFeverTime ||       CurrentTripTime == vDysenteryTime))    {    [ use sick view    set.view(ego, vw.SickJerrodNY);        [ mosquito bites are only way for Jerrod to die here;    [ there is no code that will ever cause the other    [ options to happen; they may have been an option once,    [ but apparently were removed; the code blocks here for    [ those diseases should also have been removed        if (CurrentTripTime == vMosquitoTime)      {      print("You are not feeling well. Every inch of exposed skin is covered "            "with mosquito bites. You have the chills, a fever, and are "            "sweating profusely!!");      }    if (CurrentTripTime == vCholeraTime)      {      print("The jungle is taking its toll on you. You are feeling nauseous, "            "your limbs are cramping badly, and, despite the moist "            "surroundings, you are extremely dehydrated.");      }    if (CurrentTripTime == vYellowFeverTime)      {      print("Your physical well-being has been weighing heavily on your mind "            "lately. Your skin has a strange, yellow tinge and your tummy is "            "upset. The natives say it may not go well for you.");      }    if (CurrentTripTime == vDysenteryTime)      {      print("Let's just say you aren't feeling well. You don't even want to "            "know what your symptoms are!");      }    }  }  [ this room has some complicated structures, so in a couple[ places, priority needs to be forced so Jerrod shows up[ correctly[ if NOT on back path, right side, and priority is overriddenif (!posn(ego, 109, 118, 128, 130) && isset(fSetPri10))  {  [ reset priority  reset(fSetPri10);  release.priority(ego);  }[ if NOT on mid path, middle, and priority is overriddenif (!posn(ego, 67, 131, 134, 142) && isset(fSetPri11))  {  [ reset priority  reset(fSetPri11);  release.priority(ego);  }[ if on mid path, middle, and priority not setif (posn(ego, 67, 131, 134, 142) && !isset(fSetPri11))  {  [ force priority  set(fSetPri11);  set.priority(ego, 11);  }[ if on back path, right side, and priority not setif (posn(ego, 109, 118, 128, 130) && !isset(fSetPri10))  {  [ force priority  set(fSetPri10);  set.priority(ego, 10);  }  [ **************************[ manage traveler #2[ **************************[ when traveler #2 gets to right edgeif (isset(fTraveler2Moved) && vTraveler2Status == 1)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 2;  [ remove him from screen  erase(oTraveler2);  }[ **************************[ manage traveler #3[ **************************[ when traveler #3 gets to first pointif (isset(fTraveler3Moved) && vTraveler3Status == 1)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 2;  [ move to right edge  move.obj(oTraveler3, 152, 153, 1, fTraveler3Moved);  }[ when traveler #3 gets to right edgeif (isset(fTraveler3Moved) && vTraveler3Status == 2)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 3;  [ remove him from screen  erase(oTraveler3);  }  [ if Jerrod tries to go past the red plants in center of[ front path #1if (posn(ego, 96, 148, 96, 152) && vJungleStatus == 0)  {  [ he will die from the poison plant  vJungleStatus = 1;  [ leave this message on screen  set(leaveWindow);  print.at("OUCH!!", 11, 19, 9);  [ show view of Jerrod flailing  set.view(ego, vw.FallingJerrodNY);  set.cel(ego, 0);  set(CycleAtRest);  }  [ if Jerrod was cut by poison plantif (vJungleStatus == 1)  {  [ increment timer  ++vTimer;  [ after 10 cycles  if (vTimer == 10)    {    [ reset timer    vTimer = 0;    [ advance to next stage    vJungleStatus = 2;    [ stop flailing    reset(CycleAtRest);    [ now Jerrod is sick    set.view(ego, vw.SickJerrodNY);    [ and moving a bit slower    vTmpVal = 2;    step.time(ego, vTmpVal);    [ remove the 'ouch' message    close.window();    }  }[ after Jerrod becomes illif (vJungleStatus == 2)  {  [ increment timer  ++vTimer;  [ after 60 cycles  if (vTimer == 60)    {    [ advance to next stage    vJungleStatus = 3;    [ show Jerrod dying    set(CycleAtRest);    stop.motion(ego);    set.view(ego, vw.DyingJerrodNY);    [ should have made sure starting cel is zero     end.of.loop(ego, fDoneDying);    }  }  [ when Jerrod is done dyingif (isset(fDoneDying) && vJungleStatus == 3)  {  [ advance to next stage  reset(fDoneDying);  vJungleStatus = 4;  [ make sure print window is closed (none are open, so this  [ is unnecessary)  close.window();  [ Jerrod is now dead  EgoHealthStatus = 32;  [ play sound  sound(m.Death, DoneNoAction);  [ no input  prevent.input();  stop.motion(ego);  print("Watch out for those jungle plants! They have leaves like swords!!");  display(22, 0, "There must be another way through this jungle!");  set(JerrodIsDead);  }  [ if Jerrod goes down middle path #2 (and not already dying)if (posn(ego, 92, 129, 92, 136) && vJungleStatus == 0)  {  [ snake attacks  vJungleStatus = 10;  [ Jerrod stops  stop.motion(ego);  [ snake appears  set.priority(oSnake, 11);  draw(oSnake);  [ and moves to Jerrod  move.obj(oSnake, 86, 131, 10, fDoneDying);  }  [ when snake gets to Jerrodif (isset(fDoneDying) && vJungleStatus == 10)  {  [ advance to next stage  reset(fDoneDying);  vJungleStatus = 11;  [ replace ego object view to show snake killing Jerrod  set.view(ego, vw.Snake);  set.loop(ego, 3);  fix.loop(ego);  set.cel(ego, 0);  ignore.blocks(ego);  [ reposition ego object so it appears in correct location  vTmpVal = -3; [ 253;  vTmpY = 0;  reposition(ego, vTmpVal, vTmpY);  [remove snake object  erase(oSnake);  [ run loop one time to show Jerrod dying  set(CycleAtRest);  vTmpVal = 2;  cycle.time(ego, vTmpVal);  end.of.loop(ego, fDoneDying);  }  [ after snake finishes Jerrod offif (isset(fDoneDying) && vJungleStatus == 11)  {  [ advance stage   reset(fDoneDying);  vJungleStatus = 12;  [ Jerrod is dead due to snake  EgoHealthStatus = 30;  print("This silent, slithering snake has squeezed the life right out of you!");  [ play sound  sound(m.Death, DoneNoAction);  [ no more player input  prevent.input();  stop.motion(ego);  display(22, 0, "There must be another way through this jungle!");  [ and set flag to finalize the deal  set(JerrodIsDead);  }  [ if Jerrod is set to die from anything else  if ((CurrentTripTime == vMosquitoTime ||     CurrentTripTime == vCholeraTime ||     CurrentTripTime == vYellowFeverTime ||     CurrentTripTime == vDysenteryTime))  {  [ after 150 cycles and nothing else going on  if (TripCycles == 150 && vJungleStatus == 0)    {    [ change to dying view    set.view(ego, vw.DyingJerrodNY);    [ make sure to start with first cel    set.cel(ego, 0);    [ run through loop one time    end.of.loop(ego, fDoneDying);    [ make sure other jungle actions don't interfere    vJungleStatus = 100;    }  [ if Jerrod is at left edge  if (posn(ego, 1, 117, 1, 135) && vJungleStatus == 0)    {    [ Jerrod drops dead right here    stop.motion(ego);    set.view(ego, vw.DyingJerrodNY);    set.cel(ego, 0);    set(CycleAtRest);    end.of.loop(ego, fDoneDying);    vJungleStatus = 100;    }  [ after Jerrod finishes dying  if (isset(fDoneDying) && vJungleStatus == 100)    {    [ finish up death sequence    reset(fDoneDying);    vJungleStatus = 101;    stop.motion(ego);    set(CycleAtRest);    if (CurrentTripTime == vCholeraTime)      {      [ cholera actually never gets Jerrod in this room, so      [ this code is unnecessary      EgoHealthStatus = 21;      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      goto(Done);      }    call(lgc.DeathDisease);    }  }[ if Jerrod takes path #3if (posn(ego, 74, 109, 74, 111))  {  [ note it for later  vPath = 3;  }  [ if Jerrod takes path #4if (posn(ego, 74, 96, 74, 97))  {  [ note it for later  vPath = 4;  }  [ if Jerrod is on path #4 without the gold disk (and not[ already[ stubbed his toe)if (posn(ego, 76, 96, 77, 98) &&     !isset(fStubToe) &&     !has("Gold disk"))  {  [ Jerrod stubs his toe  set(leaveWindow);  print.at("Ouch!!", 6, 17, 0);  vToeTimer = 1;  set(fStubToe);  }[ while timer is activeif (vToeTimer > 0)  {  [ increment timer  ++vToeTimer;  [after three cycles  if (vToeTimer == 3)    {    [ remove the ouch message    close.window();    vToeTimer = 0;    }  }  [ if not near the gold disk and toe is stubbedif (!posn(ego, 76, 96, 77, 98) && isset(fStubToe))  {  [ clear the flag  reset(fStubToe);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod reaches right edgeif (edgeEgoHit == RIGHT_EDGE)  {  [ if Jerrod took path 3  if (vPath == 3)    {    [ not scored yet    if (ScoreJunglePath < 3)      {      [ score three points      currentScore  += 3;      ScoreJunglePath = 3;      }    }  [ if Jerrod took path #4  if (vPath == 4)    {    [ if already scored the first path    if (ScoreJunglePath == 3)      {      [ score two more points      currentScore  += 2;      ScoreJunglePath = 4;      }    [ if path not scored yet    if (ScoreJunglePath < 3)      {      [ score the full five points      currentScore  += 5;      ScoreJunglePath = 4;      }    }  [ go to next trip time point  ++CurrentTripTime;  [ reset counters  TripCycles = 0;  TripCycles2 = 0;  TripCycles3 = 0;  [ go to next room  new.room(rm.RiverCrossing); [ ##LE001##  }  [ if at left edgeif (edgeEgoHit == LEFT_EDGE)  {  [ go back one time point  --CurrentTripTime;  [ reset counters  TripCycles = 0;  TripCycles2 = 0;  TripCycles3 = 0;  [ go back to previous room  new.room(rm.JungleAnts); [ ##LE002##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look aroundif ((said("examine", "around") ||     said("examine", "jungle") ||     said("examine")))  {  [ if Jerrod has the gold disk  if (has("Gold disk"))    {    [ there is nothing to see    print("You see nothing but dense jungle.");    }  else    {    [ if on path #4 near the place where he stubs his toe    if (posn(ego, 72, 96, 83, 98))      {      [ Jerrod finds the gold      print("You wonder what you just stubbed your toe on.");      print("You push back the foliage obscuring your view. What your eyes "            "behold is difficult for your mind to believe!");      print("You rub your eyes in disbelief, thinking that you must be seeing "            "things, but what you see is real!");      print("There is an ancient GOLD disk with Spanish markings on it! It must "            "have been lost during a treasure shipment or a bandit raid along "            "this trail centuries ago!");      }    else      {      [ not near the right spot - give an obtuse clue      print("Centuries ago, GOLD was carried along this route. It is now "            "overgrown. There are narrow trails leading through the jungle.");      }    }  }  [ look roadif (said("examine", "path"))  {  [ if Jerrod has the gold disk  if (has("Gold disk"))    {    print("This ancient Spanish gold route is very overgrown.");    }  else    {    [ if on path #4 near where he stubbed his toe    if (posn(ego, 72, 96, 83, 98))      {      [ Jerrod finds the disk      print("You wonder what you just stubbed your toe on.");      print("You push back the foliage obscuring your view. What your eyes "            "behold is difficult for your mind to believe!");      print("You rub your eyes in disbelief, thinking that you must be seeing "            "things, but what you see is real!");      print("There is an ancient GOLD disk with Spanish markings on it! It must "            "have been lost during a treasure shipment or a bandit raid along "            "this trail centuries ago!");      }    else      {      [ response depends on which path Jerrod is closest to          [ if on path #1      if (posn(ego, 0, 95, 159, 107))        {        print("The overgrowth is so dense here that you can barely see the "              "trail. No one has been here for centuries!");        }          [ if on path #2      if (posn(ego, 0, 108, 159, 119))        {        print("The jungle gets more dense as you leave the well-used trail. Few "              "people travel this trail. You notice the jungle gets even more "              "dense nearby.");        }          [ if on path #3      if (posn(ego, 0, 120, 159, 131))        {        print("From here you see two narrow, but well-defined, trails.");        }          [ if on path #4      if (posn(ego, 0, 132, 159, 167))        {        print("From here you see two narrow, but well-defined, trails.");        }      }    }  }  [ look goldif ((said("examine", "gold") ||     said("examine", "gold", "disk") ||     said("examine", "disk")))  {  [ if Jerrod has the gold disk  if (has("Gold disk"))    {    [ check again    reset(haveMatch);    [ if specically said just 'get gold'    if (said("examine", "gold"))      {      print("You've found all the gold there is to find in this jungle!");      }    [ make sure 'said match' flag is set     set(haveMatch);    }  else    {    [ if on path #4 near where he stubbed his toe    if (posn(ego, 72, 96, 83, 98))      {      [ Jerrod finds the gold disk      print("You wonder what you just stubbed your toe on.");      print("You push back the foliage obscuring your view. What your eyes "            "behold is difficult for your mind to believe!");      print("You rub your eyes in disbelief, thinking that you must be seeing "            "things, but what you see is real!");      print("There is an ancient GOLD disk with Spanish markings on it! It must "            "have been lost during a treasure shipment or a bandit raid along "            "this trail centuries ago!");      }    else      {      [ response depends on which path Jerrod is closest to            [ path #4      if (posn(ego, 0, 95, 159, 107))        {        print("No one has been here for centuries. The extremely dense jungle "              "makes looking for gold nearly impossible. You see nothing right "              "here.");        }      [ path #3      if (posn(ego, 0, 108, 159, 119))        {        print("You are not far enough from the well-used trail. Any gold that "              "might have been lost right here centuries ago would have been "              "found.");        }      [ path #2      if (posn(ego, 0, 120, 159, 131))        {        print("This trail is traveled by too many people. If any gold was lost "              "right here, it would have already been found. Some trails are "              "overgrown and difficult to find.");        }      [ path #1      if (posn(ego, 0, 132, 159, 167))        {        print("This trail is traveled by too many people. If any gold was lost "              "right here, it would have already been found. Some trails are "              "overgrown and difficult to find.");        }      }    }  }  [ search for goldif ((said("find", "gold", "anyword") ||     said("find", "anyword", "gold") ||     said("find", "gold") ||     said("need", "gold", "anyword") ||     said("need", "anyword", "gold") ||     said("need", "gold") ||     said("help", "find", "gold") ||     said("help", "me", "find", "gold") ||     said("examine", "dirt") ||     said("examine", "down")))  {  [ if Jerrod has the gold disk  if (has("Gold disk"))    {    print("You've found all the gold there is to find in this jungle!");    }  else    {    [ if Jerrod is near the spot where he stubbed his toe    if (posn(ego, 72, 96, 83, 98))      {      [ he finds the gold disk      print("You wonder what you just stubbed your toe on.");      print("You push back the foliage obscuring your view. What your eyes "            "behold is difficult for your mind to believe!");      print("You rub your eyes in disbelief, thinking that you must be seeing "            "things, but what you see is real!");      print("There is an ancient GOLD disk with Spanish markings on it! It must "            "have been lost during a treasure shipment or a bandit raid along "            "this trail centuries ago!");      }    else      {      [ response depends on which path Jerrod is closest to            [ path #4      if (posn(ego, 0, 95, 159, 107))        {        print("No one has been here for centuries. The extremely dense jungle "              "makes looking for gold nearly impossible. You see nothing right "              "here.");        }      [ path #3      if (posn(ego, 0, 108, 159, 119))        {        print("You are not far enough from the well-used trail. Any gold that "              "might have been lost right here centuries ago would have been "              "found.");        }      [ pat #2      if (posn(ego, 0, 120, 159, 131))        {        print("This trail is traveled by too many people. If any gold was lost "              "right here, it would have already been found. Some trails are "              "overgrown and difficult to find.");        }      [ path #1      if (posn(ego, 0, 132, 159, 167))        {        print("This trail is traveled by too many people. If any gold was lost "              "right here, it would have already been found. Some trails are "              "overgrown and difficult to find.");        }      }    }  }  [ look routeif (said("examine", "route"))  {  print("This route was used to transport mass quantities of GOLD centuries "        "ago.");  }  [ get goldif ((said("acquire", "gold") ||     said("acquire", "gold", "bar") ||     said("acquire", "bar") ||     said("acquire", "gold", "disk") ||     said("acquire", "disk")))  {  [ if Jerrod is near the gold disk  if (posn(ego, 72, 96, 83, 98))    {    [ if Jerrod doesn't have the disk yet    if (HasGoldDisk == 0)      {      print("First, you take a good look around to see that no one is watching "            "you. Then you cautiously pick up the gold disk, constantly on the "            "lookout for creepy crawlers.");      [ score 10 points      currentScore  += 10;      [ get the disk      get("Gold disk");      HasGoldDisk = 1;      sound(m.FoundGold, fSndDone);      }    else      {      print("There is nothing around here but plants, bugs, and creepy, crawly "            "creatures.");      }    }  else    {    print("There is nothing around here but plants, bugs, and creepy, crawly "          "creatures.");    }  }  [ look plantsif ((said("examine", "plant") ||     said("examine", "bush")))  {  [ if near the deadly red plants  if (posn(ego, 74, 145, 123, 167))    {    print("Those brightly-colored plants are a jungle specialty!");    }  else    {    print("The jungle is full of many kinds of plants.");    }  }[ look riverif ((said("examine", "creek") ||     said("examine", "water")))  {  print("There is no river right here!");  }  [ climb treeif (said("climb", "forest"))  {  print("You don't want to prolong your stay in this jungle by doing that!");  }  [ look treeif (said("examine", "forest"))  {  print("This is yet another view of more jungle trees.");  }  [ look upif ((said("examine", "up") ||     said("examine", "sky")))  {  print("Through the heavy jungle growth, it is difficult to see the sky.");  }  [ look rockif (said("examine", "rock"))  {  print("There are a few rocks around here, but the jungle has overgrown them.");  }  [ look vinesif (said("examine", "vine"))  {  print("Vines abound in this part of the jungle.");  }  [ look swampif (said("examine", "swamp"))  {  print("No sign of a swamp right here!");  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("enter", "water")))  {  print("Where?");  }  [ look boatif (said("examine", "boat"))  {  print("You left that back in Cruces.");  }  [ look manif (said("examine", "boy"))  {  if (vTraveler3Status == 3)    {    print("There is no man close enough.");    }  else    {    print("The other travelers are ahead of you on the trail.");    }  }  [ talk to manif ((said("speak", "boy") ||     said("speak")))  {  print("There is no man close enough.");  }  [ look grassif (said("examine", "grass"))  {  print("The grass is long and lush from the moist climate.");  }  [ look muleif (said("examine", "donkey"))  {  print("There isn't a mule to look at now.");  }  [ look snakeif (said("examine", "boa"))  {  print("It is difficult to see snakes in the jungle. You could be looking "        "right at one and not see it!");  }  Done:[ call the main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "OUCH!!"#message 2 "You wonder what you just stubbed your toe on."#message 3 "You push back the foliage obscuring your view. What your eyes behold is difficult for your mind to believe!"#message 4 "You rub your eyes in disbelief, thinking that you must be seeing things, but what you see is real!"#message 5 "There is an ancient GOLD disk with Spanish markings on it! It must have been lost during a treasure shipment or a bandit raid along this trail centuries ago!"#message 6 "There is nothing around here but plants, bugs, and creepy, crawly creatures."#message 7 "First, you take a good look around to see that no one is watching you. Then you cautiously pick up the gold disk, constantly on the lookout for creepy crawlers."#message 8 "You are not feeling well. Every inch of exposed skin is covered with mosquito bites. You have the chills, a fever, and are sweating profusely!!"#message 9 "The jungle is taking its toll on you. You are feeling nauseous, your limbs are cramping badly, and, despite the moist surroundings, you are extremely dehydrated."#message 10 "Your physical well-being has been weighing heavily on your mind lately. Your skin has a strange, yellow tinge and your tummy is upset. The natives say it may not go well for you."#message 11 "Let's just say you aren't feeling well. You don't even want to know what your symptoms are!"#message 12 "You keep your eyes peeled for the slightest glimmer, but you have seen nothing, so far."#message 13 "This silent, slithering snake has squeezed the life right out of you!"#message 14 "Watch out for those jungle plants! They have leaves like swords!!"#message 16 "Those brightly-colored plants are a jungle specialty!"#message 17 "The jungle is full of many kinds of plants."#message 18 "There is no river right here!"#message 19 "You don't want to prolong your stay in this jungle by doing that!"#message 20 "This is yet another view of more jungle trees."#message 22 "Through the heavy jungle growth, it is difficult to see the sky."#message 24 "There are a few rocks around here, but the jungle has overgrown them."#message 25 "Vines abound in this part of the jungle."#message 26 "No sign of a swamp right here!"#message 28 "Where?"#message 29 "You left that back in Cruces."#message 31 "The other travelers are ahead of you on the trail."#message 32 "\"We won't wait for you forever!\""#message 33 "The grass is long and lush from the moist climate."#message 35 "There isn't a mule to look at now."#message 36 "There is no man close enough."#message 37 "It is difficult to see snakes in the jungle. You could be looking right at one and not see it!"#message 38 "This is the worst jungle you have experienced. Some trails are overgrown and difficult to find."#message 40 "You've found all the gold there is to find in this jungle!"#message 41 "Any GOLD left lying on this ancient trail would be overgrown and difficult to find."#message 42 "You see nothing but dense jungle."#message 44 "The overgrowth is so dense here that you can barely see the trail. No one has been here for centuries!"#message 45 "From here you see two narrow, but well-defined, trails."#message 46 "Centuries ago, GOLD was carried along this route. It is now overgrown. There are narrow trails leading through the jungle."#message 47 "The jungle gets more dense as you leave the well-used trail. Few people travel this trail. You notice the jungle gets even more dense nearby."#message 48 "This route was used to transport mass quantities of GOLD centuries ago."#message 50 "There must be another way through this jungle!"#message 51 "Ouch!!"#message 52 "This trail is traveled by too many people. If any gold was lost right here, it would have already been found. Some trails are overgrown and difficult to find."#message 53 "You are not far enough from the well-used trail. Any gold that might have been lost right here centuries ago would have been found."#message 54 "No one has been here for centuries. The extremely dense jungle makes looking for gold nearly impossible. You see nothing right here."#message 55 "This ancient Spanish gold route is very overgrown."