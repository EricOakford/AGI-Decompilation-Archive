[***********************************************************[[ rm.ColomaSouth[[ This is the south edge of Coloma. Nothing happens in this[ room.[[***********************************************************[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the mule logic  load.logics(lgc.Mule);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.Tents);    [ load and draw current room picture  load.pic(currentRoom);  draw.pic(currentRoom);    [ add a tent  add.to.pic(vw.Tents, 2, 0, 116, 80, 0, 4);    [ set horizon  set.horizon(100);    [ Jerrod, in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);    [ if Jerrod came from west edge of town  if (previousRoom == rm.ColomaWest)    {    [ position him a little further in the room, so he can    [ be seen behind the tents    position(ego, 35, 82);    }      [ if Jerrod is coming from Green Pastures Hotel  if (previousRoom == rm.GreenPastures)    {    [ position him at back of room, just right of center    position(ego, 102, 82);    }  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization steps    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ clear the custom status line  clear.lines(24, 24, BLACK);    [ not necessary to clear this flag;  [ AGI does it automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ nothing to do in this room[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckExits);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  print("This is a distant view of the Green Pastures Hotel.");  }  [ look grassif (said("examine", "grass"))  {  print("This is just wild grass.");  }  [ look treeif (said("examine", "forest"))  {  print("This is just one of the many, mighty trees found in these parts.");  }  [ look rockif (said("examine", "rock"))  {  print("No rock is sight.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "american", "creek")))  {  print("Just past town ya see the American River.");  }  [ look roadif ((said("examine", "path") ||     said("examine", "main", "path") ||     said("examine", "back", "path") ||     said("examine", "bridge", "path")))  {  print("From here ya can see three streets; Main, Bridge and Back Streets.");  }  [ look buildingif ((said("examine", "building") ||     said("examine", "home") ||     said("examine", "church") ||     said("examine", "shop")))  {  print("Of all the buildings in town, the hotel is the most prominent.");  }  [ look bushif (said("examine", "bush"))  {  print("There's no bush in sight.");  }  [ look wagonif (said("examine", "cart"))  {  print("From here ya can barely see a wagon.");  }  [ get wagonif (said("acquire", "cart"))  {  print("Cain't do that from here!");  }    [ look sidewalk/look boardwalkif ((said("examine", "sidewalk") ||     said("examine", "boardwalk")))  {  print("The boardwalk goes under the balcony of the hotel.");  }  [ look fenceif (said("examine", "fence"))  {  print("A fence follows the boardwalk. There is also a railing around the "        "hotel balcony.");  }  [ look tentif (said("examine", "tent"))  {  print("Tents dot the perimeter of the settlement.");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Don't dig up the town! Do that somewhere else!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya need to be in the water!");  }  [ look hotelif ((said("examine", "hotel") ||     said("examine", "green", "pasture", "hotel") ||     said("examine", "green", "pasture") ||     said("examine", "coloma") ||     said("examine", "city")))  {  print("The Green Pastures Hotel is the main attraction in Coloma.");  }  [ look balconyif ((said("examine", "balcony") || said("examine", "rail")))  {  print("The the hotel balcony has a railing around it.");  }  [ look in tent/enter tentif ((said("examine", "in", "tent") || said("enter", "tent")))  {  print("There's nothin' of interest in the tent.");  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ (unlike most other logics, the check for exit condition[ happens LAST in this room)CheckExits:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ process mule related commands before checking for exits  call(lgc.Mule);  }  if (edgeEgoHit != NOT_HIT)  {  [ if at top edge  if (edgeEgoHit == TOP_EDGE)    {    --WildernessY;    [ depending on where Jerrod is horizontally he will go    [ to ColomaWest or GreenPastures    if (EgoX < 76)      {      [ since rm.ColomaSouth is a two-units wide don't need      [ to change X value unless Jerrod has crossed over      [ while in this room      if (WildernessX == 21)        {        --WildernessX;        }      new.room(rm.ColomaWest); [ ##LE001##      }    else      {      [ since rm.ColomaSouth is a two-units wide don't need      [ to change X value unless Jerrod has crossed over      [ while in this room      if (WildernessX == 20)        {        ++WildernessX;        }      new.room(rm.GreenPastures); [ ##LE002##      }    }  if (edgeEgoHit == LEFT_EDGE)    {    [ since rm.ColomaSouth is a two-units wide may need to    [ change X value by two if Jerrod has crossed over while    [ in this room    if (WildernessX == 20)      {      --WildernessX;      }    if (WildernessX == 21)      {      WildernessX -= 2;      }    new.room(lgc.Wilderness); [ ##LE003##    }      [ not sure why the check for X value is not made when  [ going to right; the X values get a bit out of whack, but  [ it corrects itself pretty easily by moving about town  [ and into/out of wilderness  if (edgeEgoHit == RIGHT_EDGE)    {    ++WildernessX;    new.room(rm.ColomaSE); [ ##LE004##    }      if (edgeEgoHit == BOTTOM_EDGE)    {    ++WildernessY;    new.room(lgc.Wilderness); [ ##LE005##    }  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is a distant view of the Green Pastures Hotel."#message 2 "This is just wild grass."#message 3 "This is just one of the many, mighty trees found in these parts."#message 4 "No rock is sight."#message 5 "Just past town ya see the American River."#message 6 "From here ya can see three streets; Main, Bridge and Back Streets."#message 7 "Of all the buildings in town, the hotel is the most prominent."#message 8 "There's no bush in sight."#message 9 "From here ya can barely see a wagon."#message 10 "Cain't do that from here!"#message 11 "The boardwalk goes under the balcony of the hotel."#message 12 "A fence follows the boardwalk. There is also a railing around the hotel balcony."#message 13 "Tents dot the perimeter of the settlement."#message 14 "The Green Pastures Hotel is the main attraction in Coloma."#message 15 "The the hotel balcony has a railing around it."#message 16 "There's nothin' of interest in the tent."#message 40 "Don't dig up the town! Do that somewhere else!"#message 41 "No shovel, no diggin'!"#message 42 "Ya need to be in the water!"