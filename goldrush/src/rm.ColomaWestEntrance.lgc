[***********************************************************[[ rm.ColomaWestEntrance[[ This is the main road west entrance into Coloma. Nothing[ happens in this room.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWoodcutters                 o1#define fForcePri                  f220[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the mule logic  load.logics(lgc.Mule);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.Woodcutters);    [ load and draw the current room picture  load.pic(currentRoom);  draw.pic(currentRoom);    [ set horizon up high at 35  set.horizon(35);    [ wood cutters are sawing away at a log here  animate.obj(oWoodcutters);  set.view(oWoodcutters, vw.Woodcutters);  ignore.objs(oWoodcutters);  position(oWoodcutters, 56, 99);  draw(oWoodcutters);    [ Jerrod, with normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization steps    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ clear the custom status line  clear.lines(24, 24, BLACK);    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if in front of the woodcutters and priority is not forcedif (posn(ego, 47, 97, 80, 103) && !isset(fForcePri))  {  [ need to force priority to 10 so Jerrod shows up in front  [ of the woodcutters  set(fForcePri);  set.priority(ego, 10);  }  [ if not in front of woodcutters and priority is forcedif (!posn(ego, 47, 97, 80, 103) && isset(fForcePri))  {  [ restore normal priority setting  reset(fForcePri);  release.priority(ego);  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckExits);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  print("This is where they cut these logs down to size for the sawmill. The "        "town of Coloma is farther to the east.");  }  [ look grassif (said("examine", "grass"))  {  print("This is just wild grass.");  }  [ look treeif (said("examine", "forest"))  {  print("The trees 'round here have this to look forward to!");  }  [ look rockif (said("examine", "rock"))  {  print("This is just another rock.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "american", "creek") ||     said("examine", "tailrace")))  {  print("The American River runs along the north edge of Coloma. At this point "        "the tailrace diverts water to the sawmill.");  }  [ look roadif ((said("examine", "path") ||     said("examine", "main", "path") ||     said("examine", "main")))  {  print("This is Main Street!");  }  [ look logif ((said("examine", "log") || said("examine", "beam")))  {  print("These men are cuttin' this log in two. There's a chain attached to one "        "end of the log.");  }  [ look manif (said("examine", "boy"))  {  print("The men are cuttin' the logs down to size.");  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  print("These men don't have any breath to spare for idle chitchat!");  }  [ look saw ('looked at' is synonym for 'saw'!)if (said("examine", "looked at"))  {  print("By the look of things, that saw may need to be sharpened!");  }  [ look chainif (said("examine", "chain"))  {  print("The men use the chain to move the logs around.");  }  [ get chainif (said("acquire", "chain"))  {  print("Those workin' men need that chain to do their job!");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Don't dig up the town! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  [ look sawmillif ((said("examine", "sawmill") ||     said("examine", "sutter", "sawmill") ||     said("examine", "looked at", "mill") ||     said("examine", "mill")))  {  print("The sawmill is nearby to the west.");  }  [ look city/look Colomaif ((said("examine", "city") ||     said("examine", "coloma")))  {  print("Yer on the outskirts of Coloma. The heart of the town is nearby to the "        "east.");  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ (unlike most other logics, the check for exit condition[ happens LAST in this room)CheckExits:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ process mule related commands before checking exits  call(lgc.Mule);  }if (edgeEgoHit != NOT_HIT)  {  if (edgeEgoHit == LEFT_EDGE)    {    --WildernessX;    new.room(rm.SuttersMill); [ ##LE001##    }  if (edgeEgoHit == RIGHT_EDGE)    {    ++WildernessX;    new.room(rm.ColomaNW); [ ##LE002##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    ++WildernessY;    new.room(lgc.Wilderness); [ ##LE003##    }  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is where they cut these logs down to size for the sawmill. The town of Coloma is farther to the east."#message 2 "This is just wild grass."#message 3 "The trees 'round here have this to look forward to!"#message 4 "This is just another rock."#message 5 "The American River runs along the north edge of Coloma. At this point the tailrace diverts water to the sawmill."#message 6 "This is Main Street!"#message 7 "These men are cuttin' this log in two. There's a chain attached to one end of the log."#message 8 "The men are cuttin' the logs down to size."#message 9 "These men don't have any breath to spare for idle chitchat!"#message 10 "By the look of things, that saw may need to be sharpened!"#message 11 "The men use the chain to move the logs around."#message 12 "Those workin' men need that chain to do their job!"#message 13 "The sawmill is nearby to the west."#message 14 "Yer on the outskirts of Coloma. The heart of the town is nearby to the east."#message 40 "Don't dig up the town! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"