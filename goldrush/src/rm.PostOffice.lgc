[***********************************************************[ [ rm.PostOffice[ [ The Post Office is just to the left of the gazebo park; [ several pedestrians, including Mr. Quail, the livery[ worker and the grocer clerk are wandering about. As an[ amusing distraction (with no effect on game progress)[ Jerrod can use the pump at the trough.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWaterPump                   o1#define oDoor                        o2#define oFlag                        o3#define oSteamship                   o4#define oPedestrian                  o5#define oBoss                        o6#define vPumpTimer                 v220#define vPedStatus                 v221#define vBossStatus                v222[ v223 is not used#define vPedDist                   v224#define vBossDist                  v225[ v226 - v231 are not used#define vPedX                      v232#define vPedY                      v233#define vBossX                     v234#define vBossY                     v235#define fPumpWater                 f220#define fDoorMoved                 f221#define fDoorIsOpen                f222#define fPedMoved                  f223#define fBossMoved                 f224#define fSoundDone                 f225[ f226 - f228 are not used#define fShipStart                 f229#define fShipMoved                 f230#define fTreePoster                f231[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw, discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ views for additions to the picture  load.view(vw.SkylineArt);  load.view(vw.Posters);    [ add skyline art to the horizon  add.to.pic(vw.SkylineArt, 0, 7, 80, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 100, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 120, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 140, 47, 4, 4);    [ add poster if the gold rush is public  if (isset(RushIsPublic))    {    add.to.pic(vw.Posters, 0, 4, 68, 92, 6, 6);    set(fTreePoster);    }    [ skyline art view not needed anymore (this also discards  [ vw.Posters, if it is loaded)  discard.view(vw.SkylineArt);    [ load other views used in the room  load.view(vw.JerrodNY);  load.view(vw.WaterPump);  load.view(vw.MrQuail);  load.view(vw.PostOfficeArt);  load.view(vw.StmshipMed);  load.view(vw.GrocerClerk);  load.view(vw.Midget);  load.view(vw.PaperBoss);    [ load sounds used in the room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ pedestrian, can be one of three different people  animate.obj(oPedestrian);  [ pedestrian starts off screen  vPedStatus = 10;    [ Jerrod's boss  animate.obj(oBoss);  [ the boss starts out off screen  vBossStatus = 10;    [ a water pump is next to the trough  animate.obj(oWaterPump);  set.view(oWaterPump, vw.PostOfficeArt);  set.loop(oWaterPump, 2);  position(oWaterPump, 30, 131);  set.priority(oWaterPump, 12);  ignore.objs(oWaterPump);  ignore.blocks(oWaterPump);  draw(oWaterPump);  stop.update(oWaterPump);    [ add the background of the interior through the post   add.to.pic(vw.PostOfficeArt, 1, 0, 49, 121, 7, 7);  [ front door of the post office  animate.obj(oDoor);  set.view(oDoor, vw.PostOfficeArt);  set.loop(oDoor, 0);    [ if Jerrod is coming from inside the Post Office  if (previousRoom == rm.PostOfficeInterior)    {    [ show the door opened    set.cel(oDoor, 5);    set(fDoorIsOpen);    }  else    {    [ show the door closed    set.cel(oDoor, 0);    }  [ now add the door to the room picture  position(oDoor, 49, 121);  set.priority(oDoor, 11);  ignore.objs(oDoor);  draw(oDoor);  stop.update(oDoor);    [ if ship has not sailed yet  if (!isset(ShipSailed))    {    [ add the steamship to the horizon, medium size, since    [ this view is two blocks away from the dock    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipMed);    set.loop(oSteamship, 1);    fix.loop(oSteamship);    set.priority(oSteamship, 4);    position(oSteamship, 102, 51);    draw(oSteamship);    [ ship doesn't cycle or move    stop.update(oSteamship);    [ this flag indicates ship is visible on the screen    set(ShipVisible2);    }      [ add the flag atop the flag pole  set.view(oFlag, vw.PostOfficeArt);  set.loop(oFlag, 3);  animate.obj(oFlag);  ignore.horizon(oFlag);  ignore.objs(oFlag);  set.priority(oFlag, 6);  position(oFlag, 116, 20);  draw(oFlag);    [ Jerrod, in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ adjust Jerrod's position depending on which room he came  [ from  if (previousRoom == rm.Bank)    {    if (posn(ego, 10, 0, 63, 70))      {      position(ego, 90, 76);      }    if (posn(ego, 64, 0, 110, 70))      {      position(ego, 108, 76);      }    if (posn(ego, 111, 0, 143, 70))      {      position(ego, 128, 76);      }    if (posn(ego, 144, 0, 159, 70))      {      position(ego, 142, 76);      }    }  if (previousRoom == rm.NewspaperOffice)    {    if (posn(ego, 100, 92, 121, 96))      {      position(ego, 2, 166);      }    if (posn(ego, 122, 92, 138, 96))      {      position(ego, 37, 166);      }    if (posn(ego, 139, 92, 159, 96))      {      position(ego, 100, 166);      }    }  if (previousRoom == rm.PostOfficeInterior)    {    position(ego, 52, 122);    }  if (posn(ego, 151, 73, 159, 75))    {    position(ego, 151, 76);    }  if (posn(ego, 151, 105, 159, 106))    {    position(ego, 151, 104);    }      [ add Jerrod  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if the pedestrian is not on screenif (vPedStatus > 9)  {  [ if gold rush has been announced, the chance of a  [ pedestrian showing up is lower  if (isset(RushIsPublic))    {    [ chance of a pedestrian is one in 175    random(25, 200, vPedStatus);    }  else    {    [ chance of a pedestrian is one in 75    random(25, 100, vPedStatus);    }  [ if a pedestrian is called for  if (vPedStatus == 77)    {    [ if gold rush is public    if (isset(RushIsPublic))      {      [ choices are Mr. Quail or the midget      random(0, 1, vPedStatus);      }    else      {      [ choices are Mr. Quail, the midget, or the grocer      random(0, 2, vPedStatus);      }    if (vPedStatus == 0)      {      set.view(oPedestrian, vw.MrQuail);      }    if (vPedStatus == 1)      {      set.view(oPedestrian, vw.Midget);      }    if (vPedStatus == 2)      {      set.view(oPedestrian, vw.GrocerClerk);      }    [ choose a reandom starting position    random(0, 2, vPedStatus);    if (vPedStatus == 0)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 155);      draw(oPedestrian);      move.obj(oPedestrian, 126, 155, 1, fPedMoved);      [ destination is 'point' 3      vPedStatus = 3;      }    if (vPedStatus == 1)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 102);      draw(oPedestrian);      move.obj(oPedestrian, 126, 102, 1, fPedMoved);      [ destination is 'point' 4      vPedStatus = 4;      }    if (vPedStatus == 2)      {      set.loop(oPedestrian, 2);      position(oPedestrian, 114, 167);      draw(oPedestrian);      move.obj(oPedestrian, 126, 155, 1, fPedMoved);      [ destination is 'point' 3      vPedStatus = 3;      }    }  }  [ when the pedestrian gets to point 4if (isset(fPedMoved) && vPedStatus == 4)  {  reset(fPedMoved);  [ next destination is 'point' 3  vPedStatus = 3;  move.obj(oPedestrian, 126, 155, 1, fPedMoved);  }  [ when the pedestrian gets to 'point' 3if (isset(fPedMoved) && vPedStatus == 3)  {  [ choose next destination randomly  reset(fPedMoved);  random(0, 2, vPedStatus);  if (vPedStatus == 0)    {    [ next destination is end    move.obj(oPedestrian, 152, 155, 1, fPedMoved);    vPedStatus = 9;    }  if (vPedStatus == 1)    {    [ next destination is 'point' 5    move.obj(oPedestrian, 126, 102, 1, fPedMoved);    vPedStatus = 5;    }  if (vPedStatus == 2)    {    [ next destination is end    move.obj(oPedestrian, 114, 167, 1, fPedMoved);    vPedStatus = 9;    }  }  [ when the pedestrian gets to 'point' 5if (isset(fPedMoved) && vPedStatus == 5)  {  [ next destination is end  reset(fPedMoved);  vPedStatus = 9;  move.obj(oPedestrian, 152, 102, 1, fPedMoved);  }[ when the pedestrian reaches end pointif (isset(fPedMoved) && vPedStatus == 9)  {  [ remove the pedestrian from the screen  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }  [ if Jerrod's boss is not on screenif (vBossStatus > 9)  {  [ random chance that the boss returns  random(25, 100, vBossStatus);  [ one in 75 chance  if (vBossStatus == 77)    {    [ choose one of one? looks like the programmers used     [ some boilerplate code from other rooms where there    [ are more than one option; here they could have just    [ assigned the boss without using random() command    random(0, 0, vBossStatus);    if (vBossStatus == 0)      {      set.view(oBoss, vw.PaperBoss);      }          [ choose a random starting point    random(0, 2, vBossStatus);    if (vBossStatus == 0)      {      set.loop(oBoss, 1);      position(oBoss, 152, 100);      draw(oBoss);      move.obj(oBoss, 98, 100, 1, fBossMoved);      [ destination is 'point' 3      vBossStatus = 3;      }    if (vBossStatus == 1)      {      set.loop(oBoss, 1);      position(oBoss, 152, 153);      draw(oBoss);      move.obj(oBoss, 98, 132, 1, fBossMoved);      [ destination is 'point' 5      vBossStatus = 5;      }    if (vBossStatus == 2)      {      set.loop(oBoss, 2);      position(oBoss, 63, 167);      draw(oBoss);      move.obj(oBoss, 98, 132, 1, fBossMoved);      [ destination is 'point' 5      vBossStatus = 5;      }    }  }[ when boss gets to 'point' 3if (isset(fBossMoved) && vBossStatus == 3)  {  [ next destination is 'point' 5  reset(fBossMoved);  vBossStatus = 5;  move.obj(oBoss, 98, 132, 1, fBossMoved);  }  [ when boss gets to 'point' 5if (isset(fBossMoved) && vBossStatus == 5)  {  [ choose the next destination  reset(fBossMoved);  random(0, 2, vBossStatus);  if (vBossStatus == 0)    {    move.obj(oBoss, 98, 100, 1, fBossMoved);    [ next destination is 'point' 4    vBossStatus = 4;    }  if (vBossStatus == 1)    {    move.obj(oBoss, 152, 153, 1, fBossMoved);    [ next destination is end    vBossStatus = 9;    }  if (vBossStatus == 2)    {    move.obj(oBoss, 63, 167, 1, fBossMoved);    [ next destination is end    vBossStatus = 9;    }  }  [ when boss gets to 'point' 4if (isset(fBossMoved) && vBossStatus == 4)  {  [ next destination is end  reset(fBossMoved);  vBossStatus = 9;  move.obj(oBoss, 152, 100, 1, fBossMoved);  }  [ when boss gets to endif (isset(fBossMoved) && vBossStatus == 9)  {  [ remove the boss from the screen  reset(fBossMoved);  vBossStatus = 10;  erase(oBoss);  }  [ get pedestrian's current positionget.posn(oPedestrian, vPedX, vPedY);[ if pedestrian has not moved (blocked by Jerrod)if (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling while not moving  stop.cycling(oPedestrian);  }else  {  [ cycle while moving  start.cycling(oPedestrian);  }[ save pedestrian coordinatesOldObj1X = vPedX;OldObj1Y = vPedY;[ get boss' current positionget.posn(oBoss, vBossX, vBossY);[ if boss has not moved (blocked by Jerrod)if (OldObj2X == vBossX && OldObj2Y == vBossY)  {  [ stop cycling while not moving  stop.cycling(oBoss);  }else  {  [ cycle while moving  start.cycling(oBoss);  }[ save boss coordinatesOldObj2X = vBossX;OldObj2Y = vBossY;[ if Jerrod is going to start pumping waterif (isset(fPumpWater))  {  [ reset the flag  reset(fPumpWater);  [ start the timer  vPumpTimer = 1;  [ reposition Jerrod, so the view showing him at the pump  [ will show correctly  TmpX = -13; [ 243;  TmpY = 0;  reposition(ego, TmpX, TmpY);    [ there are no other objects near Jerrod while he is at  [ the pump, so there is no need to call ignore.objs  ignore.objs(ego);    [ change the view to show Jerrod at the pump  set.view(ego, vw.WaterPump);  [ force priority  (this is actually not needed; the   [ automatic priority of 11 at this location is sufficient  [ for the pumping sequence to display correctly - changing  [ it to 13 does nothing)  set.priority(ego, 13);  [ Jerrod is stationary while he is pumping water  stop.motion(ego);  [ hide the original pump until the sequence is done  erase(oWaterPump);  }  [ if pumping waterif (vPumpTimer != 0)  {  [ increment the timer  ++vPumpTimer;  [ cycle ego so he pumps the water (this should have been  [ done once, in the block that checks flag fPumpWater;  [ it's really not necessary to do it everytime the timer  [ is incremented)  start.cycling(ego);  }  [ after 50 cyclesif (vPumpTimer == 50)  {  [ turn off the timer  vPumpTimer = 0;  [ readjust Jerrod's position for the switch back to his  [ normal view  TmpX = 13;  TmpY = 0;  reposition(ego, TmpX, TmpY);  [ restore Jerrod's normal view  set.view(ego, vw.JerrodNY);  set.loop(ego, 1);      [ restore blocks (so Jerrod doesn't walk through the  [ conditional borders that define the walls)  observe.blocks(ego);    [ redraw the original pump  draw(oWaterPump);  stop.update(oWaterPump);    [ allow player to input commands (the prevent.input   [ command was never used, so it's not necessary to call  [ accept.input here)  accept.input();    [ this is a redundant command, and probably a bug - it   [ should be an 'observe.objs' command; upshot of this is  [ that after pumping water, Jerrod can't block other  [ pedestrians - they will walk right through him!  observe.blocks(ego);    [ restore automatic priority assignment  release.priority(ego);  [ restore ego motion and player control  start.motion(ego);  }  [ alarm lines used to determine if ego is at the post office[ door[ if Jerrod is at the door, but door is closedif (isset(egoHitSpecial) && !isset(fDoorIsOpen))  {  [ plays door-open sound  sound(s.Effect1, fSoundDone);  start.update(oDoor);  [ to make the door show correctly, Jerrod's priority has  [ to be overridden in some places by the door  if (!posn(ego, 49, 110, 51, 111))    {    set.priority(ego, 12);    }  [ temporarily halt Jerrod while door is opening  stop.update(ego);  [ open the door  end.of.loop(oDoor, fDoorMoved);  set(fDoorIsOpen);  }  [ if Jerrod is NOT at the door, but door is openif (!isset(egoHitSpecial) && isset(fDoorIsOpen))  {  [ close the door  start.update(oDoor);  reverse.loop(oDoor, fDoorMoved);  reset(fDoorIsOpen);  }  [ if the door is done closing and Jerrod is not insideif (isset(fDoorMoved) && !posn(ego, 49, 109, 57, 110))  {  [ door is done moving  stop.update(oDoor);  [ allow Jerrod to continue moving  start.update(ego);  [ restore automatic priority assignment  release.priority(ego);  start.cycling(ego);  [ reset the door movement flag  reset(fDoorMoved);  [ if the door has just closed  if (!isset(fDoorIsOpen))    {    [ play the door-closed sound    sound(s.Effect2, fSoundDone);    }  }  [ if the ship has set sail, but hasn't begun moving yet  if (isset(ShipSailed) && !isset(fShipStart) &&     SteamshipXL < 56)  {  [ set flag, and then start the ship moving  set(fShipStart);  start.update(oSteamship);  set.view(oSteamship, vw.StmshipMed);  set.loop(oSteamship, 3);  fix.loop(oSteamship);  move.obj(oSteamship, 116, 51, 1, fShipMoved);  step.time(oSteamship, StmShipStep);  }  [ after ship finishes moving, if (isset(fShipMoved))  {  [ remove it from the screen  reset(fShipMoved);  erase(oSteamship);  reset(ShipVisible2);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if ego is in the post office doorway and the door has[ finished openingif (posn(ego, 49, 109, 57, 109) && isset(fDoorMoved))  {  [ reset the ship visible flag; when Jerrod comes back, if  [ the ship is still present, this flag will get set again   reset(ShipVisible2);  new.room(rm.PostOfficeInterior); [ ##LE001##  }  [ if at top of screenif (posn(ego, 80, 75, 159, 75))  {  release.loop(oSteamship);  reset(ShipVisible2);  new.room(rm.Bank); [ ##LE002##  }  [ if at an edgeif (edgeEgoHit != NOT_HIT)  {  reset(ShipVisible2);  release.loop(oSteamship);  if (edgeEgoHit == RIGHT_EDGE)    {    new.room(rm.GazeboPark); [ ##LE003##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    new.room(rm.NewspaperOffice); [ ##LE004##    }  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ look buildingif ((said("examine", "building") ||     said("examine", "post office") ||     said("examine", "brooklyn", "post office")))  {  print("This is the Brooklyn Post Office.");  }[ look bankif (said("examine", "bank"))  {  print("Nearly every Brooklyn citizen, whether they are wealthy or in want, "        "has an account there.");  }[ look streetlampif (said("examine", "lamp"))  {  print("There are streetlights all over town.");  }[ look doorif (said("examine", "door"))  {  print("There is a door to the Post Office.");  }[ look treeif (said("examine", "forest"))  {  print("There is a tree or two down by the bank, but that is about it!");  }[ look grassif (said("examine", "grass"))  {  print("You see the lawns of the downtown Brooklyn Park.");  }[ look flagif (said("examine", "flag"))  {  print("Old Glory is waving in the breeze with New York City in the "        "background. Almost gives you goose bumps, doesn't it?");  }[ look roadif (said("examine", "path"))  {  print("The post office is on the corner of Dock and Front Street.");  }[ open doorif (said("open", "door"))  {  print("Don't be a slugabed (lazybones), walk up to it!");  }[ use pump/pump waterif ((said("use", "pump") ||     said("pump", "water") ||     said("pump") ||     said("rotate", "water") ||     said("use", "water", "pump") ||     said("rotate", "water", "pump")))  {  [ if timer is reset  if (vPumpTimer == 0)    {    [ is Jerrod near the pump?    if (posn(ego, 27, 126, 48, 137))      {      [ move to the exact position needed      move.obj(ego, 43, 130, 1, fPumpWater);      [ need to ignore blocks so Jerrod can get in position      [ with minimal movement      ignore.blocks(ego);      }    else      {      print("That will be difficult from here!");      }    }  else    {    print("You are already doing that!");    }  }  [ look shipif (said("examine", "boat"))  {  if (isset(ShipVisible2))    {    print("The ship is preparing for departure.");    }  else    {    print("The ship is gone.");    }  }    [ look sign/read signif ((said("examine", "sign") ||     said("examine", "billboard") ||     said("read", "sign") ||     said("read", "billboard")))  {  [ if the poster is visible  if (isset(fTreePoster))    {    [ if Jerrod is near the lamppost    if (posn(ego, 65, 100, 81, 122))      {      print("  Go to CALIFORNIA \n      in style!! \nTake the Panama Route! \n  "            "   Inquire at: \n   12 Front Street");      [ set flag to indicate Jerrod knows where ship tickets      [ are sold      set(SeenBoatTicketFlyer);      }    else      {      print("You cannot read the poster from here.");      }    }  else    {    print("There is no poster in sight.");    }  }  [ look manif (said("examine", "boy"))  {  [ get distance to pedestrian and boss  distance(ego, oPedestrian, vPedDist);  distance(ego, oBoss, vBossDist);    [ if either is close enough  if ((vPedDist < 60 || vBossDist < 60))    {    [ if pedestrian is close enough    if (vPedDist < 60)      {      [ use view to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail)        {        print("Mr. Quail has been like a father to you.");        }      if (vPedDist == vw.Midget)        {        print("You recognize the midget as the man from the livery.");        }      if (vPedDist == vw.GrocerClerk)        {        print("There is the young man from the grocery store.");        }      }    [ if boss is close enough    if (vBossDist < 60)      {      [ again, looks like programmers used boilerplate code;      [ there's only one view assigned to oBoss      current.view(oBoss, vBossDist);      if (vBossDist == vw.PaperBoss)        {        print("There goes your boss from the Brooklyn Evening Star.");        }      }    }  else    {    [ if neither is on screen    if (vPedDist == 255 && vBossDist == 255)      {      print("There is no one in sight.");      }    else      {      print("There is no one close enough.");      }    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ get distance to pedestrian and boss  distance(ego, oPedestrian, vPedDist);  distance(ego, oBoss, vBossDist);    [ if either is close enough  if ((vPedDist < 40 || vBossDist < 40))    {    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail)        {        print("Mr. Quail says, \"You remind me a lot of your brother, Jake. I "              "often wonder where he is and what he is doing.\"");        print("You reply, \"I wonder about him often, too. I really hope to see "              "him again someday.");        }      if (vPedDist == vw.Midget)        {        print("The short man says, \"I hope I can be of service to you at the "              "livery someday.\"");        }      if (vPedDist == vw.GrocerClerk)        {        print("The young man says, \"Good day, sir. Hope to see you at the "              "grocery store!\"");        }      }    [ if boss is close enough    if (vBossDist < 40)      {      [ same unnecessary boilerplate approach      current.view(oBoss, vBossDist);      if (vBossDist == vw.PaperBoss)        {        print("Your boss says, \"I wish I had more employees like you, "              "Jerrod!\"");        }      }    }  else    {    [ if neither is on screen    if (vPedDist == 255 && vBossDist == 255)      {      print("There is no one in sight.");      }    else      {      print("There is no one close enough.");      }    }  }  [ look sidewalk/look boardwalkif ((said("examine", "sidewalk") ||     said("examine", "boardwalk")))  {  print("It is a rock sidewalk.");  }  [ look pumpif ((said("examine", "pump") ||     said("examine", "water", "pump")))  {  print("Next to the trough is a water pump.");  }  [ look water/look troughif ((said("examine", "water") ||     said("examine", "trough") ||     said("examine", "water", "trough")))  {  print("That watering trough is a favorite spot for many of the animals in "        "town.");  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("You are outside of the Brooklyn Post Office.");  }    [ get water/get a drinkif ((said("acquire", "water") ||     said("anyword", "drink", "rol") ||     said("drink", "rol")))  {  print("Yuk! That water is for thirsty animals!");  }  [ look liveryif (said("examine", "livery"))  {  print("You can't see the livery from here, but it is close by.");  }  [ look parkif ((said("examine", "park") ||     said("examine", "brooklyn", "park")))  {  print("The park is nearby.");  }    [ find shop/find grocery store/go grocery storeif ((said("find", "shop") ||     said("find", "food", "shop") ||     said("go", "shop") ||     said("go", "food", "shop") ||     said("examine", "shop") ||     said("examine", "food", "shop")))  {  print("The grocery store is in a different part of town.");  }  [ look Brooklyn Evening Starif ((said("examine", "brooklyn", "evening", "star") ||     said("examine", "brooklyn", "star") ||     said("examine", "star") ||     said("examine", "evening", "star")))  {  print("You cannot see the Brooklyn Evening Star office right now, but it is "        "close by.");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "Mr. Quail has been like a father to you."#message 2 "This is the Brooklyn Post Office."#message 3 "Nearly every Brooklyn citizen, whether they are wealthy or in want, has an account there."#message 4 "There are streetlights all over town."#message 6 "You recognize the midget as the man from the livery."#message 7 "There is a door to the Post Office."#message 8 "There is a tree or two down by the bank, but that is about it!"#message 9 "You see the lawns of the downtown Brooklyn Park."#message 11 "There is the young man from the grocery store."#message 12 "Old Glory is waving in the breeze with New York City in the background. Almost gives you goose bumps, doesn't it?"#message 13 "The post office is on the corner of Dock and Front Street."#message 14 "Don't be a slugabed (lazybones), walk up to it!"#message 16 "That will be difficult from here!"#message 17 "The ship is preparing for departure."#message 18 "The ship is gone."#message 19 "  Go to CALIFORNIA \n      in style!! \nTake the Panama Route! \n     Inquire at: \n   12 Front Street"#message 20 "You cannot read the poster from here."#message 21 "There is no poster in sight."#message 22 "There goes your boss from the Brooklyn Evening Star."#message 24 "There is no one in sight."#message 25 "There is no one close enough."#message 26 "Mr. Quail says, \"You remind me a lot of your brother, Jake. I often wonder where he is and what he is doing.\""#message 27 "The short man says, \"I hope I can be of service to you at the livery someday.\""#message 28 "The young man says, \"Good day, sir. Hope to see you at the grocery store!\""#message 29 "Your boss says, \"I wish I had more employees like you, Jerrod!\""#message 31 "It is a rock sidewalk."#message 32 "Next to the trough is a water pump."#message 33 "That watering trough is a favorite spot for many of the animals in town."#message 34 "You are outside of the Brooklyn Post Office."#message 35 "Yuk! That water is for thirsty animals!"#message 36 "You are already doing that!"#message 37 "You can't see the livery from here, but it is close by."#message 38 "The park is nearby."#message 39 "The grocery store is in a different part of town."#message 40 "You cannot see the Brooklyn Evening Star office right now, but it is close by."#message 41 "You reply, \"I wonder about him often, too. I really hope to see him again someday."