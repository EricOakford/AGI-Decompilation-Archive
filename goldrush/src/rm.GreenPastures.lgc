[***********************************************************[ [ rm.GreenPastures[[ The Green Pastures Hotel is where Jake has a secret room[ that Jerrod needs to find. Once he finds the room, Jerrod[ can get clues that leads to Jake's location.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oBalcDoor                    o1#define oFrontDoor                   o2[ mule related defines#define oMule                       o22#define vMuleX                     v252#define vMuleY                     v253#define fMuleSound                 f254#define fFollowJerrod              f255[ no locally defined variables[ f220 is not used#define fBehindPost                f221#define fFrontDoorOpen             f222#define fFrontDoorMoved            f223#define fBalcDoorOpen              f224#define fBalcDoorMoved             f225#define fBalcPriority              f226[ f227 through f237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the mule logic (to manage Jerrod's mule)  load.logics(lgc.Mule);    [ load picture for current room  load.pic(currentRoom);    [ load normal California Jerrod view  load.view(vw.JerrodCA);    [ if Jerrod previously left his mule tied to the post  if (isset(MuleTiedToHotelPost))    {    [ load the mule view    load.view(vw.Mule);    }  [ load art used in the room  load.view(vw.GreenPasturesArt);    [ load sounds used in the game  load.sound(s.Effect1);  load.sound(s.Effect2);    [ draw the picture  draw.pic(currentRoom);  [ add art that shows interior of building, behind the doors  add.to.pic(vw.GreenPasturesArt, 0, 0, 75, 133, 7, 7);  add.to.pic(vw.GreenPasturesArt, 0, 1, 34, 82, 7, 7);    [ adjust horizon  set.horizon(80);    [ front door  animate.obj(oFrontDoor);  set.view(oFrontDoor, vw.GreenPasturesArt);  set.loop(oFrontDoor, 1);  [ if coming from inside  if (previousRoom == rm.HotelLobby)    {    [ show door open    set(fFrontDoorOpen);    set.cel(oFrontDoor, 4);    }  else    {    set.cel(oFrontDoor, 0);    }  set.priority(oFrontDoor, 11);  ignore.blocks(oFrontDoor);  ignore.objs(oFrontDoor);  position(oFrontDoor, 75, 134);  draw(oFrontDoor);  stop.update(oFrontDoor);  [ balcony door  animate.obj(oBalcDoor);  set.view(oBalcDoor, vw.GreenPasturesArt);  set.loop(oBalcDoor, 2);  [ if coming from inside  if (previousRoom == rm.Hotel2ndFloorRight)    {    [ show door open    set(fBalcDoorOpen);    set.cel(oBalcDoor, 3);    }  else    {    set.cel(oBalcDoor, 0);    }  set.priority(oBalcDoor, 7);  ignore.blocks(oBalcDoor);  ignore.objs(oBalcDoor);  position(oBalcDoor, 34, 83);  draw(oBalcDoor);  stop.update(oBalcDoor);    [ if mule is tied to the hitching post  if (isset(MuleTiedToHotelPost))    {    [ add it,    animate.obj(oMule);    set.view(oMule, vw.Mule);    [ position it at the hitching post    position.v(oMule, MulePostX, MulePostY);    draw(oMule);    stop.cycling(oMule);    }    [ Jerrod, in his normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);    [ adjust Jerrod's position, depending on which room he  [ came from  if (posn(ego, 0, 138, 4, 143))    {    position(ego, 1, 145);    }  if (posn(ego, 150, 137, 159, 141))    {    position(ego, 150, 141);    }  [ draw Jerrod on screen  draw(ego);    [ if coming from west end of town WITH the mule  if (previousRoom == 187 && (has(LazyMule) ||       has("James' ol' mule")))    {    [ need to adjust ego position to make room for the mule    erase(ego);    EgoX = 1;    EgoY = 151;    position.v(ego, EgoX, EgoY);    draw(ego);    }  [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ use the mule logic to draw it    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if behind middle-right post and priority is not adjustedif (posn(ego, 74, 78, 88, 147) && !isset(fBehindPost))  {  [ adjust priority so Jerrod shows up behind the post  set(fBehindPost);  set.priority(ego, 12);  }  [ if NOT behind middle-right post, and priority IS adjustedif (!posn(ego, 74, 78, 88, 147) && isset(fBehindPost))  {  [ restore normal priority  reset(fBehindPost);  release.priority(ego);  }  [ if on left side of upper balcony, and priority is not[ adjustedif (posn(ego, 19, 82, 33, 84) && !isset(fBalcPriority))  {  [ adjust priority so Jerrod shows up in front of the left  [ wall  set(fBalcPriority);  set.priority(ego, 8);  }  [ if NOT on left side of upper balconay and priority IS[ adjustedif (!posn(ego, 19, 82, 33, 84) && isset(fBalcPriority))  {  [ restore normal priority  reset(fBalcPriority);  release.priority(ego);  }  [ if Jerrod is by the front door and door is NOT openif (posn(ego, 72, 120, 81, 138) && !isset(fFrontDoorOpen))  {  [ open the front door  sound(s.Effect1, fEffectDone);  set(fFrontDoorOpen);  start.update(oFrontDoor);  end.of.loop(oFrontDoor, fFrontDoorMoved);  [ Jerrod stops moving until door is fully open  stop.update(ego);  }  [ if NOT by front door, and door is openif (!posn(ego, 72, 120, 81, 138) && isset(fFrontDoorOpen))  {  [ close the door  reset(fFrontDoorOpen);  start.update(oFrontDoor);  reverse.loop(oFrontDoor, fFrontDoorMoved);  }  [ if front door is done opening/closingif (isset(fFrontDoorMoved))  {  reset(fFrontDoorMoved);  [ if door is now open  if (isset(fFrontDoorOpen))    {    [ allow Jerrod to move again    start.update(ego);    }  else    {    [ door is closed; play sound effect    sound(s.Effect2, fEffectDone);    }  }  [ if Jerrod is by balcony door and door is NOT openif (posn(ego, 30, 80, 42, 84) && !isset(fBalcDoorOpen))  {  [ open the door  sound(s.Effect1, fEffectDone);  set(fBalcDoorOpen);  start.update(oBalcDoor);  end.of.loop(oBalcDoor, fBalcDoorMoved);  [ Jerrod stops moving until door is fully open  stop.update(ego);  }  [ if Jerrod is NOT by balcony door and door is openif (!posn(ego, 30, 80, 42, 84) && isset(fBalcDoorOpen))  {  [ close the door  reset(fBalcDoorOpen);  start.update(oBalcDoor);  reverse.loop(oBalcDoor, fBalcDoorMoved);  }  [ if balcony door is done opening/closingif (isset(fBalcDoorMoved))  {  reset(fBalcDoorMoved);  [ if door is now open  if (isset(fBalcDoorOpen))    {    [ allow Jerrod to move again    start.update(ego);    }  else    {    [ door is closed; play sound effect    sound(s.Effect2, fEffectDone);    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckExit);  }  if ((said("examine", "around") ||     said("examine") ||     said("examine", "building") ||     said("read", "wall") ||     said("read", "building") ||     said("read", "sign") ||     said("read", "word")))  {  print("This is the GREEN PASTURES Hotel. It's about the only place of "        "interest in this little town.");  }  if ((said("examine", "hotel") ||     said("examine", "green", "pasture", "hotel") ||     said("examine", "green", "pasture")))  {  print("It is a two-story hotel with a balcony and many windows. There is also "        "a hitching post in front.");  }  if ((said("examine", "path") ||     said("examine", "back", "path")))  {  print("Back Street runs in front of the hotel.");  }  if ((said("examine", "balcony") ||     said("examine", "porch")))  {  print("A railing surrounds the balcony.");  }  if ((said("examine", "sidewalk") ||     said("examine", "boardwalk")))  {  print("The boardwalk passes in front of the hotel.");  }  if ((said("examine", "hitching", "post") ||     said("examine", "post")))  {  print("The hitching post is fer visitors to tie their mules to.");  }  if (said("examine", "glass"))  {  print("As ya look at the windows on the side of the hotel, ya notice there "        "are four rooms upstairs.");  }  [ look in windowif (said("examine", "in", "glass"))  {  [ if on balcony  if (posn(ego, 11, 83, 126, 89))    {    print("Through the windows ya see room 13. Nothin' unusual catches yer eye.");    [ give clue about the number of rooms actually in the    [ hotel    print("As ya look at the windows on the side of the hotel, ya notice there "          "are four rooms upstairs.");    }  else    {    print("Through the front windows ya see the hotel lobby.");    [ give clue about the number of rooms actually in the    [ hotel    print("As ya look at the windows on the side of the hotel, ya notice there "          "are four rooms upstairs.");    }  }if (said("examine", "fence"))  {  print("This fence keeps folks from strayin' onto the hotel lawn.");  }  if (said("examine", "rail"))  {  print("The railing would keep an ordinary frontiersman on the balcony.");  }  if (said("examine", "pillar"))  {  print("There are four, count 'em, four sturdy pillars in front of the hotel!");  }if (said("examine", "door"))  {  print("You see two doors; the main hotel door and the door to the balcony.");  }[ crawl/jump/go on railing (to get to side of buildingif ((said("crawl", "across", "rail") ||     said("crawl", "rail") ||     said("climb", "across", "rail") ||     said("climb", "rail") ||     said("go", "across", "rail") ||     said("go", "rail") ||     said("jump", "across", "rail") ||     said("jump", "rail") ||     said("go", "ledge") ||     said("crawl", "ledge") ||     said("climb", "ledge") ||     said("jump", "ledge")))  {  [ if Jerrod is on the balcony  if (posn(ego, 11, 83, 126, 89))    {    [ if Jerrod is on RIGHT edge of balcony    if (posn(ego, 118, 85, 126, 89))      {      [ Jerrod climbs on to the railing      print("Over the railing you go!");      position(ego, 7, 95);      set.loop(ego, 0);      egoDir = STOPPED;      new.room(rm.LedgeLeft); [ ##LE001##      }    else      {      print("It wouldn't be safe to do that right here.");      }    }  else    {    print("Ya can't do that unless yer on the balcony.");    }  }[ look grass  if (said("examine", "grass"))  {  print("That's hardly a lawn, it's just cut wild grass!");  }  [ don't leave your mule!if (said("exit", "donkey"))  {  if ((has(LazyMule) || has("James' ol' mule")))    {    print("If ya just leave that mule, yer gonna lose it!");    }  else    {    print("Ya ain't even got a mule!");    }  }  [ tie mule to hitching postif ((said("tie", "donkey") ||     said("tie", "donkey", "post") ||     said("tie", "donkey", "hitching", "post") ||     said("tie", "up", "donkey") ||     said("tie", "up", "donkey", "post") ||     said("tie", "up", "donkey", "hitching", "post") ||     said("connect", "donkey") ||     said("connect", "donkey", "post") ||     said("connect", "donkey", "hitching", "post") ||     said("connect", "up", "donkey") ||     said("connect", "up", "donkey", "post") ||     said("connect", "up", "donkey", "hitching", "post")))  {  [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ if the mule is close enough to the hitching post    if (posn(oMule, 17, 146, 62, 162))      {      [ secure mule to the post      print("Ya securely tie up the mule to the hitchin' post.");      set(MuleTiedToHotelPost);      [ mule stops moving      stop.motion(oMule);      stop.cycling(oMule);      [ save hitched position      MulePostX = vMuleX;      MulePostY = vMuleY;      [ temporarily drop the mule (Jerrod can get it again      [ later)      if (has(LazyMule))        {        set(DropLazyMule);        drop(LazyMule);        }      if (has("James' ol' mule"))        {        set(DropJamesMule);        drop("James' ol' mule");        }      }    else      {      print("The mule ain't close enough to the hitching post!");      }    }  else    {    print("Ya ain't even got a mule!");    }  }  [ get mule/untie muleif ((said("acquire", "donkey") ||     said("acquire", "animal") ||     said("untie", "donkey") ||     said("untie", "animal") ||     said("acquire", "rope") ||     said("diconnect", "donkey") ||     said("diconnect", "animal")))  {  [ if Jerrod already has the mule  if ((has(LazyMule) || has("James' ol' mule")))    {    print("Ya already got a mule!");    }  else    {    [ get distance to mule    distance(oMule, ego, MuleDistance);    if (MuleDistance > 15)      {      print("The mule is too far away!");      }    else      {      print("Ya untie the mule and firmly grab the rope that's around its neck. "            " It begins to follow you.");      [ if the lazy mule is at the post      if (isset(DropLazyMule))        {        [ Jerrod takes the mule        reset(DropLazyMule);        get(LazyMule);        }      [ if Jame's mule is at the post      if (isset(DropJamesMule))        {        [ Jerrod takes the mule        reset(DropJamesMule);        get("James' ol' mule");        }      [ mule is no longer tied up      reset(MuleTiedToHotelPost);      }    }  }  if (said("examine", "donkey"))  {  if (isset(MuleTiedToHotelPost))    {    print("Yer mule is tied to the hitching post in front of the hotel.");    }  else    {    [ reset haveMatch flag so mule logic can provide    [ appropriate response    reset(haveMatch);    }  }  if ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  if (has("Shovel"))    {    print("Don't dig up the town!  Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  if ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya need to be in the water!");  }  if (said("examine", "hotel", "around"))  {  print("Ya can't see the hotel rooms from outside.");  }  if (said("examine", "ledge"))  {  [ give clue about the ledge  print("Ya see a ledge under the upstairs windows.");  }  if (said("examine", "lobby"))  {  print("You could see the lobby better if you were inside.");  }  if (said("examine", "wall"))  {  [ give clue about the ledge  print("On the side wall of the hotel ya notice a ledge under the upstairs "        "windows.");  }  CheckExit:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ the mule logic handles mule stuff  call(lgc.Mule);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ (unlike most other logics, the check for an exit condition[ happens LAST in this room)[ if going in front doorif (posn(ego, 75, 120, 78, 125))  {  position(ego, 78, 162);  new.room(rm.HotelLobby); [ ##LE002##  }  [ if going in balcony doorif (posn(ego, 33, 81, 46, 82))  {  position(ego, 121, 75);  set.loop(ego, 1);  egoDir = LEFT;  new.room(rm.Hotel2ndFloorRight); [ ##LE003##  }  [ check for edge hitif (edgeEgoHit != NOT_HIT)  {  if (edgeEgoHit == LEFT_EDGE)    {    --WildernessX;    new.room(rm.ColomaWest); [ ##LE004##    }  if (edgeEgoHit == RIGHT_EDGE)    {    ++WildernessX;    new.room(rm.ColomaEast); [ ##LE005##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    ++WildernessY;    new.room(rm.ColomaSouth); [ ##LE006##    }  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "Over the railing you go!"#message 2 "It wouldn't be safe to do that right here."#message 3 "Ya cain't do that from here."#message 4 "This is the GREEN PASTURES Hotel. It's about the only place of interest in this little town."#message 5 "Back Street runs in front of the hotel."#message 6 "A railing surrounds the balcony."#message 7 "The boardwalk passes in front of the hotel."#message 8 "The hitching post is fer visitors to tie their mules to."#message 9 "As ya look at the windows on the side of the hotel, ya notice there are four rooms upstairs."#message 10 "This fence keeps folks from strayin' onto the hotel lawn."#message 11 "The railing would keep an ordinary frontiersman on the balcony."#message 12 "There are four, count 'em, four sturdy pillars in front of the hotel!"#message 13 "You see two doors; the main hotel door and the door to the balcony."#message 15 "That's hardly a lawn, it's just cut wild grass!"#message 16 "It is a two-story hotel with a balcony and many windows. There is also a hitching post in front."#message 17 "Ya can't see the hotel rooms from outside."#message 18 "Ya see a ledge under the upstairs windows."#message 19 "You could see the lobby better if you were inside."#message 20 "Through the windows ya see room 13. Nothin' unusual catches yer eye."#message 22 "If ya just leave that mule, yer gonna lose it!"#message 23 "Ya ain't even got a mule!"#message 24 "Ya securely tie up the mule to the hitchin' post."#message 25 "The mule ain't close enough to the hitching post!"#message 26 "Ya already got a mule!"#message 27 "The mule is too far away!"#message 28 "Ya untie the mule and firmly grab the rope that's around its neck.  It begins to follow you."#message 29 "Yer mule is tied to the hitching post in front of the hotel."#message 30 "Through the front windows ya see the hotel lobby."#message 31 "Ya can't do that unless yer on the balcony."#message 32 "On the side wall of the hotel ya notice a ledge under the upstairs windows."#message 40 "Don't dig up the town!  Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya need to be in the water!"