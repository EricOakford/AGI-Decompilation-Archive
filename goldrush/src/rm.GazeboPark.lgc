[***********************************************************[[ rm.GazeboPark[ [ The south end of the park, with the gazebo featuring[ prominently; there is a coin in the gazebo that the[ player should find.[[ Key interactions are Mr.Quail, and the policeman who[ fines Jerrod if he is caught walking on the grass.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oPoliceman                   o1#define oSteamship                   o2#define oWagon                       o3#define oPedestrian                  o4#define vPoliceDist                v220#define vShipY                     v221#define vPoliceStatus              v222  #define PM_NONE               0  [ 0: Policeman not on screen  #define PM_PATROL_1           1  [ 1: Policeman on 1st leg of patrol  #define PM_PATROL_2           2  [ 2: Policeman on 2nd leg of patrol  #define PM_MOVE_1A            4  [ 4: moving to position 1a to ticket Jerrod  #define PM_MOVE_1B            5  [ 5: moving to position 1b to ticket Jerrod  #define PM_MOVE_2A            6  [ 6: moving to position 2a to ticket Jerrod  #define PM_MOVE_2B            7  [ 7: moving to position 2b to ticket Jerrod  #define PM_MOVE_3             8  [ 8: moving to position 3 to ticket Jerrod  #define PM_MOVE_JERROD       10  [ 10: moving to Jerrod's location  #define PM_RETURN_1          11  [ 11: returning to patrol via path 1  #define PM_RETURN_2          12  [ 12: returning to patrol via path 2#define vPoliceX                   v223#define vPoliceY                   v224#define vPoliceStep                v225#define vWgnStatus                 v226[ 1: wagon is visible[ >9: wagon not visible;#define vPedStatus                 v227[ 0: setting neighbor[ 1: setting Mr Quail[ 2: setting bank teller[ 3: pedestrian is moving to first point[ 4: pedestrian is moving to second point[ >9: pedestrian not visible; #define vWgnDist                   v228#define vPedDist                   v229#define vWgnDir                    v230#define vPedX                      v231#define vPedY                      v232#define vOldPX                     v233#define vOldPY                     v234#define fPoliceMoved               f220#define fOnGrass                   f221#define fPriOverride               f222#define fOnBackStairs              f223#define fShipStart                 f224#define fShipMoved                 f225#define fWgnMoved                  f226#define fPedMoved                  f227#define fDoneDying                 f228#define fRunOver                   f229#define fPoliceSndDone             f230#define fSndDone                   f231[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard the room picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load views for skyline  load.view(vw.SkylineArt);  load.view(vw.GazeboRmArt);  [ add skyline art to background image  add.to.pic(vw.SkylineArt, 0, 4, 0, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 60, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 80, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 100, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 120, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 11, 140, 47, 4, 4);  [ add warehouse to skyline  add.to.pic(vw.GazeboRmArt,  0, 0, 71, 52, 4, 4);  [ discard skyline view (this also discards vw.GazeboRmArt)  discard.view(vw.SkylineArt);    [ load views used in the room  load.view(vw.JerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.MrQuail);  load.view(vw.Policeman);  load.view(vw.BankTeller);  load.view(vw.Wagon);  load.view(vw.StmshipMed);    [ load sounds used in the rom  load.sound(m.PoliceWarning);  load.sound(s.BadNews);  load.sound(s.AddToScore);  load.sound(s.UhOh);  load.sound(m.Death);    [ if the steamship is in view  if (SteamshipXL < 107)    {    [ add the ship to the screen    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipMed);    set.loop(oSteamship, 1);    fix.loop(oSteamship);    set.priority(oSteamship, 4);    vShipY = 49;    position.v(oSteamship, SteamshipXL, vShipY);    draw(oSteamship);    stop.update(oSteamship);    }    [ policeman who enforces the 'keep of grass' sign  animate.obj(oPoliceman);  position(oPoliceman, 1, 73);  set.view(oPoliceman, vw.Policeman);  [ if Jerrod has been caught on the grass two or three  [ times  if ((OnGrassCount == 2 || OnGrassCount == 3))    {    [ the policeman is already    [ here to keep an eye on things    vPoliceStatus = PM_PATROL_1;    set(fPoliceMoved);    draw(oPoliceman);    }    [ wagon  animate.obj(oWagon);  set.view(oWagon, vw.Wagon);  [ choose a random starting location and direction (use   [ vPoliceDist variable to pick a random number)  random(0, 1, vPoliceDist);  if (vPoliceDist == 0)    {    [ on left, going right    set.loop(oWagon, 0);    position(oWagon, 0, 148);    draw(oWagon);    move.obj(oWagon, 112, 148, 2, fWgnMoved);    }  else    {    [ on right going left    set.loop(oWagon, 1);    position(oWagon, 112, 148);    draw(oWagon);    move.obj(oWagon, 0, 148, 2, fWgnMoved);    }    [ wagon is visible   vWgnStatus = 1;    [ pedestrian (could be one of two people)  animate.obj(oPedestrian);    [ pedestrian is currently not present  vPedStatus = 10;    [ Jerrod, in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ depending on which room Jerrod came from, adjust  [ position to account for perspective  if (previousRoom == rm.ParkNorth)    {    EgoY = 73;    position.v(ego, EgoX, EgoY);    }  if (posn(ego, 0, 99, 2, 100))    {    position(ego, 0, 101);    }  if (posn(ego, 0, 76, 2, 78))    {    position(ego, 0, 75);    }  [ draw Jerrod on screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if wagon reached its destinationif (isset(fWgnMoved) && vWgnStatus == 1)  {  [ remove it from screen  reset(fWgnMoved);  erase(oWagon);  vWgnStatus = 10;  }  [ if Jerrod is in the wagon's path and still aliveif (EgoY == 148 && EgoHealthStatus == 0)  {  [ get distance to the wagon  distance(ego, oWagon, vWgnDist);  [ the direction the wagon is going determines how close  [ Jerrod has to be in order to get 'hit'  get.dir(oWagon, vWgnDir);  [ wagon going left  if (vWgnDir == LEFT)    {    if ((vWgnDist == 29 || vWgnDist == 30))      {      set(fRunOver);      }    }  [ wagon going right  if (vWgnDir == RIGHT)    {    if ((vWgnDist == 28 || vWgnDist == 29))      {      set(fRunOver);      }    }  }  [ if Jerrod got run overif (isset(fRunOver))  {  [ reset the flag  reset(fRunOver);  [ wagon keeps rolling over Jerrod's dead body  ignore.objs(ego);  [ switch to view showing him falling down dead  set.view(ego, vw.DyingJerrodNY);  [ make sure to start with first cel  set.cel(ego, 0);  [ allow ego object to cycle at rest  set(CycleAtRest);  [ run the loop one time  end.of.loop(ego, fDoneDying);  [ change Jerrod's status to 'run over by wagon'  EgoHealthStatus = 4;  }  [ after Jerrod finishes dyingif (isset(fDoneDying))  {  [ reset the flag  reset(fDoneDying);  [ call logic to handle details of death  call(lgc.DeathRunOver);  }  [ if wagon is not on screenif (vWgnStatus > 9)  {  [ random chance the wagon comes back  random(20, 100, vWgnStatus);  [ one in 80 chance  if (vWgnStatus == 77)    {    [ choose a random direction    random(0, 1, vWgnStatus);    if (vWgnStatus == 0)      {      [ start on right, going left      set.loop(oWagon, 1);      position(oWagon, 112, 148);      draw(oWagon);      move.obj(oWagon, 0, 148, 2, fWgnMoved);      }    else      {      [ start on left, going right      set.loop(oWagon, 0);      position(oWagon, 0, 148);      draw(oWagon);      move.obj(oWagon, 112, 148, 2, fWgnMoved);      }    [ wagon is now on screen    vWgnStatus = 1;    }  }  [ if pedestrian is not presentif (vPedStatus > 9)  {  [ random chance that a pedestrian appears  random(20, 100, vPedStatus);  [ one in 80 chance  if (vPedStatus == 77)    {    [ pick one of two possible pedestrians at random    random(0, 1, vPedStatus);    if (vPedStatus == 0)      {      [ Mr. Quail      set.view(oPedestrian, vw.MrQuail);      }    if (vPedStatus == 1)      {      [ bank teller      set.view(oPedestrian, vw.BankTeller);      }    [ choose a random starting location    random(0, 1, vPedStatus);    if (vPedStatus == 0)      {      set.loop(oPedestrian, 0);      position(oPedestrian, 0, 154);      draw(oPedestrian);      move.obj(oPedestrian, 66, 154, 1, fPedMoved);      }    if (vPedStatus == 1)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 154);      draw(oPedestrian);      move.obj(oPedestrian, 66, 154, 1, fPedMoved);      }    [ pedestrian is on screen    vPedStatus = 3;    }  }  [ when pedestrian reaches first pointif (isset(fPedMoved) && vPedStatus == 3)  {  reset(fPedMoved);  [ randomly determine a second leg  random(0, 1, vPedStatus);  if (vPedStatus == 0)    {    move.obj(oPedestrian, 0, 154, 1, fPedMoved);    }  if (vPedStatus == 1)    {    move.obj(oPedestrian, 152, 154, 1, fPedMoved);    }  vPedStatus = 4;  }  [ after pedestrian reaches second pointif (isset(fPedMoved) && vPedStatus == 4)  {  [ he disappears  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }  [ get current position of pedestrianget.posn(oPedestrian, vPedX, vPedY);[ if pedestrian has not moved (blocked by Jerrod)if (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling the pedestrian  stop.cycling(oPedestrian);  }else  {  [ if moving, cycle the pedestrian  start.cycling(oPedestrian);  }[ save pedestrian's positionOldObj1X = vPedX;OldObj1Y = vPedY;[ if grass flag not set, and less than three times[ previously on the grassif (!isset(fOnGrass) && OnGrassCount < 3)  {  [ if Jerrod is on any of the grass areas (colored as water  [ on priority screen)  if ((isset(onWater) ||       posn(ego, 0, 76, 42, 83) ||       posn(ego, 60, 76, 96, 83)))    {    [ set the flag    set(fOnGrass);    [ increment the count    ++OnGrassCount;    [ subtract a point from player's score    if (currentScore > 0)      {      currentScore -= 1;      sound(s.BadNews, fSndDone);      }    }  }[ if grass flag is currently setif (isset(fOnGrass))  {  [ if Jerrod has moved OFF the grass  if (!isset(onWater) &&       !posn(ego, 0, 76, 42, 83) &&       !posn(ego, 60, 76, 96, 83))    {    [ reset the flag    reset(fOnGrass);    }  }  [ if Jerrod walks on the grass three times and the policeman[ isn't on screen yetif (OnGrassCount == 3 && vPoliceStatus == PM_NONE)  {  [ the Policeman shows up  vPoliceStatus = PM_PATROL_1;  [ and set flag so he begins patrolling  set(fPoliceMoved);  draw(oPoliceman);  sound(m.PoliceWarning, fPoliceSndDone);  }  [ when policeman gets to left edgeif (isset(fPoliceMoved) && vPoliceStatus == PM_PATROL_1)  {  [ he turns around and patrols to the right  reset(fPoliceMoved);  vPoliceStatus = PM_PATROL_2;  move.obj(oPoliceman, 116, 73, 1, fPoliceMoved);  }[ when policeman reaches right edge if (isset(fPoliceMoved) && vPoliceStatus == PM_PATROL_2)  {  [ he turns around and patrols to the left  reset(fPoliceMoved);  vPoliceStatus = PM_PATROL_1;  move.obj(oPoliceman, 15, 73, 1, fPoliceMoved);  }  [ if Jerrod has been on the grass more than two times, AND[ policeman is present (moving or not)if (OnGrassCount > 2 && vPoliceStatus < 3)  {  [ if Jerrod is on the grass again  if ((isset(onWater) ||       posn(ego, 0, 76, 42, 83) ||       posn(ego, 60, 76, 96, 83)))    {    [ sound the alarm    sound(m.PoliceWarning, fPoliceSndDone);    print("\"In the name of the law, \n\nDON'T TAKE ANOTHER STEP!!\"");    [ freeze Jerrod in place    stop.motion(ego);        [ depending on where Jerrod is, move the policeman near    [ him    if ((posn(ego, 0, 121, 159, 167) ||         posn(ego, 66, 86, 159, 120) ||         posn(ego, 0, 76, 42, 100)))      {      if (posn(ego, 0, 121, 159, 167))        {        vPoliceStatus = PM_MOVE_1A;        move.obj(oPoliceman, 118, 73, 1, fPoliceMoved);        }      if (posn(ego, 66, 86, 159, 120))        {        vPoliceStatus = PM_MOVE_2A;        move.obj(oPoliceman, 118, 73, 1, fPoliceMoved);        }      if (posn(ego, 0, 76, 42, 100))        {        vPoliceStatus = PM_MOVE_3;        move.obj(oPoliceman, 28, 73, 1, fPoliceMoved);        }      }    else      {      [ for any other location, the policeman will just move      [ to where Jerrod is      vPoliceStatus = PM_MOVE_JERROD;      follow.ego(oPoliceman, 5, fPoliceMoved);      }    }  }[ when policeman gets to point 1aif (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_1A)  {  [ move to point 1b  reset(fPoliceMoved);  vPoliceStatus = PM_MOVE_1B;  move.obj(oPoliceman, 118, 120, 1, fPoliceMoved);  }[ when policeman gets to point 1bif (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_1B)  {  [ move to point Jerrod's location  reset(fPoliceMoved);  vPoliceStatus = PM_MOVE_JERROD;  follow.ego(oPoliceman, 5, fPoliceMoved);  }[ when policeman gets to point 2aif (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_2A)  {  [ move to point 2b  reset(fPoliceMoved);  vPoliceStatus = PM_MOVE_2B;  move.obj(oPoliceman, 118, 85, 1, fPoliceMoved);  }[ when policeman gets to point 2bif (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_2B)  {  [ move to Jerrod's location  reset(fPoliceMoved);  vPoliceStatus = PM_MOVE_JERROD;  follow.ego(oPoliceman, 5, fPoliceMoved);  }[ when policman gets to point 3if (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_3)  {  [ move to Jerrod's location  reset(fPoliceMoved);  vPoliceStatus = PM_MOVE_JERROD;  follow.ego(oPoliceman, 5, fPoliceMoved);  }[ when policeman gets to Jerrod if (isset(fPoliceMoved) && vPoliceStatus == PM_MOVE_JERROD)  {  [ reset move flag  reset(fPoliceMoved);  [ admonish Jerrod  print("\"You have broken the law; I have no choice but to give you a ticket. "        "Please don't make me do this again!\"");  [ if more than three points, lose three points  if (currentScore > 2)    {    currentScore -= 3;    }  [ then, if exactly 2, lose two more  if (currentScore == 2)    {    currentScore -= 2;    }  [ and if only one, lose one more  if (currentScore == 1)    {    currentScore -= 1;    }      [ to summarize the penalties for walking on the grass:  [   - everytime Jerrod walks on the grass, player loses  [     one point;  [   - after third time, the policeman issues a ticket and  [     player loses three more points, or all points if  [     less than three  [   - BUT there is a small bug; if Jerrod has 5 points  [     when he's issued a ticked, he first loses 3, and   [     then the next test ('if(score===2)') causes    [     another loss of two for a total of 5!  [     The programmers should have used an 'else'   [     statement to prevent this    [after the ticket, Jerrod is free to move again  start.motion(ego);    [ now move the Policeman back to his regular path  [ depending on where he is right now    [ get policeman's current position  get.posn(oPoliceman, vPoliceX, vPoliceY);  [ if along the bottom or near middle of screen  if ((posn(oPoliceman, 0, 121, 159, 167) ||       posn(oPoliceman, 66, 86, 159, 120)))    {    [ if along the bottom of the screen    if (posn(oPoliceman, 0, 121, 159, 167))      {      [ move policeman to patrol path, at y=140      vPoliceStatus = PM_RETURN_1;      move.obj(oPoliceman, 118, 140, 1, fPoliceMoved);      }    [ if closer to the center of the screen    if (posn(oPoliceman, 66, 86, 159, 120))      {      [ move policeman to patrol path, using current y value      vPoliceStatus = PM_RETURN_2;      vPoliceX = 118;      vPoliceStep = 1;      move.obj.v(oPoliceman,  vPoliceX, vPoliceY, vPoliceStep, fPoliceMoved);      }    }  else    {    [ otherwise, send him to his second regular destination    [ and resume his patrol    vPoliceStatus = PM_PATROL_1;    move.obj(oPoliceman, 15, 73, 1, fPoliceMoved);    }      [ reset onGrass count so next time will trigger another  [ ticket  OnGrassCount = 2;  }  [ if policeman reaches either return spot he resumes his[ regular patrolif (vPoliceStatus == PM_RETURN_1 && isset(fPoliceMoved))  {  reset(fPoliceMoved);  vPoliceStatus = PM_PATROL_2;  move.obj(oPoliceman, 118, 73, 1, fPoliceMoved);  }if (vPoliceStatus == PM_RETURN_2 && isset(fPoliceMoved))  {  reset(fPoliceMoved);  vPoliceStatus = PM_PATROL_2;  move.obj(oPoliceman, 118, 73, 1, fPoliceMoved);  }  [ get distance from policeman to Jerrod distance(oPoliceman, ego, vPoliceDist);[ if within two pixelsif (vPoliceDist == 2)  {  print("\"Excuse me.\"");  print("\"Pardon me.\"");  }  [ get policeman's current positionget.posn(oPoliceman, vPoliceX, vPoliceY);[ if policeman hasn't moved (blocked by Jerrod)if (vOldPX == vPoliceX && vOldPY == vPoliceY)  {  [ stop cycling when not moving  stop.cycling(oPoliceman);  }else  {  [ cycle when moving  start.cycling(oPoliceman);  }[ save policeman's positionvOldPX = vPoliceX;vOldPY = vPoliceY;[ if Jerrod is on an alarm line (on stairs to gazebo)if (isset(egoHitSpecial))  {  [ if on right stairs, going up  if (posn(ego, 57, 95, 74, 106))    {    if (egoDir == LEFT)      {      [ bump ego down up one pixel      TmpX = 0;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      }    }  [ if on right stairs, going down  if (posn(ego, 57, 85, 76, 101))    {    if (egoDir == RIGHT)      {      [ bump Jerrod down one pixel      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    }  [ if on left stairs going down  if (posn(ego, 7, 85, 35, 101))    {    if (egoDir == LEFT)      {      [ bump Jerrod down one pixel      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    }  [ if on left stairs going up  if (posn(ego, 7, 95, 35, 106))    {    if (egoDir == RIGHT)      {      [ bump Jerrod up one pixel      TmpX = 0;      TmpY = -1; [ 255;      if (EgoY == 97)        {        TmpX = 2;        }      reposition(ego, TmpX, TmpY);      }    }  [ if on front stairs  if (posn(ego, 20, 107, 37, 125))    {    if (egoDir == DOWN)      {      [ bump Jerrod left one pixel      TmpX = -1; [ 255;      TmpY = 0;      reposition(ego, TmpX, TmpY);      }    if (egoDir == UP)      {      [ if near the top, or near the bottom      if ((posn(ego, 22, 116, 30, 123) ||           posn(ego, 22, 107, 31, 115)))        {        [ bump Jerrod right one pixel        TmpX = 1;        TmpY = 0;        reposition(ego, TmpX, TmpY);        }      }    }  }  [ when moving into the gazebo by the side and front stairsif ((posn(ego, 63, 96, 66, 96) ||     posn(ego, 30, 106, 40, 106) ||     posn(ego, 17, 96, 19, 96)))  {  [ force priority so ego draws correctly  set.priority(ego, 9);  ignore.blocks(ego);  set(fPriOverride);  }  [if Jerrod leaves those spaces  if ((posn(ego, 63, 97, 67, 97) ||     posn(ego, 30, 107, 40, 107) ||     posn(ego, 16, 97, 18, 97)))  {  [ release priority  release.priority(ego);  observe.blocks(ego);  reset(fPriOverride);  }[ if Jerrod is at left side entrance of gazeboif (posn(ego, 30, 89, 30, 97))  {  [ if moving right,   if (egoDir == RIGHT)    {    [ bump him down one and one to right    TmpX = 1;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ for the back stairs, there is no alarm line[ so use a flag and Jerrod's position to manage [ him going up/down[ if on backstairs, and the override is not set yetif (posn(ego, 48, 88, 51, 88) && !isset(fPriOverride))  {  if ((egoDir == DOWN_RIGHT || egoDir == DOWN_LEFT))    {    egoDir = DOWN;    }  if (egoDir == DOWN)    {    TmpX = 0;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    set(fOnBackStairs);    }  }[ if at top threshold of back stairs and [ the override is set (meaning not going up the [ stairs (i.e. direction is not down toward bottom of screen)if (posn(ego, 49, 84, 52, 84) && isset(fPriOverride))  {  [ only UP allowed; no diagonal  if ((egoDir == UP_RIGHT || egoDir == UP_LEFT))    {    egoDir = UP;    }  if (egoDir == UP)    {    TmpX = 0;    TmpY = 1;    reposition(ego, TmpX, TmpY);    [ going down the stairs (up toward top of screen)    set(fOnBackStairs);    reset(fPriOverride);    release.priority(ego);    observe.blocks(ego);    }  }[ if on the backstairs, need to manage motion until[ off the stairsif (isset(fOnBackStairs))  {  [ only up/down allowed; no diagonal  if ((egoDir == DOWN_RIGHT || egoDir == DOWN_LEFT))    {    egoDir = DOWN;    }  if ((egoDir == UP_RIGHT || egoDir == UP_LEFT))    {    egoDir = UP;    }      [ if at top of stairs  if (posn(ego, 49, 85, 52, 85))    {    [ going down the stairs (up toward top of screen)    if (egoDir == UP)      {      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    [ going up the stairs (down toward bottom of screen)    if (egoDir == DOWN)      {      TmpX = 0;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      [ this location requires priority to be temporarily      [ adjusted to properly see ego      ignore.blocks(ego);      set.priority(ego, 9);      set(fPriOverride);      reset(fOnBackStairs);      }    }  [ at midpoint of stairs  if (posn(ego, 48, 86, 52, 86))    {    [ going down the stairs (up toward top of screen)    if (egoDir == UP)      {      TmpX = 0;      TmpY = 1;      if (EgoX == 52)        {        TmpX = -1; [ 255;        }      reposition(ego, TmpX, TmpY);      }    [ going up the stairs (down toward bottom of screen)    if (egoDir == DOWN)      {      TmpX = 0;      TmpY = -1; [ 255;      if (EgoX == 48)        {        TmpX = 1;        }      reposition(ego, TmpX, TmpY);      }    }  [ if at bottom of stairs  if (posn(ego, 48, 87, 51, 87))    {    [ going down the stairs (up toward top of screen)    if (egoDir == UP)      {      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      [ no longer on the stairs      reset(fOnBackStairs);      }    [ going up the stairs (down toward bottom of screen)    if (egoDir == DOWN)      {      TmpX = 0;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      }    }  }  [ if the ship has set sail, but hasn't started moving yetif (isset(ShipSailed) && !isset(fShipStart) && SteamshipXL < 107)  {  [ send the ship on its way  set(fShipStart);  start.update(oSteamship);  set.loop(oSteamship, 3);  fix.loop(oSteamship);  move.obj(oSteamship, 106, 49, 1, fShipMoved);  step.time(oSteamship, StmShipStep);  }  [ after ship reaches its destinationif (isset(fShipMoved))  {  [ remove ship from screen  reset(fShipMoved);  erase(oSteamship);  }[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 0, 72, 159, 72))  {  release.loop(oSteamship);  new.room(rm.ParkNorth); [ ##LE001##  }  if (edgeEgoHit != NOT_HIT)  {  if (edgeEgoHit == LEFT_EDGE)    {    new.room(rm.PostOffice); [ ##LE002##    }  if (edgeEgoHit == RIGHT_EDGE)    {    new.room(rm.JerrodsHouse); [ ##LE003##    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look/look aroundif ((said("examine") ||     said("examine", "around") ||     said("examine", "park") ||     said("examine", "brooklyn", "park")))  {  print("This is the downtown Brooklyn Park. The gazebo and flowers catch the "        "eye of those that walk by.");  }  [ look sign/read signif ((said("examine", "sign") || said("read", "sign")))  {  [ if near the sign,  if (posn(ego, 56, 84, 122, 167))    {    print("The sign says, \n \n    \"KEEP \n\n   OFF THE \n\n    GRASS\"");    }  else    {    print("It is difficult to read any sign from here.");    }  }  [ look grassif (said("examine", "grass"))  {  print("These lawns are beautiful! It is no wonder they have those signs up!");  }  [ look roadif (said("examine", "path"))  {  print("The street in the foreground is Front Street.");  }  [ look riverif ((said("examine", "water") || said("examine", "creek")))  {  print("This estuary runs all the way across town.");  }  [ look gazeboif ((said("examine", "gazebo") ||     said("examine", "building") ||     said("examine", "beam")))  {  [ a clue about the floor boards!  print("You remember playing around the gazebo as a child. You would lose your "        "candy through the wide cracks in the gazebo floor.");  }  [ look streetlampif (said("examine", "lamp"))  {  print("The lamplighter sure has his work cut out for him!");  }  [ look treesif (said("examine", "forest"))  {  print("The trees shade the park.");  }[ look below anything/look through crackif ((said("examine", "below", "rol") ||     said("examine", "down", "rol") ||     said("examine", "crack", "rol") ||     said("examine", "anyword", "crack", "rol")))  {  [ if Jerrod already has the coin  if (has("Gold coin"))    {    [ if in the gazebo    if (posn(ego, 24, 85, 63, 106))      {      print("There is nothing under the gazebo but dried leaves and dirt.");      }    else      {      print("From here it is difficult to see under the gazebo. You might try "            "that when you have a different perspective!");      }    }  else    {    [ if in just ther right place in the gazebo,    if (posn(ego, 32, 91, 45, 100))      {      print("You see the sparkle of something shiny. Ah yes! A closer look "            "reveals a gold coin under the gazebo!");      }    [ if in the gazebo, but not in the right place,    if (posn(ego, 24, 85, 63, 106) && !posn(ego, 32, 91, 45, 100))      {      print("You look through the cracks carefully. There must be something "            "under the gazebo but you can't see it right here!");      }    [ if not in the gazebo    if (!posn(ego, 24, 85, 63, 106))      {      print("From here it is difficult to see under the gazebo. You might try "            "that when you have a different perspective!");      }    }  }  [ look upif (said("examine", "up"))  {  print("There's nothing up here!");  }  [ look floorif ((said("examine", "deck") ||     said("examine", "beam", "deck") ||     said("examine", "deck", "gazebo") ||     said("examine", "gazebo", "deck") ||     said("examine", "plank") ||     said("examine", "beam", "plank")))  {  [ if in the gazebo  if (posn(ego, 24, 85, 63, 106))    {    print("The floor is made of wooden planks with wide cracks between them.");    }  else    {    print("You need to get closer to the gazebo to examine the floor.");    }  }  [ lift plankif (said("lift", "plank"))  {  print("You can't lift the planks.");  }  [ look coinif ((said("examine", "coin", "rol") ||     said("examine", "anyword", "coin", "rol")))  {  [ if in the right location  if (posn(ego, 32, 91, 45, 100))    {    [ if Jerrod doesn't already have the coin    if (!has("Gold coin"))      {      [ he can see it!      print("The light is dim, but it looks like a gold coin!");      }    }  [ if in the gazebo, but not in the right place  if (posn(ego, 24, 85, 63, 106) &&       !posn(ego, 32, 91, 45, 100))    {    [ if Jerrod doesn't have the coin    if (!has("Gold coin"))      {      print("There is nothing under the gazebo but dried leaves and dirt.");      }    }  [ if NOT in the gazebo  if (!posn(ego, 24, 85, 63, 106))    {    if (!has("Gold coin"))      {      [ there's no coin to see      print("You cannot see a gold coin, at least not from here.");      }    }  }  [ get coinif ((said("acquire", "coin") ||     said("acquire", "gold", "coin")))  {  [ if Jerrod already has the coin  if (has("Gold coin"))    {    print("You already have the gold coin. There is not another one.");    }  else    {    [ if in the right place    if (posn(ego, 32, 91, 45, 100))      {      sound(s.AddToScore, fSndDone);      print("You stretch your arm as far as humanly possible. The gold coin is "            "almost beyond your reach, but finally you are able to grasp it.");      get("Gold coin");      set(FoundCoin);      currentScore  += 4;      }    else      {      print("You cannot see a gold coin, at least not from here.");      }    }  }[ look copif (said("examine", "cop"))  {  [ if policeman is close  if (vPoliceDist < 15)    {    print("This lawman looks like he has mighty long arms!");    }  [ not close, but still on screen  if (vPoliceDist > 14 && vPoliceDist < 255)    {    print("There is a %w2 on patrol in the park.");    }  [ if not on screen  if (vPoliceDist == 255)    {    print("There is no %w2 in sight!");    }  }  [ look boatif (said("examine", "boat"))  {  [ if boat is still here  if (SteamshipXL > 0 && SteamshipXL < 107)    {    print("Someday you hope to ride on that ship!");    }  else    {    print("The ship is gone.");    }  }  [ look flowers/look around gazeboif ((said("examine", "bouquet") ||     said("examine", "around", "gazebo")))  {  [ if Jerrod has not already picked the flowers  if (!has("Flowers"))    {    print("The gazebo is surrounded by a beautiful floral arrangement.");    }  }[ pick flowers/take flowersif ((said("pick", "bouquet") || said("acquire", "bouquet")))  {  [ if Jerrod already has some  if (has("Flowers"))    {    print("You already have some flowers.");    }  else    {    [ if close to some flowers    if (posn(ego, 3, 85, 81, 124))      {      [ play score sound      sound(s.AddToScore, fSndDone);      [ get some flowers      print("You pick a few flowers.");      get("Flowers");      [ if not already scored      if (!isset(ScoreFlowers))        {        [ score two points        set(ScoreFlowers);        currentScore  += 2;        }      }    else      {      print("From here you cannot get any flowers.");      }    }  }[ look manif (said("examine", "boy"))  {  [ get distance to wagon and pedestrian (distance to   [ policeman is determined earlier in the cycle)  distance(ego, oWagon, vWgnDist);  distance(ego, oPedestrian, vPedDist);    [ if at least one person is close enough  if ((vPoliceDist < 60 || vWgnDist < 60 || vPedDist < 60))    {    [ if policeman is close enough    if (vPoliceDist < 60)      {      print("This lawman looks like he has mighty long arms!");      }    [ if wagon is close enough    if (vWgnDist < 60)      {      print("Driving that animal team and wagon is his life.");      }    [ if pedestrian is close enough    if (vPedDist < 60)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail)        {        print("Mr. Quail has been like a father to you.");        }      if (vPedDist == vw.BankTeller)        {        print("The teller is out for a walk in the park.");        }      }    }  else    {    [ if no one is on screen    if (vPoliceDist == 255 &&         vWgnDist == 255 &&         vPedDist == 255)      {      print("There is no one in sight.");      }    else      {      [ there's someone on screen, but not close enough to see      print("You aren't close enough to get a good look.");      }    }  }  [ talk man/talk copif ((said("speak", "boy") ||     said("speak", "cop") ||     said("speak")))  {  [ get distance to wagon and pedestrian (distance to   [ policeman is determined earlier in the cycle)  distance(ego, oWagon, vWgnDist);  distance(ego, oPedestrian, vPedDist);  [ if at least one person is close enough  if ((vPoliceDist < 40 || vWgnDist < 40 || vPedDist < 40))    {    [ if policeman is close enough    if (vPoliceDist < 40)      {      print("The officer says, \"It is my sworn duty to protect and to serve.\"");      }    [ if wagon is close enough    if (vWgnDist < 40)      {      print("The man on the wagon is too busy driving the team to listen.");      }    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail)        {        print("Mr. Quail says, \"I sure do miss having your brother, Jake, "              "around. It would be nice to know how he is doing.\"");        print("You reply, \"Me, too. I miss Jake a lot. I hope someday we will "              "meet again.\"");        }      if (vPedDist == vw.BankTeller)        {        print("The bank teller says, \"I remember the day I helped you open "              "your account at the bank.\"");        }      }    }  else    {    [ if no one is on screen    if (vPoliceDist == 255 && vWgnDist == 255 && vPedDist == 255)      {      print("There is no one to talk to.");      }    else      {      [ threre's at least one person on screen but they are      [ too far away to hear      print("No one is close enough to hear you.");      }    }  }  [ look wagonif (said("examine", "cart"))  {  [ get distance to wagon  distance(oWagon, ego, vWgnDist);  [ if wagon is not on screen  if (vWgnDist == 255)    {    print("There is no wagon in sight.");    }  else    {    print("The wagon is driving by the park.");    }  }  [ look under bridgeif (said("examine", "below", "bridge"))  {  print("There is nothing but water under the bridge.");  }  [ smell flowersif (said("smell", "bouquet"))  {  print("The flowers add a nice aroma to the park.");  }  [ candy anythingif ((said("candy", "rol") ||     said("anyword", "candy", "rol")))  {  print("There is no candy here.");  }  [ look billboard/read billboardif ((said("examine", "billboard") ||     said("read", "billboard") ||     said("examine", "note") ||     said("read", "note")))  {  print("All there is worth reading here are the signs on the lawn.");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "There is a %w2 on patrol in the park."#message 2 "There is no %w2 in sight!"#message 3 "\"In the name of the law, \n\nDON'T TAKE ANOTHER STEP!!\""#message 4 "\"You have broken the law; I have no choice but to give you a ticket. Please don't make me do this again!\""#message 5 "\"Excuse me.\""#message 6 "\"Pardon me.\""#message 7 "The sign says, \n \n    \"KEEP \n\n   OFF THE \n\n    GRASS\""#message 8 "It is difficult to read any sign from here."#message 9 "These lawns are beautiful! It is no wonder they have those signs up!"#message 10 "The street in the foreground is Front Street."#message 11 "This estuary runs all the way across town."#message 12 "You remember playing around the gazebo as a child. You would lose your candy through the wide cracks in the gazebo floor."#message 13 "The lamplighter sure has his work cut out for him!"#message 14 "The trees shade the park."#message 15 "You see the sparkle of something shiny. Ah yes! A closer look reveals a gold coin under the gazebo!"#message 16 "There is nothing under the gazebo but dried leaves and dirt."#message 17 "From here it is difficult to see under the gazebo. You might try that when you have a different perspective!"#message 18 "The light is dim, but it looks like a gold coin!"#message 19 "You strain your eyes in the dim light and see no gold coin."#message 20 "You stretch your arm as far as humanly possible. The gold coin is almost beyond your reach, but finally you are able to grasp it."#message 21 "You cannot see a gold coin, at least not from here."#message 22 "This lawman looks like he has mighty long arms!"#message 23 "Someday you hope to ride on that ship!"#message 24 "The ship is gone."#message 25 "The floor is made of wooden planks with wide cracks between them."#message 26 "You need to get closer to the gazebo to examine the floor."#message 28 "You already have the gold coin. There is not another one."#message 29 "The gazebo is surrounded by a beautiful floral arrangement."#message 31 "You already have some flowers."#message 32 "You pick a few flowers."#message 33 "From here you cannot get any flowers."#message 34 "Driving that animal team and wagon is his life."#message 35 "Mr. Quail has been like a father to you."#message 36 "The teller is out for a walk in the park."#message 38 "There is no one in sight."#message 39 "You aren't close enough to get a good look."#message 40 "The officer says, \"It is my sworn duty to protect and to serve.\""#message 41 "The man on the wagon is too busy driving the team to listen."#message 42 "Mr. Quail says, \"I sure do miss having your brother, Jake, around. It would be nice to know how he is doing.\""#message 43 "The bank teller says, \"I remember the day I helped you open your account at the bank.\""#message 45 "There is no one to talk to."#message 46 "No one is close enough to hear you."#message 47 "There is no wagon in sight."#message 48 "The wagon is driving by the park."#message 49 "This is the downtown Brooklyn Park. The gazebo and flowers catch the eye of those that walk by."#message 50 "You look through the cracks carefully. There must be something under the gazebo but you can't see it right here!"#message 51 "There's nothing up here!"#message 53 "There is nothing but water under the bridge."#message 56 "The flowers add a nice aroma to the park."#message 58 "You reply, \"Me, too. I miss Jake a lot. I hope someday we will meet again.\""#message 59 "You can't lift the planks."#message 60 "There is no candy here."#message 61 "All there is worth reading here are the signs on the lawn."