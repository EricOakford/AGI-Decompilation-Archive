[***********************************************************[[ rm.Tunnel_2[[ This tunnel location has the door that has to be opened to [ be able to get into rest of tunnel complex.[ [***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDark1                       o1#define oDark2                       o2#define oDark3                       o3#define oDark4                       o4#define oDark5                       o5#define oDark6                       o6#define oDark7                       o7#define oDark8                       o8#define oDark9                       o9#define oDark10                     o10#define oDark11                     o11#define oDark12                     o12#define oDark13                     o13#define oDark14                     o14#define oDark15                     o15#define oDark16                     o16#define oDark17                     o17#define oDoor                       o18#define vFlicker                   v220[ v221 and v222 are not used#define vDigTimer                  v223#define vMagnetStatus              v224#define fDrawDark                  f220#define fLight1                    f221#define fLight2                    f222#define fLight3                    f223#define fLight4                    f224#define fLight5                    f225#define fLight6                    f226#define fLight7                    f227#define fLight8                    f228#define fLight9                    f229#define fLight10                   f230#define fLight11                   f231#define fLight12                   f232#define fLight13                   f233#define fLight14                   f234#define fLight15                   f235#define fLight16                   f236#define fLight17                   f237#define fClimbing                  f238#define fFalling                   f239[ f240 is not used#define fDoorMoved                 f241#define fDoorOpen                  f242#define fSoundDone                 f244[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load the tunnel logic, that handles all the common  [ tunnel functions  load.logics(lgc.Tunnels);    [ load views needed by objects in the room  load.view(vw.WideJerrodCA);  load.view(vw.Darkness);  load.view(vw.TunnelDoor);  [ load sounds used in the room  load.sound(m.FoundGold);  load.sound(s.Magnet);  load.sound(s.TunnelDoor);    [ add the darkness panels - these black out areas of the  [ tunnel that are beyond the range of Jerrod's light  [ (don't draw them yet, lgc.DarkenTunnel will do that)  animate.obj(oDark1);  set.view(oDark1, vw.Darkness);  set.loop(oDark1, 0);  set.cel(oDark1, 0);  set.priority(oDark1, 15);  ignore.objs(oDark1);  ignore.blocks(oDark1);  position(oDark1, 5, 125);  [ darkness panel 2  animate.obj(oDark2);  set.view(oDark2, vw.Darkness);  set.loop(oDark2, 0);  set.cel(oDark2, 0);  set.priority(oDark2, 15);  ignore.objs(oDark2);  ignore.blocks(oDark2);  position(oDark2, 13, 132);  [ darkness panel 3  animate.obj(oDark3);  set.view(oDark3, vw.Darkness);  set.loop(oDark3, 0);  set.cel(oDark3, 0);  set.priority(oDark3, 15);  ignore.objs(oDark3);  ignore.blocks(oDark3);  position(oDark3, 21, 135);  [ darkness panel 4  animate.obj(oDark4);  set.view(oDark4, vw.Darkness);  set.loop(oDark4, 0);  set.cel(oDark4, 0);  set.priority(oDark4, 15);  ignore.objs(oDark4);  ignore.blocks(oDark4);  position(oDark4, 29, 135);  [ darkness panel 5  animate.obj(oDark5);  set.view(oDark5, vw.Darkness);  set.loop(oDark5, 0);  set.cel(oDark5, 0);  set.priority(oDark5, 15);  ignore.objs(oDark5);  ignore.blocks(oDark5);  position(oDark5, 37, 135);  [ darkness panel 6  animate.obj(oDark6);  set.view(oDark6, vw.Darkness);  set.loop(oDark6, 0);  set.cel(oDark6, 0);  set.priority(oDark6, 15);  ignore.objs(oDark6);  ignore.blocks(oDark6);  position(oDark6, 45, 138);  [ darkness panel 7  animate.obj(oDark7);  set.view(oDark7, vw.Darkness);  set.loop(oDark7, 0);  set.cel(oDark7, 0);  set.priority(oDark7, 15);  ignore.objs(oDark7);  ignore.blocks(oDark7);  position(oDark7, 53, 141);  [ darkness panel 8  animate.obj(oDark8);  set.view(oDark8, vw.Darkness);  set.loop(oDark8, 0);  set.cel(oDark8, 0);  set.priority(oDark8, 15);  ignore.objs(oDark8);  ignore.blocks(oDark8);  position(oDark8, 61, 141);  [ darkness panel 9  animate.obj(oDark9);  set.view(oDark9, vw.Darkness);  set.loop(oDark9, 0);  set.cel(oDark9, 0);  set.priority(oDark9, 15);  ignore.objs(oDark9);  ignore.blocks(oDark9);  position(oDark9, 69, 141);  [ darkness panel 10  animate.obj(oDark10);  set.view(oDark10, vw.Darkness);  set.loop(oDark10, 0);  set.cel(oDark10, 0);  set.priority(oDark10, 15);  ignore.objs(oDark10);  ignore.blocks(oDark10);  position(oDark10, 91, 141);  [ darkness panel 11  animate.obj(oDark11);  set.view(oDark11, vw.Darkness);  set.loop(oDark11, 0);  set.cel(oDark11, 0);  set.priority(oDark11, 15);  ignore.objs(oDark11);  ignore.blocks(oDark11);  position(oDark11, 99, 141);  [ darkness panel 12  animate.obj(oDark12);  set.view(oDark12, vw.Darkness);  set.loop(oDark12, 0);  set.cel(oDark12, 0);  set.priority(oDark12, 15);  ignore.objs(oDark12);  ignore.blocks(oDark12);  position(oDark12, 107, 141);  [ darkness panel 13  animate.obj(oDark13);  set.view(oDark13, vw.Darkness);  set.loop(oDark13, 0);  set.cel(oDark13, 0);  set.priority(oDark13, 15);  ignore.objs(oDark13);  ignore.blocks(oDark13);  position(oDark13, 115, 141);  [ darkness panel 14  animate.obj(oDark14);  set.view(oDark14, vw.Darkness);  set.loop(oDark14, 0);  set.cel(oDark14, 0);  set.priority(oDark14, 15);  ignore.objs(oDark14);  ignore.blocks(oDark14);  position(oDark14, 123, 141);  [ darkness panel 15  animate.obj(oDark15);  set.view(oDark15, vw.Darkness);  set.loop(oDark15, 0);  set.cel(oDark15, 0);  set.priority(oDark15, 15);  ignore.objs(oDark15);  ignore.blocks(oDark15);  position(oDark15, 133, 116);  [ darkness panel 16  animate.obj(oDark16);  set.view(oDark16, vw.Darkness);  set.loop(oDark16, 0);  set.cel(oDark16, 0);  set.priority(oDark16, 15);  ignore.objs(oDark16);  ignore.blocks(oDark16);  position(oDark16, 141, 116);  [ darkness panel 17  animate.obj(oDark17);  set.view(oDark17, vw.Darkness);  set.loop(oDark17, 0);  set.cel(oDark17, 0);  set.priority(oDark17, 15);  ignore.objs(oDark17);  ignore.blocks(oDark17);  position(oDark17, 149, 116);    [ the door that goes to space under Jake's cabin  animate.obj(oDoor);  set.view(oDoor, vw.TunnelDoor);  set.loop(oDoor, 0);  [ if coming from behind the door  if (previousRoom == rm.Tunnel_3)    {    [ door is open    set(fDoorOpen);    set.cel(oDoor, 6);    }  else    {    [ door is closed    set.cel(oDoor, 0);    }  set.priority(oDoor, 4);  position(oDoor, 8, 111);  ignore.blocks(oDoor);  ignore.objs(oDoor);  draw(oDoor);  stop.cycling(oDoor);  stop.update(oDoor);    [ Jerrod, using the wide view  animate.obj(ego);  set.view(ego, vw.WideJerrodCA);  draw(ego);    [ the room starts out all darkened  call(lgc.DarkenTunnel);    [ now show the picture  show.pic();    [ if NOT coming from under Jake's cabin  if (previousRoom != 149)    {    [ door is closed, so use block to prevent    [ Jerrod from walking through door    block(0, 110, 10, 119);    }      if (isset(MagnetOnString))    {    vMagnetStatus = 1;    }  }  [ **************************************[ EVERY CYCLE[ **************************************[ to simulate flickering of torch, use a random timer to[ redraw a black box over the area of tunnel that is[ darkened[ if flicker timer has counted downif (vFlicker == 0)  {  [ if Jerrod has stopped moving  if (egoDir == STOPPED)    {    [ if the redraw darkness flag is NOT set    if (!isset(fDrawDark))      {      [ draw a black box over the entire tunnel (when Jerrod      [ moves, the cleared areas will be uncovered)      clear.text.rect(2, 0, 21, 39, BLACK);      set(fDrawDark);      }    }  else    {    [ Jerrod is moving; clear the redraw darkness flag    reset(fDrawDark);    [ choose a random time between 2 and 4 cycles    random(2, 4, FlickerTime);    [ set flicker delay to the random vlaue    vFlicker = FlickerTime;    [ draw a black box over the entire tunnel    clear.text.rect(2, 0, 21, 39, BLACK);    }  }  [ decrement flicker timer--vFlicker;[ if Jerrod has a lantern or a match litif ((isset(LanternLit) || isset(MatchLit)))  {  [ depending on position, remove the darkness panels so  [ Jerrod can see the area around him  if (posn(ego, 0, 1, 9, 167) && !isset(fLight1))    {    erase(oDark1);    set(fLight1);    }  if (posn(ego, 0, 1, 17, 167) && !isset(fLight2))    {    erase(oDark2);    set(fLight2);    }  if (posn(ego, 0, 1, 25, 167) && !isset(fLight3))    {    erase(oDark3);    set(fLight3);    }  if (posn(ego, 4, 1, 33, 167) && !isset(fLight4))    {    erase(oDark4);    set(fLight4);    }  if (posn(ego, 12, 1, 41, 167) && !isset(fLight5))    {    erase(oDark5);    set(fLight5);    }  if (posn(ego, 20, 1, 49, 167) && !isset(fLight6))    {    erase(oDark6);    set(fLight6);    }  if (posn(ego, 28, 1, 57, 167) && !isset(fLight7))    {    erase(oDark7);    set(fLight7);    }  if (posn(ego, 36, 1, 65, 167) && !isset(fLight8))    {    erase(oDark8);    set(fLight8);    }  if (posn(ego, 44, 1, 73, 167) && !isset(fLight9))    {    erase(oDark9);    set(fLight9);    }  if (posn(ego, 66, 1, 95, 167) && !isset(fLight10))    {    erase(oDark10);    set(fLight10);    }  if (posn(ego, 74, 1, 103, 167) && !isset(fLight11))    {    erase(oDark11);    set(fLight11);    }  if (posn(ego, 82, 1, 111, 167) && !isset(fLight12))    {    erase(oDark12);    set(fLight12);    }  if (posn(ego, 90, 1, 119, 167) && !isset(fLight13))    {    erase(oDark13);    set(fLight13);    }  if (posn(ego, 98, 1, 127, 167) && !isset(fLight14))    {    erase(oDark14);    set(fLight14);    }  if (posn(ego, 108, 1, 137, 167) && !isset(fLight15))    {    erase(oDark15);    set(fLight15);    }  if (posn(ego, 116, 1, 145, 167) && !isset(fLight16))    {    erase(oDark16);    set(fLight16);    }  if (posn(ego, 124, 1, 153, 167) && !isset(fLight17))    {    erase(oDark17);    set(fLight17);    }  }  if (vDigTimer > 0)  {  [ increment timer each cycle  ++vDigTimer;  }  [ when 30 cycles passif (vDigTimer == 30)  {  [ Jerrod is done digging    [ Jerrod no longer cycles when not moving  reset(CycleAtRest);  start.motion(ego);  [ restore normal tunnel view  set.view(ego, vw.WideJerrodCA);  }  [ at 31 cyclesif (vDigTimer == 31)  {  [ reset timer  vDigTimer = 0;  [ no gold can be found in this tunnel section  print.at("Nothin'!", 2, 5, 0);  }  [ if by the door and door is openif (!posn(ego, 0, 110, 7, 123) && isset(fDoorOpen))  {  [ close the door  reset(fDoorOpen);  sound(s.TunnelDoor, fSoundDone);  reverse.loop(oDoor, fDoorMoved);  [ with door closed, insert block so Jerrod can't move  [ through closed door  block(0, 110, 14, 119);  }  [ if door is open and done movingif (isset(fDoorMoved) && isset(fDoorOpen))  {  [ reset moving flag  reset(fDoorMoved);  }  [ if door is closed and done movingif (isset(fDoorMoved) && !isset(fDoorOpen))  {  [ reset moving flag  reset(fDoorMoved);  [ don't update door anymore  stop.update(oDoor);  }  [ if Jerrod is NOT by the doorif (!posn(ego, 0, 110, 7, 123))  {  [ if magnet is on string and through hole  if ((vMagnetStatus == 2 || vMagnetStatus == 3))    {    [ string breaks; magnet is lost forever    print.at("Walkin' away with that magnet through the hole in the door broke "             "yer string. The magnet is gone!", 2, 5, 0);    vMagnetStatus = 1;    drop("Magnet");    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 130, 60, 130, 167))  {  [ redraw dark panels  draw(oDark1);  draw(oDark2);  draw(oDark3);  draw(oDark4);  [ update all objects (not sure why they do this since the  [ new.room command comes next - I guess it's so there'a a  [ split second before the room change with the room  [ updated)  force.update(ego);  [ position Jerrod to appear correctly on next screen  position(ego, 2, 147);  new.room(rm.Tunnel_1); [ ##LE001##  }  if (posn(ego, 2, 110, 6, 110))  {  [ update all objects (not sure why they do this since the  [ new.room command comes next - I guess it's so there'a a  [ split second before the room change with the room  [ updated)  force.update(ego);  [ position Jerrod and set loop to appear correctly in next  [ room  position(ego, 77, 112);  set.loop(ego, 1);  egoDir = STOPPED;  new.room(rm.Tunnel_3); [ ##LE002##  }  [ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ look wall/lookif ((said("examine", "wall") ||     said("examine", "mine") ||     said("examine", "cave") ||     said("examine", "around") ||     said("examine")))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    if (posn(ego, 0, 110, 14, 130))      {      print.at("There's a huge door in the mine wall.", 2, 5, 0);      }    else      {      print.at("Ya scan the walls for gold.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }[ look goldif ((said("examine", "gold") ||     said("examine", "gold", "nugget") ||     said("examine", "nugget")))  {  print.at("There's no GOLD in sight right here.", 2, 5, 0);  }  [ get goldif ((said("acquire", "gold") ||     said("acquire", "gold", "nugget") ||     said("acquire", "nugget")))  {  print.at("There's no GOLD in sight right here.", 2, 5, 0);  }  [ use pickif ((said("pick") ||     said("pick", "gold") ||     said("use", "pick") ||     said("swing", "pick")))  {  if (has("Pick"))    {    [ if climbing or falling        [ (this is generic code that is in all tunnel rooms; in    [ this tunnel room, there's nowhere for Jerrod to climb    [ (or fall)    if ((isset(fClimbing) || isset(fFalling)))      {      if (isset(fClimbing))        {        print.at("Ya can't do that while yer climbin'!", 2, 5, 0);        }      if (isset(fFalling))        {        print.at("That's impossible right now!", 2, 5, 0);        }      }    else      {      [ if up against the wall of the tunnel (by touching      [ the control line)      if (isset(egoHitSpecial))        {        [ change to digging view        set.view(ego, vw.TunnelDigging);        [ start timer        vDigTimer = 1;        [ make sure Jerrod is not moving        stop.motion(ego);        [ allow cycling while motionless        set(CycleAtRest);        [ and begin cycling the digging view        start.cycling(ego);        }      else        {        print.at("Yer close to a likely spot. Try that nearby.", 2, 5, 0);        }      }    }  else    {    print.at("Ya don't have a pick.", 2, 5, 0);    }  }[ look doorif ((said("examine", "door") ||     said("examine", "beam", "door") ||     said("examine", "mine", "door") ||     said("examine", "door", "mine")))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if Jerrod is by the door    if (posn(ego, 0, 110, 14, 130))      {      [ show the door close up      new.room(cs.TunnelDoor); [ ##LE003##      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ look ropeif (said("examine", "rope"))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if close to the door    if (posn(ego, 0, 110, 14, 130))      {      print.at("The ropes are attached to weights.", 2, 5, 0);      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }[ take ropeif (said("acquire", "rope"))  {  [ if close to the door  if (posn(ego, 0, 110, 14, 130))    {    print.at("If ya did that, the door wouldn't work.", 2, 5, 0);    }  else    {    print.at("Ya can't do that from here.", 2, 5, 0);    }  }  [ look weightsif (said("examine", "weight"))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if close to the door    if (posn(ego, 0, 110, 14, 130))      {      print.at("The door is so heavy that these weights are used to help open "               "and close the door.", 2, 5, 0);      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ take weightsif (said("acquire", "weight"))  {  [ if close to the door  if (posn(ego, 0, 110, 14, 130))    {    print.at("If ya did that, the door wouldn't work.", 2, 5, 0);    }  else    {    print.at("Ya can't do that from here.", 2, 5, 0);    }  }  [ look at holeif (said("examine", "hole"))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if by the door    if (posn(ego, 0, 110, 14, 130))      {      print.at("The hole in the door resembles James' branding iron.", 2, 5, 0);      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ look at keyholeif ((said("examine", "house key", "hole") ||     said("examine", "keyhole") ||     said("examine", "lock")))  {  [ if Jerrod has a lit lantern or a lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if close to the door    if (posn(ego, 0, 110, 14, 130))      {      print.at("This door has two keyholes.", 2, 5, 0);      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ look under doorif ((said("examine", "below", "door") ||     said("examine", "below", "beam", "door") ||     said("examine", "below", "mine", "door") ||     said("examine", "metal") ||     said("examine", "metal", "obj")))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if by the door    if (posn(ego, 0, 110, 14, 130))      {      [ if Jerrod has the steel key      if (has("Steel key"))        {        [ there's nothing more to see under the door        print.at("Ya see nothin' but darkness under the door.", 2, 5, 0);        }      else        {        [ the steel key is there        print.at("Ya see a small glimmer of somethin' metal. It's not gold, but "                 "metal.", 2, 5, 0);        }      }    else      {      print.at("Ya can't do that from here.", 2, 5, 0);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ get key/get metalif ((said("acquire", "metal") ||     said("acquire", "house key") ||     said("acquire", "steel", "house key")))  {  if (has("Steel key"))    {    print.at("Ya already have the steel key.", 2, 5, 0);    }  else    {    [ it's more complicated than just 'get key'    print.at("That's a great idea, but how?", 2, 5, 0);    }  }  [ unlock doorif ((said("unlock", "door") ||     said("use", "house key") ||     said("use", "steel", "house key") ||     said("unlock", "lock") ||     said("use", "house key", "unlock", "door")))  {  [ if by the door  if (posn(ego, 0, 110, 7, 123))    {    [ if Jerrod has the steel key    if (has("Steel key"))      {      [ success!      print.at("You unlock both of these gargantuan locks with the steel key "               "from the far side of the door!", 2, 5, 0);      [ open the door      sound(s.TunnelDoor, fSoundDone);      start.update(oDoor);      end.of.loop(oDoor, fDoorMoved);      set(fDoorOpen);      [ remove the block so Jerrod can pass through the door      unblock();      [ score one point      if (!isset(ScoreTunnelDoor))        {        set(ScoreTunnelDoor);        currentScore  += 1;        }      }    else      {      print.at("Ya don't have a key that'll fit these locks.", 2, 5, 0);      }    }  else    {    print.at("Ya can't do that from here.", 2, 5, 0);    }  }  [ lock doorif (said("lock", "door"))  {  if (posn(ego, 0, 110, 7, 123))    {    print.at("This door locks by itself when it closes.", 2, 5, 0);    }  else    {    print.at("Ya can't do that from here.", 2, 5, 0);    }  }  [ open doorif ((said("open", "door") ||     said("push", "door") ||     said("move", "door") ||     said("pull", "door")))  {  [ if by the door  if (posn(ego, 0, 110, 7, 123))    {    print.at("This door has a double lock on it.", 2, 5, 0);    }  else    {    print.at("Ya can't do that from here.", 2, 5, 0);    }  }  [ kick doorif (said("kick", "door"))  {  print.at("Ouch!", 4, 5, 0);  }  [ use stringif ((said("string") ||     said("use", "string") ||     said("tie", "string")))  {  [ if Jerrod has the string  if (has("String"))    {    [ if string is already tied to magnet    if (isset(MagnetOnString))      {      print.at("Ya already tied the string to the magnet!", 2, 5, 0);      }    else      {      [ 'use string' is too generic      print.at("Ya need to be a little more specific!", 2, 5, 0);      }    }  else    {    print.at("Ya don't have any string.", 2, 5, 0);    }  }  [ tie string to magnetif (said("tie", "string", "magnet"))  {  [ need both items  if (has("String") && has("Magnet"))    {    [ if already tied    if (isset(MagnetOnString))      {      print.at("Ya already tied the string to the magnet!", 2, 5, 0);      }    else      {      print.at("Yer genius is showin' again. Ya tie the string to the magnet!", 2, 5, 0);      set(MagnetOnString);      [ score 2 points      currentScore  += 2;      [ status of magnet is it's tied to string, but not      [ used yet      vMagnetStatus = 1;      }    }  else    {    if (!has("String"))      {      print.at("Ya don't have any string.", 2, 5, 0);      goto(Done);      }    if (!has("Magnet"))      {      print.at("Ya don't have a magnet.", 2, 5, 0);      }    }  }  [ use magnetif ((said("magnet") ||     said("use", "magnet")))  {  [ if Jerrod has the magnet  if (has("Magnet"))    {    [ if already put through the door    if (isset(MagnetInDoor))      {      print.at("Ya already put the magnet through the hole in the door!", 2, 5, 0);      }    else      {      [ 'use magnet' is too generic      print.at("Ya need to be a little more specific!", 2, 5, 0);      }    }  else    {    print.at("Ya don't have a magnet.", 2, 5, 0);    }  }  [ put magnet in holeif ((said("place", "magnet", "hole") ||     said("place", "magnet", "in", "hole") ||     said("place", "magnet", "hole", "door") ||     said("place", "magnet", "hole", "in", "door") ||     said("place", "magnet", "in", "hole", "in", "door")))  {  [ if Jerrod has the magnet  if (has("Magnet"))    {    [ if magnet is tied to the string    if (isset(MagnetOnString))      {      [ if already put through hole in door      if (isset(MagnetInDoor))        {        print.at("Ya already put the magnet through the hole in the door!", 2, 5, 0);        }      else        {        [ if Jerrod is close enough to the door        if (posn(ego, 0, 110, 7, 123))          {          [ success!          print.at("Yer full of good ideas! Ya put the magnet, with string "                   "attached, through the hole in the door!", 2, 5, 0);          set(MagnetInDoor);          [ score two points          currentScore  += 2;          [ status of magnet is it's through the door, with          [ Jerrod holding string          vMagnetStatus = 2;          }        else          {          print.at("Ya can't do that from here.", 2, 5, 0);          }        }      }    else      {      [ without the string, the magnet falls through hole,      [ and is gone      print.at("Ya put the magnet through the hole in the door and it falls "               "into the dark depths beyond the door!", 2, 5, 0);      drop("Magnet");      }    }  else    {    print.at("Ya don't have a magnet.", 2, 5, 0);    }  }  [ lowerif (said("lower"))  {  print.at("Lower what?", 2, 15, 0);  }  [ lower magnetif ((said("lower", "magnet") ||     said("lower", "magnet", "hole") ||     said("lower", "magnet", "in", "hole")))  {  [ if Jerrod has the magnet  if (has("Magnet"))    {    [ if magnet is in the door on the string    if (isset(MagnetInDoor))      {      [ if Jerrod already has the key      if (has("Steel key"))        {        print.at("There's no reason fer doin' that anymore!", 2, 5, 0);        }      else        {        [ if close enough to the door        if (posn(ego, 0, 110, 7, 123))          {          [ lower the magnet slowly          print.at("Ever so slowly and carefully, ya lower the magnet down the "                   "far side of the door.", 2, 5, 0);          print.at("Time passes slowly. It seems like an eternity and then...", 2, 5, 0);          [ play sound of magnet catching the key          sound(s.Magnet, fSoundDone);          print.at("Ya hear the magnet pick up some metal object on the far "                   "side of the door.", 2, 5, 0);          [ score two points          currentScore  += 2;          [ magnet status is it's through the door, with key          [ attached          vMagnetStatus = 3;          }        else          {          print.at("Ya can't do that from here.", 2, 5, 0);          }        }      }    else      {      print.at("A great idea, but ya can't do it right now!", 2, 5, 0);      }    }  else    {    print.at("Ya don't have a magnet.", 2, 5, 0);    }  }[ raiseif (said("raise"))  {  print.at("Raise what?", 2, 15, 0);  }  [ raise magnet/pull stringif ((said("raise", "magnet") ||     said("pull", "magnet") ||     said("pull", "up", "magnet") ||     said("pull", "string") ||     said("pull", "in", "string")))  {  [ if Jerrod has the magnet  if (has("Magnet"))    {    [ if magnet has been lowered and caught the key    if (vMagnetStatus == 3)      {      [ if close enough to the door      if (posn(ego, 0, 110, 7, 123))        {        [ success        print.at("Even more carefully than ya lowered the magnet, ya raise it "                 "again.", 2, 5, 0);        print.at("Beads of sweat break out on yer forehead and the palms of yer "                 "hands are sweatin'!!", 2, 5, 0);        print.at("Ya hope not to lose whatever it is that's attached itself to "                 "the magnet!", 2, 5, 0);        [ play score sound        sound(m.FoundGold, f243);        print.at("Congratulations! Ya pull the magnet, along with a steel key, "                 "through the special hole in the door!", 2, 5, 0);        [ score two points        currentScore  += 2;        [ take the key        get("Steel key");        [ status is magnet is back out of the hole, Jerrod        [ has the steel key        vMagnetStatus = 4;        }      else        {        print.at("Ya can't do that from here.", 2, 5, 0);        }      }    else      {      [ if magnet is not ready to be pulled up, response       [ depends on what its status is            [ if already pulled up      if (vMagnetStatus == 4)        {        print.at("You already did that.", 2, 5, 0);        }      else        {        [ if not lowered yet        if (vMagnetStatus == 2)          {          [ pull it back out without catching key          reset(MagnetInDoor);          [ Jerrod can try again later          vMagnetStatus = 1;          print.at("Ya pull the string and magnet back through the hole in the "                   "door.", 2, 5, 0);          }        else          {          [ not even in hole yet          print.at("A great idea, but ya can't do it right now!", 2, 5, 0);          }        }      }    }  else    {    print.at("Ya don't have a magnet.", 2, 5, 0);    }  }  [ get magnetif (said("acquire", "magnet"))  {  [ if magnet is through the hole  if ((vMagnetStatus == 2 || vMagnetStatus == 3))    {    print.at("That's a great idea, but how?", 2, 5, 0);    }  else    {    if (has("Magnet"))      {      print.at("You already have the magnet.", 2, 5, 0);      }    else      {      print.at("Ya don't have a magnet.", 2, 5, 0);      }    }  }  [ look ladderif (said("examine", "ladder"))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    print.at("There's no ladder in sight.", 2, 5, 0);    }  else    {    print.at("It's too dern dark in here to see!", 2, 5, 0);    }  }  [ look keyif ((said("examine", "house key") ||     said("examine", "steel", "house key")))  {  if (has("Steel key"))    {    [ reset all darkness panels before showing the key    call(lgc.DarkenTunnel);    show.obj(vw.Inv.SteelKey);    }  else    {    print.at("Ya don't have a key.", 2, 5, 0);    }  }  [ look stringif (said("examine", "string"))  {  if (has("String"))    {    [ reset all darkness panels before showing the string    call(lgc.DarkenTunnel);    show.obj(vw.Inv.String);    }  else    {    print.at("Ya don't have any string.", 2, 5, 0);    }  }  [ look magnetif (said("examine", "magnet"))  {  if (has("Magnet"))    {    [ reset all darkness panels before showing the magnet    call(lgc.DarkenTunnel);    show.obj(vw.Inv.Magnet);    }  else    {    print.at("Ya don't have a magnet.", 2, 5, 0);    }  }    Done:[ call tunnel logic to run code common to all tunnelscall(lgc.Tunnels);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Ya scan the walls for gold."#message 13 "Ya can't do that while yer climbin'!"#message 14 "Yer close to a likely spot. Try that nearby."#message 15 "Ya don't have a pick."#message 16 "That's impossible right now!"#message 17 "It's too dern dark in here to see!"#message 20 "Nothin'!"#message 24 "This door locks by itself when it closes."#message 25 "This door has a double lock on it."#message 26 "You unlock both of these gargantuan locks with the steel key from the far side of the door!"#message 27 "Ya can't do that from here."#message 28 "Ya don't have a key that'll fit these locks."#message 29 "Ya don't have any string."#message 30 "Ya don't have a magnet."#message 31 "Ya need to be a little more specific!"#message 32 "Ya already tied the string to the magnet!"#message 33 "Yer genius is showin' again. Ya tie the string to the magnet!"#message 34 "Ya already put the magnet through the hole in the door!"#message 35 "Yer full of good ideas! Ya put the magnet, with string attached, through the hole in the door!"#message 36 "Ya put the magnet through the hole in the door and it falls into the dark depths beyond the door!"#message 37 "Ever so slowly and carefully, ya lower the magnet down the far side of the door."#message 38 "Time passes slowly. It seems like an eternity and then..."#message 39 "Ya hear the magnet pick up some metal object on the far side of the door."#message 40 "Even more carefully than ya lowered the magnet, ya raise it again."#message 41 "Beads of sweat break out on yer forehead and the palms of yer hands are sweatin'!!"#message 42 "Ya hope not to lose whatever it is that's attached itself to the magnet!"#message 43 "Congratulations! Ya pull the magnet, along with a steel key, through the special hole in the door!"#message 45 "There's no reason fer doin' that anymore!"#message 46 "Walkin' away with that magnet through the hole in the door broke yer string. The magnet is gone!"#message 47 "There's no GOLD in sight right here."#message 48 "You already did that."#message 49 "A great idea, but ya can't do it right now!"#message 50 "Ya don't have a key."#message 51 "Ouch!"#message 52 "There's a huge door in the mine wall."#message 53 "The ropes are attached to weights."#message 54 "If ya did that, the door wouldn't work."#message 55 "The door is so heavy that these weights are used to help open and close the door."#message 56 "The hole in the door resembles James' branding iron."#message 57 "This door has two keyholes."#message 58 "Ya see nothin' but darkness under the door."#message 59 "Ya see a small glimmer of somethin' metal. It's not gold, but metal."#message 60 "Ya already have the steel key."#message 61 "That's a great idea, but how?"#message 62 "Ya pull the string and magnet back through the hole in the door."#message 63 "You already have the magnet."#message 64 "Lower what?"#message 65 "Raise what?"#message 80 "There's no ladder in sight."