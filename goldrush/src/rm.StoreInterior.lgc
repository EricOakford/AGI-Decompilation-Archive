[***********************************************************[[ rm.StoreInterior[[ At the grocery store, Jerrod can shop for supplies; the[ only item that matters is the mosquito net; if Jerrod[ doesn't buy it, he won't survive the Panama route trip.[[ this room has A LOT of errors and bugs; not sure how this[ got past their QA...[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oClerk                       o1#define oNet                         o2#define oLantern                     o3#define oBucket                      o4#define vEgoStep                   v220#define vClerkStatus               v221#define vClerkDist                 v222#define vClerkX                    v223#define vClerkY                    v224#define vConvStatus                v225#define fClerkMoved                f220#define fLanternSold               f221#define fBucketSold                f222#define fSoundDone                 f223[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load picture for the room  load.pic(currentRoom);    [ load views needed in the room  load.view(vw.BigJerrodNY);  load.view(vw.BigHdwClerk);  load.view(vw.StoreItems);    [ load sounds used in the room  load.sound(s.AddToScore);  load.sound(s.UhOh);    [ draw the room picture  draw.pic(currentRoom);    [ add all the items that are for sale  add.to.pic(vw.StoreItems, 0, 0, 63, 73, 8, 8);  add.to.pic(vw.StoreItems, 0, 1, 27, 73, 9, 9);  add.to.pic(vw.StoreItems, 0, 2, 27, 120, 9, 9);  add.to.pic(vw.StoreItems, 0, 3, 51, 120, 11, 11);  add.to.pic(vw.StoreItems, 0, 4, 116, 120, 10, 10);  add.to.pic(vw.StoreItems, 1, 0, 140, 123, 10, 10);  add.to.pic(vw.StoreItems, 1, 1, 123, 84, 9, 9);  add.to.pic(vw.StoreItems, 1, 2, 109, 148, 14, 14);  add.to.pic(vw.StoreItems, 1, 3, 16, 148, 14, 14);  add.to.pic(vw.StoreItems, 1, 4, 45, 147, 14, 14);  add.to.pic(vw.StoreItems, 1, 7, 84, 121, 11, 11);    [ store clerk  animate.obj(oClerk);  set.view(oClerk, vw.BigHdwClerk);  [ he starts behind counter, middle  position(oClerk, 85, 84);  set.priority(oClerk, 7);  draw(oClerk);  [ initial status is in back room out of sight  vClerkStatus = 10;    [ add the few items that will disappear if Jerrod buys  [ them    [ lantern  animate.obj(oLantern);  set.view(oLantern, vw.StoreItems);  set.loop(oLantern, 0);  set.cel(oLantern, 5);  position(oLantern, 16, 102);  set.priority(oLantern, 9);  draw(oLantern);  stop.update(oLantern);  [ bucket  animate.obj(oBucket);  set.view(oBucket, vw.StoreItems);  set.loop(oBucket, 0);  set.cel(oBucket, 6);  position(oBucket, 130, 84);  set.priority(oBucket, 10);  draw(oBucket);  stop.update(oBucket);    [ mosquito net  animate.obj(oNet);  set.view(oNet, vw.StoreItems);  set.loop(oNet, 1);  [ if Jerrod already has the net  if (has("Mosquito net"))    {    [ show empty shelf    set.cel(oNet, 6);    }  else    {    [ show boxes of mosquito nets next to the display sample    set.cel(oNet, 5);    }  position(oNet, 34, 147);  set.priority(oNet, 14);  ignore.objs(oNet);  ignore.blocks(oNet);  draw(oNet);  stop.update(oNet);    [ Jerrod, with larger, indoor view  animate.obj(ego);  set.view(ego, vw.BigJerrodNY);  position(ego, 76, 133);  draw(ego);  [ indoors, Jerrod takes bigger steps  vEgoStep = 2;  step.size(ego, vEgoStep);    [show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if clerk is in the back roomif (vClerkStatus > 9)  {  [ random chance he comes out  random(20, 100, vClerkStatus);  [ one in 80 chance  if (vClerkStatus == 77)    {    [ move clerk to point 1    move.obj(oClerk, 101, 84, 2, fClerkMoved);    vClerkStatus = 1;    }  }  [ after clerk gets to point 1if (isset(fClerkMoved) && vClerkStatus == 1)  {  [ he moves to point 3  reset(fClerkMoved);  vClerkStatus = 3;  move.obj(oClerk, 101, 92, 2, fClerkMoved);  }  [ after clerk gets to point 3if (isset(fClerkMoved) &&     vClerkStatus == 3)  {  [ clerk moves to point 4, a random spot along the counter  reset(fClerkMoved);  set.priority(oClerk, 8);  [ pick random spot to move to  random(45, 86, vClerkX);  vClerkY = 92;  [ this is uneeded; status is set to four two lines later  vClerkStatus = 2;    [ move clerk to point 4  move.obj.v(oClerk, vClerkX, vClerkY, vClerkStatus, fClerkMoved);  vClerkStatus = 4;  }[ after clerk gets to point 4if (isset(fClerkMoved) && vClerkStatus == 4)  {  [ he moves to point 5  reset(fClerkMoved);  vClerkStatus = 5;  move.obj(oClerk, 101, 92, 2, fClerkMoved);  }  [ after clerk gets to point 5if (isset(fClerkMoved) && vClerkStatus == 5)  {  [ he moves to point 6, going to back room  reset(fClerkMoved);  vClerkStatus = 6;  set.priority(oClerk, 7);  move.obj(oClerk, 101, 84, 2, fClerkMoved);  }[ after clerk gets to point 6if (isset(fClerkMoved) && vClerkStatus == 6)  {  [ he moves left, out of sight in the back room  reset(fClerkMoved);  vClerkStatus = 7;  move.obj(oClerk, 85, 84, 2, fClerkMoved);  }  [ after clerk goes into back roomif (isset(fClerkMoved) && vClerkStatus == 7)  {  [ he's ready to come back out again  reset(fClerkMoved);  vClerkStatus = 10;  }  [ get distance from Jerrod to the clerkdistance(ego, oClerk, vClerkDist);[ if Jerrod is near the counter AND clerk is close and[ conversation not started yetif (posn(ego, 44, 97, 110, 97) &&     vClerkDist < 12 &&     vConvStatus == 0)  {  [ begin a conversation between Jerrod and clerk  vConvStatus = 1;  [ clerk faces the counter  set.loop(oClerk, 2);  force.update(oClerk);  [ clerk stops moving  stop.motion(oClerk);  [ and stops updating (which also stops motion, so the  [ preceding stop.motion command is unnecessary)  stop.update(oClerk);  print.at("\"Is there something I can do for you?\"", 2, 7, 26);  }  [ if Jerrod leaves counter area during conversationif (!posn(ego, 44, 97, 110, 97) && vConvStatus != 0)  {  [ cancel conversation  vConvStatus = 0;  [ clerk begins moving again, to point 4  start.motion(oClerk);  start.update(oClerk);  move.obj(oClerk, 101, 92, 2, fClerkMoved);  vClerkStatus = 4;  [ make sure no print window is open (since none of the   [ print commands use the leaveWindow flag, no message  [ windows will ever be open, so this command is   [ unnecessary)  close.window();  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod goes out front doorif (posn(ego, 73, 143, 80, 143))  {  [ go back into the street  new.room(rm.Stores); [ ##LE001##  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ the programmers use a very unusual if-then structure[ in this room; the first 'said' test is for trying to[ buy a calendar; if that is not what player said, [ an 'else' statement is then used; in almost every [ other room, separate if-then statements are used for[ parsing player input; it's not clear why they did it[ differently here[ buy calendarif ((said("acquire", "calendar") ||     said("buy", "calendar")))  {  print("The calendar is not for sale.");  }else  {    [ buy {anything}  if ((said("acquire", "anyword") ||       said("buy", "anyword")))    {    [ if not yet talking to the clerk    if (vConvStatus == 0)      {      [ tell player to move Jerrod near the clerk to start a      [ conversation      print("Tell the man if you see something you want to buy.");      [ if player typed an unknown word, clear it; it's not      [ important if player tried to buy something that the      [ game doesn't understand      unknownWordNum = 0;      }    else      {      [ reset match, so a test can be made for the specific      [ item      reset(haveMatch);      [ if Jerrod wants to buy something on list of items      [ that are in the store      if ((said("acquire", "pipe") ||           said("acquire", "nail") ||           said("acquire", "bull manure") ||           said("acquire", "beam") ||           said("acquire", "rope") ||           said("acquire", "bucket") ||           said("acquire", "chain") ||           said("acquire", "wheelbarrow") ||           said("acquire", "mosquito net") ||           said("acquire", "butter churn") ||           said("acquire", "barrel") ||           said("acquire", "lantern") ||           said("acquire", "lamp") ||           said("acquire", "shovel") ||           said("acquire", "pick") ||           said("buy", "pipe") ||           said("buy", "nail") ||           said("buy", "bull manure") ||           said("buy", "beam") ||           said("buy", "rope") ||           said("buy", "bucket") ||           said("buy", "chain") ||           said("buy", "wheelbarrow") ||           said("buy", "mosquito net") ||           said("buy", "butter churn") ||           said("buy", "barrel") ||           said("buy", "lantern") ||           said("buy", "lamp") ||           said("buy", "shovel") ||           said("buy", "pick")))        {        [ Jerrod is limited to three items purchased        if (StoreBuyCount < 3)          {          [ increment number of items bought (in the          [ individual if blocks, the purchase will be          [ cancelled if Jerrod already has the item          ++StoreBuyCount;                    [ reset 'haveMatch' flag so said command can be          [ checked one more time          reset(haveMatch);                    [ for each item that is in the store:          [  -- if the item was previously purchased, cancel          [     the sale;          [          [  -- if the item is not actually for sale (or in          [     wrong department), cancel the sale;          [          [  -- otherwise, buy the item and add it to          [     Jerrod's inventory                    [ pipe          if ((said("acquire", "pipe") ||               said("buy", "pipe")))            {            if (has("Pipe"))              {            [ cancel the sale if Jerrod already has this            [ item             --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Pipe");              }            }                      [ nails          if ((said("acquire", "nail") ||               said("buy", "nail")))            {            if (has("Nails"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Nails");              }            }                      [ manure          if ((said("acquire", "bull manure") ||               said("buy", "bull manure")))            {            if (has("Pure bull manure"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Pure bull manure");              }            }                      [ lumber          if ((said("acquire", "beam") ||               said("buy", "beam")))            {            if (has("Lumber"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Lumber");              }            }                      [ rope          if ((said("acquire", "rope") ||               said("buy", "rope")))            {            if (has("Rope"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Rope");              }            }                      [ bucket          if ((said("acquire", "bucket") ||               said("buy", "bucket")))            {            if (has("Bucket"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Bucket");              [ only one bucket in the store; erase it              erase(oBucket);              [ there is a bug here! fBucketSold never gets              [ set; it should be set here after Jerrod buys              [ the bucket              }            }                      [ chain          if ((said("acquire", "chain") || said("buy", "chain")))            {            if (has("Chain"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Chain");              }            }                      [ wheelbarrow          if ((said("acquire", "wheelbarrow") || said("buy", "wheelbarrow")))            {            [ cancel the sale; the wheelbarrow is not            [ available for purchase            --StoreBuyCount;            print.at("\"Sorry, that is the last wheelbarrow I have and it is "                     "sold!\"", 2, 7, 26);            }                      [ mosquito net          if ((said("acquire", "mosquito net") || said("buy", "mosquito net")))            {            if (has("Mosquito net"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Mosquito net");              [ if not scored yet and going to Panama              if (!isset(ScoreMosquitoNet) &&                   TicketChoice == TKT_PANAMA)                {                [ score 4 points                set(ScoreMosquitoNet);                currentScore  += 4;                [ play score sound                sound(s.AddToScore, fSoundDone);                [ the mosquito net object is not erased, but                [ the next time Jerrod enters the store it                [ won't be displayed                }              }            }                      [ butter churn          if ((said("acquire", "butter churn") ||               said("buy", "butter churn") ||               said("acquire", "barrel") ||               said("buy", "barrel")))            {            [ cancel the sale; the butter churn is not for            [ sale            --StoreBuyCount;            print.at("\"That butter churn was damaged during shipping. You "                     "don't really want it.\"", 2, 7, 26);            }                      [ lantern          if ((said("acquire", "lantern") ||               said("buy", "lantern") ||               said("acquire", "lamp") ||               said("buy", "lamp")))            {            if (has("Lantern"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Lantern");              [ only one in the store; erase it              erase(oLantern);              [ there is a bug here! fLanternSold never gets              [ set; it should be set here after Jerrod buys              [ the lantern              }            }                      [ shovel          if ((said("acquire", "shovel") ||               said("buy", "shovel")))            {            if (has("Shovel"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Shovel");              }            }                      [ pick          if ((said("acquire", "pick") ||               said("buy", "pick")))            {            if (has("Pick"))              {              [ cancel the sale if Jerrod already has this              [ item              --StoreBuyCount;              print.at("\"You already have that!\"", 2, 7, 26);              }            else              {              print.at("\"Your account balance is adequate. I'll charge your "                       "account.\"", 2, 2, 36);              get("Pick");              }            }          }        else          {          [ if three things already purchased, Jerrod can't          [ buy any more - set haveMatch (since said tests          [ get skipped)          set(haveMatch);          print.at("\"Sorry! Our accounts are even now!\"", 2, 7, 26);          }        }      else        {        [ if the item Jerrod asked to buy is not in the        [ store, tell Jerrod it's not available        print.at("We may be the best, but we don't have %w2!", 2, 7, 26);                [ reset input so no more said tests will respond        [ (this prevents generic response for un-processed        [ input)        reset(haveInput);                [ if the item being sought is not a known word,        [ clear the unknown word number; it's not important        [ what the word was        unknownWordNum = 0;        }      }    }      [ pay money/use money  if ((said("use", "bucks") ||       said("pay", "bucks") ||       said("pay", "boy") ||       said("pay")))    {    [ don't need to pay; Jerrod has an account here    print("You are about to lay down the cash when you change your mind and "          "decide to save it for a rainy day.");    }      [ look around/look  if ((said("examine", "around") ||       said("examine", "hardware") ||       said("examine", "shop") ||       said("examine", "hardware", "shop") ||       said("examine", "goods") ||       said("examine", "item") ||       said("examine") ||       said("examine", "shelf")))    {    [ answer depends on Jerrod's position    if ((posn(ego, 10, 98, 41, 124) ||         posn(ego, 42, 98, 75, 129) ||         posn(ego, 76, 98, 107, 129) ||         posn(ego, 108, 98, 159, 128) ||         posn(ego, 120, 129, 159, 140) ||         posn(ego, 123, 141, 159, 153) ||         posn(ego, 96, 141, 122, 153) ||         posn(ego, 27, 142, 58, 153) ||         posn(ego, 10, 142, 26, 153) ||         posn(ego, 10, 125, 36, 141) ||         posn(ego, 44, 97, 110, 97)))      {      [ provide different response for each location      if (posn(ego, 10, 98, 41, 124))        {        print("There is pipe against the wall and nails in the bin.");        }      if (posn(ego, 42, 98, 75, 129))        {        print("This bin is full of nails.");        }      if (posn(ego, 76, 98, 107, 129))        {        print("Without even looking, you detect a stack of fertilizer near by!");        }      if (posn(ego, 108, 98, 159, 128))        {        [ there is a bug; this flag is never set (it should        [ be set when Jerrod buys the bucket) so response         [ will always be the latter option        if (isset(fBucketSold))          {          print("The items close by are fertilizer, lumber, and rope.");          }        else          {          print("The items close by are fertilizer, lumber, rope and a bucket.");          }        }      if (posn(ego, 120, 129, 159, 140))        {        print("Hanging on the wall is some chain.");        }      if (posn(ego, 123, 141, 159, 153))        {        print("In the window is a wheelbarrow and hanging on the wall is some "              "chain.");        }      if (posn(ego, 96, 141, 122, 153))        {        print("By the window is a wheelbarrow.");        }      if (posn(ego, 27, 142, 58, 153))        {        print("You're not sure why, but you see some mosquito net on display. "              "Mosquitos aren't a problem in Brooklyn!");        }      if (posn(ego, 10, 142, 26, 153))        {        print("This is a butter churn.");        }      if (posn(ego, 10, 125, 36, 141))        {        [ there is a bug; this flag is never set (it should        [ be set when Jerrod buys the lantern) so response        [ will always be the latter option        if (isset(fLanternSold))          {          print("This is the best hardware store in town. Walk around and look!");          }        else          {          print("There is a lantern on the wall.");          }        }      if (posn(ego, 44, 97, 110, 97))        {        print("There are picks and shovels on the back wall.");        }      }    else      {      print("This is the best hardware store in town. Walk around and look!");      }    }      [ look pipe  if (said("examine", "pipe"))    {    if (posn(ego, 10, 98, 41, 124))      {      print("There is pipe of every diameter, thickness, and length!");      }    else      {      print("You need to get closer!");      }    }      [ look nails  if ((said("examine", "nail") ||       said("examine", "bin") ||       said("examine", "nail", "bin") ||       said("examine", "bin", "nail")))    {    if ((posn(ego, 10, 98, 41, 124) ||         posn(ego, 42, 98, 75, 129)))      {      print("What a selection of nails. This is hammer's heaven!");      }    else      {      print("You need to get closer!");      }    }      [ look manure  if (said("examine", "bull manure"))    {    if ((posn(ego, 76, 98, 107, 129) ||         posn(ego, 108, 98, 159, 128)))      {      print("You are looking at a stack of 100 \\% pure, top-grade bull manure.");      }    else      {      print("You need to get closer!");      }    }      [ look lumber  if (said("examine", "beam"))    {    if (posn(ego, 108, 98, 159, 128))      {      print("There is small stack of top quality lumber.");      }    else      {      print("You need to get closer!");      }    }      [ look rope  if (said("examine", "rope"))    {    if (posn(ego, 108, 98, 159, 128))      {      print("There's some rough and ready rope hanging on the wall.");      }    else      {      print("You need to get closer!");      }    }      [ look bucket  if (said("examine", "bucket"))    {    [ there is a bug; this flag is never set (it should    [ be set when Jerrod buys the bucket) so response is    [ always the latter    if (isset(fBucketSold))      {      print("The %w2 is gone.");      }    else      {      if (posn(ego, 108, 98, 159, 128))        {        print("This is a nicely painted bucket. It's rust proof!");        }      else        {        print("You need to get closer!");        }      }    }      [ look chain  if (said("examine", "chain"))    {    if ((posn(ego, 120, 129, 159, 140) ||         posn(ego, 123, 141, 159, 153)))      {      print("This is very heavy-duty chain.");      }    else      {      print("You need to get closer!");      }    }      [ look wheelbarrow  if (said("examine", "wheelbarrow"))    {    if ((posn(ego, 123, 141, 159, 153) ||         posn(ego, 96, 141, 122, 153)))      {      print("This is a beauty of a wheelbarrow, but it is already sold.");      }    else      {      print("You need to get closer!");      }    }      [ look mosquito net  if ((said("examine", "mosquito net") ||       said("examine", "box", "mosquito net") ||       said("examine", "box")))    {    if (posn(ego, 27, 142, 58, 153))      {      print("For use in tropical climates, the net is worn over the head to "            "prevent mosquito bites.");      }    else      {      print("You need to get closer!");      }    }      [ look churn/look barrel  if ((said("examine", "butter churn") ||       said("examine", "barrel")))    {    if (posn(ego, 10, 142, 26, 153))      {      print("This is a mighty fine butter churn.");      }    else      {      print("You need to get closer!");      }    }      [ look lantern  if ((said("examine", "lantern") ||       said("examine", "lamp")))    {    [ there is a bug; this flag is never set (it should    [ be set when Jerrod buys the lantern) so response is    [ always the latter    if (isset(fLanternSold))      {      print("The lantern is gone.");      }    else      {      if (posn(ego, 10, 123, 36, 141))        {        print("This is the most modern, and highest-quality lantern available "              "anywhere.");        }      else        {        print("You need to get closer!");        }      }    }      [ look pick/look shovel  if ((said("examine", "pick") ||       said("examine", "shovel")))    {    if (posn(ego, 44, 97, 110, 97))      {      print("You see high quality picks and shovels hanging on the wall behind "            "the counter.");      }    else      {      print("You need to get closer!");      }    }      [ look man/look Rand  if ((said("examine", "boy") ||       said("examine", "rand") ||       said("examine", "hardware", "boy")))    {    [ if clerk is on his way from the back room to point one    if (vClerkStatus == 1)      {      print("If you don't see the man now, you will shortly!");      [ skip to end       [ NOTE: using the goto(Done) command after a said test      [ isn't a bad idea, but it's rarely used; in this      [ logic, it's used often in the code that deal with      [ 'look man' and 'talk man' but not anywhere else;      [ it's not clear why there is such inconsistent use of      [ this technique, limited to this logic only      goto(Done);      }    [ if clerk is going through his cycle at the counter    if (vClerkStatus > 1 && vClerkStatus < 7)      {      print("This man has been working behind that counter since before you "            "were born.");      [ skip to end      goto(Done);      }    [ if clerk has just went in back room    if (vClerkStatus == 7)      {      print("The man just walked into the back room.");      [ skip to end      goto(Done);      }    [ otherwise, clerk is not here    print("The man will be out soon!");    }      [ talk man/talk/talk Rand  if ((said("speak", "boy") ||       said("speak") ||       said("speak", "rand") ||       said("speak", "hardware", "boy")))    {    [ if not already conversing with the clerk    if (vConvStatus == 0)      {      [ if clerk is on his way      if (vClerkStatus == 1)        {        print("Wait just a few seconds and he will be closer!");        [ skip to end        goto(Done);        }      [ if clerk is going through cycle at counter      if (vClerkStatus > 1 && vClerkStatus < 7)        {        print("Just get close enough and he'll talk to you!");        [ skip to end        goto(Done);        }      [ if clerk went back into the back room      if (vClerkStatus == 7)        {        print("Too late! He just walked into the back room!");        [ skip to end        goto(Done);        }      [ he's not here now, but will come out soon      print("The man will be out soon!");      }    else      {      [ if already conversing, clerk asks again      print.at("\"Is there something I can do for you?\"", 2, 7, 26);      }    }      [ get {stuff}/buy {stuff}  if ((said("acquire", "goods") ||       said("acquire", "articles") ||       said("acquire", "thing") ||       said("acquire", "stuff") ||       said("buy", "goods") ||       said("buy", "articles") ||       said("buy", "thing") ||       said("buy", "stuff")))    {    [ too generic    print("You need to be more specific!");    }      [ ring bell  if (said("ring", "bell"))    {    print("There is no bell here!");    }      [ yes  if (said("y"))    {    print("Great!");    }      [ ask help  if (said("ask", "help"))    {    print("Just walk up to the counter. When the man shows up, he will help "          "you.");    }      [ look account/check account  if ((said("examine", "account") ||       said("read", "account") ||       said("account") ||       said("check", "account")))    {    print("The man will tell you when your account is even.");    }      [ look wall  if ((said("examine", "wall") ||       said("examine", "back", "wall") ||       said("examine", "shop", "wall")))    {    print("As you look at the walls you see a calendar, pipe, lumber, rope, "          "chain, picks, shovels and other items.");    }      [ look calendar  if (said("examine", "calendar"))    {    print("The picture on the calendar is of a majestic rock formation in a "          "beautiful California valley called Yosemite.");    }      [ look counter  if (said("examine", "counter"))    {    print("The hardware man works behind this counter.");    }      [ be polite  if ((said("thank", "you") ||       said("thank") ||       said("thank", "boy")))    {    print("\"You're welcome!\"");    }          [ look floor/look down  if ((said("examine", "deck") ||       said("examine", "down")))    {    print("Nothing interesting down here!");    }      [ smell manure  if ((said("smell") ||       said("smell", "bull manure")))    {    [ another bug! smell the churn?    print("This is a mighty fine butter churn.");    }  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "\"Is there something I can do for you?\""#message 4 "Tell the man if you see something you want to buy."#message 5 "This is the best hardware store in town. Walk around and look!"#message 6 "There is pipe against the wall and nails in the bin."#message 7 "This bin is full of nails."#message 8 "Without even looking, you detect a stack of fertilizer near by!"#message 9 "The items close by are fertilizer, lumber, and rope."#message 10 "The items close by are fertilizer, lumber, rope and a bucket."#message 11 "Hanging on the wall is some chain."#message 12 "In the window is a wheelbarrow and hanging on the wall is some chain."#message 13 "By the window is a wheelbarrow."#message 14 "You're not sure why, but you see some mosquito net on display. Mosquitos aren't a problem in Brooklyn!"#message 15 "This is a butter churn."#message 16 "There is a lantern on the wall."#message 17 "There is pipe of every diameter, thickness, and length!"#message 18 "You need to get closer!"#message 19 "What a selection of nails. This is hammer's heaven!"#message 20 "You are looking at a stack of 100 \\% pure, top-grade bull manure."#message 21 "There is small stack of top quality lumber."#message 22 "There's some rough and ready rope hanging on the wall."#message 23 "The %w2 is gone."#message 24 "This is a nicely painted bucket. It's rust proof!"#message 25 "This is very heavy-duty chain."#message 26 "This is a beauty of a wheelbarrow, but it is already sold."#message 27 "For use in tropical climates, the net is worn over the head to prevent mosquito bites."#message 28 "This is a mighty fine butter churn."#message 29 "The lantern is gone."#message 30 "This is the most modern, and highest-quality lantern available anywhere."#message 31 "We may be the best, but we don't have %w2!"#message 32 "\"You already have that!\""#message 33 "\"Your account balance is adequate. I'll charge your account.\""#message 34 "\"Sorry! Our accounts are even now!\""#message 35 "\"Sorry, that is the last wheelbarrow I have and it is sold!\""#message 36 "\"That butter churn was damaged during shipping. You don't really want it.\""#message 37 "You are about to lay down the cash when you change your mind and decide to save it for a rainy day."#message 41 "If you don't see the man now, you will shortly!"#message 42 "This man has been working behind that counter since before you were born."#message 43 "The man just walked into the back room."#message 44 "The man will be out soon!"#message 45 "Wait just a few seconds and he will be closer!"#message 46 "Just get close enough and he'll talk to you!"#message 47 "Too late! He just walked into the back room!"#message 48 "You need to be more specific!"#message 49 "There is no bell here!"#message 50 "Great!"#message 51 "Just walk up to the counter. When the man shows up, he will help you."#message 52 "The man will tell you when your account is even."#message 53 "As you look at the walls you see a calendar, pipe, lumber, rope, chain, picks, shovels and other items."#message 54 "The picture on the calendar is of a majestic rock formation in a beautiful California valley called Yosemite."#message 55 "The hardware man works behind this counter."#message 56 "\"You're welcome!\""#message 57 "Nothing interesting down here!"#message 58 "It smells of fertilizer in here!"#message 59 "There are picks and shovels on the back wall."#message 60 "You see high quality picks and shovels hanging on the wall behind the counter."#message 61 "The calendar is not for sale."