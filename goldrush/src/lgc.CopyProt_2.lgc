[***********************************************************[[ lgc.CopyProt_2[[ second of three rooms that displays the cowboy and asks a[ trivia question to confirm ownership[[ if the player answers correctly, the game continues[ loading; if incorrect, then the gallows scene is shown and[ the game ends[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oCowboyMouth                 o1#define oCowboyEyes                  o2#define oCowboyHand                  o3#define vCharPos                   v220[ v221-v236 contain player entered input#define vDispChar                  v237#define vCheckSum                  v238#define vTmpPic                    v239#define vSpaceChar                 v240#define vTmpVal                    v241#define vMouthState                v242#define vMouthCounter              v243#define vBlinkCounter              v244#define vEyeState                  v245#define vMouthState2               v246[ v247 is not used#define vMouthCycle                v248#define vEyesCycle                 v249#define vHandCycle                 v250[ f220 is not used#define fAnswered                  f221#define fValidate                  f222#define fWrongAnswer               f223#define fAnswering                 f224#define fSkipCheck                 f225#define fDebugQuit                 f226#define fRightAnswer               f227#define fContinue                  f228[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [cycle times for cowboy animations  vMouthCycle = 10;  vEyesCycle = 8;  vHandCycle = 5;    [ for the security check, normal input is not used  reset(enableMenu);  prevent.input();  program.control();  status.line.off();    [ QuickStart is another debug flag; if it were set, the  [ game wouldn't even ask for copy protection check; it's   [ reset here, but it doesn't need to since at the start,  [ all flags are false by default  reset(QuickStart);    [ use pic.Start to show the 'Questioning Cowboy'  vTmpPic = pic.Start;  load.pic(vTmpPic);  draw.pic(vTmpPic);  discard.pic(vTmpPic);    [ this view has the animations used by the Questioning  [ Cowboy  load.view(vw.Startup);  [ add cowboy to the background image  add.to.pic(vw.Startup, 0, 0, 3, 167, 7, 7);    [ initialize the variables used to manage the  [ question/answer  vCharPos = 221;  lastChar = 0;  vCheckSum = 0;  CheckCol = 20;  CheckRow = 20;  vSpaceChar = 123;    [ add title to the background image  add.to.pic(vw.Startup, 0, 1, 0, 72, 7, 7);    [ Cowboy's mouth  animate.obj(oCowboyMouth);  set.view(oCowboyMouth, vw.Startup);  set.loop(oCowboyMouth, 3);  set.cel(oCowboyMouth, 0);  position(oCowboyMouth, 25, 141);  draw(oCowboyMouth);  stop.cycling(oCowboyMouth);  cycle.time(oCowboyMouth, v248);    [ Cowboy's eyes  animate.obj(oCowboyEyes);  set.view(oCowboyEyes, vw.Startup);  set.loop(oCowboyEyes, 2);  set.cel(oCowboyEyes, 0);  position(oCowboyEyes, 24, 111);  set.priority(oCowboyEyes, 15);  draw(oCowboyEyes);  stop.cycling(oCowboyEyes);  cycle.time(oCowboyEyes, v249);    [ Cowboy's hand (but don't show it yet)  animate.obj(oCowboyHand);  set.view(oCowboyHand, vw.Startup);  set.loop(oCowboyHand, 1);  set.cel(oCowboyHand, 0);  position(oCowboyHand, 58, 167);  cycle.time(oCowboyHand, vHandCycle);    [ now show the picture  show.pic();  }[ **************************************[ EVERY CYCLE:[ **************************************[ check for debug modeif (isset(DebugMode))  {  [ let user enter 'go' to start or enter 'bandit' for 50/50  [ chance of quitting  reset(haveMatch);  set(fSkipCheck);  }else  {  [ setting haveMatch to 'true' prevents said commands from  [ doing anything; there are none here, but there are some  [ in the Main Logic that could interfere with the  [ processing of the question/answer for copy check  set(haveMatch);  }[ use a phase marker, and counter to manage the animation of[ the cowboy's mouth to roughly match the displayed text[ if 'speaking'if (vMouthCounter > 0)  {  [ increment counter    ++vMouthCounter;  }[ first speaking part is the introductionif (vMouthState == 1)  {  [ start 'speaking' intro  vMouthState = 2;  start.cycling(oCowboyMouth);  vMouthCounter = 1;  }  [ after enough time 'speaking' the intro, stopif (vMouthCounter == 250 && vMouthState == 2)  {  [ stop 'speaking' intro  vMouthCounter = 0;  vMouthState = 3;  set.cel(oCowboyMouth, 0);  stop.cycling(oCowboyMouth);  }  [ after enough time 'speaking' the question, stopif (vMouthCounter == 200 && vMouthState == 5)  {  [ stop 'speaking' question  vMouthCounter = 0;  vMouthState = 6;  set.cel(oCowboyMouth, 0);  stop.cycling(oCowboyMouth);  }  [ if eye-blink state is at beginningif (vEyeState == 0)  {  [ choose a random interval  random(70, 120, vBlinkCounter);  [ I found in dosbox that the eyes blink too rapidly with  [ this range of interval; changing to this range seems to  [ help[  random(140, 240, vBlinkCounter);  [ advance to next stage  vEyeState = 1;  }  [ if eyes are in pause period between blinksif (vEyeState == 1)  {  [ decrement blink count  --vBlinkCounter;  }  [ when count reaches zeroif (vBlinkCounter == 0 && vEyeState == 1)  {  [ advance to next stage (blinking)  vEyeState = 2;  start.cycling(oCowboyEyes);  [ blink for 15 cycles  vBlinkCounter = 15;   }  [ while eyes are blinkingif (vEyeState == 2)  {  [ decrement counter  --vBlinkCounter;  }  [ when eyes are done blinkingif (vEyeState == 2 && vBlinkCounter == 0)  {  [ start another cycle  vEyeState = 0;  stop.cycling(oCowboyEyes);  [ make sure eyes are open  set.cel(oCowboyEyes, 0);  }  [ first thing at the start, show the Cowboy's introduction[ and explanation for the quizif (isset(StartQuiz))  {  reset(StartQuiz);  set(leaveWindow);  print.at("\"Hey city slicker! Any varmit that tries to cross my claim better "           "be ready to pay the consequences! But I reckon I can let ya pass on "           "by if ya can answer a simple question from yer miner's manual, "           "\"California Gold\". Otherwise, I'll string ya up quicker than you "           "can say Winnemucca, Nevada!\"", 2, 17, 22);  [ mouth starts closed  vMouthState = 1;  lastChar = 0;  display(23, 0, "      Press return to continue!");  }  [ if during or after 'speaking' the intro (states 2 or 3),[ wait for any key to continue to next phaseif ((vMouthState == 2 || vMouthState == 3))  {  if (have.key())    {    [ move on to start speaking question    vMouthState = 5;    vMouthCounter = 1;    start.cycling(oCowboyMouth);    clear.lines(23, 23, BLACK);    set(fAnswering);    [ to allow input while the question is showing, set the    [ leaveWindow flag    set(leaveWindow);    [ now print the question that was selected in    [ lgc.InitQuiz    print.at.v(TestQuestion, 3, 17, 22);    lastChar = 0;    }  }[ if a key was pressed, and getting answer, and not in debug[ mode, and not at the end of the input line, and not[ already answeredif ((lastChar != 0) &&     (!isset(DebugMode)) &&     (isset(fAnswering)) &&     (vCharPos < 236) &&     (!isset(fAnswered)))  {  [process the keypress    [ 8 = 'backspace' key; ignore if at beginning of line  if ((lastChar == 8) && (vCharPos > 221))    {    [ clear the character    lastChar = 0;    [decrement the input pointer and display column    --vCharPos;    --CheckCol;    [ draw a blank space to cover up the character    display.v(CheckRow, CheckCol, vSpaceChar);    }  else    {    [ 13 = 'enter' key    if (lastChar == 13)      {      [ back up one space (we don't need the trailing      [ carriage return)      --vCharPos;      [ answer has been entered      set(fAnswered);      [ no longer accepting input for the answer      reset(fAnswering);      }    else      {      [ for any other characters, only upper or lower case      [ alphabet characters are accepted            [ check lower case first      if ((lastChar > 96) && (lastChar < 123))        {        [ save the value as a pointer to the message with        [ the matching letter        vDispChar = lastChar;                [ clear the input        lastChar = 0;                [ display the charater on input line        display.v(CheckRow, CheckCol, vDispChar);        [ increment column position        ++CheckCol;                [ convert to upper case (all letters saved in the        [ input array are upper case to make the checksum        [ test easier)        vDispChar -= 32;        [ save it to the input array        *vCharPos = vDispChar;        ++vCharPos;        }      else        {        if ((lastChar > 64) && (lastChar < 91))          {          [ save the value as a pointer          vDispChar = lastChar;          [ but also add offset so it points to the correct          [ letter          vDispChar  += 32;                    [display the character          display.v(CheckRow, CheckCol, vDispChar);          ++CheckCol;                    [ save it to the input array (it's already upper          [ case)          *vCharPos = lastChar;          lastChar = 0;          ++vCharPos;          }        }      }    }  }else  {  [ if nothing is input, check to see if the text already  [ added is too long  if ((vCharPos > 234) &&       (!isset(DebugMode)) &&       (isset(fAnswering)) &&       (!isset(fAnswered)))    {    [ we know if answer is too long that it's just wrong    set(fWrongAnswer);    }  }  [ if an answer was entered and it's at least one char long[ calculate a checksum to determine if it's right or wrongif ((isset(fAnswered)) && (vCharPos > 220))  {  [ this is a bit of an odd way to handle the checksum  [ calculation; normally this would be in a loop; but in  [ this case, the programmers just let the regular  [ logic cycle handle the calculation; in each cycle of the  [ interpreter, another character gets added, until  [ eventually the character position pointer gets back  [ to the beginning  vDispChar = *vCharPos;  vCheckSum  += vDispChar;  --vCharPos;  }else  {  [ eventually, the pointer gets back to zero;  if ((isset(fAnswered)) && (vCharPos < 221))    {    [ stop adding to the checksum and move on to validation    [ step     reset(fAnswering);    reset(fAnswered);    set(fValidate);    }  }  [ once check sump is done (assuming not in debug mode)if ((isset(fValidate)) && (!isset(DebugMode)))  {  [ validation only checked once  reset(fValidate);    [ compare the checksum to the correct value based on which  [ question was asked  if (TestQuestion == 30)    {    if (vCheckSum == 216)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 31)    {    if (vCheckSum == 253)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 32)    {    if (vCheckSum == 231)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 33)    {    if (vCheckSum == 25)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 34)    {    if ((vCheckSum == 94 || vCheckSum == 107))      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 35)    {    if (vCheckSum == 208)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 36)    {    if (vCheckSum == 213)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 37)    {    if (vCheckSum == 51)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 38)    {    if (vCheckSum == 174)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 39)    {    if (vCheckSum == 47)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 40)    {    if (vCheckSum == 18)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 41)    {    if (vCheckSum == 70)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 42)    {    if (vCheckSum == 212)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 43)    {    if (vCheckSum == 199)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 44)    {    if (vCheckSum == 208)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 45)    {    if (vCheckSum == 124)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 46)    {    if (vCheckSum == 231)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 47)    {    if (vCheckSum == 18)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 48)    {    if (vCheckSum == 9)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 49)    {    if (vCheckSum == 206)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 50)    {    if (vCheckSum == 38)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 51)    {    if (vCheckSum == 214)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 52)    {    if (vCheckSum == 64)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 53)    {    if (vCheckSum == 0)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 54)    {    if (vCheckSum == 6)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 55)    {    if (vCheckSum == 114)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  if (TestQuestion == 56)    {    if (vCheckSum == 54)      {      set(fRightAnswer);      }    else      {      set(fWrongAnswer);      }    }  }  [ fSkipCheck is never set; this appears to be debug code;[ the fSkipCheck flag was probably set to true during[ testing to allow the programmers to not bother with[ entering the answers to the questions; the line of code[ setting fSkipCheck was probably commented out for the[ game's releaseif (isset(fSkipCheck))  {  if (said("go"))    {    lastChar = 0;    new.room(rm.Title); [ ##LE001##    }  if (said("bandit"))    {    [ old debug code that doesn't do anything now    random(0, 1, vTmpVal);    if (vTmpVal > 0)      {      goto(Continue);      }    }  }  [ fDebugQuit flag is never set; this is presumably left over[ debug codeContinue:if (isset(fDebugQuit))  {  [ quit without warning  quit(1);  }  [ if a correct answer was entered if (isset(fRightAnswer))  {  [ reset the flag; only check once for right answer  reset(fRightAnswer);  lastChar = 0;    [ set mouth state so cowboy can 'congrats'  vMouthState2 = 1;    [ erase the entered text  clear.text.rect(20, 20, 20, 38, BLACK);    [ display congratulatory text, and have cowboy's hand move  [ to 'wave/point'  set(leaveWindow);  print.at("Congrats partner!\n\nHave fun now!  I hope ya strike it rich!", 10, 17, 22);  draw(oCowboyHand);  end.of.loop(oCowboyHand, fContinue);  start.cycling(oCowboyMouth);  }  [ after hand animation is done, if (isset(fContinue) && vMouthState2 == 1)  {  [ move to next phase, which is having the cowboy 'speak'  [ the last message  reset(fContinue);  vMouthState2 = 2;  vMouthCounter = 0;  }  [ if cowboy is speaking last messageif (vMouthState2 == 2)  {  [ incrment counter  ++vMouthCounter;  }  [ after 70 cyclesif (vMouthState2 == 2 && vMouthCounter > 70)  {  [ done speaking- continue the game  vMouthCounter = 0;  vMouthState2 = 0;  close.window();  set.cel(oCowboyEyes, 0);  set.cel(oCowboyMouth, 0);  force.update(oCowboyEyes);    [ go to the opening Title screen  new.room(rm.Title); [ ##LE002##  }  [ if a WRONG answer was enteredif (isset(fWrongAnswer))  {  [ don't really need to reset this flag, but they did  [ anyway  reset(fWrongAnswer);  lastChar = 0;  [ have cowboy open his mouth  set.cel(oCowboyMouth, 1);  force.update(oCowboyMouth);  [ to say 'gotcha!!  print.at("Gotcha!!", 12, 23, 0);    [ send the cheatin' player to the gallows  new.room(rm.Gallows); [ ##LE003##  }  return();[ **************************************[ MESSAGES[ **************************************#message 30 "Many miners rushed for gold in 1848.  Almost all of these miners came from where?\n\n\n\n%m173 2, %m174 sixth paragraph."#message 31 "Travelers taking the route across the Isthmus of Panama disembarked at the mouth of this river.\n\n\n\n%m173 13, %m174 second paragraph."#message 32 "State the last name of the man who received a land grant from the Mexican government.\n\n\n\n%m173 15, %m174 fifth paragraph."#message 33 "John Sutter contracted James Wilson Marshall to build him one of these.\n\n\n\n\n%m173 16, %m174 second paragraph."#message 34 "What was the most prominent theater in Sacramento?\n\n\n\n\n%m173 20, %m174 fourth paragraph."#message 35 "The statue of James Wilson Marshall which now stands in Coloma is made of what kind of metal?\n\n\n%m173 24, %m174 first paragraph."#message 36 "Placerville boomed first as a result of the discovery of gold, and secondly after the discovery of this precious metal.\n\n\n%m173 28, %m174 first paragraph."#message 37 "The \"Gold Bug Mine\" is located in this mining community.\n\n\n\n\n%m173 28, %m174 last paragraph."#message 38 "State the first name of the founder of the mining camp which would eventually become the city of Auburn.\n\n\n%m173 29, %m174 fourth paragraph."#message 39 "Auburn, California was named by miners from a city also named Auburn in a different state.  What state were they from?\n\n\n%m173 29, %m174 sixth paragraph."#message 40 "State the last name of the miner who extracted $40,000 out of a gopher hole.\n\n\n\n%m173 30, %m174 first paragraph."#message 41 "A typical miner just might bake some of these for breakfast.\n\n\n\n\n%m173 30, %m174 last paragraph."#message 42 "Of course Georgetown was named after George, but what was George's last name?\n\n\n\n%m173 33, %m174 fifth paragraph."#message 43 "The \"Shannon Knox House\" is the oldest building in Georgetown.  It was built from materials transported around Cape Horn.  What kind of material was it?\n\n%m173 33, %m174 last paragraph."#message 44 "Granite City later came to be known as this city.\n\n\n\n\n%m173 34, %m174 third paragraph."#message 45 "In the town of \"Pilot Hill\", Alonzo Bayley heard the railroad was coming through so he built one of these.\n\n\n%m173 34, %m174 fifth paragraph."#message 46 "The first wave of argonauts didn't start digging in Coloma until what month of 1848.\n\n\n%m173 34, %m174 sixth paragraph."#message 47 "California's first public library was established in this town.\n\n\n\n\n%m173 36, %m174 fourth paragraph."#message 48 "The County Jail in this town was made of logs so small that a man could cut his way out in an hour or two using only his jack knife.\n\n\n%m173 36, %m174 last paragraph."#message 49 "What was the real last name of the man who hid behind the guise of \"Black Bart\".\n\n\n%m173 38, %m174 seventh paragraph."#message 50 "Placerville, and many other towns, were destroyed by this.\n\n\n\n\n%m173 28, %m174 fourth paragraph."#message 51 "Phillip walked to California from New York and sold meat to the miners.  What was his last name?\n\n\n\n%m173 27, %m174 fifth paragraph."#message 52 "Coloma is next to this river.\n\n\n\n\n\n%m173 24, %m174 last paragraph."#message 53 "State the last name of the man that gave Sacramento its name.\n\n\n\n\n%m173 17, %m174 eighth paragraph."#message 54 "Who helped Sutter build his fort.\n\n\n\n\n%m173 15, %m174 last paragraph."#message 55 "This mine, located in Amador City, was one of the richest in California.\n\n\n%m173 60, %m174 fourth paragraph."#message 56 "State the last name of the president in office at the time of the gold rush.\n\n\n%m173 2, %m174 last paragraph."#message 96 "\"Hey city slicker! Any varmit that tries to cross my claim better be ready to pay the consequences! But I reckon I can let ya pass on by if ya can answer a simple question from yer miner's manual, \"California Gold\". Otherwise, I'll string ya up quicker than you can say Winnemucca, Nevada!\""#message 97 "A"#message 98 "B"#message 99 "C"#message 100 "D"#message 101 "E"#message 102 "F"#message 103 "G"#message 104 "H"#message 105 "I"#message 106 "J"#message 107 "K"#message 108 "L"#message 109 "M"#message 110 "N"#message 111 "O"#message 112 "P"#message 113 "Q"#message 114 "R"#message 115 "S"#message 116 "T"#message 117 "U"#message 118 "V"#message 119 "W"#message 120 "X"#message 121 "Y"#message 122 "Z"#message 123 " "#message 172 "Gotcha!!"#message 173 "Here's a hint for ya!\n\nOn page"#message 174 "try readin' the"#message 176 "ascii value: %v238"#message 177 "Congrats partner!\n\nHave fun now!  I hope ya strike it rich!"#message 179 "      Press return to continue!"