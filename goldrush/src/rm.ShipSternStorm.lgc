[***********************************************************[[ rm.ShipSternStorm[[ This room is basically the same as rm.ShipSternInterior, [ except that it shows the stern interior spaces during the[ storm[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWake1                       o1#define oWake2                       o2#define oAftDoor                     o4#define oForeDoor                    o5#define oCabinDoor                   o6#define oLand                        o7#define oRock                        o8#define oIceberg                     o9[ o10-o12 are not used#define oHelmsman                   o13#define vIcebergTime          v81  [ override TripPoint_20#define vRockTime             v82  [ override TripPoint_21#define vOvlNum                    v220#define vTmpStep                   v221#define vEgoStep                   v222#define vLandStatus                v223#define vLandStep                  v224#define vFallStatus                v225[ v226-v228 are not used#define vRockStatus                v229#define vRockSize                  v230#define vRockStep                  v231#define vIcebergStatus             v232#define fOnLadder                  f220#define fOnStairs                  f221#define fDoorClosed                f222#define fAftDoorOpen               f223#define fForeDoorOpen              f224#define fCabinDoorOpen             f225[ f226 is not used#define fLandMoved                 f227#define fSoundDone                 f228#define fDoneDying                 f229#define fRockMoved                 f230#define fIcebergMoved              f231#define fBeginSinking              f232[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ early in trip (after leaving New York or Rio de Janeiro)  if ((CurrentTripTime == 2 || CurrentTripTime == 9))    {    [ coal hold is mostly full    vOvlNum = ovl.CoalHold1;    }  [ in middle part of trip from New York or Rio de Janeiro  if ((CurrentTripTime == 4 || CurrentTripTime == 11))    {    [ coal hold is half empty    vOvlNum = ovl.CoalHold2;    }  [ if on last leg of journey, headed into California  if (CurrentTripTime == 15)    {    [ coal hold is mostly empty    vOvlNum = ovl.CoalHold3;    }    [ load picture for current room  load.pic(currentRoom);  [ load overlay for coal hold  load.pic(vOvlNum);  [ draw the room and the coal hold overlay  draw.pic(currentRoom);  overlay.pic(vOvlNum);  [ room picture not needed anymore  discard.pic(currentRoom);    [ Jerrod's friend, Eric, is sitting on stairs instead of  [ being outside  load.view(vw.ShipSternArt);  add.to.pic(vw.ShipSternArt, 0, 1, 128, 99, 7, 7);  discard.view(vw.ShipSternArt);    [ load the main timing logic  load.logics(lgc.CapeTripTiming);    [ load all the other views needed in this room  load.view(vw.JerrodNY);  load.view(vw.WindyJerrod);  load.view(vw.ClimbingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.ShipSternArt2);  load.view(vw.OceanItems);  load.view(vw.MidShipArt2);  load.view(vw.StormWaves);    [ load the sounds used in this room  load.sound(s.AddToScore);  load.sound(m.Death2);  load.sound(s.RockCrash);    [ add captain's desk   add.to.pic(vw.ShipSternArt2, 2, 0, 82, 94, 8, 8);  [ add lamps (lit)  add.to.pic(vw.MidShipArt2, 2, 1, 136, 82, 7, 7);  add.to.pic(vw.MidShipArt2, 2, 1, 83, 75, 7, 7);  [ captain is in the pilot house during the storm  add.to.pic(vw.ShipSternArt2, 3, 0, 108, 52, 8, 8);    [ land/islands that passes by occasionally  animate.obj(oLand);  set.view(oLand, vw.OceanItems);  set.loop(oLand, 3);  fix.loop(oLand);  set.priority(oLand, 4);  vLandStep = 10;  ignore.objs(oLand);  ignore.blocks(oLand);    [ rocks are bad- they might cause ship to sink  animate.obj(oRock);  set.view(oRock, vw.OceanItems);  set.loop(oRock, 0);  fix.loop(oRock);  set.priority(oRock, 5);  vRockStep = 2;  ignore.objs(oRock);  ignore.blocks(oRock);    [ icebergs are bad- they might cause ship to sink  animate.obj(oIceberg);  set.view(oIceberg, vw.OceanItems);  set.loop(oIceberg, 1);  fix.loop(oIceberg);  set.priority(oIceberg, 5);  ignore.objs(oIceberg);  ignore.blocks(oIceberg);    [ the wake that follows the ship (use two objects)  animate.obj(oWake1);  set.view(oWake1, vw.StormWaves);  set.loop(oWake1, 1);  set.cel(oWake1, 0);  set.priority(oWake1, 14);  position(oWake1, 60, 107);  ignore.objs(oWake2); [ typo! should be oWake1!  draw(oWake1);  start.cycling(oWake1);  [ wake 2  animate.obj(oWake2);  set.view(oWake2, vw.StormWaves);  set.loop(oWake2, 0);  set.cel(oWake2, 0);  set.priority(oWake2, 5);  position(oWake2, 0, 107);  draw(oWake2);  start.cycling(oWake2);    [ helmsman, in pilot house  animate.obj(oHelmsman);  set.view(oHelmsman, vw.ShipSternArt2);  set.loop(oHelmsman, 5);  set.priority(oHelmsman, 9);  ignore.objs(oHelmsman);  position(oHelmsman, 92, 52);  draw(oHelmsman);  vTmpStep = 4;  cycle.time(oHelmsman, vTmpStep);  start.cycling(oHelmsman);    [ aft door to pilot house  animate.obj(oAftDoor);  stop.cycling(oAftDoor);  set.view(oAftDoor, vw.MidShipArt2);  set.loop(oAftDoor, 0);  set.cel(oAftDoor, 0);  set.priority(oAftDoor, 13);  ignore.objs(oAftDoor);  [ all doors start closed  set(fDoorClosed);  position(oAftDoor, 69, 52);  draw(oAftDoor);    [ fore door to pilot house  animate.obj(oForeDoor);  stop.cycling(oForeDoor);  set.view(oForeDoor, vw.MidShipArt2);  set.loop(oForeDoor, 1);  set.cel(oForeDoor, 0);  set.priority(oForeDoor, 8);  ignore.objs(oForeDoor);  ignore.blocks(oForeDoor);  position(oForeDoor, 151, 52);  draw(oForeDoor);    [ door to captain's cabin  animate.obj(oCabinDoor);  stop.cycling(oCabinDoor);  set.view(oCabinDoor, vw.MidShipArt2);  set.loop(oCabinDoor, 0);  set.cel(oCabinDoor, 0);  set.priority(oCabinDoor, 13);  ignore.objs(oCabinDoor);  position(oCabinDoor, 93, 94);  draw(oCabinDoor);    [ Jerrod  animate.obj(ego);  [ if Jerrod is NOT on deck in the storm  if (!isset(OnDeckInStorm))    {    [ if timer is one where Jerrod gets sick    if ((CurrentTripTime == ScurvyTime ||         CurrentTripTime == CholeraTime))      {      [ use sick Jerrod view      set.view(ego, vw.SickJerrodNY);      }    else      {      [ otherwise, use normal view      set.view(ego, vw.JerrodNY);      }    }  [ this room is 2D, so priority doesn't need to change  set.priority(ego, 10);  [ adjust Jerrod's position based on which level he was on  [ in the previous room (rm.ShipMidInterior)  if (posn(ego, 150, 51, 159, 53))    {    position(ego, 135, 52);    }  if (posn(ego, 150, 93, 159, 108))    {    position(ego, 134, 102);    }      [ if Jerrod is on deck in the storm  if (isset(OnDeckInStorm))    {    [ use the 'windy' view    set.view(ego, vw.WindyJerrod);    ignore.blocks(ego);    ignore.horizon(ego);    position(ego, 134, 57);    set.priority(ego, 7);    set(OnDeckInStorm); [ it's already set! this line does nothing    start.cycling(ego);    [ allow ego object to cycle at rest    set(CycleAtRest);    }  [ draw Jerrod on screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is at top of ladder, walkingif (posn(ego, 146, 107, 148, 107))  {  [ adjust position so the climbing view looks correct  if (posn(ego, 146, 107, 146, 107))    {    TmpX = 0;    }  if (posn(ego, 147, 107, 147, 107))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 107, 148, 107))    {    TmpX = -2; [ 254;    }  [ Jerrod gets on the ladder  set(fOnLadder);  TmpY = 17;  set.view(ego, vw.ClimbingJerrodNY);  set.loop(ego, 3);  fix.loop(ego);  vEgoStep = 2;  step.size(ego, vEgoStep);  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder, still climbingif (posn(ego, 146, 156, 146, 156) && isset(fOnLadder))  {  [ Jerrod gets off the ladder  reset(fOnLadder);  [ bump him so the normal view looks correct  TmpX = 1;  TmpY = 0;  set.view(ego, vw.JerrodNY);  release.loop(ego);  vEgoStep = 1;  step.size(ego, vEgoStep);  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder but not climbingif (posn(ego, 146, 155, 148, 155) && !isset(fOnLadder))  {  [ adjust position so climbing view looks  [ correct  if (posn(ego, 146, 155, 146, 155))    {    TmpX = 0;    }  if (posn(ego, 147, 155, 147, 155))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 155, 148, 155))    {    TmpX = -2; [ 254;    }  [ Jerrod gets on the ladder  set(fOnLadder);  TmpY = -1; [ 255;  [ change view/loop and fix it  set.view(ego, vw.ClimbingJerrodNY);  set.loop(ego, 3);  fix.loop(ego);  [ step size is 2 while climbing  vEgoStep = 2;  step.size(ego, vEgoStep);  reposition(ego, TmpX, TmpY);  }  [ if at top of ladder and still climbingif (posn(ego, 146, 122, 146, 123) && isset(fOnLadder))  {  [ Jerrod gets off the ladder  reset(fOnLadder);  [ return to normal view  set.view(ego, vw.JerrodNY);  [ allow loop to change based on direction  release.loop(ego);  [ step size is 1 when walking  vEgoStep = 1;  step.size(ego, vEgoStep);  [ adjust position so view looks correct after  [ switching  TmpX = 1;  TmpY = -16; [ 240;  reposition(ego, TmpX, TmpY);  }  [ if trip point matches time when Jerrod is susceptible to[ scurvy (and NOT on top deck)if (CurrentTripTime == ScurvyTime && !isset(OnDeckInStorm))  {  [ if Jerrod is currently healthy  if (EgoHealthStatus == 0)    {    [ hase dying sequence begun?    if (isset(DyingAtSea))      {      [ make sure Jerrod is not on ladder so he can fall      [ down dead      if ((posn(ego, 56, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ reset the flag        reset(DyingAtSea);        [ switch to dying view        set.view(ego, vw.DyingJerrodNY);        [ make sure to start on first cel        set.cel(ego, 0);        [ then he starts dying        end.of.loop(ego, fDoneDying);        [ allow ego object to cycle at rest        set(CycleAtRest);        }      }    [ if Jerrod has finished dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      [ Jerrod doesn't move anymore      stop.update(ego);      [ change health state to 'death by scurvy'      EgoHealthStatus = 20;      [ load and call logic to finalize the       [ death sequence      load.logics(lgc.DeathScurvy);      call(lgc.DeathScurvy);      }    }  }  [ if trip point is at a time when Jerrod is susceptible to[ cholera (Here they don't check for Jerrod being on top[ deck, with 'windy' view - not sure why the difference[ between this and scurvy)if (CurrentTripTime == CholeraTime)  {  [ if Jerrod is currently healthy  if (EgoHealthStatus == 0)    {    [ if dying sequence has been started    if (isset(DyingAtSea))      {      [ make sure Jerrod is not on stairs so he has room to      [ fall over dead      if ((posn(ego, 56, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ reset the flag        reset(DyingAtSea);        [ change view/loop to dying        set.view(ego, vw.DyingJerrodNY);        [ make sure to start at first cel        set.cel(ego, 0);        [ then he starts dying        end.of.loop(ego, fDoneDying);        [ allow ego object to cycle when not moving        set(CycleAtRest);        }      }    [ when Jerrod has finished dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      [ Jerrod isn't moving anymore      stop.update(ego);      [ set health status to 'death by cholera'      EgoHealthStatus = 21;      [ load and call logic to finalize the death sequence      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      }    }  }  [ if Jerrod is not on the top deckif (!isset(OnDeckInStorm))  {  [ if exiting pilot house out the front  if (posn(ego, 143, 52, 155, 52) && isset(egoHitSpecial))    {    [ bump him down to main deck level    TmpX = 1;    TmpY = 5;    reposition(ego, TmpX, TmpY);    }  [ if on top deck, going into pilot house  [ NOT POSSIBLE!!! if Jerrod is on main deck OnDeckInStorm  [ would be set TRUE; besides, once he goes outside, he  [ gets blown overboard, with no chance to save himself and  [ get back inside  if (posn(ego, 148, 56, 155, 58) && isset(egoHitSpecial))    {    [ bump Jerrod up to pilot house    TmpX = -1; [ 255;    TmpY = -5; [ 251;    reposition(ego, TmpX, TmpY);    }  }  [ if land is not currently on screenif (vLandStatus != 250)  {  [ random chance land appears  random(210, 249, vLandStatus);  [ one in 40 chance  if (vLandStatus == 230)    {    [ choose land with less vegetation    set.cel(oLand, 0);    [ set status to indicate land is on screen    vLandStatus = 250;    [ land starts at right of screen    position(oLand, 75, 107);    draw(oLand);    stop.cycling(oLand);    [ and moves to left (to simulate the    [ ship moving past it)    move.obj(oLand, 1, 107, 1, fLandMoved);    step.time(oLand, vLandStep);    }  }  [ when land gets to let edge of screenif (isset(fLandMoved))  {  [ remove it from screen  reset(fLandMoved);  erase(oLand);  [ increment status so randomizer can  [ find more mland  ++vLandStatus;  }    [ if no rock is currently on screenif (vRockStatus != 250)  {  [ random chance one appears  random(210, 249, vRockStatus);  if (vRockStatus == 230)    {    [ set status to indicate rock is on screen    vRockStatus = 250;    [ if trip point time is when sinking by rock    [ is due    if (CurrentTripTime == vRockTime)      {      [ choose a big rock      vRockSize = 0;      }    else      {      [ otherwise, rock size is random      random(0, 5, vRockSize);      }    [ 2 in six chance rock is BIG    if ((vRockSize == 0 || vRockSize == 1))      {      [ play sound of rock crash      sound(s.RockCrash, fSoundDone);      [ for any monitor EXCEPT VGA      if (monitorType != VGA)        {        [ shake screen five times        shake.screen(5);        }      [ if trip point time is when rock sinks ship      if (CurrentTripTime == vRockTime)        {        [ if currently healthy        if (EgoHealthStatus == 0)          {          [ ship is set to sink from this rock          print("This rock has done serious damage to the hull of the ship.");          print("The captain orders the crew and passengers to abandon ship, "                "but it is too late.");          print("Sea water rushes through the gaping hole. The ship is on its "                "way to the ocean floor in some of the most frigid water in the "                "world.");          }        [ start the sinking sequence        set(fBeginSinking);        }      }    [ 3 in six chance it's a medium sized rock    if ((vRockSize == 2 ||         vRockSize == 3 ||         vRockSize == 4))      {      [ play sound of rock crashing      sound(s.RockCrash, fSoundDone);      [ for any monitor EXCEPT VGA      if (monitorType != VGA)        {        [ shake screen three times        shake.screen(3);        }      }    [ one in six chance to just graze the rock    if (vRockSize == 5)      {      [ play sound of rock crashing      sound(s.RockCrash, fSoundDone);      [ for any monitor EXCEPT VGA      if (monitorType != VGA)        {        [ one shake of the screen        shake.screen(1);        }      }    [ choose rock cel based on size    set.cel.v(oRock, vRockSize);    [ rock starts at right side of screen    position(oRock, 100, 167);    draw(oRock);    stop.cycling(oRock);    [ move rock to left edge (to simulate the ship passing    [ by)    move.obj(oRock, 1, 167, 1, fRockMoved);    step.time(oRock, vRockStep);    }  }  [ if rock has reached edge of screenif (isset(fRockMoved))  {  [ remove it from screen  reset(fRockMoved);  erase(oRock);  [ increment status so randomizer can find another rock  ++vRockStatus;  }  [ if trip point time matches time to sink by rockif (CurrentTripTime == vRockTime)  {  [ if sinking sequence was started  if (isset(fBeginSinking))    {    [ reset the flag    reset(fBeginSinking);    [ use rock size as a counter    vRockSize = 7;    }  [ if counter is initiated  if (vRockSize > 6)    {    [ increment counter    ++vRockSize;    [ when counter gets to 26 (+19 cycles)    if (vRockSize == 26)      {      [ Jerrod dies when due to sinking ship      EgoHealthStatus = 27;      [ change to room showing the ship going down      new.room(cs.SinkingShipStorm); [ ##LE001##      }    }  }  [ if no iceberg is on screenif (vIcebergStatus != 250)  {  [ random chance iceberg appears  random(210, 249, vIcebergStatus);  [ one in 40 chance  if (vIcebergStatus == 230)    {    [ set status to indicate iceberg is on screen    vIcebergStatus = 250;    [ play sound of iceberg crashing    sound(s.RockCrash, fSoundDone);    [ for any monitor EXCEPT VGA    if (monitorType != VGA)      {      [ shake screen three times      shake.screen(3);      }    [ increment count of iceberg hits    ++IcebergCounter;    [ if this is second hit    if (IcebergCounter == 2)      {      [ set rock status so no more rocks aoppear      vRockStatus = 250;      [ if if trip time point is time for iceberg to sink the ship      if (CurrentTripTime == vIcebergTime)        {        [ if Jerrod is currently OK        if (EgoHealthStatus == 0)          {          [ he's not anymore          print("The iceberg once again pounds the side of the ship, but this "                "time the force is too much for the hull to withstand.");          print("The wretched iceberg punctures the shell of the ship, flooding "                "the lower levels.");          print("The end is near.");          }        [ set flag to begin sinking        set(fBeginSinking);        }      }    else      {      [ empty block; there was probably something here at one point      [ but it appears to have been deleted      }    [ position iceberg just behind ship and move it to left    [ edge of screen    position(oIceberg, 103, 126);    draw(oIceberg);    [ move it to left edge of screen (to simulate the ship    [ passing by)    move.obj(oIceberg, 1, 126, 1, fIcebergMoved);    step.time(oIceberg, vRockStep);    }  }  [ if iceberg has reached left edgeif (isset(fIcebergMoved))  {  [ remove it from the screen  reset(fIcebergMoved);  erase(oIceberg);  [ increment status so randomizer can find another iceberg  ++vIcebergStatus;  }  [ if trip timer is time to sink by iceberg hitif (CurrentTripTime == vIcebergTime)  {  [ if ship is set to sink  if (isset(fBeginSinking))    {    [ reset flag, use rocksize as a counter    reset(fBeginSinking);    vRockSize = 7;    }  [ if counter is initiated  if (vRockSize > 6)    {    [ increment counter    ++vRockSize;    [ when counter reaches 26 (+19 cycles)    if (vRockSize == 26)      {      [ Jerrod dies by iceberg hit      EgoHealthStatus = 28;      [ change room to show ship sinking sequence      new.room(cs.SinkingShipStorm); [ ##LE002##      }    }  }  [ if Jerrod is not on the top deckif (!isset(OnDeckInStorm))  {  [ if Jerrod is no main stairs, but priority not adjusted  if (posn(ego, 106, 53, 138, 91) && !isset(fOnStairs))    {    [ set flag, and set priority so Jerrod goes behind smoke    [ stack    set(fOnStairs);    set.priority(ego, 8);    }    [ if Jerrod is NOT on mains stairs, and priority IS set  if (!posn(ego, 106, 53, 138, 91) && isset(fOnStairs))    {    [ reset flag    reset(fOnStairs);    [ restore priority to 10    set.priority(ego, 10);    }      [ if on the stairs, and touching an alarm line  if (posn(ego, 106, 53, 138, 91) && isset(egoHitSpecial))    {    [ if moving down or down-left    if ((egoDir == DOWN || egoDir == DOWN_LEFT))      {      [ change to LEFT      egoDir = LEFT;      }    [ if moving left    if (egoDir == LEFT)      {      [ bump Jerrod down one pixel as he descends the stairs      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    [ if Jerrod is going up or up-right    if ((egoDir == UP_RIGHT || egoDir == UP))      {      [ change to RIGHT      egoDir = RIGHT;      }    [ if moving right    if (egoDir == RIGHT)      {      [ bump up and to right one pixel as he ascends the      [ stairs      TmpX = 1;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      }    }      [ if Jerrod is on small stairs and touching alarm line  if (posn(ego, 122, 94, 145, 107) && isset(egoHitSpecial))    {    [ if going down or down/right    if ((egoDir == DOWN_RIGHT || egoDir == RIGHT))      {      [ bump him over and down as he descends the stairs      TmpX = 1;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    [ if going left or up/left    if ((egoDir == UP_LEFT || egoDir == LEFT))      {      [ bump him over and up as he ascends the stairs      TmpX = -1; [ 255;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      }    }  }  [ if Jerrod is by the aft door and the door is closedif (posn(ego, 65, 52, 79, 52) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oAftDoor, fAftDoorOpen);  }  [ if NOT by aft door, and it's openif (!posn(ego, 65, 52, 79, 52) && (isset(fAftDoorOpen)))  {  [ close it  reset(fAftDoorOpen);  reverse.loop(oAftDoor, fDoorClosed);  }  [ if by fore door to pilot house and it's closedif (posn(ego, 143, 52, 154, 57) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oForeDoor, fForeDoorOpen);  }  [ if NOT by fore door to pilot house and it's openif (!posn(ego, 143, 52, 154, 57) && (isset(fForeDoorOpen)))  {  [ close it  reset(fForeDoorOpen);  reverse.loop(oForeDoor, fDoorClosed);  }  [ if by captain's cabin door and it's closedif (posn(ego, 89, 94, 103, 94) && (isset(fDoorClosed)))  {    [ open it    reset(fDoorClosed);  end.of.loop(oCabinDoor, fCabinDoorOpen);  }  [ if NOT by cabin door, and it's openif (!posn(ego, 89, 94, 103, 94) && (isset(fCabinDoorOpen)))  {  [ close it  reset(fCabinDoorOpen);  reverse.loop(oCabinDoor, fDoorClosed);  }  [ if on main deck, but flag not set yet (check for stairs is[ meaningless; it's never possible for Jerrod to be on[ stairs while on main deck)if (posn(ego, 80, 57, 159, 57) &&     !isset(OnDeckInStorm) &&     !isset(fOnStairs))  {  [ set flag to show Jerrod is outside on main deck in the  [ storm  set(OnDeckInStorm);  [ change view to 'windy' Jerrod  set.view(ego, vw.WindyJerrod);  [ cycle at rest to show him blowing in the wind  start.cycling(ego);  set(CycleAtRest);  [ ignore blocks so Jerrod can be blown overboard  ignore.blocks(ego);  [ change priority so when Jerrod gets blown off stern of  [ ship, he passes behind the pilot house windows  set.priority(ego, 7);  }  [ if Jerrod is on deck in the stormif (isset(OnDeckInStorm))  {  [ if trying to move right  if (egoDir == RIGHT)    {    [ change step size; it's too windy to move    vEgoStep = 0;    step.size(ego, vEgoStep);    }  else    {    [ any other direction gets changed to  left, and Jerrod    [ gets blown along top deck    egoDir = LEFT;    vEgoStep = 4;    step.size(ego, vEgoStep);    }  [ when Jerrod goes past edge of ship  if (EgoX < 56)    {    [ he falls off; adjust loop and position    TmpX = 0;    TmpY = -7; [ 249;    reposition(ego, TmpX, TmpY);    set.loop(ego, 2);    fix.loop(ego);    [ move him up and off stern of ship to first point    move.obj(ego, 43, 37, 2, fDoneDying);    vEgoStep = 1;    step.size(ego, vEgoStep);    vFallStatus = 1;    reset(OnDeckInStorm);    set(FallingOvbd);    }  }  [ if Jerrod has reached first point while falling off the[ shipif (isset(fDoneDying) && vFallStatus == 1)  {  [ move to second point  reset(fDoneDying);  vFallStatus = 2;  move.obj(ego, 14, 66, 3, fDoneDying);  }  [ if Jerrod has reached second point while falling off the[ shipif (isset(fDoneDying) && vFallStatus == 2)  {  [ move to third point  reset(fDoneDying);  vFallStatus = 3;  set.priority(ego, 4);  move.obj(ego, 14, 143, 4, fDoneDying);  ignore.objs(ego);  }  [ if Jerrod has reached third point while falling off the[ shipif (isset(fDoneDying) && vFallStatus == 3)  {  [ change fall status so no more falling  reset(fDoneDying);  vFallStatus = 4;  [ change health status to death by drowning  EgoHealthStatus = 1;  [ remove Jerrod from screen  erase(ego);  [ play death music  sound(m.Death2, DoneNoAction);  [ no more player input  prevent.input();  [ since ego is erased, no reason to use stop.motion here  stop.motion(ego);  [ clear input line  clear.lines(22, 24, BLACK);  display(22, 0, "The howling wind is too much for you. You are blown overboard "          "to an icy grave.");  [ now he's dead  set(JerrodIsDead);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == RIGHT_EDGE)  {  new.room(rm.ShipMidStorm); [ ##LE003##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  [ response depends on where Jerrod is  if (EgoY == 52)    {    if (EgoX < 74)      {      print("You are on the bridge deck.");      print("This is the only safe place outside during a storm.");      }    else      {      print("You are on the bridge deck.");      print("The captain and first mate have their hands full with this "            "ferocious storm. The stairs lead to a lower deck.");      }    }  if (EgoY == 57)    {    print("This is the aft section of the sun, rain, snow, hail, and sleet "          "deck.");    }  if (EgoY > 57 && EgoY < 94)    {    print("This is the staircase that connects the captain's deck to the bridge "          "deck.");    }  if (EgoY == 94)    {    if (EgoX < 97)      {      print("This is the captain's cabin.");      }    if (EgoX > 96)      {      print("You are immediately outside of the captain's cabin.");      }    }  if (EgoY < 106 && EgoY > 94)    {    print("This is the small set of stairs connecting the main deck to the "          "captain's deck.");    }  if (EgoY == 106)    {    print("This is the main deck of the ship.");    }  if (EgoY > 106 && EgoY < 156)    {    print("You are on the ladder that connects the main deck with the lower "          "deck.");    }  if (EgoY == 156)    {    print("This is the ship's lower deck.");    }  }  [ get paperclipif (said("acquire", "clip"))  {  [ if Jerrod already has the paperlicp  if (PaperclipStatus == 1)    {    print("You already have the paper clip.");    }  [ if paperclip is still on the floor  if (PaperclipStatus == 0)    {    [ if Jerrod is in cabin, near the paperclip    if (posn(ego, 20, 94, 96, 94))      {      [ take the clip      print("You pick up the paper clip and put it in your pocket.");      get("Paper clip");      PaperclipStatus = 1;      [ if not yet scored,      if (!isset(ScorePaperclip))        {        [ score three points        sound(s.AddToScore, fSoundDone);        set(ScorePaperclip);        currentScore  += 3;        }      }    else      {      print("There is no paper clip right here.");      }    }  }  [ look paperclipif (said("examine", "clip"))  {  [ if paperclip is still on the floor  if (PaperclipStatus == 0)    {    [ if Jerrod is near it    if (posn(ego, 20, 94, 96, 94))      {      print("There is a hefty-looking paper clip lying on the floor.");      }    else      {      print("There is no paper clip right here.");      }    }  }[ look manif ((said("examine", "boy") ||     said("examine", "crew") ||     said("examine", "crew", "boy") ||     said("examine", "crewman") ||     said("examine", "mate") ||     said("examine", "first", "mate") ||     said("examine", "captain") ||     said("examine", "eric")))  {  [ if Jerrod is near someone  if ((posn(ego, 102, 52, 159, 79) ||       posn(ego, 66, 52, 101, 52) ||       posn(ego, 100, 84, 159, 130)))    {    [ if near the captain    if (posn(ego, 102, 52, 159, 52))      {      print("You watch the captain, with complete confidence, as he commands "            "the \"Sea Farer\" around the treacherous Cape amid gusting gales "            "and heaving seas!");      }    [ if near the first mate    if (posn(ego, 66, 52, 101, 52))      {      print("The first mate skillfully follows every command of the captain.");      }    [ if near Eric on stairs    if (posn(ego, 100, 84, 159, 130))      {      print("You see the once powerful form of Eric, sitting slouched on the "            "steps writing in his journal.");      }    }  else    {    print("You are not close enough!");    }  }  [ talk to manif ((said("speak", "boy") ||     said("speak", "crewman") ||     said("speak", "crew", "boy") ||     said("speak", "crew") ||     said("speak", "mate") ||     said("speak", "first", "mate") ||     said("speak", "captain") ||     said("speak") ||     said("speak", "eric")))  {  [ if near someone  if ((posn(ego, 102, 52, 159, 79) ||       posn(ego, 66, 52, 101, 52) ||       posn(ego, 100, 84, 159, 130)))    {    [ if near the captain    if (posn(ego, 102, 52, 159, 52))      {      print("The captain yells, \"Don't bother me with small talk right now, "            "young man. I've got my hands full!\"");      }    [ if near the first mate    if (posn(ego, 66, 52, 101, 52))      {      print("The first mate doesn't even realize you are talking to him. He is "            "intently listening to each command of the captain.");      }    [ if near Eric    if (posn(ego, 100, 84, 159, 130))      {      print("With great concern you ask Eric, \"How have you been lately?\"");      print("Eric replies, \"I'm doing tolerably well. However, if conditions "            "get any worse, I don't know if I will make it.\"");      }    }  else    {    print("You are not close enough!");    }  }  [ look skyif (said("examine", "sky"))  {  [ if on top deck, or in cabin by windows or by windows  [ above ladder  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("The sky is dark and dreary.");    }  else    {    print("You can't see outside from here.");    }  }  [ look water/oceanif ((said("examine", "water") ||     said("examine", "ocean")))  {  [ if on top deck, or in cabin by windows or by windows  [ above ladder  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("The sea is deep, dark, and churning.");    }  else    {    print("You can't see outside from here.");    }  }  [ look landif ((said("examine", "island") ||     said("examine", "land")))  {  [ if on top deck, or in cabin by windows or by windows  [ above ladder  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("You see an island on the distant horizon.");    }  else    {    print("You can't see outside from here.");    }  }if (said("examine", "rock"))  {  [ if on top deck, or in cabin by windows or by windows  [ above ladder  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    [ strange response, since it is possible for rocks to be    [ visible after a collision    print("There are no rocks in sight.");    }  else    {    print("You can't see outside from here.");    }  }[ look icebergif (said("examine", "iceberg"))  {  [ if on top deck, or in cabin by windows or by windows  [ above ladder  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("You see the tips of a few icebergs floating in the frigid sea.");    }  else    {    print("You can't see outside from here.");    }  }[look coalif (said("examine", "coal"))  {  [ if near the coal hold door  if (posn(ego, 141, 142, 159, 156))    {    print("You can't see through the coal hold door.");    }  else    {    print("You can't do that from here.");    }  }  [ open doorif (said("open", "door"))  {  [ if near coal hold door  if (posn(ego, 141, 108, 159, 156))    {    print("You just can't get it open!");    }  else    {    print("Just walk up to them!");    }  }  [ look doorif (said("examine", "door"))  {  [ if near one of the four doors  if ((posn(ego, 56, 52, 111, 52) ||       posn(ego, 112, 52, 159, 79) ||       posn(ego, 80, 80, 116, 94) ||       posn(ego, 141, 108, 159, 156)))    {    [ near aft pilot house door    if (posn(ego, 56, 52, 111, 52))      {      print("This is the aft door.");      }    [ near forward pilot house door    if (posn(ego, 112, 52, 159, 79))      {      print("This is the forward door.");      }    [ near door to captain's cabin    if (posn(ego, 80, 80, 116, 94))      {      print("This is the door to the captain's cabin.");      }    [ near coal hold door    if (posn(ego, 141, 108, 159, 156))      {      print("The door keeps coal from falling out of the coal hold.");      }    }  else    {    print("You can't do that from here.");    }  }  [ open coal hold doorif ((said("open", "coal", "hold", "door") ||     said("open", "coalhold", "door") ||     said("open", "coal", "door") ||     said("unlock", "door") ||     said("unlock", "coal", "hold", "door") ||     said("unlock", "coalhold", "door") ||     said("unlock", "coal", "door") ||     said("unlock", "coal", "hold", "door")))  {  [ if near the door  if (posn(ego, 141, 108, 159, 156))    {    print("You just can't get it open!");    }  else    {    print("You can't do that from here.");    }  }  [ look coal hold doorif ((said("examine", "coal", "hold", "door") ||     said("examine", "coalhold", "door") ||     said("examine", "coal", "door")))  {  if (posn(ego, 141, 108, 159, 156))    {    print("The door keeps coal from falling out of the coal hold.");    }  else    {    print("You can't do that from here.");    }  }  [ look mastif (said("examine", "mast"))  {  [ if on top deck or main deck  if (posn(ego, 56, 52, 159, 107))    {    print("The mast is sturdy, but many a ship's mast has been snapped like a "          "tooth pick by mother nature!");    }  else    {    print("You can't do that from here.");    }  }  [ look riggingif (said("examine", "rigging"))  {  if (posn(ego, 56, 52, 159, 79))    {    print("The rigging is being tested to its limits by the storm!");    }  else    {    print("You can't do that from here.");    }  }  [ look lampif (said("examine", "lamp"))  {  if (posn(ego, 80, 83, 159, 130))    {    print("They are whale oil lamps.");    }  else    {    print("You can't do that from here.");    }  }  [ look ladderif (said("examine", "ladder"))  {  if (posn(ego, 123, 94, 159, 156))    {    print("It is a typical ladder.");    }  else    {    print("You can't do that from here.");    }  }[ look out windowif (said("examine", "glass"))  {  if (posn(ego, 56, 52, 159, 107))    {    print("You see the terrible weather outside and hope that the ship, and "          "yourself, survive!");    }  else    {    print("You can't do that from here.");    }  }  [ look stairsif (said("examine", "stair"))  {  if (posn(ego, 89, 52, 146, 130))    {    print("These stairs provide quick access between the bridge deck and the "          "captain's cabin.");    }  else    {    print("You can't do that from here.");    }  }  [ use stairs/use ladderif ((said("go", "stair") ||     said("go", "up", "stair") ||     said("go", "down", "stair") ||     said("climb", "stair") ||     said("climb", "up", "stair") ||     said("climb", "down", "stair") ||     said("use", "stair") ||     said("go", "ladder") ||     said("go", "up", "ladder") ||     said("go", "down", "ladder") ||     said("climb", "ladder") ||     said("climb", "up", "ladder") ||     said("climb", "down", "ladder") ||     said("use", "ladder")))  {  print("You'll have to do that for yourself.");  }  [ look scene/look viewif (said("examine", "scene"))  {  print("Today is a windy, dreary day.");  }  [ look cabinif ((said("examine", "quarter") ||     said("examine", "captain", "quarter") ||     said("examine", "cabin") ||     said("examine", "captain", "cabin") ||     said("examine", "office") ||     said("examine", "captain", "office")))  {  [ if in the cabin  if (posn(ego, 60, 94, 96, 94))    {    [ if paperclip is still there    if (PaperclipStatus == 0)      {      print("There is a paper clip lying on the floor. It must have been tossed "            "there by the storm.");      }    else      {      print("The captain keeps his quarters very tidy. Only after a storm will "            "you find anything out of place here.");      }    }  else    {    print("You can't see the captain's cabin from here.");    }  }  [ look deskif ((said("examine", "desk") ||     said("examine", "captain", "desk") ||     said("examine", "in", "desk") ||     said("examine", "in", "captain", "desk") ||     said("examine", "drawer") ||     said("examine", "desk", "drawer") ||     said("examine", "in", "drawer") ||     said("examine", "in", "desk", "drawer") ||     said("open", "drawer") ||     said("open", "desk", "drawer")))  {  [ if in the captain's cabin  if (posn(ego, 60, 94, 96, 94))    {    [ if paperclip is still there    if (PaperclipStatus == 0)      {      print("A paper clip that was on the desk is now lying on the floor. It "            "must have been tossed there by the storm.");      }    else      {      print("The captain keeps his quarters very tidy. Only after a storm will "            "you find anything out of place here.");      }    }  else    {    print("There's no desk right here.");    }  }  [ look wheelif (said("examine", "wheel"))  {  [ if in pilot house  if (posn(ego, 73, 52, 119, 52))    {    print("The first mate controls the rudder of the ship by turning this "          "wheel.");    }  else    {    print("You can't do that from here.");    }  }  [ open desk drawer/look in deskif ((said("examine", "drawer") ||     said("open", "drawer") ||     said("open", "desk") ||     said("examine", "in", "desk")))  {  [ if in cabin  if (posn(ego, 80, 94, 103, 94))    {    print("You find nothing of interest.");    }  else    {    print("You can't do that from here.");    }  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "ocean") ||     said("jump") ||     said("jump", "overboard") ||     said("go", "overboard")))  {  print("You'll never get to California if you do that!");  }  [ take the wheelif ((said("rotate", "wheel") ||     said("acquire", "wheel")))  {  print("It might be best to leave that up to the crew. They know what they are "        "doing!");  }  [ go fishingif ((said("go", "fish") ||     said("go", "fishing") ||     said("fish") ||     said("acquire", "fish") ||     said("catch", "fish")))  {  print("They won't be biting today!");  }  [ touch door (coal hold door)if (said("feel", "door"))  {  [ if near the door  if (posn(ego, 141, 108, 159, 156))    {    [ if door is hot    if (CoalFireTime > 0)      {      print("The door is warm to the touch.");      }    else      {      print("The door is cool.");      }    }  else    {    print("You can't do that from here.");    }  }  [ look deckif (said("examine", "deck"))  {  [ if in captain's cabin  if (posn(ego, 20, 94, 96, 94))    {    if (PaperclipStatus == 0)      {      print("There is a paper clip lying on the floor. It must have been tossed "            "there by the storm.");      }    else      {      print("There's nothing interesting on the floor right here.");      }    }  else    {    print("There's nothing interesting on the floor right here.");    }  }  [ take journal/read journalif ((said("examine", "journal") ||     said("acquire", "journal") ||     said("read", "journal")))  {  print("What Eric writes in his journal is none of your business.");  }  [ look bridge deckif (said("examine", "bridge", "deck"))  {  print("From the bridge deck, the captain and crew do their utmost to ensure a "        "safe voyage for the passengers and cargo.");  }  [ look captain's deckif (said("examine", "captain", "deck"))  {  print("The main attraction on the captain's deck is the captain's cabin.");  }  [ look main deckif ((said("examine", "main", "deck") ||     said("examine", "lower", "deck")))  {  print("You can't see much of that deck from here.");  }  Done:[ call main timing logiccall(lgc.CapeTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "You are on the bridge deck."#message 2 "The captain and first mate have their hands full with this ferocious storm. The stairs lead to a lower deck."#message 3 "There's nothing interesting on the floor right here."#message 4 "From the bridge deck, the captain and crew do their utmost to ensure a safe voyage for the passengers and cargo."#message 6 "During a storm, this is the only safe place to be outside."#message 7 "This is the aft section of the sun, rain, snow, hail, and sleet deck."#message 8 "Today is a windy, dreary day."#message 9 "This is the staircase that connects the captain's deck to the bridge deck."#message 10 "This is the captain's cabin."#message 11 "The captain keeps his quarters very tidy. Only after a storm will you find anything out of place here."#message 12 "There is a paper clip lying on the floor. It must have been tossed there by the storm."#message 13 "You are immediately outside of the captain's cabin."#message 14 "This is the small set of stairs connecting the main deck to the captain's deck."#message 15 "This is the main deck of the ship."#message 16 "You are on the ladder that connects the main deck with the lower deck."#message 17 "This is the ship's lower deck."#message 18 "You already have the paper clip."#message 19 "There is no paper clip right here."#message 20 "You pick up the paper clip and put it in your pocket."#message 22 "There is a hefty-looking paper clip lying on the floor."#message 29 "The sky is dark and dreary."#message 30 "You can't see much of that deck from here."#message 37 "The main attraction on the captain's deck is the captain's cabin."#message 38 "You can't see the captain's cabin from here."#message 39 "This rock has done serious damage to the hull of the ship."#message 40 "The captain orders the crew and passengers to abandon ship, but it is too late."#message 41 "Sea water rushes through the gaping hole. The ship is on its way to the ocean floor in some of the most frigid water in the world."#message 43 "The iceberg once again pounds the side of the ship, but this time the force is too much for the hull to withstand."#message 44 "The wretched iceberg punctures the shell of the ship, flooding the lower levels."#message 45 "The end is near."#message 46 "The first mate skillfully follows every command of the captain."#message 47 "You see the once powerful form of Eric, sitting slouched on the steps writing in his journal."#message 48 "What Eric writes in his journal is none of your business."#message 50 "You watch the captain, with complete confidence, as he commands the \"Sea Farer\" around the treacherous Cape amid gusting gales and heaving seas!"#message 51 "You are not close enough!"#message 52 "The captain yells, \"Don't bother me with small talk right now, young man. I've got my hands full!\""#message 53 "The first mate doesn't even realize you are talking to him. He is intently listening to each command of the captain."#message 54 "With great concern you ask Eric, \"How have you been lately?\""#message 55 "The howling wind is too much for you. You are blown overboard to an icy grave."#message 56 "Eric replies, \"I'm doing tolerably well. However, if conditions get any worse, I don't know if I will make it.\""#message 58 "You can't see outside from here."#message 59 "The sea is deep, dark, and churning."#message 60 "You see an island on the distant horizon."#message 61 "There are no rocks in sight."#message 62 "You see the tips of a few icebergs floating in the frigid sea."#message 64 "You can't see through the coal hold door."#message 65 "The mast is sturdy, but many a ship's mast has been snapped like a tooth pick by mother nature!"#message 68 "You can't do that from here."#message 77 "You just can't get it open!"#message 78 "Just walk up to them!"#message 79 "The rigging is being tested to its limits by the storm!"#message 80 "They are whale oil lamps."#message 81 "It is a typical ladder."#message 82 "This is the aft door."#message 83 "This is the forward door."#message 84 "This is the door to the captain's cabin."#message 85 "You see the terrible weather outside and hope that the ship, and yourself, survive!"#message 86 "These stairs provide quick access between the bridge deck and the captain's cabin."#message 88 "The door keeps coal from falling out of the coal hold."#message 89 "You'll have to do that for yourself."#message 90 "The first mate controls the rudder of the ship by turning this wheel."#message 91 "You find nothing of interest."#message 92 "You'll never get to California if you do that!"#message 93 "It might be best to leave that up to the crew. They know what they are doing!"#message 95 "This is the only safe place outside during a storm."#message 110 "They won't be biting today!"#message 112 "The door is warm to the touch."#message 113 "The door is cool."#message 133 "A paper clip that was on the desk is now lying on the floor. It must have been tossed there by the storm."#message 134 "There's no desk right here."