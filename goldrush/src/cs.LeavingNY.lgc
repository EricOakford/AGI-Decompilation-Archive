[***********************************************************[[ cs.LeavingNY[[ This logic manages the wagon trip cutscenes as Jerrod [ travels from Brooklyn to St. Louis Missouri.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oCursor                      o1#define oSceneWindow                 o2#define oSceneDetail                 o3#define oTrackBlock1                 o4#define oTrackBlock2                 o5#define oTrackBlock3                 o6#define oTrackBlock4                 o7#define oTrackBlock5                 o8[ o9 through o15 are not used#define oRiverDetail                o16#define vTripStage                 v220#define tmpVar1                    v221#define tmpVar2                    v222#define vSceneStage                v223#define vSceneTimer                v224#define vCurStepTime               v225[ v226 and v227 are not used#define vTimeStatus                v228#define vMsgStatus                 v229#define fCursorMoved               f220[ f221 is not used#define fScnWndMoved               f222[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ set cursor step time  vCurStepTime = 4;  [ these two variables are assigned values, but the  [ variables are never used in this logic, or in the main  [ timing logic; they appear to be leftover from old code  [ that should have been removed  v226 = 1;  v227 = 4;    [ load the main timing logic  load.logics(lgc.WagonTripTiming);    [ load room picture (map of USA)  load.pic(currentRoom);    [ map zoom view (that shows detail maps epxanding out) is  [ not needed, but loaded anyway (bug)  load.view(vw.MapZoom);    [load views used in the room  load.view(vw.MapTracks);  load.view(vw.TripScenery);  load.view(vw.TripScenery2);    [ draw the picture  draw.pic(currentRoom);    [ use track blocks to keep previous path lines permenantly  [ visible    [ track block 1 - eastern New York  animate.obj(oTrackBlock1);  set.view(oTrackBlock1, vw.MapTracks);  set.loop(oTrackBlock1, 5);  set.cel(oTrackBlock1, 0);  position(oTrackBlock1, 131, 53);  set.priority(oTrackBlock1, 6);  ignore.horizon(oTrackBlock1);  ignore.objs(oTrackBlock1);  ignore.blocks(oTrackBlock1);  stop.cycling(oTrackBlock1);  [ track block 2 - western New York  animate.obj(oTrackBlock2);  set.view(oTrackBlock2, vw.MapTracks);  set.loop(oTrackBlock2, 5);  set.cel(oTrackBlock2, 0);  position(oTrackBlock2, 127, 53);  set.priority(oTrackBlock2, 6);  ignore.horizon(oTrackBlock2);  ignore.objs(oTrackBlock2);  ignore.blocks(oTrackBlock2);  stop.cycling(oTrackBlock2);  [ track block 3 - eastern Lake Erie  animate.obj(oTrackBlock3);  set.view(oTrackBlock3, vw.MapTracks);  set.loop(oTrackBlock3, 5);  set.cel(oTrackBlock3, 2);  position(oTrackBlock3, 118, 56);  set.priority(oTrackBlock3, 6);  ignore.horizon(oTrackBlock3);  ignore.objs(oTrackBlock3);  ignore.blocks(oTrackBlock3);  stop.cycling(oTrackBlock3);  [ track block 4 - eastern Lake Erie (only one pixel below  [ block 3; doesn't seem very efficient)  animate.obj(oTrackBlock4);  set.view(oTrackBlock4, vw.MapTracks);  set.loop(oTrackBlock4, 5);  set.cel(oTrackBlock4, 2);  position(oTrackBlock4, 118, 57);  set.priority(oTrackBlock4, 6);  ignore.horizon(oTrackBlock4);  ignore.objs(oTrackBlock4);  ignore.blocks(oTrackBlock4);  stop.cycling(oTrackBlock4);  [ track block 5 - western Lake Erie  animate.obj(oTrackBlock5);  set.view(oTrackBlock5, vw.MapTracks);  set.loop(oTrackBlock5, 5);  set.cel(oTrackBlock5, 2);  position(oTrackBlock5, 117, 68);  set.priority(oTrackBlock5, 6);  ignore.horizon(oTrackBlock5);  ignore.objs(oTrackBlock5);  ignore.blocks(oTrackBlock5);  stop.cycling(oTrackBlock5);    [ cursor, which shows a flashing pixel along the track as  [ Jerrod proceeds west  animate.obj(oCursor);  set.view(oCursor, vw.MapTracks);  set.loop(oCursor, 1);  fix.loop(oCursor);  position(oCursor, 137, 63);  set.priority(oCursor, 7);  ignore.horizon(oCursor);  ignore.objs(oCursor);  draw(oCursor);  step.time(oCursor, vCurStepTime);  move.obj(oCursor, 137, 55, 1, fCursorMoved);  vTripStage = 1;    [ the main scenery window (don't draw it yet)  animate.obj(oSceneWindow);  set.view(oSceneWindow, vw.TripScenery);  set.loop(oSceneWindow, 0);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 15);  position(oSceneWindow, 120, 122);    [ scenery detail (don't draw it yet)  animate.obj(oSceneDetail);  set.view(oSceneDetail, vw.TripScenery);  set.loop(oSceneDetail, 1);  set.priority(oSceneDetail, 14);  position(oSceneDetail, 123, 101);    [ extra detail view (used to show the riverside passing  [ by)  animate.obj(oRiverDetail);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if the main scene window hasn't been drawn yetif (vSceneStage == 0)  {  [ increment timer  ++vSceneTimer;  [ if first cycle  if (vSceneTimer == 1)    {    [ reset timer    vSceneTimer = 0;    [ set next stage    vSceneStage = 1;    [ draw the main scenery window (starting with small cel)    draw(oSceneWindow);    [ don't cycle; stay on cel 0    stop.cycling(oSceneWindow);    }  }  [ if main scene window is on screenif (vSceneStage == 1)  {  [ increment timer  ++vSceneTimer;  [ after 10 cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ set next stage    vSceneStage = 2;    [ expand scenery picture    set.cel(oSceneWindow, 1);    }  }  [ if main scene window is at mid pointif (vSceneStage == 2)  {  [ increment timer  ++vSceneTimer;  [ after 10 cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ set next stage    vSceneStage = 3;    [ add the scenery detail object    draw(oSceneDetail);    [ and expand scene window to full size    set.cel(oSceneWindow, 2);    }  }  [ when cursor gets to buffaloif (posn(oCursor, 127, 53, 127, 53) && vSceneStage == 3)  {  [ next scene; to collapse the stagecoach scene window  vSceneStage = 4;  [ go back to smaller cel  set.cel(oSceneWindow, 1);  [ remove scenery detail  erase(oSceneDetail);  [ reverse the loop to get to starting cel  reverse.loop(oSceneWindow, fScnWndMoved);  }  [ when scene window has returned to starting celif (isset(fScnWndMoved) && vSceneStage == 4)  {  [ reset the flag  reset(fScnWndMoved);  [ next stage  vSceneStage = 5;  [ remove scene window  erase(oSceneWindow);  }  [  when scene window is removedif (vSceneStage == 5)  {  [ next stage  vSceneStage = 6;  [ redraw the window  set.view(oSceneWindow, vw.TripScenery);  [ now using the boat scenery  set.loop(oSceneWindow, 2);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 14);  [ position it just below Great Lakes  position(oSceneWindow, 109, 109);  [ and draw it on screen  draw(oSceneWindow);  }  [ after boat scene window is addedif (vSceneStage == 6)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ go to next stage, with scene window    [ expanding    vSceneStage = 7;    set.cel(oSceneWindow, 1);    }  }  [ after boat scene expands to middle celif (vSceneStage == 7)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ go to next stage, with scene window    [ at full size    vSceneStage = 8;    set.cel(oSceneWindow, 2);    [ add detail, showing boat animation    set.view(oSceneDetail, vw.TripScenery);    set.loop(oSceneDetail, 3);    position(oSceneDetail, 114, 94);    set.priority(oSceneDetail, 15);    draw(oSceneDetail);    }  }  [ when cursor gets to Chicagoif (posn(oCursor, 100, 56, 100, 56) && vSceneStage == 8)  {  [ go to next stage, with scene window shrinking again  vSceneStage = 9;  set.cel(oSceneWindow, 1);  erase(oSceneDetail);  [ reverse loop to get to starting cel  reverse.loop(oSceneWindow, fScnWndMoved);  }  [ when scene window is back to first celif (isset(fScnWndMoved) && vSceneStage == 9)  {  [ reset the flag  reset(fScnWndMoved);  [ go to next stage, erasing the scene window  vSceneStage = 10;  erase(oSceneWindow);  }  [ when scene window is erasedif (vSceneStage == 10)  {  [ go to next stage, bring scene window back, to show  [ another boat trip (on river)  vSceneStage = 11;  set.view(oSceneWindow, vw.TripScenery);  set.loop(oSceneWindow, 4);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 9);  position(oSceneWindow, 102, 113);  draw(oSceneWindow);  }  [ when scene window has been redrawnif (vSceneStage == 11)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ go to next stage; window expands    vSceneStage = 12;    set.cel(oSceneWindow, 1);    }  }  [ after scene window gets to middle celif (vSceneStage == 12)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ go to next stage, traveling to Independence    vSceneStage = 13;    [ expand scene window to full size    set.cel(oSceneWindow, 2);    [ add detail, using paddle wheel boat loop    set.view(oSceneDetail, vw.TripScenery2);    set.loop(oSceneDetail, 0);    position(oSceneDetail, 109, 97);    set.priority(oSceneDetail, 11);    draw(oSceneDetail);    [ draw separate object to show the riverbank passing by    set.view(oRiverDetail, vw.TripScenery2);    set.loop(oRiverDetail, 1);    set.priority(oRiverDetail, 10);    position(oRiverDetail, 107, 104);    tmpVar1 = 2;    cycle.time(oRiverDetail, tmpVar1);    draw(oRiverDetail);    }  }  [ when cursor gets to St. Louisif (posn(oCursor, 86, 84, 86, 84) && vSceneStage == 13)  {  [ go to last stage; ready to continue journey  vSceneStage = 14;  [ shrink scene window to mid size  set.cel(oSceneWindow, 1);  [ erase scene details  erase(oSceneDetail);  erase(oRiverDetail);  [ reverse loop to go back to first cel in scene window  reverse.loop(oSceneWindow, fScnWndMoved);  }  [ when scene window shrinks for last timeif (isset(fScnWndMoved) && vSceneStage == 14)  {  [ reset flag  reset(fScnWndMoved);  [ increment stage counter  vSceneStage = 15;  [ remove scene window  erase(oSceneWindow);  [ if not hiding trip messages  if (!isset(HideTripMsgs))    {    print("You don't look long before you find the \"Long Island Joint Mining "          "and Stock Company\" camp set up just north of Independence.");    print("With a great deal of anticipation you enter camp!!");    }  [ reset the show travel time flag while in Missouri  reset(ShowTravelTime);  [ ready to continue to next scene in journey  set(ContinueJourney);  }  [ manage cursor by tracking where it goes, and changing the[ size and shape to fit where it's at on the map[ after cursor reaches first pointif (isset(fCursorMoved) && vTripStage == 1)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 2;  move.obj(oCursor, 127, 53, 1, fCursorMoved);  }  [ after cursor gets to second point (Buffalo)if (isset(fCursorMoved) && vTripStage == 2)  {  reset(fCursorMoved);  vTripStage = 3;  [ need to change cursor shape/position  tmpVar1 = -9; [ 247;  tmpVar2 = -8; [ 248;  reposition(oCursor, tmpVar1, tmpVar2);  [ change to the loop four cursor  set.loop(oCursor, 4);  move.obj(oCursor, 118, 56, 1, fCursorMoved);  }  [ after cursor gets to third point (halfway across Lake[ Erie)if (isset(fCursorMoved) && vTripStage == 3)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 4;  move.obj(oCursor, 118, 57, 1, fCursorMoved);  }  [ after cursor gets to fourth point (a tiny bit further[ across Lake Erie)if (isset(fCursorMoved) && vTripStage == 4)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 5;  [ need to change cursor position before the next move  [ command  tmpVar1 = 1;  tmpVar2 = 12;  reposition(oCursor, tmpVar1, tmpVar2);  move.obj(oCursor, 117, 68, 1, fCursorMoved);  }  [ after cursor gets to fifth point (just south of Detroit,[ still on Lake Erie)if (isset(fCursorMoved) && vTripStage == 5)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 6;  [ adjust cursor position again  tmpVar1 = -11; [ 245;  tmpVar2 = 1;  reposition(oCursor, tmpVar1, tmpVar2);  [ change back to cursor loop 1  set.loop(oCursor, 1);  move.obj(oCursor, 106, 66, 1, fCursorMoved);  }  [ after cursor gets to sixth point (Detroit)if (isset(fCursorMoved) && vTripStage == 6)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 7;  move.obj(oCursor, 113, 44, 1, fCursorMoved);  }  [ after cursor gets to seventh point (just east of Strait[ of Mackinaw)if (isset(fCursorMoved) && vTripStage == 7)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 8;  move.obj(oCursor, 108, 42, 1, fCursorMoved);  }  [ after cursor gets to eighth point (just west of Strait[ of Mackinawif (isset(fCursorMoved) && vTripStage == 8)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 9;  [ adjust cursor position  tmpVar1 = -8; [ 248;  tmpVar2 = -9; [ 247;  reposition(oCursor, tmpVar1, tmpVar2);  [ switch to cursor loop 4 again  set.loop(oCursor, 4);  move.obj(oCursor, 100, 65, 1, fCursorMoved);  }  [ after cursor gets to ninth point (central Illinois)if (isset(fCursorMoved) && vTripStage == 9)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 10;  [ one pixel? really?  move.obj(oCursor, 99, 65, 1, fCursorMoved);  }  [ after cursor gets to tenth point (still central Illinois)if (isset(fCursorMoved) && vTripStage == 10)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 11;  move.obj(oCursor, 97, 82, 1, fCursorMoved);  }  [ after cursor gets to eleventh point (St. Louis)if (isset(fCursorMoved) && vTripStage == 11)  {  [ move to next point  reset(fCursorMoved);  vTripStage = 12;  [ adjust cursor position again  tmpVar1 = 1;  tmpVar2 = 2;  reposition(oCursor, tmpVar1, tmpVar2);  move.obj(oCursor, 88, 84, 1, fCursorMoved);  }  [ after cursor gets to twelveth point (just outside[ Independence, MO)if (isset(fCursorMoved) && vTripStage == 12)  {  [ move to last point  reset(fCursorMoved);  vTripStage = 13;  move.obj(oCursor, 86, 84, 1, fCursorMoved);  }  [ after cursor gets to last pointif (isset(fCursorMoved) && vTripStage == 13)  {  [ looks like programmers planned on doing one more trip  [ stage, but later on deleted it, leaving this empty block  }  [ as cursor moves across the map, need to add the track[ blocks to keep previous sections of the track permanently[ visibleif (posn(oCursor, 131, 53, 131, 53))  {  [ eastern New York  draw(oTrackBlock1);  stop.update(oTrackBlock1);  }if (posn(oCursor, 127, 53, 127, 53))  {  [ western New York  draw(oTrackBlock2);  stop.update(oTrackBlock2);  }if (posn(oCursor, 118, 56, 118, 56))  {  [ east Lake Erie  draw(oTrackBlock3);  stop.update(oTrackBlock3);  }if (posn(oCursor, 118, 57, 118, 57))  {  [ east Lake Erie (again)  draw(oTrackBlock4);  stop.update(oTrackBlock4);  }if (posn(oCursor, 117, 68, 117, 68))  {  [ west Lake Erie  draw(oTrackBlock5);  stop.update(oTrackBlock5);  }  [ beginning in west Lake Erie, looks like the programmers[ gave up on using screen objects to show the track being[ complete; the rest of the way, they use add.to.pic() to[ draw the completed track sectionsif (posn(oCursor, 113, 58, 113, 58))  {  [ permanently draw Lake Erie track  add.to.pic(vw.MapTracks, 5, 0, 113, 58, 6, 6);  }if (posn(oCursor, 113, 47, 113, 47))  {  [ permanently cover Lake Huron track  add.to.pic(vw.MapTracks, 5, 0, 113, 47, 6, 6);  }if (posn(oCursor, 108, 42, 108, 42))  {  [ permanently cover northern Michigan track  add.to.pic(vw.MapTracks, 5, 0, 108, 42, 6, 6);  }if (posn(oCursor, 100, 44, 100, 44))  {  [ permanently cover northwestern Michigan track  add.to.pic(vw.MapTracks, 5, 2, 100, 44, 6, 6);  }if (posn(oCursor, 100, 55, 100, 55))  {  [ permanently cover western Michigan track  add.to.pic(vw.MapTracks, 5, 2, 100, 55, 6, 6);  }if (posn(oCursor, 99, 65, 99, 65))  {  [ permanently cover Chicago area track  add.to.pic(vw.MapTracks, 5, 2, 99, 65, 6, 6);  }if (posn(oCursor, 97, 76, 97, 76))  {  [ permanently cover central Illinois track  add.to.pic(vw.MapTracks, 5, 2, 97, 76, 6, 6);  }if (posn(oCursor, 97, 82, 97, 82))  {  [ permanently cover St. Louis area track  add.to.pic(vw.MapTracks, 5, 2, 97, 82, 8, 8);  }if (posn(oCursor, 88, 84, 88, 84))  {  [ permanently cover central/west Missouri area track  add.to.pic(vw.MapTracks, 5, 2, 88, 84, 6, 6);  }  [ as cursor moves across map, update the game time counterif (posn(oCursor, 118, 45, 118, 45) && vTimeStatus == 0)  {  vTimeStatus = 1;  GameDays  += 2;  }if (posn(oCursor, 106, 66, 106, 66) && vTimeStatus == 1)  {  vTimeStatus = 2;  GameDays  += 2;  }if (posn(oCursor, 109, 42, 109, 42) && vTimeStatus == 2)  {  vTimeStatus = 3;  GameDays  += 2;  }if (posn(oCursor, 100, 55, 100, 55) && vTimeStatus == 3)  {  vTimeStatus = 4;  GameDays  += 2;  }if (posn(oCursor, 97, 80, 97, 80) && vTimeStatus == 4)  {  vTimeStatus = 5;  GameDays  += 2;  }if (posn(oCursor, 88, 84, 88, 84) && vTimeStatus == 5)  {  vTimeStatus = 6;  GameDays  += 2;  }    [ as cursor moves across map, display trip messages to[ describe the journey (unless player has suppressed them)[ at Buffaloif (posn(oCursor, 118, 45, 118, 45) && vMsgStatus == 0)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("The first stop on your journey is beautiful Buffalo, New York!");    print("You gladly get off the stage at Buffalo and embark on a Great Lake "          "Steamer.");    }  }  [ Lake Erieif (posn(oCursor, 118, 47, 118, 47) && vMsgStatus == 1)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Lake Erie!", 2, 25, 0);    }  }  [ Clevelandif (posn(oCursor, 119, 69, 119, 69) && vMsgStatus == 2)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Cleveland!", 7, 14, 0);    }  }  [ Toledoif (posn(oCursor, 106, 69, 106, 69) && vMsgStatus == 3)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Toledo!", 7, 17, 0);    }  }  [ Detroitif (posn(oCursor, 108, 64, 108, 64) && vMsgStatus == 4)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Detroit!", 7, 16, 0);    }  }  [ Lake Huronif (posn(oCursor, 113, 59, 113, 59) && vMsgStatus == 5)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Lake Huron!", 2, 25, 0);    }  }  [ Lake Michiganif (posn(oCursor, 108, 42, 108, 42) && vMsgStatus == 6)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("  Lake Michigan!", 4, 14, 9);    }  }[ Chicago  if (posn(oCursor, 100, 55, 100, 55) && vMsgStatus == 7)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("In Chicago, a city with a whopping 20,000 inhabitants, you disembark "          "the Great Lake steamer only to board another water going vessel, a "          "canal boat. This will take you to Peru, Illinois, a ride of about "          "100 miles.");    }  }  [ Peru, ILif (posn(oCursor, 99, 65, 99, 65) && vMsgStatus == 8)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("After Peru, the next leg of your trip will be aboard a river steamer "          "which will take you to St. Louis via the Illinois and Mississippi "          "Rivers.");    }  }  [ St. Louisif (posn(oCursor, 97, 80, 97, 80) && vMsgStatus == 9)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("It may seem unbelievable, but you have to change steamers again in "          "St. Louis!");    print("You are glad to discover this will be your last boat ride (not "          "knowing that in a few short weeks you will long for a relaxing boat "          "to ride).");    print("You board another steamer in St. Louis and ride about 390 miles up "          "the Missouri River to Independence, Missouri.");    print("Hurry up and wait! You'll be in Independence in approximately two "          "days!");    }  }  [ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ look/look aroundif ((said("examine", "around") ||     said("examine")))  {  print("You are on your way to Independence!");  }  Done:[ call the main timing logiccall(lgc.WagonTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 2 "The first stop on your journey is beautiful Buffalo, New York!"#message 3 "You gladly get off the stage at Buffalo and embark on a Great Lake Steamer."#message 5 "Lake Erie!"#message 6 "Cleveland!"#message 7 "Toledo!"#message 8 "Detroit!"#message 9 "Lake Huron!"#message 10 "  Lake Michigan!"#message 12 "In Chicago, a city with a whopping 20,000 inhabitants, you disembark the Great Lake steamer only to board another water going vessel, a canal boat. This will take you to Peru, Illinois, a ride of about 100 miles."#message 20 "After Peru, the next leg of your trip will be aboard a river steamer which will take you to St. Louis via the Illinois and Mississippi Rivers."#message 30 "It may seem unbelievable, but you have to change steamers again in St. Louis!"#message 31 "You are glad to discover this will be your last boat ride (not knowing that in a few short weeks you will long for a relaxing boat to ride)."#message 32 "You board another steamer in St. Louis and ride about 390 miles up the Missouri River to Independence, Missouri."#message 33 "Hurry up and wait! You'll be in Independence in approximately two days!"#message 40 "You don't look long before you find the \"Long Island Joint Mining and Stock Company\" camp set up just north of Independence."#message 41 "With a great deal of anticipation you enter camp!!"#message 50 "You are on your way to Independence!"