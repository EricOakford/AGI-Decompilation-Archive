[***********************************************************[[ rm.RiverCrossing[[ This is the last jungle scene. Jerrod has to get across[ the river without drowning or being eaten by an alligator.[ The safe path across the river is a very narrow band that[ matches where the land juts out; there are no clues [ though, so this room can be VERY frustrating for a player.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oAlligator2                  o1#define oTraveler3                   o2#define oAlligator1                  o3#define oRapids2                     o4#define oRapids1                     o5#define vDrowningStatus            v220#define vTraveler3Status           v221[ v222 is not used#define vTmpVal                    v223#define vTmpY                      v224#define vCelNum                    v225#define vGatorEnters               v226#define vGatorStatus               v227#define vGatorCel                  v228#define vGatorTimer                v229#define vRndNum                    v230#define fDoneDying                 f220#define fTraveler3Moved            f221#define fWaterTransition           f222#define fGatorEntered              f223#define fGatorMoved                f224#define fSndDone                   f225#define fGatorAttack               f226#define fAtMiddle                  f227[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load main timing logic  load.logics(lgc.PanamaTripTiming);    [ load picture for this room  load.pic(currentRoom);    [ load views used in this room  load.view(vw.JerrodNY);  load.view(vw.EnterWater);  load.view(vw.WadingJerrodNY);  load.view(vw.JungleArt_4);  load.view(vw.Traveler2);  load.view(vw.Traveler3);    [ load sounds used in this room  load.sound(m.Death);  load.sound(m.Death2);  load.sound(m.DangerWarning);  load.sound(s.Splash);    [ drawt the current room picture  draw.pic(currentRoom);    [ if this is first time in the room (Jerrod hasn't  [ backtracked, and then returned)  if (!isset(PastRiverCrossing))    {    [ set the flag    set(PastRiverCrossing);    [ only traveler #3 is still around    animate.obj(oTraveler3);    set.view(oTraveler3, vw.Traveler3);    [ he starts at right edge of screen    position(oTraveler3, 147, 131);    draw(oTraveler3);    [ and begins moving offscreen    move.obj(oTraveler3, 153, 125, 1, fTraveler3Moved);    vTmpVal = 3;    step.time(oTraveler3, vTmpVal);    cycle.time(oTraveler3, vTmpVal);    vTraveler3Status = 1;    }      [ rapids in river, to show water moving  animate.obj(oRapids1);  set.view(oRapids1, vw.JungleArt_4);  set.loop(oRapids1, 1);  position(oRapids1, 24, 92);  draw(oRapids1);  start.cycling(oRapids1);  vTmpVal = 3;  cycle.time(oRapids1, vTmpVal);  [ second rapids object  animate.obj(oRapids2);  set.view(oRapids2, vw.JungleArt_4);  set.loop(oRapids2, 2);  position(oRapids2, 23, 110);  draw(oRapids2);  start.cycling(oRapids2);  vTmpVal = 3;  cycle.time(oRapids2, vTmpVal);    [ alligator #1 (don't draw yet)  animate.obj(oAlligator1);  set.view(oAlligator1, vw.JungleArt_4);  set.loop(oAlligator1, 3);  set.cel(oAlligator1, 0);  position(oAlligator1, 129, 156);  ignore.blocks(oAlligator1);    [ alligator #2 (don't draw yet)  animate.obj(oAlligator2);  set.view(oAlligator2, vw.JungleArt_4);  set.loop(oAlligator2, 4);  set.cel(oAlligator2, 0);  position(oAlligator2, 100, 167);    [ add Jerrod, using NY attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);  set.loop(ego, 0);  position(ego, 1, 129);  egoDir = STOPPED;  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if traveler #3 reaches right edgeif (isset(fTraveler3Moved) && vTraveler3Status == 1)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 2;  [ remove him from screen  erase(oTraveler3);  }  [ if Jerrod is in or near water at left edge of riverif (posn(ego, 9, 129, 27, 141))  {  [ if already transitioning from water to shore  if (isset(fWaterTransition))    {    [ up or down not allowed    if ((egoDir == UP ||         egoDir == DOWN))      {      egoDir = STOPPED;      }    [ diagonal left not allowed    if ((egoDir == UP_LEFT ||         egoDir == DOWN_LEFT))      {      egoDir = LEFT;      }    [ diagonal right not allowed    if ((egoDir == UP_RIGHT ||         egoDir == DOWN_RIGHT))      {      egoDir = RIGHT;      }    [ if going to the right (deeper water)    if (egoDir == RIGHT)      {      [ if not already at max depth      if (vCelNum < 6)        {        [ show Jerrod one step deeper        ++vCelNum;        set.cel.v(ego, vCelNum);        }      }    [ if going to the left (shallower water)    if (egoDir == LEFT)      {      [ if not already at min depth      if (vCelNum > 0)        {        [ show Jerrod one step shallower        --vCelNum;        set.cel.v(ego, vCelNum);        }      }    }      [ if Jerrod is touching the alarm line, and isn't 'in water' yet  if (isset(egoHitSpecial) && !isset(fWaterTransition))    {    [ Jerrod begins transition from deep water to shore    set(fWaterTransition);    [ change view to show him going in/out of water    set.view(ego, vw.EnterWater);    [ allow ego object to cycle when not moving    set(CycleAtRest);    [ but stop cycling for right now    stop.cycling(ego);    [ if Jerrod is near the shore    [ (these posn tests use values that are outside the test    [ in the 'if' statement above that enables this code    [ block;  the value for X1 should be 9, not 2    if ((posn(ego, 2, 129, 18, 132) ||         posn(ego, 2, 133, 14, 141)))      {      [ show Jerrod with just his feet wet      vCelNum = 0;      set.cel.v(ego, vCelNum);      }        [ if in deeper water, show him at max depth    if ((posn(ego, 20, 129, 25, 132) ||         posn(ego, 16, 133, 20, 141)))      {      vCelNum = 6;      set.cel.v(ego, vCelNum);      }    }      [ if Jerrod is NOT on the line, and is transitioning  if (!isset(egoHitSpecial) && isset(fWaterTransition))    {    [ transition ends    reset(fWaterTransition);    [ if Jerrod is in the water to the right of the alarm    [ line    if ((posn(ego, 20, 129, 25, 132) ||         posn(ego, 16, 133, 20, 141)))      {      [ now he's in the water, wading      set.view(ego, vw.WadingJerrodNY);      }    [ if Jerrod is out of the water, to the left of the    [ alarm line    if ((posn(ego, 2, 129, 18, 132) ||         posn(ego, 2, 133, 14, 141)))      {      [ he's on dry land, walking      set.view(ego, vw.JerrodNY);      }    [ don't allow cycling at rest anymore    reset(CycleAtRest);    }  }  [ if Jerrod is in or near water at right edge of river (at[ larger, bottom shoreline)if (posn(ego, 134, 129, 150, 142))  {  [ if already transitioning from/to shore to/from water  if (isset(fWaterTransition))    {    [ up or down not allowed    if ((egoDir == UP ||         egoDir == DOWN))      {      egoDir = STOPPED;      }    [ left diagonal not allowed    if ((egoDir == UP_LEFT ||         egoDir == DOWN_LEFT))      {      egoDir = LEFT;      }    [ right diagonal not allowed    if ((egoDir == UP_RIGHT ||         egoDir == DOWN_RIGHT))      {      egoDir = RIGHT;      }    [ if moving left (to deeper water)    if (egoDir == LEFT)      {      [ if not at max depth yet      if (vCelNum < 6)        {        [ show Jerrod one step deeper        ++vCelNum;        set.cel.v(ego, vCelNum);        }      }    [ if moving right (toward shore)    if (egoDir == RIGHT)      {      [ if not at min depth yet      if (vCelNum > 0)        {        [ show Jerrod one step shallower        --vCelNum;        set.cel.v(ego, vCelNum);        }      }    }      [ if Jerrod is on the alarm line and not yet transitioning  if (isset(egoHitSpecial) && !isset(fWaterTransition))    {    [ begin transition    set(fWaterTransition);    [ change view to show him going in/out of water    set.view(ego, vw.EnterWater);    [ allow cycling at rest    set(CycleAtRest);    [ but don't cycle right now    stop.cycling(ego);    [ if near the shore    if (posn(ego, 142, 129, 148, 142))      {      [ show Jerrod with just his feet wet      vCelNum = 0;      set.cel.v(ego, vCelNum);      }    [ if near deep water    if (posn(ego, 134, 129, 140, 142))      {      [ show Jerrod at max depth      vCelNum = 6;      set.cel.v(ego, vCelNum);      }    }      [ if NOT on alarm line, and transitioning  if (!isset(egoHitSpecial) && isset(fWaterTransition))    {    [ stop transitioning    reset(fWaterTransition);    [ if in deep water    if (posn(ego, 134, 129, 140, 142))      {      [ show Jerrod wading across river      set.view(ego, vw.WadingJerrodNY);      }    [ if on shore    if (posn(ego, 142, 129, 148, 142))      {      [ Jerrod is on dry land, walking      set.view(ego, vw.JerrodNY);      }    [ don't allow cycling at rest anymore    reset(CycleAtRest);    }  }  [ if Jerrod is in or near water at right edge of river[ (upper shore, close to the big blue plant)if (posn(ego, 120, 114, 140, 119))  {  [ if transitioning  if (isset(fWaterTransition))    {    [ up or down not allowed    if ((egoDir == UP ||         egoDir == DOWN))      {      egoDir = STOPPED;      }    [ left diagonal not allowed    if ((egoDir == UP_LEFT ||         egoDir == DOWN_LEFT))      {      egoDir = LEFT;      }    [ right diagonal not allowed    if ((egoDir == UP_RIGHT ||         egoDir == DOWN_RIGHT))      {      egoDir = RIGHT;      }    [ if moving left (toward deeper water)    if (egoDir == LEFT)      {      [ if not already at max depth      if (vCelNum < 6)        {        [ show Jerrod one step deeper        ++vCelNum;        set.cel.v(ego, vCelNum);        }      }    [ if moving right (toward shore)    if (egoDir == RIGHT)      {      [ if not already at min depth      if (vCelNum > 0)        {        [ show Jerrod one step shallower        --vCelNum;        set.cel.v(ego, vCelNum);        }      }    }      [ if on the alarm line and not yet transitioning  if (isset(egoHitSpecial) && !isset(fWaterTransition))    {    [ begin transitioning    set(fWaterTransition);    [ change view to show Jerrod going in/out of water    set.view(ego, vw.EnterWater);    [ allow ego object to cycle at rest    set(CycleAtRest);    [ but don't cycle right now    stop.cycling(ego);    [ if Jerrod is near shoreline    if (posn(ego, 133, 114, 139, 119))      {      [ show him with just his feet wet      vCelNum = 0;      set.cel.v(ego, vCelNum);      }    [ if Jerrod is in deep water    if (posn(ego, 122, 114, 130, 119))      {      [ show him at max depth      vCelNum = 6;      set.cel.v(ego, vCelNum);      }    }  [ if Jerrod is NOT on the line, and transitioning  if (!isset(egoHitSpecial) && isset(fWaterTransition))    {    [ done transitioning    reset(fWaterTransition);    [ if Jerrod is in deep water    if (posn(ego, 122, 114, 130, 119))      {      [ use view showing him wading      set.view(ego, vw.WadingJerrodNY);      }    [ if Jerrod is on shore    if (posn(ego, 133, 114, 139, 119))      {      [ show him walking      set.view(ego, vw.JerrodNY);      }    [ no more cycling ego object at rest    reset(CycleAtRest);    }  }  [ if Jerrod touches an alarm line while NOT transitioning[ from shore to water, AND if not already drowning or being[ eaten by an alligatorif (isset(egoHitSpecial) &&     !posn(ego, 9, 129, 27, 141) &&     !posn(ego, 134, 129, 150, 142) &&     !posn(ego, 120, 114, 140, 119) &&     vDrowningStatus == 0 &&     vGatorEnters == 0)  {  [ Jerrod sinks under the water and drowns  set.view(ego, vw.JungleArt_4);  set.loop(ego, 0);  set.cel(ego, 0);  [ stop moving  stop.motion(ego);  [ and run through sinking loop one time  set(CycleAtRest);  end.of.loop(ego, fDoneDying);  vDrowningStatus = 40;  }  [ after Jerrod goes under the waterif (isset(fDoneDying) && vDrowningStatus == 40)  {  [ reset flag  reset(fDoneDying);  [ remove Jerrod from screen  erase(ego);  [ advance status to next stage  vDrowningStatus = 41;  [ play death sound  sound(m.Death2, DoneNoAction);  [ no more player input  prevent.input();  stop.motion(ego);  [ display a message  display(22, 0, "The more you struggle, the quicker you sink ...");  [ and now Jerrod is officially dead  set(JerrodIsDead);  }  [ when Jerrod gets to middle of river for first time if (EgoX == 69 && !isset(fAtMiddle))  {  [ set the flag  set(fAtMiddle);  [ random chance alligator will attack  random(0, 4, vRndNum);  [ one in five chance  if (vRndNum == 1)    {    [ alligator is coming!    set(fGatorAttack);    }  }  [ if at middle of stream, and not already drowning or being[ attacked by an alligatorif (EgoX == 69 &&     vGatorEnters == 0 &&     vDrowningStatus == 0 &&     isset(fGatorAttack))  {  [ alligator enters water  vGatorEnters = 1;  [ play warning sound  sound(m.DangerWarning, DoneNoAction);  [ show alligator on screen  draw(oAlligator1);  [ and alligator enters the water  end.of.loop(oAlligator1, fGatorEntered);  }  [ if alligator attack has started if (vGatorEnters == 1 && vGatorStatus == 0)  {  [ note current cel of alligator view  current.cel(oAlligator1, vGatorCel);  }  [ when alligator has finished entering waterif (isset(fGatorEntered) && vGatorEnters == 1)  {  [ advance to next stage  reset(fGatorEntered);  vGatorEnters = 2;  [ erase the first alligator object  erase(oAlligator1);  }  [ if gator is now completely in the waterif (vGatorStatus == 0 && vGatorCel == 7)  {  [ use second object to show rest of alligator sequence  draw(oAlligator2);  [ advance to next stage  vGatorStatus = 1;  [ show alligator swimming to Jerrod  end.of.loop(oAlligator2, fGatorMoved);  }  [ when alligator gets to Jerrodif (isset(fGatorMoved) && vGatorStatus == 1)  {  [ advance to next stage  reset(fGatorMoved);  vGatorStatus = 2;  [ remove alligator object  erase(oAlligator2);  }  [ after alligator object is removedif (vGatorStatus == 2)  {  [ increment timer  ++vGatorTimer;  [ after 9 cycles  if (vGatorTimer == 9)    {    [ advance to next stage    vGatorTimer = 0;    vGatorStatus = 3;    [ begin Jerrod's death sequence    vDrowningStatus = 50;    }  }  [ if Jerrod is being eaten by an alligatorif (vDrowningStatus == 50)  {  [ advance to next stage  vDrowningStatus = 51;  [ show view of Jerrod going under water  set.view(ego, vw.JungleArt_4);  set.loop(ego, 5);  set.cel(ego, 0);  fix.loop(ego);  [ stop Jerrod's movement  stop.motion(ego);  [ and allow ego object to cycle when stopped  set(CycleAtRest);  [ adjust position so the view shows correctly  vTmpVal = -2; [ 254;  vTmpY = 0;  reposition(ego, vTmpVal, vTmpY);  [ run loop one time  end.of.loop(ego, fDoneDying);  [ play a spash sound  sound(s.Splash, fSndDone);  }  [ after Jerrod is done being eaten by alligatorif (isset(fDoneDying) && vDrowningStatus == 51)  {  [ advance to next stage  reset(fDoneDying);  vDrowningStatus = 52;  [ remove Jerrod from screen  erase(ego);  [ show message  print("That gator was hiding just out of sight. There was nothing you could "        "do!");  [ play death sound  sound(m.Death, DoneNoAction);  [ no more player input  prevent.input();  [ stop ego motion  stop.motion(ego);  [ display end game message  display(22, 0, "You are having a bad day and this gator is having lunch!");  [ now Jerrod is officially dead  set(JerrodIsDead);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod is exiting to rightif (edgeEgoHit == RIGHT_EDGE)  {  [ score points for making it across the jungle (flag isn't  [ really necessary, as this only ever happens once anyway)  if (!isset(ScoreJungle))    {    set(ScoreJungle);    currentScore  += 10;    }  set(ContinueJourney);  }  [ if Jerrod goes back to the leftif (edgeEgoHit == LEFT_EDGE)  {  [ back up one time point  --CurrentTripTime;  [ clear the trip counters  TripCycles = 0;  TripCycles2 = 0;  TripCycles3 = 0;  [ go back to previous room  new.room(rm.ThickJungle); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look/look aroundif ((said("examine", "around") ||     said("examine", "jungle") ||     said("examine")))  {  print("It's hard to believe, but even the depths of the jungle can be "        "beautiful! Here the road crosses a jungle stream.");  }  [ look plantsif ((said("examine", "plant") ||     said("examine", "bush")))  {  print("Jungle plants line the stream.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water")))  {  print("This is a small, seasonal stream.");  }  [ climb treeif (said("climb", "forest"))  {  print("You don't want to prolong your stay in this jungle by doing that!");  }  [ look treeif (said("examine", "forest"))  {  print("This is yet another view of more jungle trees.");  }  [ look groundif (said("examine", "dirt"))  {  print("Most of the ground here is covered by the stream.");  }  [ look upif ((said("examine", "up") ||     said("examine", "sky")))  {  print("Through the break in the vegetation over the stream, you can see the "        "sky.");  }  [ look downif (said("examine", "down"))  {  print("There's nothing interesting down here.");  }  [ look rocksif (said("examine", "rock"))  {  print("The stream rushes over the rocks that lie in its path.");  }  [ look vinesif (said("examine", "vine"))  {  print("There are vines everywhere in a jungle!");  }  [ look swampif (said("examine", "swamp"))  {  print("The still parts of the stream appear to be swampy.");  }  [ go swimmingif ((said("swim", "rol") ||     said("anyword", "swim", "rol") ||     said("go", "water") ||     said("go", "anyword", "water") ||     said("jump", "water") ||     said("jump", "anyword", "water") ||     said("go", "creek") ||     said("go", "anyword", "creek") ||     said("jump", "creek") ||     said("jump", "anyword", "creek") ||     said("enter", "water") ||     said("enter", "creek")))  {  print("If you insist, give it a try!");  }  [ look boatif (said("examine", "boat"))  {  print("There is no %w2 here.");  }  [ look manif (said("examine", "boy"))  {  [ if traveler #3 is still on screen  if (vTraveler3Status == 3)    {    print("There is no man close enough.");    }  else    {    print("The other travelers are ahead of you on the road.");    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  print("There is no man close enough.");  }  [ look grassif (said("examine", "grass"))  {  print("The grass is long and lush from the moist climate.");  }    [ look muleif (said("examine", "donkey"))  {  print("There isn't a mule to look at now.");  }  [ look snakeif (said("examine", "boa"))  {  print("It is difficult to see snakes in the jungle. You could be looking "        "right at one and not see it!");  }  [ look pathif ((said("examine", "path") ||     said("examine", "anyword", "path")))  {  print("This is another section of the ancient Spanish road.");  }  [ look quicksandif (said("examine", "quicksand"))  {  print("There is no way of knowing what is under the water.");  }  [ look cliffif (said("examine", "cliff"))  {  print("It is a jungle cliff with jungle plants growing on it.");  }  [ drink waterif ((said("acquire", "water") ||     said("anyword", "drink", "rol") ||     said("drink", "rol")))  {  print("You don't need any water.");  }  [ look alligatorif (said("examine", "alligator"))  {  print("An alligator can be anywhere in a jungle!");  }  Done:[ call main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "The more you struggle, the quicker you sink ..."#message 2 "You are having a bad day and this gator is having lunch!"#message 16 "It's hard to believe, but even the depths of the jungle can be beautiful! Here the road crosses a jungle stream."#message 17 "Jungle plants line the stream."#message 18 "This is a small, seasonal stream."#message 19 "You don't want to prolong your stay in this jungle by doing that!"#message 20 "This is yet another view of more jungle trees."#message 21 "Most of the ground here is covered by the stream."#message 22 "Through the break in the vegetation over the stream, you can see the sky."#message 23 "There's nothing interesting down here."#message 24 "The stream rushes over the rocks that lie in its path."#message 25 "There are vines everywhere in a jungle!"#message 26 "The still parts of the stream appear to be swampy."#message 28 "If you insist, give it a try!"#message 29 "There is no %w2 here."#message 31 "The other travelers are ahead of you on the road."#message 32 "They can't hear you."#message 33 "The grass is long and lush from the moist climate."#message 35 "There isn't a mule to look at now."#message 36 "There is no man close enough."#message 37 "It is difficult to see snakes in the jungle. You could be looking right at one and not see it!"#message 38 "This is another section of the ancient Spanish road."#message 39 "There is no way of knowing what is under the water."#message 40 "It is a jungle cliff with jungle plants growing on it."#message 41 "That gator was hiding just out of sight. There was nothing you could do!"#message 42 "An alligator can be anywhere in a jungle!"#message 50 "You don't need any water."