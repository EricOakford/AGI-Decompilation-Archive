[***********************************************************[[ rm.Tunnel_1[[ The first tunnel location, directly below the outhouse.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDark1                       o1#define oDark2                       o2#define oDark3                       o3#define oDark4                       o4#define oDark5                       o5#define oDark6                       o6#define oDark7                       o7#define oDark8                       o8#define vFlicker                   v220[ v221 and v222 are not used#define vDigTimer                  v223#define vShowMsg                   v224#define fDrawDark                  f220#define fLight1                    f221#define fLight2                    f222#define fLight3                    f223#define fLight4                    f224#define fLight5                    f225#define fLight6                    f226#define fLight7                    f227#define fLight8                    f228#define fSoundDone                 f229[ f230 - f237 are not used#define fClimbing                  f238#define fFalling                   f239[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the tunnel logic, that handles all the common  [ tunnel functions  load.logics(lgc.Tunnels);    [ load picture for current room  load.pic(currentRoom);    [ load views needed by objects in the room  load.view(vw.WideJerrodCA);  load.view(vw.Darkness);    [ load sound used in the room  load.sound(m.FoundGold);    [ draw the picture  draw.pic(currentRoom);    [ add the darkness panels - these black out areas of the  [ tunnel that are beyond the range of Jerrod's light  [ (don't draw them yet, lgc.DarkenTunnel will do that)  animate.obj(oDark1);  set.view(oDark1, vw.Darkness);  set.loop(oDark1, 0);  set.cel(oDark1, 0);  set.priority(oDark1, 15);  ignore.objs(oDark1);  ignore.blocks(oDark1);  position(oDark1, 0, 159);  [ darkness panel 2  animate.obj(oDark2);  set.view(oDark2, vw.Darkness);  set.loop(oDark2, 0);  set.cel(oDark2, 0);  set.priority(oDark2, 15);  ignore.objs(oDark2);  ignore.blocks(oDark2);  position(oDark2, 8, 160);  [ darkness panel 3  animate.obj(oDark3);  set.view(oDark3, vw.Darkness);  set.loop(oDark3, 0);  set.cel(oDark3, 0);  set.priority(oDark3, 15);  ignore.objs(oDark3);  ignore.blocks(oDark3);  position(oDark3, 16, 150);  [ darkness panel 4  animate.obj(oDark4);  set.view(oDark4, vw.Darkness);  set.loop(oDark4, 0);  set.cel(oDark4, 0);  set.priority(oDark4, 15);  ignore.objs(oDark4);  ignore.blocks(oDark4);  position(oDark4, 24, 148);  [ darkness panel 5  animate.obj(oDark5);  set.view(oDark5, vw.Darkness);  set.loop(oDark5, 0);  set.cel(oDark5, 0);  set.priority(oDark5, 15);  ignore.objs(oDark5);  ignore.blocks(oDark5);  position(oDark5, 32, 136);  [ darkness panel 6  animate.obj(oDark6);  set.view(oDark6, vw.Darkness);  set.loop(oDark6, 0);  set.cel(oDark6, 0);  set.priority(oDark6, 15);  ignore.objs(oDark6);  ignore.blocks(oDark6);  position(oDark6, 40, 142);  [ darkness panel 7  animate.obj(oDark7);  set.view(oDark7, vw.Darkness);  set.loop(oDark7, 0);  set.cel(oDark7, 0);  set.priority(oDark7, 15);  ignore.objs(oDark7);  ignore.blocks(oDark7);  position(oDark7, 48, 136);  [ darkness panel 8  animate.obj(oDark8);  set.view(oDark8, vw.Darkness);  set.loop(oDark8, 0);  set.cel(oDark8, 0);  set.priority(oDark8, 15);  ignore.objs(oDark8);  ignore.blocks(oDark8);  position(oDark8, 56, 136);    [ Jerrod  animate.obj(ego);  set.view(ego, vw.WideJerrodCA);  draw(ego);    [ the room starts out all darkened  call(lgc.DarkenTunnel);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if coming from the outhouse, and message not displayed yetif (previousRoom == rm.OuthouseInterior && vShowMsg == 0)  {  [ 'thank' the player for sending Jerrod into an outhouse  [ hole!  print.at("Thanks a lot!", 6, 19, 0);  vShowMsg = 1;  sound(m.FoundGold, fSoundDone);  }  [ to simulate flickering of torch, use a random timer to[ redraw a black box over the area of tunnel that is[ darkened[ if flicker timer has counted downif (vFlicker == 0)  {  [ if Jerrod is stopped  if (egoDir == STOPPED)    {    [ if the redraw darkness flag is NOT set    if (!isset(fDrawDark))      {      [ draw a black box over the left side tunnel (when      [ Jerrod moves, the cleared areas will be uncovered)      clear.text.rect(7, 0, 21, 16, BLACK);      set(fDrawDark);      }    }  else    {    [ Jerrod is moving; clear the redraw darkness flag    reset(fDrawDark);    [ choose a random time between 2 and 4 cycles    random(2, 4, FlickerTime);    [ set flicker delay to the random vlaue    vFlicker = FlickerTime;    [ draw a black box over the left side tunnel    clear.text.rect(7, 0, 21, 16, BLACK);    }  }  [ decrement flicker timer--vFlicker;[ if Jerrod has a lantern or a match litif ((isset(LanternLit) || isset(MatchLit)))  {  [ depending on position, remove the darkness panels so  [ Jerrod can see the area around him  if (posn(ego, 0, 1, 4, 167) && !isset(fLight1))    {    erase(oDark1);    set(fLight1);    }  if (posn(ego, 0, 1, 12, 167) && !isset(fLight2))    {    erase(oDark2);    set(fLight2);    }  if (posn(ego, 0, 1, 20, 167) && !isset(fLight3))    {    erase(oDark3);    set(fLight3);    }  if (posn(ego, 0, 1, 28, 167) && !isset(fLight4))    {    erase(oDark4);    set(fLight4);    }  if (posn(ego, 7, 1, 36, 167) && !isset(fLight5))    {    erase(oDark5);    set(fLight5);    }  if (posn(ego, 15, 1, 44, 167) && !isset(fLight6))    {    erase(oDark6);    set(fLight6);    }  if (posn(ego, 23, 1, 52, 167) && !isset(fLight7))    {    erase(oDark7);    set(fLight7);    }  if (posn(ego, 31, 1, 60, 167) && !isset(fLight8))    {    erase(oDark8);    set(fLight8);    }  }  [ if timer is activated (>0)if (vDigTimer > 0)  {  [ increment the timer each cycle  ++vDigTimer;  }  [ when 30 cycles passif (vDigTimer == 30)  {  [ Jerrod is done digging    [ Jerrod no longer cycles when not moving  reset(CycleAtRest);  start.motion(ego);  [ restore normal tunnel view  set.view(ego, vw.WideJerrodCA);  }  [ at 31 cyclesif (vDigTimer == 31)  {  [ reset the timer  vDigTimer = 0;  [ no gold can be found in this tunnel section  print.at("Nothin'!", 2, 5, 0);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 1, 40, 1, 167))  {  [ update all objects (not sure why they do this since the  [ new.room command comes next - I guess it's so there'a a  [ split second before the room change with the room  [ updated)  force.update(ego);  position(ego, 129, 116);  new.room(rm.Tunnel_2); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look wall/lookif ((said("examine", "wall") ||     said("examine", "mine") ||     said("examine", "cave") ||     said("examine", "around") ||     said("examine")))  {  [ if under the outhouse, which is always visible  if (posn(ego, 64, 110, 159, 130))    {    print.at("Ya scan the walls for gold.", 2, 5, 0);    }  else    {    [ if Jerrod has a lit lantern or lit match    if ((isset(LanternLit) || isset(MatchLit)))      {      print.at("Ya scan the walls for gold.", 2, 5, 0);      }    else      {      print.at("It's too dern dark in here to see!", 2, 5, 0);      }    }  }  [ look goldif ((said("examine", "gold") ||     said("examine", "gold", "nugget") ||     said("examine", "nugget")))  {  print.at("There's no GOLD in sight right here.", 2, 5, 0);  }  [ get goldif ((said("acquire", "gold") ||     said("acquire", "gold", "nugget") ||     said("acquire", "nugget")))  {  print.at("There's no GOLD in sight right here.", 2, 5, 0);  }  [ use pickif ((said("pick") ||     said("pick", "gold") ||     said("use", "pick") ||     said("swing", "pick")))  {  if (has("Pick"))    {    [ if climbing or falling        [ (this is generic code that is in all tunnel rooms; in    [ this tunnel room, there's nowhere for Jerrod to climb    [ (or fall)    if ((isset(fClimbing) || isset(fFalling)))      {      if (isset(fClimbing))        {        print.at("Ya cain't do that while yer climbin'!", 2, 5, 0);        }      if (isset(fFalling))        {        print.at("That's impossible right now!", 2, 5, 0);        }      }    else      {      [ if up against the wall of the tunnel (by touching      [ the control line)      if (isset(egoHitSpecial))        {        [ change to digging view        set.view(ego, vw.TunnelDigging);        [ start timer        vDigTimer = 1;        [ make sure Jerrod is not moving        stop.motion(ego);        [ allow cycling while motionless        set(CycleAtRest);        [ and begin cycling the digging view        start.cycling(ego);        }      else        {        print.at("Yer close to a likely spot. Try that nearby.", 2, 5, 0);        }      }    }  else    {    print.at("Ya don't have a pick.", 2, 5, 0);    }  }  [ look floorif ((said("examine", "deck") ||     said("examine", "dirt") ||     said("examine", "down")))  {  [ if under the outhouse, which is always visible  if (posn(ego, 64, 110, 159, 130))    {    print.at("Ya watch yer step in this part of the mine.", 2, 5, 0);    }  else    {    [ if Jerrod has a lantern or lit match    if ((isset(LanternLit) || isset(MatchLit)))      {      print.at("Ya look at the ground for any sign of gold.", 2, 5, 0);      }    else      {      print.at("It's too dern dark in here to see!", 2, 5, 0);      }    }  }  [ climb up to outhouse  (not possible)if ((said("anyword", "outhouse", "rol") ||     said("anyword", "out", "home", "rol") ||     said("anyword", "anyword", "outhouse", "rol") ||     said("anyword", "anyword", "out", "home", "rol") ||     said("outhouse", "rol") ||     said("anyword", "hole", "rol") ||     said("climb", "wall", "rol")))  {  print.at("The outhouse is out of reach.", 2, 5, 0);  }  [ look ladder (there are no ladders in this room)if (said("examine", "ladder"))  {  [ if under the outhouse, which is always visible  if (posn(ego, 64, 110, 159, 130))    {    print.at("There's no ladder in sight.", 2, 5, 0);    }  else    {    [ if Jerrod has a lantern or a lit match    if ((isset(LanternLit) || isset(MatchLit)))      {      print.at("There's no ladder in sight.", 2, 5, 0);      }    else      {      print.at("It's too dern dark in here to see!", 2, 5, 0);      }    }  }Done:[ call the tunnel logic to handle all functions common to[ all the tunnelscall(lgc.Tunnels);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Ya scan the walls for gold."#message 13 "Ya cain't do that while yer climbin'!"#message 14 "Yer close to a likely spot. Try that nearby."#message 15 "Ya don't have a pick."#message 16 "That's impossible right now!"#message 17 "It's too dern dark in here to see!"#message 20 "Nothin'!"#message 23 "Ya look at the ground for any sign of gold."#message 24 "Thanks a lot!"#message 25 "Ya watch yer step in this part of the mine."#message 26 "The outhouse is out of reach."#message 47 "There's no GOLD in sight right here."#message 80 "There's no ladder in sight."#message 90 "Even in the depths of this darkness, death has found you!"