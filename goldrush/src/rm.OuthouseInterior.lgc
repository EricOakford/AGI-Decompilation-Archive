[***********************************************************[[ rm.OuthouseInterior[[ The interior of the outhouse by Jake's cabin. Jerrod has[ to go down the hole (YUCK!) to find the tunnel that leads[ him to find Jake.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oFlies1                      o1#define oFlies2                      o2#define oFlies3                      o3#define oDoor                        o4#define vTmpVal                    v221#define vClimbStatus               v222#define vTimer                     v223#define vTmpY                      v224#define vSitStatus                 v225#define fEgoMoved                  f220#define fSndDone                   f221#define fSitFlag                   f222[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {    [ load the lantern logic  load.logics(lgc.Lantern);    [ load picture for current room  load.pic(currentRoom);    [ load view used in the room  load.view(vw.OuthouseArt);    [ load sound used in the room  load.sound(m.FoundGold);    [ draw current room picture  draw.pic(currentRoom);    [ door and walls that go transparent when Jerrod opens the  [ door  animate.obj(oDoor);  set.view(oDoor, vw.OuthouseArt);  set.loop(oDoor, 5);  set.cel(oDoor, 0);  set.priority(oDoor, 15);  position(oDoor, 66, 148);  ignore.blocks(oDoor);  ignore.objs(oDoor);  draw(oDoor);  stop.update(oDoor);    [ flies (it's an outhouse...)  animate.obj(oFlies1);  set.view(oFlies1, vw.OuthouseArt);  set.loop(oFlies1, 3);  ignore.objs(oFlies1);  ignore.blocks(oFlies1);  set.priority(oFlies1, 14);  [ top-left  position(oFlies1, 67, 92);  vTmpVal = 2;  cycle.time(oFlies1, vTmpVal);  draw(oFlies1);  [ second group of flies  animate.obj(oFlies2);  set.view(oFlies2, vw.OuthouseArt);  set.loop(oFlies2, 3);  ignore.objs(oFlies2);  ignore.blocks(oFlies2);  set.priority(oFlies2, 14);  [ top-center  position(oFlies2, 78, 92);  vTmpVal = 2;  cycle.time(oFlies2, vTmpVal);  draw(oFlies2);  [ third group of flies  animate.obj(oFlies3);  set.view(oFlies3, vw.OuthouseArt);  set.loop(oFlies3, 3);  ignore.objs(oFlies3);  ignore.blocks(oFlies3);  set.priority(oFlies3, 14);  [ top-right  position(oFlies3, 95, 92);  vTmpVal = 2;  cycle.time(oFlies3, vTmpVal);  draw(oFlies3);    [ Jerrod, with large view taken from the outhouse art view  animate.obj(ego);  set.view(ego, vw.OuthouseArt);  vTmpVal = 2;  step.size(ego, vTmpVal);  draw(ego);    [ now show the picture  show.pic();  }[ **************************************[ EVERY CYCLE[ **************************************  [ because the view assigned to ego object has other loops in[ it, need to manually adjust ego's loop based on directionif ((egoDir == UP ||     egoDir == UP_RIGHT ||     egoDir == RIGHT ||     egoDir == DOWN_RIGHT))  {  [ use right view  set.loop(ego, 0);  fix.loop(ego);  }if ((egoDir == DOWN ||     egoDir == DOWN_LEFT ||     egoDir == LEFT ||     egoDir == UP_LEFT))  {  [ use left view  set.loop(ego, 1);  fix.loop(ego);  }  [ if Jerrod has moved to the seat, and is ready to begin to[ climb in the outhouse holeif (isset(fEgoMoved) && vClimbStatus == 1)  {  [ reset flag  reset(fEgoMoved);  [ advance to next stage  ++vClimbStatus;  [ Jerrod stops moving  stop.motion(ego);  [ change to loop showing Jerrod sitting down  set.loop(ego, 2);  fix.loop(ego);  [ run cycle showing Jerrod sitting  set(CycleAtRest);  set.cel(ego, 0);  end.of.loop(ego, fEgoMoved);  }  [ after Jerrod sitsif (isset(fEgoMoved) && vClimbStatus == 2)  {  [ reset flag  reset(fEgoMoved);  [ advance to next stage  ++vClimbStatus;  [ have player confirm the choice  print.at("\"Do I really have to do this?\"", 2, 5, 35);  [ change prompt and force it to redraw  set.string(inputPrompt, "Yes or no %g69");  accept.input();  inputLength = 21;  }  [ if player confirmed, and has Jerrod has jumped inif (isset(fEgoMoved) && vClimbStatus == 4)  {  [ advance to next stage  reset(fEgoMoved);  ++vClimbStatus;  set(leaveWindow);  print.at("Gulp!", 4, 17, 0);  }  [ while player is in the holeif (vClimbStatus == 5)  {  [ increment timer  ++vTimer;  [ after 20 cycles  if (vTimer == 20)    {    [ reset timer    vTimer = 0;    [ advance to next stage    ++vClimbStatus;    [ erase the message window    close.window();    [ Jerrod is now gone from screen    erase(ego);    [ score 3 points    currentScore  += 3;    [ force input prompt back to normal (not necessary - it    [ gets reset at start of cycle as soon as Jerrod entered    [ anything after being asked 'yes/no')    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    }  }  [ after scoring pointsif (vClimbStatus == 6)  {  [ increment timer  ++vTimer;  [ after 20 cycles  if (vTimer == 20)    {    [ reset timer (not necessary since a new.room is coming    [ next)    vTimer = 0;    [ increment status (not necessary since a new.room is    [ coming next)    ++vClimbStatus;    [ force input prompt back to normal (not necessary - it    [ gets reset at start of cycle as soon as Jerrod entered    [ anything after being asked 'yes/no')    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    [ set Jerrod's loop, direction and position for next room    set.loop(ego, 2);    egoDir = STOPPED;    position(ego, 82, 125);    [ reset the cycle at rest flag    reset(CycleAtRest);    [ go to the first tunnel room    new.room(rm.Tunnel_1); [ ##LE001##    }  }  [ if Jerrod decided NOT to jump in after all and has stood[ back upif (isset(fEgoMoved) && vClimbStatus == 10)  {  [ reset flag  reset(fEgoMoved);  [ reset status  vClimbStatus = 0;  [ erase message window  close.window();  [ reset cycle-at-rest flag so Jerrod won't cycle when he  [ stops moving  reset(CycleAtRest);  [ Jerrod is allowed to move again  start.motion(ego);  [ reset to facing right view  set.loop(ego, 0);  release.loop(ego);  observe.blocks(ego);  }  [ if Jerrod has decided to 'sit'if (vSitStatus == 1)  {  [ advance to next stage  vSitStatus = 2;  ignore.blocks(ego);  [ move Jerrod to the seat  move.obj(ego, 84, 146, 0, fSitFlag);  }  [ after Jerrod gets to the seatif (isset(fSitFlag) && vSitStatus == 2)  {  [ reset the flag  reset(fSitFlag);  [ advance to next stage  vSitStatus = 3;  [ Jerrod stops moving  stop.motion(ego);  [ shut the door for privacy  start.update(oDoor);  end.of.loop(oDoor, fSitFlag);  }  [ after door is shutif (isset(fSitFlag) && vSitStatus == 3)  {  [ reset flag  reset(fSitFlag);  [ advance to next stage  vSitStatus = 4;  print("You sit and think.");  }[ if Jerrod is done, and wants to stand upif (vSitStatus == 5)  {  [ advance to next stage  vSitStatus = 6;  [ change Jerrod to loop facing left  set.loop(ego, 1);  [ open the door  reverse.loop(oDoor, fSitFlag);  }  [ after door opensif (isset(fSitFlag) && vSitStatus == 6)  {  [ reset flag and status  reset(fSitFlag);  vSitStatus = 0;    [ Jerrod can move again  observe.blocks(ego);  start.motion(ego);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod is exiting the outhouseif (posn(ego, 60, 100, 61, 167))  {  [ set his position and loop for the next room  position(ego, 122, 119);  set.loop(ego, 1);    [ if Jerrod's lantern is lit  if (isset(LanternLit))    {    reset(LanternLit);    print("Ya blow out the lantern before leavin' the outhouse.");    }  [ if Jerrod's match is lit  if (isset(MatchLit))    {    reset(MatchLit);    print("Ya blow out the match before leavin' the outhouse.");    }  [ go back to the cabin, next to the outhouse  new.room(rm.JakesCabin); [ ##LE002##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ whenever anything is entered, force prompt back to normalset.string(inputPrompt, "%g69");accept.input();inputLength = 38;[look/look aroundif ((said("examine", "around") ||     said("examine", "outhouse") ||     said("examine")))  {  print("This is just a normal outhouse. At least it appears to be.");  }  [ look fliesif (said("examine", "flies"))  {  print("There's nothin' unusual 'bout flies in an outhouse.");  }  [ look holeif ((said("examine", "hole") ||     said("examine", "down", "hole") ||     said("examine", "down") ||     said("examine", "in", "hole") ||     said("examine", "below") ||     said("examine", "below", "outhouse") ||     said("examine", "shaft")))  {  [ if Jerrod has a lit match, or lit lantern  if ((isset(LanternLit) || isset(MatchLit)))    {    print("The shaft under the outhouse is deeper than any outhouse shaft you "          "have ever seen!");    }  else    {    print("It's difficult to see anything from here. It's dark down there.");    }  }  [ smellif ((said("smell") ||     said("anyword", "smell") ||     said("smell", "anyword")))  {  print("Well, let's just say it probably wouldn't sell well in a bottle!");  }  [ jumpif (said("jump"))  {  print("Jump where?");  }  [ go down hole/jump in holeif ((said("go", "down") ||     said("go", "down", "hole") ||     said("go", "down", "shaft") ||     said("go", "hole") ||     said("go", "in", "hole") ||     said("go", "in", "shaft") ||     said("enter", "hole") ||     said("enter", "shaft") ||     said("crawl", "down") ||     said("crawl", "down", "hole") ||     said("crawl", "down", "shaft") ||     said("crawl", "hole") ||     said("crawl", "in", "hole") ||     said("crawl", "in", "shaft") ||     said("climb", "down") ||     said("climb", "down", "hole") ||     said("climb", "down", "shaft") ||     said("climb", "hole") ||     said("climb", "in", "hole") ||     said("climb", "in", "shaft") ||     said("jump", "down") ||     said("jump", "hole") ||     said("jump", "shaft") ||     said("jump", "in", "hole") ||     said("jump", "in", "shaft") ||     said("jump", "down", "hole") ||     said("jump", "down", "shaft") ||     said("go", "below", "outhouse") ||     said("go", "below", "out", "home") ||     said("climb", "below", "outhouse") ||     said("climb", "below", "out", "home") ||     said("crawl", "below", "outhouse") ||     said("crawl", "below", "out", "home")))  {  [ if Jerrod is sitting  if (vSitStatus != 0)    {    print("Try that later.");    goto(Done);    }      [ if Jerrod is already in the climbing sequence  if (vClimbStatus == 1)    {    print("\"I'm on my way! Be patient!!\"");    }  if (vClimbStatus == 2)    {    print("\"I'm on my way! Be patient!!\"");    }  if (vClimbStatus == 4)    {    print("\"I'm on my way! Be patient!!\"");    }  if (vClimbStatus == 5)    {    print("\"I'm on my way! Be patient!!\"");    }  if (vClimbStatus == 6)    {    print("\"I'm on my way! Be patient!!\"");    }      [ if waiting for player to confirm jumping into the  [ outhouse hole  if (vClimbStatus == 3)    {    [ play score sound    sound(m.FoundGold, fSndDone);    [ advance to stage 4    ++vClimbStatus;    [ erase message window    close.window();    [ force input prompt back to normal (not necessary -    [ it's already reset at start of this cycle)    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;        [ adjust Jerrod's position to show him going down    vTmpVal = 6;    vTmpY = 238;    reposition(ego, vTmpVal, vTmpY);    [ change loop to show Jerrod going down the hole    set.loop(ego, 4);    set.cel(ego, 0);    vTmpVal = 2;    cycle.time(ego, vTmpVal);    [ then run the cycle once    end.of.loop(ego, fEgoMoved);    }      [ if not climbing yet  if (vClimbStatus == 0)    {    [ move to the seat    ignore.blocks(ego);    move.obj(ego, 72, 144, 1, fEgoMoved);    [ and start climb sequence    ++vClimbStatus;    }  }  [ yesif (said("y"))  {  [ if not specifically waiting for player to respond yes/no  if ((vClimbStatus == 0 ||       vClimbStatus == 1 ||       vClimbStatus == 2 ||       vClimbStatus == 4 ||       vClimbStatus == 5 ||       vClimbStatus == 6))    {    print("Yes what?");    }      [ if waiting for player to confirm jumping into outhouse  [ hole  if (vClimbStatus == 3)    {    [ play score sound    sound(m.FoundGold, fSndDone);    [ advance to stage 4    ++vClimbStatus;    [ close message window    close.window();    [ force input prompt back to normal (not necessary- it's    [ already reset at start of this cycle)    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;        [ adjust Jerrod's position to show him going down    vTmpVal = 6;    vTmpY = -18; [ 238;    reposition(ego, vTmpVal, vTmpY);    [change to the loop showing Jerrod going down into the    [ hole    set.loop(ego, 4);    set.cel(ego, 0);    vTmpVal = 2;    cycle.time(ego, vTmpVal);    [ then run the cycle once    end.of.loop(ego, fEgoMoved);    }  }  [ noif (said("n"))  {  [ if not specifically waiting for player to respond yes/no  if ((vClimbStatus == 0 ||       vClimbStatus == 1 ||       vClimbStatus == 2 ||       vClimbStatus == 4 ||       vClimbStatus == 5 ||       vClimbStatus == 6))    {    print("No what!");    }      [ if waiting for player to confirm jumping into outhouse  [ hole  if (vClimbStatus == 3)    {    [ Jerrod decides not to jump in    vClimbStatus = 10;    [ leave this message up while Jerrod stands back up    set(leaveWindow);    print.at("Whew!", 6, 17, 0);    [ force input prompt back to normal (not necessary -    [ it's already reset at start of this cycle)    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    [ Jerrod stands back up    reverse.loop(ego, fEgoMoved);    }  }  [ sitif ((said("sit") ||     said("sit", "anyword") ||     said("anyword", "sit") ||     said("use", "outhouse")))  {  if (vClimbStatus != 0)    {    print("Try that later.");    goto(Done);    }  if (vSitStatus == 0)    {    print("\"Excuse me.\"");    vSitStatus = 1;    }  else    {    print("You're already sitting.");    }  }  [ stand upif ((said("stand") ||     said("stand", "up") ||     said("acquire", "up") ||     said("quit", "sit")))  {  [ if 'sitting'  if (vSitStatus == 4)    {    [ change stage to get Jerrod standing up    vSitStatus = 5;    }  else    {    [ if not climbing,    if (vClimbStatus == 0)      {      print("You're already standing.");      }    else      {      print("Try that later.");      }    }  }  [ drop anything down the holeif (said("discard", "rol"))  {  print("If ya drop that down the hole, ya may never see it again!");  }  Done:[ if any unknown word was enteredif (unknownWordNum > 0)  {  [ force status line to update (not necessary, because the  [ input line gets reset at start of any cycle where player  [ provides any input)  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  [ manage lantern related commandscall(lgc.Lantern);return();[ **************************************[ MESSAGES[ **************************************#message 1 "\"Do I really have to do this?\""#message 2 "Yes or no %g69"#message 3 "%g69"#message 4 "\"I'm on my way! Be patient!!\""#message 5 "Yes what?"#message 7 "Gulp!"#message 9 "No what!"#message 10 "Whew!"#message 11 "This is just a normal outhouse. At least it appears to be."#message 12 "There's nothin' unusual 'bout flies in an outhouse."#message 13 "It's difficult to see anything from here. It's dark down there."#message 14 "Well, let's just say it probably wouldn't sell well in a bottle!"#message 15 "\"Excuse me.\""#message 16 "Jump where?"#message 17 "You sit and think."#message 18 "The shaft under the outhouse is deeper than any outhouse shaft you have ever seen!"#message 19 "You're already standing."#message 20 "You're already sitting."#message 24 "Ya blow out the lantern before leavin' the outhouse."#message 25 "Ya blow out the match before leavin' the outhouse."#message 26 "Try that later."#message 27 "If ya drop that down the hole, ya may never see it again!"