[***********************************************************[[ lgc.InitQuiz[[ This logic sets up the quiz that the player must pass in[ order to continue; it's a form of copy protection, because[ answers are in the book provided with the game.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define vTmpPic     v220[ set haveMatch to 'True' so said commands are ignored (this[ is not really necessary since the logic only runs once,[ but the programmers added it anyway)set(haveMatch);[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ game timer is not used yet  set(PauseGameTimer);  [ set speed to max  animationInterval = 0;    [no player input or control at this point  prevent.input();  program.control();  status.line.off();    [ make sure quick start shortcut is turned off  reset(QuickStart);    [load the blank start picture  vTmpPic = pic.Start;  load.pic(vTmpPic);  draw.pic(vTmpPic);  discard.pic(vTmpPic);    [ set flag to indicate quiz is starting  set(StartQuiz);  show.pic();  }  [ now choose a random questionif (isset(StartQuiz))  {  [ there are 87 possible questions to choose from  random(1, 87, TestQuestion);    [ to make logics manageable, the questions are split  [ across three different logics  if ((TestQuestion > 0) && (TestQuestion < 30))    {    new.room(lgc.CopyProt_1); [ ##LE001##    }  if ((TestQuestion > 29) && (TestQuestion < 57))    {    new.room(lgc.CopyProt_2); [ ##LE002##    }  if ((TestQuestion > 56) && (TestQuestion < 88))    {    new.room(lgc.CopyProt_3); [ ##LE003##    }  }return();[ **************************************[ MESSAGES[ **************************************