[***********************************************************[[ rm.JerrodsHouse[[ This is the location of Jerrod's home.[ [ The real estate agent will stop by when he wants to buy [ the house from Jerrod. Other pedestrians who might walk by[ include Mr. Quail or the bank teller.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSteamship                   o1#define oFrontDoor                   o2#define oGate                        o3#define oSaleSign                    o4#define oAgent                       o5#define oWagon                       o6#define oPedestrian                  o7#define vShipY                     v220#define vAgentDist                 v221#define vAgentPhase                v222  #define A_NOT_HERE            0  [ 0: agent not around  #define A_OFFERING_L          1  [ 1: agent wants to make an offer (pacing left)  #define A_OFFERING_R          2  [ 2: agent wants to make an offer (pacing right)  #define A_OFFERED             3  [ 3: offer made; walking to Jerrod's house  #define A_WAIT_REPLY          4  [ 4: waiting for reply  #define A_DECLINED            5  [ 5: offer declined  #define A_LEAVING             6  [ 6: leaving after being declined  #define A_LEFT                7  [ 7: agent left after being declined  #define A_ACCEPTED            8  [ 8: agent accepted offer  #define A_TO_GATE             9  [ 9: after sale, moving to gate  #define A_OPEN_GATE          10  [ 10: after sale, opening gate  #define A_PAST_GATE          11  [ 11: after sale, moving inside gate  #define A_CLOSE_GATE         12  [ 12: after sale, closing gate  #define A_MOVE_1             13  [ 13: move to front door step 1  #define A_MOVE_2             14  [ 14: move to front door step 2  #define A_MOVE_3             15  [ 15: move to front door step 3  #define A_OPEN_DOOR          16  [ 16: open the front door  #define A_ENTERING           17  [ 17: agent goes inside  #define A_AGENT_GONE         18  [ 18: agent closes the door, sale is complete#define vTmpVal                     v223#define vWgnStatus                  v224#define vWagonDist                  v225#define vPedDist                    v226#define vPedStatus                  v227#define vPedX                       v228#define vPedY                       v229#define vAgentX                     v230#define vAgentY                     v231#define vOldAgentX                  v232#define vOldAgentY                  v233#define fShowShip                   f220#define fShipMoved                  f221[ f222 is not used#define fHouseSold                  f223#define fGateStopped                f224#define fGateOpen                   f225#define fDoorStopped                f226#define fDoorOpen                   f227#define fRunOver                    f228#define fAgentMoved                 f229#define fForSale                    f230#define fTreePoster                 f231#define fWgnMoved                   f232#define fDoneDying                  f233#define fPedMoved                   f234#define fSoldSndDone                f235#define fSndDone                    f236#define fDoorSndDone                f237[ FIRST CYCLE ONLY:if (isset(newRoom))  {  [ load, draw, discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ views for addtions to the picture  load.view(vw.SkylineArt);  load.view(vw.CityArt);  load.view(vw.Posters);    [ add skyline art to horizon  add.to.pic(vw.SkylineArt, 0, 5, 0, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 6, 20, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 40, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 60, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 80, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 100, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 12, 140, 47, 4, 4);    [ add house number and street sign  add.to.pic(vw.CityArt, 2, 0, 103, 47, 6, 6);  add.to.pic(vw.CityArt, 2, 1, 0, 91, 12, 12);    [ if gold rush has been announced  if (isset(RushIsPublic))    {    [ add poster indicating sea or land trips are available    add.to.pic(vw.Posters, 0, 2, 58, 104, 11, 11);    set(fTreePoster);    }      [ once added, horizon art not needed any more  [ (this also discards vw.Posters)  discard.view(vw.SkylineArt);    [ load other views used in the room  load.view(vw.JerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.HouseArt);  load.view(vw.Agent);  load.view(vw.AgentWithCash);  load.view(vw.ShortWagon);  load.view(vw.StmshipMed);  load.view(vw.MrQuail2D);  load.view(vw.BankTeller2D);    [ load all the sounds used in this room  load.sound(s.BadNews);  load.sound(s.AddToScore);  load.sound(s.UhOh); [ (this one isn't actually used)  load.sound(m.Death);  load.sound(s.Effect1);  load.sound(s.Effect2);  load.sound(s.Effect3);  load.sound(s.Effect4);    [ 'Y' position of steamship  vShipY = 49;    [ if steamship is moving, add it  if (SteamshipXM > 0 && SteamshipXM < 107)    {    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipMed);    set.loop(oSteamship, 3);    fix.loop(oSteamship);    position.v(oSteamship, SteamshipXM, vShipY);    set.priority(oSteamship, 4);    draw(oSteamship);    step.time(oSteamship, StmShipStep);    move.obj(oSteamship, 106, 49, 1, fShipMoved);    set(fShowShip);    }    [ add interior of house that's behind door  add.to.pic(vw.HouseArt, 3, 0, 85, 73, 6, 6);    [ if the Agent wants to make an offer  if (SellHousePhase == OFFERING)    {    [ add agent to screen    animate.obj(oAgent);    [ show him with cash in hand    set.view(oAgent, vw.AgentWithCash);    [ in front of Jerrod's house    position(oAgent, 90, 144);    draw(oAgent);    start.cycling(oAgent);    [ he begins pacing to the right    vAgentPhase = A_OFFERING_R;    set(fAgentMoved);    }    [ add front door to Jerrod's house  animate.obj(oFrontDoor);  set.view(oFrontDoor, vw.HouseArt);  set.loop(oFrontDoor, 0);  set.cel(oFrontDoor, 0);  [ if Jerrod is coming from inside the house  if (previousRoom == rm.HomeInterior)    {    [ show the door open    set.cel(oFrontDoor, 3);    set(fDoorOpen);    }  ignore.blocks(oFrontDoor);  position(oFrontDoor, 85, 73);  draw(oFrontDoor);  stop.update(oFrontDoor);    [ add the gate in front of Jerrod's house  animate.obj(oGate);  ignore.objs(oGate);  set.view(oGate, vw.HouseArt);  set.loop(oGate, 1);  set.cel(oGate, 0);  position(oGate, 101, 113);  draw(oGate);  stop.update(oGate);    [ if house is for sale, but not sold yet  if (SellHousePhase > NOT_FOR_SALE &&       SellHousePhase < SOLD)    {    [ add the for sale sign out front    animate.obj(oSaleSign);    set.view(oSaleSign, vw.HouseArt);    set.loop(oSaleSign, 2);    [ show cel with 'for sale' text    set.cel(oSaleSign, 0);    position(oSaleSign, 133, 105);    draw(oSaleSign);    stop.update(oSaleSign);    }      [ if house is sold  if (SellHousePhase == SOLD)    {    [ add 'sold' sign out front    animate.obj(oSaleSign);    set.view(oSaleSign, vw.HouseArt);    set.loop(oSaleSign, 2);    [ use cel with 'sold' text    set.cel(oSaleSign, 1);    position(oSaleSign, 133, 105);    draw(oSaleSign);    stop.update(oSaleSign);    set(fHouseSold);    }    [ if ship hasn't sailed yet  if (!isset(ShipSailed))    {    [ add wagon    animate.obj(oWagon);    set.view(oWagon, vw.ShortWagon);    [ choose a random starting location (vAgentDist is used    [ here as a temporary variable to get a random starting    [ direction)    random(0, 1, vAgentDist);    if (vAgentDist == 0)      {      set.loop(oWagon, 0);      position(oWagon, 0, 148);      draw(oWagon);      move.obj(oWagon, 122, 148, 2, fWgnMoved);      }    else      {      set.loop(oWagon, 1);      position(oWagon, 122, 148);      draw(oWagon);      move.obj(oWagon, 0, 148, 2, fWgnMoved);      }    [ wagon is on screen, moving    vWgnStatus = 1;    }      [ pedestrian can be one of two different people  animate.obj(oPedestrian);  [ no pedestrian at start  vPedStatus = 10;    [ Jerrod is in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ depending on where Jerrod came from,  [ adjust his position  if (previousRoom == rm.HomeInterior)    {    position(ego, 92, 78);    }  [ if coming from bottom? (this is actually  [ not possible; looks like some boiler plate   [ code that should have been deleted)  if (posn(ego, 150, 165, 159, 165))    {    position(ego, 152, 164);    }  [ if coming from above, need to adjust 'x' position to   [ account for change in perspective (street is wider at   [ bottom than at top)  if (posn(ego, 38, 35, 74, 40))    {    position(ego, 28, 73);    }  if (posn(ego, 75, 35, 79, 40))    {    position(ego, 37, 73);    }  if (posn(ego, 80, 35, 104, 40))    {    position(ego, 41, 73);    }  [ add Jerrod to screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE:[ **************************************[ if an offer is made while the rush was NOT public, but now[ the rush IS made publicif (isset(BuyingLow) && isset(RushIsPublic))  {  [ temporarily turn OFF the rush flag; otherwise the  [ transaction would start with low prices, then conclude  [ with high prices  reset(RushIsPublic);  }[ if wagon is done movingif (isset(fWgnMoved) && vWgnStatus == 1)  {  [ remove wagon from screen  reset(fWgnMoved);  erase(oWagon);  [ set status so it can reappear again  vWgnStatus = 10;  }[ if Jerrod is in the wagon path and still aliveif (EgoY == 148 && EgoHealthStatus == 0)  {  [ get distance from Jerrod to wagon  distance(ego, oWagon, vWagonDist);  [ the direction the wagon is going determines how close  [ Jerrod has to be in order to get 'hit'  get.dir(oWagon, vTmpVal);  [ wagon going left  if (vTmpVal == LEFT)    {    if ((vWagonDist == 23 || vWagonDist == 24))      {      set(fRunOver);      }    }  [ wagon going right  if (vTmpVal == RIGHT)    {    if ((vWagonDist == 22 || vWagonDist == 23))      {      set(fRunOver);      }    }  }[ if Jerrod got run overif (isset(fRunOver))  {  [ reset the flag  reset(fRunOver);  [ wagon keeps rolling over Jerrod's dead body  ignore.objs(ego);  [ switch to view showing him falling down dead  set.view(ego, vw.DyingJerrodNY);  [ make sure to start with first cel  set.cel(ego, 0);  [ allow ego object to cycle at rest  set(CycleAtRest);  [ run the loop one time  end.of.loop(ego, fDoneDying);  [ change Jerrod's status to 'run over by wagon'  EgoHealthStatus = 4;  }  [ after Jerrod finishes dyingif (isset(fDoneDying))  {  [ reset the flag  reset(fDoneDying);  [ call logic to handle details of death  call(lgc.DeathRunOver);  }  [ if the ship has not sailedif (!isset(ShipSailed))  {  [ if wagon is not on screen  if (vWgnStatus > 9)    {    [ random chance that the wagon comes back    random(20, 100, vWgnStatus);    [ one in 80 chance;    if (vWgnStatus == 77)      {      [ pick a random direction for the wagon      random(0, 1, vWgnStatus);      if (vWgnStatus == 0)        {        [ start wagon on right, going left        set.loop(oWagon, 1);        position(oWagon, 122, 148);        draw(oWagon);        move.obj(oWagon, 0, 148, 2, fWgnMoved);        }      else        {        [ start wagon on left, going right        set.loop(oWagon, 0);        position(oWagon, 0, 148);        draw(oWagon);        move.obj(oWagon, 122, 148, 2, fWgnMoved);        }      [ wagon is now on screen      vWgnStatus = 1;      }    }  }  [ if pedestrian is not present  if (vPedStatus > 9)  {  [ random chance that a pedestrian appears   random(20, 100, vPedStatus);  [ one in 80 chance  if (vPedStatus == 77)    {    [ pick one of two possible pedestrians at random    random(0, 1, vPedStatus);    if (vPedStatus == 0)      {      [ Mr. Quail      set.view(oPedestrian, vw.MrQuail2D);      }    if (vPedStatus == 1)      {      [ bank teller      set.view(oPedestrian, vw.BankTeller2D);      }    [ choose a random starting position    random(0, 1, vPedStatus);    if (vPedStatus == 0)      {      set.loop(oPedestrian, 0);      position(oPedestrian, 0, 154);      }    if (vPedStatus == 1)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 154);      }    draw(oPedestrian);    move.obj(oPedestrian, 76, 154, 1, fPedMoved);    [ pedestrian is on screen    vPedStatus = 3;    }  }  [ when pedestrian reaches first pointif (isset(fPedMoved) && vPedStatus == 3)  {  [ change direction and move to end point  reset(fPedMoved);  [ randomly determine second leg  random(0, 1, vPedStatus);  if (vPedStatus == 0)    {    move.obj(oPedestrian, 0, 154, 1, fPedMoved);    }  if (vPedStatus == 1)    {    move.obj(oPedestrian, 152, 154, 1, fPedMoved);    }  [ set status to indicate pedestrian is on second leg  vPedStatus = 4;  }  [ when pedestrian reaches end pointif (isset(fPedMoved) && vPedStatus == 4)  {  [ remove pedestrian from screen  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }[ get current position of pedestrianget.posn(oPedestrian, vPedX, vPedY);[ if pedestrian has not moved (blocked by Jerrod) if (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling the pedestrian  stop.cycling(oPedestrian);  }else  {  [ if moving, cycle the pedestrian  start.cycling(oPedestrian);  }[ save pedestrian's positionOldObj1X = vPedX;OldObj1Y = vPedY;[ if steamship is now in this area, but not shown yetif (SteamshipXM > 0 && SteamshipXM < 107 && !isset(fShowShip))  {  [ add the steamship to the screen  animate.obj(oSteamship);  set.view(oSteamship, vw.StmshipMed);  set.loop(oSteamship, 3);  fix.loop(oSteamship);  position.v(oSteamship, SteamshipXM, vShipY);  set.priority(oSteamship, 4);  draw(oSteamship);  step.time(oSteamship, StmShipStep);  [ and move it to the right  move.obj(oSteamship, 106, 49, 1, fShipMoved);  [ set flag to show ship is now visible  set(fShowShip);  }  [ if ship is done movingif (isset(fShipMoved))  {  [ reset flag  reset(fShipMoved);  [ and remove it from screen  erase(oSteamship);  }[ if house is for sale, but sign not posted yetif (SellHousePhase == FOR_SALE && !isset(fForSale))  {  [ post the sign  set(fForSale);  animate.obj(oSaleSign);  set.view(oSaleSign, vw.HouseArt);  set.loop(oSaleSign, 2);  set.cel(oSaleSign, 0);  position(oSaleSign, 133, 105);  draw(oSaleSign);  stop.update(oSaleSign);  }[ if house is sold, but sign doesn't say 'sold' yetif (SellHousePhase == SOLD && !isset(fHouseSold))  {  [ change sign to 'sold'  set(fHouseSold);  set.cel(oSaleSign, 1);  force.update(oSaleSign);  }[ if Jerrod is on an alarm line (approaching gate from the[ house) and gate is not openif (isset(egoHitSpecial) && !isset(fGateOpen))  {  [ play gate-open sound  sound(s.Effect3, fSndDone);  [ open the gate  start.update(oGate);  end.of.loop(oGate, fGateStopped);  set(fGateOpen);  [ allow Jerrod to cross over 'threshold'  ignore.blocks(ego);  }[ if Jerrod is not on an alarm line, is NOT next to the[ gate, and the gate is openif (!isset(egoHitSpecial) &&     !posn(ego, 96, 115, 115, 118) &&     isset(fGateOpen))  {  [ close it  reset(fGateOpen);  start.update(oGate);  reverse.loop(oGate, fGateStopped);  [ Jerrod can't cross over the gate 'threshold'  observe.blocks(ego);  }[ if gate has finished opening or closingif (isset(fGateStopped))  {  [ if gate is now closed  if (!isset(fGateOpen))    {    [ play gate-closed sound    sound(s.Effect4, fSndDone);    }  [ reset the flag  reset(fGateStopped);  stop.update(oGate);  }[ if Jerrod is NOT by the front door of his house and the [ door is currently openif (!posn(ego, 85, 71, 97, 77) && isset(fDoorOpen))  {  [ close the door  reset(fDoorOpen);  start.update(oFrontDoor);  reverse.loop(oFrontDoor, fDoorStopped);  [ Jerrod can't cross the threshold  observe.blocks(ego);  }[ if Jerrod is at his front dorif (posn(ego, 85, 70, 97, 70))  {  [ stop Jerrod here  stop.motion(ego);  [ if his front door is fully open  if (isset(fDoorStopped))    {    [ play door-open sound    sound(s.Effect2, fDoorSndDone);    [ then enter the house (which immediately stops    [ the sound!)    new.room(rm.HomeInterior); [ ##LE001##    }  }[ if the door is done moving, and it's open if (isset(fDoorStopped) && isset(fDoorOpen))  {  [ allow Jerrod and the agent (once he buys the house from  [ Jerrod) to enter the house   ignore.objs(oFrontDoor);  }[ if door is done moving, and is now closed  if (isset(fDoorStopped) && !isset(fDoorOpen))  {  [ no one can go through door while it's closed  observe.objs(oFrontDoor);  }[ when the door finishes movingif (isset(fDoorStopped))  {  [ if door is now closed  if (!isset(fDoorOpen))    {    [ play door-closed sound    sound(s.Effect2, fDoorSndDone);    }  [ reset flag  reset(fDoorStopped);  stop.update(oFrontDoor);  }[ get distance from Jerrod to the agentdistance(ego, oAgent, vAgentDist);[ if agent is close enough, has an offer, and Jerrod's not[ dead/dyingif (vAgentDist == 13 &&     SellHousePhase == OFFERING &&     EgoHealthStatus == 0)  {  [ make an offer  SellHousePhase = OFFER_MADE;  [ stop Jerrod  egoDir = STOPPED;  [ prevent Jerrod from moving vertically (not sure why  [ they need this block)  block(0, 129, 159, 132);  [ agent makes an offer  vAgentPhase = A_OFFERED;  reset(fAgentMoved);    [ if gold rush is NOT public yet  if (!isset(RushIsPublic))    {    [ agent offers a good price for Jerrod's house    print("The real estate man says, \"You are fortunate to own such a fine "          "piece of property.\"");    print("\"I like this property and am willing to pay top dollar. Will you "          "accept $850, in cash, for your house?\"");    [ to avoid having sale price change in middle of    [ transaction set the 'buylow' flag; this prevents the    [ gold rush from being made public until after the    [ transaction is finished    set(BuyingLow);    }  else    {    [ if gold rush has been announced, agent offers less    print("The real estate man says, \"Ever since folks have been rushing to "          "the gold in California, property values have been falling.\"");    print("\"But, I like your house and would like to buy it. I have $750 in "          "cash. Are you interested in selling?\"");    }      [ change prompt to indicate agent is waiting for an answer  set.string(inputPrompt, "yes or no: %g69");  [ force the input prompt to update  accept.input();  inputLength = 27;  }  [ if time-on-market passes the agent-wait-time, and house is[ for saleif (AgentWaitTime < TimeOnMarket &&     SellHousePhase == FOR_SALE)  {  [ move to offer phase  SellHousePhase = OFFERING;  [ reset agent wait time to 3 minutes  AgentWaitTime = 3;  [ reset time on market (it will increment automatically  [ as time goes by)  TimeOnMarket = 0;    [ add agent (with cash in hand) to the room   animate.obj(oAgent);  set.view(oAgent, vw.AgentWithCash);  position(oAgent, 2, 144);  draw(oAgent);  move.obj(oAgent, 140, 144, 1, fAgentMoved);  start.cycling(oAgent);  [ agent wants to make an offer and is pacing in front of  [ Jerrod's house  vAgentPhase = A_OFFERING_R;  }  [ if time-on-market counter passes the amount of time the[ agent is willing to wait while making an offerif (AgentWaitTime < TimeOnMarket && SellHousePhase == OFFERING)  {  print("The real estate man interested in buying your house says, \"If you "        "snooze, you lose. I've got to go!\"");  [ offer is considered declined  SellHousePhase = OFFER_DECLINED;  vAgentPhase = A_DECLINED;  }  [ if agent is pacing and reaches right side of Jerrod's[ houseif (vAgentPhase == A_OFFERING_R && isset(fAgentMoved))  {  [ turn around and pace left  vAgentPhase = A_OFFERING_L;  reset(fAgentMoved);  move.obj(oAgent, 80, 144, 1, fAgentMoved);  }[ if agent is pacing and reaches left side of Jerrod's houseif (vAgentPhase == A_OFFERING_L && isset(fAgentMoved))  {  [ turn around and pace right  vAgentPhase = A_OFFERING_R;  reset(fAgentMoved);  move.obj(oAgent, 140, 144, 1, fAgentMoved);  }[ if agent is making an offerif (vAgentPhase == A_OFFERED)  {  [ now he is waiting for a reply  vAgentPhase = A_WAIT_REPLY;  [ and stops moving  reset(fAgentMoved);  [ (the normal.motion and start.motion commands are not  [ needed; only the stop.motion and stop.cycling are   [ necessary)  normal.motion(oAgent);  stop.motion(oAgent);  start.motion(oAgent);  stop.cycling(oAgent);  }  [ if Jerrod has declined the agent's offerif (vAgentPhase == A_DECLINED)  {  [ the agent will leave  vAgentPhase = A_LEAVING;  [ change sell-phase to 'declined'  SellHousePhase = OFFER_DECLINED;  [ agent moves to left edge of screen  move.obj(oAgent, 2, 144, 1, fAgentMoved);  start.cycling(oAgent);  [ cancel the 'buying low' flag, so the gold rush can be   [made public once the time comes  reset(BuyingLow);  }  [ if leaving, and at edge of screenif (vAgentPhase == A_LEAVING && isset(fAgentMoved))  {  [ go back to normal 'for sale' mode  SellHousePhase = FOR_SALE;  [ agent will wait one minute before being interested in  [ making another offer  TimeOnMarket = 0;  AgentWaitTime = 1;  [ agent is gone from screen  vAgentPhase = A_LEFT;  [ erase him  reset(fAgentMoved);  erase(oAgent);  }  [ if Jerrod has accepted the offer, and agent has moved to[ the sidewalk in front of Jerrod's houseif (vAgentPhase == A_ACCEPTED && isset(fAgentMoved))  {  [ if Jerrod is NOT in front of the house  if (!posn(ego, 85, 70, 120, 144))    {    [ the agent moves up to the gate    reset(fAgentMoved);    vAgentPhase = A_TO_GATE;    move.obj(oAgent, 104, 121, 1, fAgentMoved);    start.cycling(oAgent);    [ cancel the 'buying low' flag, so the gold rush can be    [ made public once the time comes    reset(BuyingLow);    }  else    {    [ don't move until Jerrod leaves the vicinity    stop.cycling(oAgent);    }  }[ after agent gets to gateif (vAgentPhase == A_TO_GATE && isset(fAgentMoved))  {  [ the agent opens the gate  reset(fAgentMoved);  vAgentPhase = A_OPEN_GATE;  stop.cycling(oAgent);  sound(s.Effect3, fSndDone);  start.update(oGate);  end.of.loop(oGate, fAgentMoved);  }[ after agent opens the gateif (vAgentPhase == A_OPEN_GATE && isset(fAgentMoved))  {  [ agent moves past the gate  reset(fAgentMoved);  vAgentPhase = A_PAST_GATE;  ignore.blocks(oAgent);  move.obj(oAgent, 101, 110, 1, fAgentMoved);  start.cycling(oAgent);  }[ after agent passes through the gateif (vAgentPhase == A_PAST_GATE && isset(fAgentMoved))  {  [ agent closes the gate  reset(fAgentMoved);  vAgentPhase = A_CLOSE_GATE;  reverse.loop(oGate, fAgentMoved);  set.loop(oAgent, 2);  stop.cycling(oAgent);  }[ after agent closes the gateif (vAgentPhase == A_CLOSE_GATE && isset(fAgentMoved))  {  [ agent moves up to front door in three steps  reset(fAgentMoved);  vAgentPhase = A_MOVE_1;  move.obj(oAgent, 96, 90, 1, fAgentMoved);  start.cycling(oAgent);  }[ after reaching point 1if (vAgentPhase == A_MOVE_1 && isset(fAgentMoved))  {  [ move to point 2  reset(fAgentMoved);  vAgentPhase = A_MOVE_2;  move.obj(oAgent, 91, 76, 1, fAgentMoved);  }[ after reaching point 2if (vAgentPhase == A_MOVE_2 && isset(fAgentMoved))  {  [ move to point 3  reset(fAgentMoved);  vAgentPhase = A_MOVE_3;  move.obj(oAgent, 87, 76, 1, fAgentMoved);  }[ when agent gets to point 3 (in front of the door)if (vAgentPhase == A_MOVE_3 && isset(fAgentMoved))  {  [ open the front door  reset(fAgentMoved);  vAgentPhase = A_OPEN_DOOR;  sound(s.Effect1, fDoorSndDone);  start.update(oFrontDoor);  end.of.loop(oFrontDoor, fAgentMoved);  stop.cycling(oAgent);  }[ after agent opens the doorif (vAgentPhase == A_OPEN_DOOR && isset(fAgentMoved))  {  [ agent enters the house  reset(fAgentMoved);  vAgentPhase = A_ENTERING;  move.obj(oAgent, 87, 71, 1, fAgentMoved);  start.cycling(oAgent);  [ ignore blocks so agent can cross over the threshold  ignore.blocks(oAgent);  ignore.objs(oAgent);  }  [ after agent enters the houseif (vAgentPhase == A_ENTERING && isset(fAgentMoved))  {  [ the sequence is over  reset(fAgentMoved);  vAgentPhase = A_AGENT_GONE;  set.loop(oAgent, 2);  stop.cycling(oAgent);  [ close the front door  reverse.loop(oFrontDoor, fAgentMoved);  }  [ get agent's current positionget.posn(oAgent, vAgentX, vAgentY);[ if agent stops moving (by being blocked by Jerrod)if (vOldAgentX == vAgentX && vOldAgentY == vAgentY)  {  [ stop cycling  stop.cycling(oAgent);  }else  {  [ if agent is moving, cycle him  start.cycling(oAgent);  }[ save agent's positionvOldAgentX = vAgentX;vOldAgentY = vAgentY;[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ when going up, don't use horizon; just check ego's[ position insteadif (posn(ego, 22, 72, 42, 72))  {  [ this command is uncessary; the object gets reset  [ by the new.room command  release.loop(oSteamship);  new.room(rm.MainSt); [ ##LE002##  }[ if Jerrod is at a screen edge and NOT dealing with an[ offer on his houseif (edgeEgoHit != NOT_HIT && SellHousePhase != OFFER_MADE)  {  if (edgeEgoHit == LEFT_EDGE)    {    new.room(rm.GazeboPark); [ ##LE003##    }  if (edgeEgoHit == RIGHT_EDGE)    {    new.room(rm.LeonardsHouse); [ ##LE004##    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ always reset prompt to normal after any inputset.string(inputPrompt, "%g69");accept.input();inputLength = 38;[ look/look aroundif ((said("examine") ||     said("examine", "around")))  {  print("There are many houses in Brooklyn, but this one has a special place in "        "your heart.");  }[ yesif (said("y"))  {  [ if responding to offer made by the agent  if (SellHousePhase == OFFER_MADE)    {    [ if gold rush has NOT been announced    if (!isset(RushIsPublic))      {      [ Jerrod gets a better deal for his house            [ play score sound      sound(s.AddToScore, fSoldSndDone);      [ score nine points      currentScore  += 9;      print("Congratulations! Property values are at a premium. You have "            "conducted a prime sale! You are sad that your house is gone, but "            "you'll always have the memories.");      print("As you give the real estate man the keys to your house you say, "            "\"Mr. Quail will come by to pick up my personal belongings.\"");      }    else      {      [ after the gold rush is announced, deal is not as good      print("Property values dropped since the gold rush. You think to "            "yourself, I have just sold the house my father built and I didn't "            "get top dollar.");      print("As you give the real estate man the keys to your house you say, "            "\"Mr. Quail will come by to pick up my personal belongings.\"");      [ score only six points      currentScore  += 6;      [ play bad-news sound      sound(s.BadNews, fSoldSndDone);      [ set flag indicating house was sold for less      set(SoldHouseLow);      }    [ sell status is now 'sold', and agent has accepted offer    SellHousePhase = SOLD;    vAgentPhase = A_ACCEPTED;    reset(fAgentMoved);    [ agent moves to sidewalk in front of the house    move.obj(oAgent, 104, 144, 1, fAgentMoved);    start.cycling(oAgent);    [ set correct cash value for Jerrod    call(lgc.AdjustCash);    [ drop the house key - it's not Jerrod's house anymore    drop("House key");    [ change agent view to the one without handful of cash    set.view(oAgent, vw.Agent);    [ allow Jerrod to move freely    unblock();    [ cancel the 'buying low' flag, so the gold rush can be    [ made public once the time comes    reset(BuyingLow);    }  }[ noif (said("n"))  {  [ if an offer is being made  if (SellHousePhase == OFFER_MADE)    {    [ Jerrod declines the offer    print("You ponder for a moment and decide not to sell. You are too attached "          "to this house to part with it now.");    [ change sell status and agent status to 'declined'    SellHousePhase = OFFER_DECLINED;    vAgentPhase = A_DECLINED;    [ allow Jerrod to move freely    unblock();    [ cancel the 'buying low' flag, so the gold rush can be    [ made public once the time comes    reset(BuyingLow);    }  }    [ use keyif (said("use", "house key"))  {  [ if next to the gate  if (posn(ego, 96, 115, 115, 118))    {    [ if Jerrod has the key    if (has("House key"))      {      [ open the gate      sound(s.Effect3, fSndDone);      start.update(oGate);      end.of.loop(oGate, fGateStopped);      ignore.blocks(ego);      set(fGateOpen);      }    else      {      [ if no key, means house is sold      print("It makes you sad to think of it, but the house that your father "            "built no longer belongs to you.");      }    }      [ if in front of door  if (posn(ego, 85, 74, 97, 77))    {    [ if Jerrod has the key    if (has("House key"))      {      [ open the door      sound(s.Effect1, fDoorSndDone);      start.update(oFrontDoor);      set(fDoorOpen);      end.of.loop(oFrontDoor, fDoorStopped);      [ allow Jerrod to cross the threshold      ignore.blocks(ego);      }    else      {      [ unlikely, but if Jerrod is inside gate when house is      [ sold he can still walk up to front door; since he      [ doesn't have a key, show this message      print("You always keep your house locked.");      }    }      [ if not near gate or door  if (!posn(ego, 96, 115, 115, 118) &&       !posn(ego, 85, 74, 97, 77))    {    print("You can't do that from here!");    }  }  [ unlock gateif (said("unlock", "gate"))  {  [ if near the gate  if (posn(ego, 96, 115, 115, 118))    {    [ if Jerrod has the key    if (has("House key"))      {      [ open the gate      sound(s.Effect3, fSndDone);      start.update(oGate);      end.of.loop(oGate, fGateStopped);      ignore.blocks(ego);      set(fGateOpen);      }    else      {      [ if no key, means house is sold      print("It makes you sad to think of it, but the house that your father "            "built no longer belongs to you.");      }    }  else    {    print("You can't do that from here!");    }  }[ open gateif (said("open", "gate"))  {  [ if gate is already open  if (isset(fGateOpen))    {    print("It is already open.");    }  else    {    [ if Jerrod is near the gate    if (posn(ego, 96, 115, 115, 118))      {      [ can't just open gate, it's locked      print("You try to open the gate but discover it is locked.");      }    else      {      print("You can't do that from here!");      }    }  }  [ look gateif (said("examine", "gate"))  {  print("It is a familiar gate.");  }  [ unlock door/unlock houseif ((said("unlock", "door") ||     said("unlock", "front", "door") ||     said("unlock", "home")))  {  [ if near the front door  if (posn(ego, 85, 74, 97, 77))    {    [ if Jerrod has the key    if (has("House key"))      {      [ open it      sound(s.Effect1, fDoorSndDone);      start.update(oFrontDoor);      set(fDoorOpen);      end.of.loop(oFrontDoor, fDoorStopped);      ignore.blocks(ego);      }    else      {      [ unlikely, but if Jerrod is inside gate when house is      [ sold he can still walk up to front door; since he      [ doesn't have a key, show this message      print("You always keep your house locked.");      }    }  else    {    print("You can't do that from here!");    }  }[ lock doorif ((said("lock", "door") ||     said("lock", "front", "door")))  {  [ if near the door  if (posn(ego, 85, 74, 97, 77))    {    [ if Jerrod has the key    if (has("House key"))      {      print("The door locks by itself!");      }    else      {      [ unlikely, but if Jerrod is inside gate when house is      [ sold he can still walk up to front door; since he      [ doesn't have a key, show this message      print("You always keep your house locked.");      }    }  else    {    print("You can't do that from here!");    }  }  [ open doorif ((said("open", "door") ||     said("open", "front", "door")))  {  [ if the door is already open  if (isset(fDoorOpen))    {    print("It is already open.");    }  else    {    [ if Jerrod is near the door    if (posn(ego, 85, 70, 97, 77))      {      print("You always keep your house locked.");      }    else      {      print("You can't do that from here!");      }    }  }  [ close doorif ((said("close", "door", "rol") ||     said("close", "home", "door")))  {  [ if the door is open  if (isset(fDoorOpen))    {    print("Just walk away from it.");    }  else    {    print("It is already closed.");    }  }  [ close gateif (said("close", "gate"))  {  [ if gate is open  if (isset(fGateOpen))    {    print("Just walk away from it.");    }  else    {    print("It is already closed.");    }  }  [ look doorif ((said("examine", "door") ||     said("examine", "front", "door") ||     said("examine", "home", "door")))  {  print("This door has kept the winter's chill outside for many years.");  }    [ look shipif (said("examine", "boat"))  {  [ if ship is moving across the room  if (SteamshipXM > 0 && SteamshipXM < 107)    {    print("There goes the ship. It's too late to ride THAT to California!");    }  else    {    print("The ship is not in sight.");    }  }  [ look houseif (said("examine", "home"))  {  [ I wonder why message isn't different after the house  [ is sold?  print("When you were a young boy, just after moving to Brooklyn, your father "        "built this house with his own two hands. It is one of the few things "        "he left to remind you of him.");  print("It may not be the nicest, or best kept house in the neighborhood, but "        "you value it more than a mansion.");  }  [ look streetlampif (said("examine", "lamp"))  {  print("There are two streetlights outside of the house.");  }    [ look fenceif (said("examine", "fence"))  {  print("The wrought-iron fence protects the house.");  }  [ look treeif (said("examine", "forest"))  {  print("Your father planted these trees when he built the house.");  if (isset(fTreePoster))    {    print("There is a poster on one of the trees.");    }  }  [ look riverif ((said("examine", "water") || said("examine", "creek")))  {  print("This is a very peaceful estuary, in a peaceful part of town.");  }  [ look grassif (said("examine", "grass"))  {  print("The lawn surrounds the house.");  }  [ look road/look road signif ((said("examine", "path") ||     said("examine", "path", "sign")))  {  print("This house is located at the intersection of Front Street and Main "        "Street.");  }  [ look New Yorkif (said("examine", "new york"))  {  print("New York City lies across the East River.");  }  [ look sign/read signif ((said("examine", "sign") ||     said("read", "sign") ||     said("examine", "billboard") ||     said("read", "billboard") ||     said("examine", "note") ||     said("read", "note")))  {  [ if near the street sign  if (posn(ego, 0, 132, 32, 164))    {    print("This house is located at the intersection of Front Street and Main "          "Street.");    [ skip to end    goto(Done);    }  [ if near the tree  if (posn(ego, 33, 101, 69, 144))    {    [ and poster is on tree    if (isset(fTreePoster))      {      print("    To CALIFORNIA \n   by land or sea! \n A small price to pay \n "            "for the RICHES you'll \n       receive!");      [ skip to end      goto(Done);      }    }  [ if near real estate sign  if (posn(ego, 70, 70, 159, 164))    {    [ if house is sold    if (SellHousePhase == SOLD)      {      print("The sign says, \n \n    SOLD.");      [ skip to end      goto(Done);      }    [ if house is for sale    if (SellHousePhase > NOT_FOR_SALE && SellHousePhase < SOLD)      {      print("The sign says, \n \n  FOR SALE.");      [ skip to end      goto(Done);      }    }  print("You are not close enough!");  }  [ look manif (said("examine", "boy"))  {  [ get distances to wagon and pedestrian (distance to agent  [ is determined earlier in the cycle)  distance(ego, oWagon, vWagonDist);  distance(ego, oPedestrian, vPedDist);  [ if at least one person is nearby  if ((vAgentDist < 60 || vWagonDist < 60 || vPedDist < 60))    {    [ if agent is close enough    if (vAgentDist < 60)      {      print("This man looks like he is interested in buying your house.");      }    [ if wagon is close enough    if (vWagonDist < 60)      {      print("Look at that experienced driver work that team!");      }    [ if the pedestrian is close enough    if (vPedDist < 60)      {      [ use view to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail2D)        {        print("Ever since that tragic day your parents died, Mr. Quail has been "              "like a father to you.");        }      if (vPedDist == vw.BankTeller2D)        {        print("Here comes the bank teller again!");        }      }    }  else    {    [ nobody is near - if all people are NOT on screen    [ (distance of 255 means object not on screen)    if (vAgentDist == 255 && vWagonDist == 255 && vPedDist == 255)      {      print("There is no one around.");      }    else      {      [ at least one is here, but too far away (since the      [ message is same for all, the if/else checks aren't      [ really necessary)      if (vAgentDist < 255 && vAgentDist > 59)        {        print("You are too far away.");        }      else        {        if (vWagonDist < 255 && vWagonDist > 59)          {          print("You are too far away.");          }        else          {          if (vPedDist < 255 && vPedDist > 59)            {            print("You are too far away.");            }          }        }      }    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ get distances to wagon and pedestrian (distance to agent  [ is determined earlier in the cycle)  distance(ego, oWagon, vWagonDist);  distance(ego, oPedestrian, vPedDist);  [ if at least one person is nearby  if ((vAgentDist < 40 || vWagonDist < 40 || vPedDist < 40))    {    [ if wagon is close enough    if (vWagonDist < 40)      {      print("The man on the wagon can't hear you over the rumble of the wagon.");      }    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.MrQuail2D)        {        print("You say to Mr. Quail, \"Sometimes I think something terrible may "              "have happened to Jake. I wish I knew how he was doing.\"");        print("Mr. Quail replies, \"I have this feeling he's fine and someday "              "you will be reunited. Don't give up hope.\"");        }      if (vPedDist == vw.BankTeller2D)        {        print("The teller says, \"It has been a pleasure helping you with your "              "account at the bank all these years.\"");        }      }    [ if agent is close enough    if (vAgentDist < 40)      {      [ if house hasn't been sold yet (not including a      [ decline from Jerrod)      if (vAgentPhase < A_DECLINED)        {        [ change sell phase to 'offer made'        SellHousePhase = OFFER_MADE;        [ Jerrod stops while dealing with the agent        egoDir = STOPPED;        [ not sure why ego is blocked here (to keep from        [ leaving? the exit check already prevents Jerrod        [ from leaving while an offer is in progress)        block(0, 129, 159, 132);                [ agent makes his offer        vAgentPhase = A_OFFERED;        [ clear movement flag        reset(fAgentMoved);        [ if the gold rush has NOT been announced yet        if (!isset(RushIsPublic))          {          [ agent makes a good offer          print("The real estate man says, \"You are fortunate to own such a "                "fine piece of property.\"");          print("\"I like this property and am willing to pay top dollar. Will "                "you accept $850, in cash, for your house?\"");          [ to avoid having ticket price change in middle of transaction          [ set the 'buylow' flag; this prevents the gold rush from being           [ made public until after the transaction is finished          set(BuyingLow);          }        else          {          [ if gold rush has been announced, offer is less          print("The real estate man says, \"Ever since folks have been rushing "                "to the gold in California, property values have been "                "falling.\"");          print("\"But, I like your house and would like to buy it. I have $750 "                "in cash. Are you interested in selling?\"");          }        [ change input prompt        set.string(inputPrompt, "yes or no: %g69");        [ force prompt to update        accept.input();        inputLength = 27;        }              [ if agent is leaving after Jerrod has declined an      [ offer      if ((vAgentPhase == A_DECLINED ||           vAgentPhase == A_LEAVING))        {        print("The real estate man interested in buying your house says, \"If "              "you snooze, you lose. I've got to go!\"");        }      [ if house is sold and agent is still around      if (vAgentPhase > A_LEFT)        {        print("The real estate man says, \"I sure did get a good deal on this "              "house.\"");        }      }    }  else    {    [ no one is close; if all people are off screen    if (vAgentDist == 255 && vWagonDist == 255 && vPedDist == 255)      {      print("There is no one around.");      }    else      {      [ at least one is on screen, but not close enough      print("No one can hear you at this distance.");      }    }  }  [ look wagonif (said("examine", "cart"))  {  [ get distance to wagon  distance(oWagon, ego, vWagonDist);  [ if wagon is NOT on screen  if (vWagonDist == 255)    {    print("There is no wagon in sight.");    }  else    {    print("That wagon sure puts on a few miles in a day!");    }  }  [ read treeif (said("read", "forest"))  {  print("You can't read a tree!");  }  [ knock/knock on doorif ((said("knock", "knock") ||     said("knock", "door") ||     said("knock") ||     said("knock", "knock", "knock")))  {  [ fi door is open  if (isset(fDoorOpen))    {    print("It is already open.");    }  else    {    [ if Jerrod is in front of his house door    if (posn(ego, 85, 65, 94, 77))      {      print("If someone answers, you're in trouble!");      }    else      {      print("You can't do that from here!");      }    }  }  [ ring bell/ring door bellif ((said("ring", "bell") ||     said("ring", "door", "bell")))  {  print("There is no doorbell here!");  }  [ look windowif (said("examine", "glass"))  {  print("Just a normal window!");  }  [ look numberif ((said("examine", "number") ||     said("examine", "address") ||     said("examine", "number", "home")))  {  print("The number \"ten\" is on the house!");  }  Done:[ if an unknown word was enteredif (unknownWordNum > 0)  {  [ return input prompt to normal (this is not necessary;   [ the input prompt is always returned to normal as soon  [ as ANY text is input by the player)  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "It makes you sad to think of it, but the house that your father built no longer belongs to you."#message 2 "You can't do that from here!"#message 3 "You try to open the gate but discover it is locked."#message 5 "You always keep your house locked."#message 6 "There goes the ship. It's too late to ride THAT to California!"#message 7 "The ship is not in sight."#message 8 "It is a familiar gate."#message 10 "There are many houses in Brooklyn, but this one has a special place in your heart."#message 11 "This door has kept the winter's chill outside for many years."#message 13 "There are two streetlights outside of the house."#message 14 "The wrought-iron fence protects the house."#message 15 "Your father planted these trees when he built the house."#message 16 "This is a very peaceful estuary, in a peaceful part of town."#message 17 "The lawn surrounds the house."#message 19 "This house is located at the intersection of Front Street and Main Street."#message 21 "The sign says, \n \n    SOLD."#message 23 "The sign says, \n \n  FOR SALE."#message 25 "New York City lies across the East River."#message 26 "\"I like this property and am willing to pay top dollar. Will you accept $850, in cash, for your house?\""#message 27 "\"But, I like your house and would like to buy it. I have $750 in cash. Are you interested in selling?\""#message 28 "Congratulations! Property values are at a premium. You have conducted a prime sale! You are sad that your house is gone, but you'll always have the memories."#message 29 "Property values dropped since the gold rush. You think to yourself, I have just sold the house my father built and I didn't get top dollar."#message 30 "You ponder for a moment and decide not to sell. You are too attached to this house to part with it now."#message 31 "The real estate man interested in buying your house says, \"If you snooze, you lose. I've got to go!\""#message 32 "    To CALIFORNIA \n   by land or sea! \n A small price to pay \n for the RICHES you'll \n       receive!"#message 33 "You are not close enough!"#message 35 "yes or no: %g69"#message 37 "%g69"#message 39 "You are too far away."#message 40 "This man looks like he is interested in buying your house."#message 41 "Look at that experienced driver work that team!"#message 42 "Ever since that tragic day your parents died, Mr. Quail has been like a father to you."#message 43 "Here comes the bank teller again!"#message 44 "Mr. Homeowner\" must be on his way to the hardware store to complete another household project."#message 45 "You say to Mr. Quail, \"Sometimes I think something terrible may have happened to Jake. I wish I knew how he was doing.\""#message 46 "The real estate man says, \"I sure did get a good deal on this house.\""#message 47 "The man on the wagon can't hear you over the rumble of the wagon."#message 48 "The teller says, \"It has been a pleasure helping you with your account at the bank all these years.\""#message 49 "There is no one around."#message 50 "No one can hear you at this distance."#message 51 "That wagon sure puts on a few miles in a day!"#message 52 "There is no wagon in sight."#message 53 "When you were a young boy, just after moving to Brooklyn, your father built this house with his own two hands. It is one of the few things he left to remind you of him."#message 54 "You can't read a tree!"#message 55 "The door locks by itself!"#message 56 "There is a poster on one of the trees."#message 57 "It is already open."#message 58 "If someone answers, you're in trouble!"#message 59 "Just walk away from it."#message 60 "It is already closed."#message 61 "There is no doorbell here!"#message 62 "Just a normal window!"#message 63 "The number \"ten\" is on the house!"#message 64 "The real estate man says, \"Ever since folks have been rushing to the gold in California, property values have been falling.\""#message 66 "The real estate man says, \"You are fortunate to own such a fine piece of property.\""#message 67 "It may not be the nicest, or best kept house in the neighborhood, but you value it more than a mansion."#message 68 "As you give the real estate man the keys to your house you say, \"Mr. Quail will come by to pick up my personal belongings.\""#message 69 "Mr. Quail replies, \"I have this feeling he's fine and someday you will be reunited. Don't give up hope.\""