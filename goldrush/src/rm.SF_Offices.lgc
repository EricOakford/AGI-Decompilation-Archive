[***********************************************************[[ rm.SF_Office[ [ The clerk's office, and John Sutter's office are here. The[ entrance to the trading store is also in this room. Jerrod[ will have to tie his mule to the hitching post before [ entering the trading store or the mule will run away.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDoor1                       o1#define oDoor2                       o2#define oMule                       o22#define vDX                        v220#define vDY                        v221[ lgc.Mule variables that may be needed in this room#define vMuleX                     v252#define vMuleY                     v253#define fStairPriority             f220#define fDoor1Moved                f221#define fDoor1Open                 f222#define fDoor2Moved                f223#define fDoor2Open                 f224[ f225 and f226 are not used#define fBehindWindow              f227[ f228 through f237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load mule logic  load.logics(lgc.Mule);    [ load picture for current room  load.pic(currentRoom);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.SF_Doors2);    [ if mule is tied to post  if (isset(MuleTiedToFortPost))    {    [ mule logic doesn't work if Jerrod doesn't have the    [ mule in inventory so mule initialization has to happen    [ separately when mule is tied to hitching post    load.view(vw.Mule);    }  load.view(vw.WindowJerrod);    [ load sounds used in the room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ draw the current room picture  draw.pic(currentRoom);    [ if mule is tied to hitching post  if (isset(MuleTiedToFortPost))    {    [ add mule to screen    animate.obj(oMule);    set.view(oMule, vw.Mule);    position.v(oMule, MulePostX, MulePostY);    draw(oMule);    stop.cycling(oMule);    }      [ door to admin offices on second floor  animate.obj(oDoor1);  set.view(oDoor1, vw.SF_Doors2);  set.loop(oDoor1, 5);  set.cel(oDoor1, 0);  ignore.objs(oDoor1);  ignore.blocks(oDoor1);  set.priority(oDoor1, 4);  position(oDoor1, 41, 46);  draw(oDoor1);  stop.update(oDoor1);    [ door to the trading store  animate.obj(oDoor2);  set.view(oDoor2, vw.SF_Doors2);  set.loop(oDoor2, 6);  [ if Jerrod is coming here from the trading store  if (posn(ego, 149, 94, 149, 94))    {    [ show the door open    set.cel(oDoor2, 4);    set(fDoor2Open);    }  else    {    [ otherwise show the door closed    set.cel(oDoor2, 0);    }  ignore.objs(oDoor2);  ignore.blocks(oDoor2);  set.priority(oDoor2, 8);  position(oDoor2, 149, 92);  draw(oDoor2);  stop.update(oDoor2);    [ Jerrod, with normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  [ if coming from the trading office  if (posn(ego, 148, 89, 153, 92))    {    [ set starting position    position(ego, 149, 94);    }  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization stuff    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ no need to reset this flag; AGI does it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is on the second floor of buildingif (posn(ego, 0, 43, 159, 43))  {  [ if on alarm line, but not marked as behind a window  if (isset(egoHitSpecial) && !isset(fBehindWindow))    {    [ Jerrod is behind a window    set(fBehindWindow);    [ change view    set.view(ego, vw.WindowJerrod);    }  [ if not on alarm line but flag is set  if (!isset(egoHitSpecial) && isset(fBehindWindow))    {    [ no longer behind a window    reset(fBehindWindow);    [ restore normal view    set.view(ego, vw.JerrodCA);    }  }  [ if at top of stairs, and priority is not forcedif (posn(ego, 30, 46, 64, 48) && !isset(fStairPriority))  {  [ need to force priority so Jerrod will show up behind the  [ rail  set(fStairPriority);  set.priority(ego, 5);  }  [ if not at top of stairs, and priority is forcedif (!posn(ego, 30, 46, 64, 48) && isset(fStairPriority))  {  [ restore automatic priority assignment  reset(fStairPriority);  release.priority(ego);  }  [ if Jerrod is on a signal lineif (isset(egoHitSpecial))  {  [ if Jerrod is on left stairs  if (posn(ego, 7, 46, 43, 101))    {    [ if going right or up-right    if ((egoDir == RIGHT || egoDir == UP_RIGHT))      {      [ move Jerrod up one pixel      vDX = 0;      vDY = -1; [ 255;      reposition(ego, vDX, vDY);      }    [ if going left or down-left    if ((egoDir == LEFT || egoDir == DOWN_LEFT))      {      [ move Jerrod down one pixel      vDX = 0;      vDY = 1;      reposition(ego, vDX, vDY);      }    [ if going down    if (egoDir == DOWN)      {      [ move Jerrod one pixel to left      vDX = -1; [ 255;      vDY = 0;      reposition(ego, vDX, vDY);      }    [ if going up    if (egoDir == UP)      {      [ move Jerrod one pixel to right      vDX = 1;      vDY = 0;      reposition(ego, vDX, vDY);      }    }  [ if on right stairs  if (posn(ego, 52, 46, 78, 78))    {    [ if going right or up-right    if ((egoDir == RIGHT || egoDir == DOWN_RIGHT))      {      [ move Jerrod one pixel down      vDX = 0;      vDY = 1;      reposition(ego, vDX, vDY);      [ set loop (this does nothing; loop is automatically      [ assigned a value of 0 when ego object moves right or      [ down-right      set.loop(ego, 0);      }    [ if going left or up-left    if ((egoDir == LEFT || egoDir == UP_LEFT))      {      [ move Jerrod up one pixel      vDX = 0;      vDY = -1; [ 255;      reposition(ego, vDX, vDY);      [ set loop (this does nothing; loop is automatically      [ assigned a value of 0 when ego object moves right or      [ down-right      set.loop(ego, 1);      }    }  }  [ if inside second floor or next to office door and door is[ not openif (posn(ego, 1, 43, 80, 45) && !isset(fDoor1Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #1 to update  start.update(oDoor1);  [ temporarily halt Jerrod while door #1 opens  stop.update(ego);  [ open door #1  end.of.loop(oDoor1, fDoor1Moved);  set(fDoor1Open);  }  [ if Jerrod is not in second floor offices and door is openif (!posn(ego, 1, 43, 80, 45) && isset(fDoor1Open))  {  [ allow door #1 to update  start.update(oDoor1);  [ close door #1  reverse.loop(oDoor1, fDoor1Moved);  reset(fDoor1Open);  }  [ if door #1 is done cyclingif (isset(fDoor1Moved))  {  [ stop updating door #1  stop.update(oDoor1);  [ allow Jerrod to continue moving  start.update(ego);  [ reset movement flag  reset(fDoor1Moved);  [ if door #1 is now closed  if (!isset(fDoor1Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }[ if Jerrod is by door to trading store and door is not openif (posn(ego, 142, 89, 151, 96) && !isset(fDoor2Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #2 to update  start.update(oDoor2);  [ temporarily halt Jerrod while door #2 opens  stop.update(ego);  [ open door #2  end.of.loop(oDoor2, fDoor2Moved);  set(fDoor2Open);  }  [ if Jerrod is not by door to trading store and door is openif (!posn(ego, 142, 89, 151, 96) && isset(fDoor2Open))  {  [ allow door #2 to update  start.update(oDoor2);  [ close door #2  reverse.loop(oDoor2, fDoor2Moved);  reset(fDoor2Open);  }  [ if trading store door is done cyclingif (isset(fDoor2Moved))  {  [ stop updating door #2  stop.update(oDoor2);  [ allow Jerrod to continue moving  start.update(ego);  [ reset movement flag  reset(fDoor2Moved);  [ if door #2 is now closed  if (!isset(fDoor2Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ going left leads to the workshopsif (posn(ego, 1, 95, 1, 166))  {  [ position Jerrod in lower right corner  [ of workshops room  position(ego, 131, 165);  [ change loop and direction  set.loop(ego, 3);  egoDir = UP;  new.room(rm.SF_Workshops); [ ##LE001##  }  [ going right leads to the trading store roomif (posn(ego, 152, 89, 152, 166))  {  [ if inside the trading store  if (posn(ego, 152, 85, 152, 93))    {    [ if Jerrod has a mule    if ((has("James' ol' mule") || has(LazyMule)))      {      [ mule is left free- it will run away      set(LeftMuleUnattended);      drop("James' ol' mule");      drop(LazyMule);      }    }  [ position Jerrod on left edge of trading store room  vDX = 2;  position.v(ego, vDX, EgoY);  new.room(rm.SF_TradingStore); [ ##LE002##  }  [ going down leads to the cemetery gateif (posn(ego, 1, 166, 152, 166))  {  [ position Jerrod at center-bottom  position(ego, 76, 165);  [ change loop and direction  set.loop(ego, 3);  egoDir = UP;  new.room(rm.SF_CemeteryGate); [ ##LE003##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  [ response depends on Jerrod's location  if ((posn(ego, 0, 43, 13, 43) ||       posn(ego, 14, 43, 66, 45) ||       posn(ego, 67, 43, 80, 43) ||       posn(ego, 147, 89, 159, 93) ||       posn(ego, 32, 46, 56, 56)))    {    if (posn(ego, 0, 43, 13, 43))      {      print("This is the clerk's office.");      print("You don't need anything here!");      }    if (posn(ego, 14, 43, 66, 45))      {      print("This is the fort's administration office. The office is empty.");      print("You don't need anything here!");      }    if (posn(ego, 67, 43, 80, 43))      {      print("Yer now in the very office of John Augustus Sutter!  Everything's "            "as neat as a pin!");      print("You don't need anything here!");      }    if (posn(ego, 147, 88, 159, 93))      {      print("Yer in the entryway to the fort's tradin' store.");      }    if (posn(ego, 32, 46, 56, 56))      {      print("From the top of the stairs ya see the cemetery just outside the "            "fort.");      }    }  else    {    print("There are two doors in sight. Yer keen eye detects a sign on one of "          "the doors and a hitching post.");    }  }  [ look entranceif (said("examine", "entrance"))  {  [ if Jerrod is by trading store entrance  if (posn(ego, 147, 89, 159, 93))    {    print("If ya make the right move here, you'll be in the tradin' store in no "          "time.");    }  else    {    print("There's an entryway close by.");    }  }  [ look shopif (said("examine", "shop"))  {  [ if Jerrod is by trading store entrance  if (posn(ego, 147, 89, 159, 93))    {    print("If ya make the right move here, you'll be in the tradin' store in no "          "time.");    }  else    {    print("There might be a store close by!");    }  }  [ look stairsif (said("examine", "stair"))  {  print("The stairs lead to the second story.");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Diggin' ain't allowed here!  Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  [ look ground/look grassif ((said("examine", "dirt") ||     said("examine", "grass")))  {  print("The grass is kept short by all the animals!");  }  [ look doorif (said("examine", "door"))  {  [ if Jerrod is by the trading post entrance  if (posn(ego, 117, 87, 159, 119))    {    print("A sign is attached to this door.");    }  else    {    print("There are two doors and ya see a sign attached to one of them.");    }  }  [ read signif ((said("read", "sign", "rol") ||     said("read", "anyword", "sign", "rol") ||     said("read", "note", "rol") ||     said("read", "anyword", "note", "rol") ||     said("read", "billboard", "rol") ||     said("read", "anyword", "billboard", "rol")))  {  [ if Jerrod is by trading post entrance  if (posn(ego, 117, 87, 159, 119))    {    print("\n    OPEN\n\n\n Come on in! \n\n");    }  else    {    print("Ya cain't read the sign from here.");    }  }  [ look signif ((said("examine", "sign", "rol") ||     said("examine", "anyword", "sign", "rol") ||     said("examine", "note", "rol") ||     said("examine", "anyword", "note", "rol") ||     said("examine", "billboard", "rol") ||     said("examine", "anyword", "billboard", "rol")))  {  [ if Jerrod is by trading post entrance  if (posn(ego, 117, 87, 159, 119))    {    print("A sign is attached to this door.");    }  else    {    print("Ya see a sign on one of the doors.");    }  }  [ look hitching postif ((said("examine", "hitching", "post") ||     said("examine", "post")))  {  print("There's a hitching post in front of the tradin' store.");  }  [ leave muleif (said("exit", "donkey"))  {  [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    print("If ya just leave that mule, yer gonna lose it!");    }  else    {    print("Ya don't have a mule!");    }  }  [ tie mule to hitching postif ((said("tie", "donkey") ||     said("tie", "donkey", "post") ||     said("tie", "donkey", "hitching", "post") ||     said("tie", "up", "donkey") ||     said("tie", "up", "donkey", "post") ||     said("tie", "up", "donkey", "hitching", "post") ||     said("connect", "donkey") ||     said("connect", "donkey", "post") ||     said("connect", "donkey", "hitching", "post") ||     said("connect", "up", "donkey") ||     said("connect", "up", "donkey", "post") ||     said("connect", "up", "donkey", "hitching", "post")))  {  [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ if mule is close enough to the hitching post    if (posn(oMule, 103, 80, 159, 122))      {      [ Jerrod ties mule to post      print("Ya securely tie up the mule to the hitchin' post.");      set(MuleTiedToFortPost);      [ mule stops moving and cycling      stop.motion(oMule);      stop.cycling(oMule);      [ save position of mule at the hitching post      MulePostX = vMuleX;      MulePostY = vMuleY;      [ if Jerrod has the lazy mule      if (has(LazyMule))        {        [ temporarily drop it        set(DropLazyMule);        drop(LazyMule);        }      [ if Jerrod has James' mule      if (has("James' ol' mule"))        {        [ temporarily drop it        set(DropJamesMule);        drop("James' ol' mule");        }      }    else      {      print("The mule ain't close enough to the hitching post.");      }    }  else    {    print("Ya don't have a mule!");    }  }  [ get mule/untie muleif ((said("acquire", "donkey") ||     said("acquire", "animal") ||     said("untie", "donkey") ||     said("untie", "animal") ||     said("acquire", "rope") ||     said("diconnect", "donkey") ||     said("diconnect", "animal")))  {  [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    print("Ya already have a mule.");    }  else    {    [ get distance from mule to Jerrod    distance(oMule, ego, MuleDistance);    [ if not close enough    if (MuleDistance > 15)      {      [ this message gets shown even if Jerrod has not yet       [ gotten his mule, or if there is no mule at the post;      [ seems like they should show a different message if      [ there is no mule at the post      print("The mule is too far away.");      }    else      {      [ untie the mule      print("Ya untie the mule and firmly grab the rope that's around its neck. "            " It begins to follow you.");      [ if Jerrod dropped off the lazy mule      if (isset(DropLazyMule))        {        [ reacquire lazy mule        reset(DropLazyMule);        get(LazyMule);        }      [ if Jerrod dropped off James' mule      if (isset(DropJamesMule))        {        [ reacquire James' mule        reset(DropJamesMule);        get("James' ol' mule");        }      [ mule is no longer tied to post      reset(MuleTiedToFortPost);      }    }  }  [ look muleif (said("examine", "donkey"))  {  [ if mule is tied to hitching post  if (isset(MuleTiedToFortPost))    {    print("Yer mule is tied to the hitching post in front of the tradin' store.");    }  else    {    [ otherwise reset match flag so main logic can handle    [ the input    reset(haveMatch);    }  }  [ look windowif (said("examine", "glass"))  {  print("The fort is fortunate to have so many windows!");  }  [ open door/climb stairsif ((said("open", "door") ||     said("climb", "stair") ||     said("go", "stair")))  {  print("Do it!");  }  [ look fort/look wallsif ((said("examine", "fort") || said("examine", "wall")))  {  print("Yer inside the walls of Sutter's Fort!");  }  [ open gateif (said("open", "gate"))  {  print("Ya ain't got no reason to open it!");  }  Done:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ call mule logic to handle mule related commands  call(lgc.Mule);  }return();[ **************************************[ MESSAGES[ **************************************#message 1 "There are two doors in sight. Yer keen eye detects a sign on one of the doors and a hitching post."#message 2 "This is the clerk's office."#message 3 "This is the fort's administration office. The office is empty."#message 4 "Yer now in the very office of John Augustus Sutter!  Everything's as neat as a pin!"#message 5 "Yer in the entryway to the fort's tradin' store."#message 6 "From the top of the stairs ya see the cemetery just outside the fort."#message 7 "If ya make the right move here, you'll be in the tradin' store in no time."#message 8 "Ya see a sign on one of the doors."#message 9 "\n    OPEN\n\n\n Come on in! \n\n"#message 10 "Ya cain't read the sign from here."#message 11 "There are two doors and ya see a sign attached to one of them."#message 12 "A sign is attached to this door."#message 13 "There's an entryway close by."#message 14 "There might be a store close by!"#message 21 "There's a hitching post in front of the tradin' store."#message 22 "If ya just leave that mule, yer gonna lose it!"#message 23 "Ya don't have a mule!"#message 24 "Ya securely tie up the mule to the hitchin' post."#message 25 "The mule ain't close enough to the hitching post."#message 26 "Ya already have a mule."#message 27 "The mule is too far away."#message 28 "Ya untie the mule and firmly grab the rope that's around its neck.  It begins to follow you."#message 29 "Yer mule is tied to the hitching post in front of the tradin' store."#message 30 "The stairs lead to the second story."#message 40 "Diggin' ain't allowed here!  Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"#message 63 "The grass is kept short by all the animals!"#message 64 "A sign is attached to this door."#message 65 "The fort is fortunate to have so many windows!"#message 66 "Do it!"#message 69 "Yer inside the walls of Sutter's Fort!"#message 70 "Ya ain't got no reason to open it!"#message 74 "You don't need anything here!"