[***********************************************************[[ rm.ShipSternInterior[[ This room shows the stern interior spaces on the steamship[ which include the pilot house, the Captain's office, the[ coal hold. Jerrod meets his friend Eric here, and also [ can go fishing to find food[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWake1                       o1#define oWake2                       o2#define oCaptain                     o3#define oAftDoor                     o4#define oFwdDoor                     o5#define oCabinDoor                   o6[ o7 through o9 are not used#define oLand                       o10#define oRock                       o11#define oIceberg                    o12#define oFishLine1                  o13#define oFishLine2                  o14#define oFish                       o15#define oHelmsman                   o16#define vIcebergTime                v81  [ override TripPoint_20#define vRockTime                   v82  [ override TripPoint_21#define vStarveStart               v180  [ override LeafPileSize#define vOvlPic                    v220#define vTmpStep                   v221#define vTmpVal                    v222#define vLandStep                  v223#define vLandStatus                v224#define vBadHam                    v225#define vFishingStatus             v226#define vEgoDX                     v227#define vEgoDY                     v228#define vRockStatus                v229#define vRockSize                  v230#define vRockStep                  v231#define vIcebergStatus             v232[ v233 is not used#define vFishTimer                 v234#define vCaptainStatus             v235#define fOnLadder                  f220#define fOnStairs                  f221#define fDoorClosed                f222 [ one flag works for all doors#define fAftDoorOpen               f223#define fFwdDoorOpen               f224#define fCabDoorOpen               f225#define fLandMoved                 f226#define fDoneDying                 f227#define fFishMoved                 f228#define fAteBadMeat                f229#define fIcebergMoved              f230#define fShipSinking               f231#define fRockMoved                 f232#define fFishing                   f233#define fLineMoved                 f234#define fDeferStarve               f235#define fCaptainMoved              f236#define fSoundDone                 f237[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ early in trip (after leaving New York or Rio de Janeiro)  if ((CurrentTripTime == 2 || CurrentTripTime == 9))    {    [ coal hold is mostly full    vOvlPic = ovl.CoalHold1;    }  [ in middle part of trip from New York or Rio de Janeiro  if ((CurrentTripTime == 4 || CurrentTripTime == 11))    {    [ coal hold is half empty    vOvlPic = ovl.CoalHold2;    }  [ if on last leg of journey, headed into California  if (CurrentTripTime == 15)    {    [ coal hold is mostly empty    vOvlPic = ovl.CoalHold3;    }    [ load picture for current room  load.pic(currentRoom);  [ load overlay for coal hold  load.pic(vOvlPic);  [ draw the room, and draw coal hold overlay  draw.pic(currentRoom);  overlay.pic(vOvlPic);  [ room picture not needed anymore (this also discards the  [ overlay picture)  discard.pic(currentRoom);    [ if NOT on last leg going into California  if (CurrentTripTime != 15)    {    [ add Eric, Jerrod's friend, standing at stern rail    load.view(vw.ShipSternArt);    add.to.pic(vw.ShipSternArt, 0, 0, 53, 44, 7, 7);    discard.view(vw.ShipSternArt);    }      [ load the main timing logic  load.logics(lgc.CapeTripTiming);    [ load views used by objects in this room  load.view(vw.JerrodNY);  load.view(vw.ClimbingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.Fishing);  load.view(vw.DyingJerrodNY);  load.view(vw.ShipSternArt2);  load.view(vw.OceanItems);  load.view(vw.MidShipArt2);  load.view(vw.Fish);    [ load sounds used in this room  load.sound(s.AddToScore);  load.sound(s.RockCrash);    [ add captain's desk   add.to.pic(vw.ShipSternArt2, 2, 0, 82, 94, 8, 8);  [ add lamps (unlit)  add.to.pic(vw.MidShipArt2, 2, 0, 136, 82, 7, 7);  add.to.pic(vw.MidShipArt2, 2, 0, 83, 75, 7, 7);    [ land/islands that pass by  animate.obj(oLand);  set.view(oLand, vw.OceanItems);  [ if off coast of South America  if ((CurrentTripTime == 9 || CurrentTripTime == 11))    {    [ use lands with less vegetation    set.loop(oLand, 3);    }  else    {    [ further north, use lands with more vegetation    set.loop(oLand, 2);    }  fix.loop(oLand);  set.cel(oLand, 0);  set.priority(oLand, 4);  vLandStep = 10;  ignore.objs(oLand);  ignore.blocks(oLand);    [ rocks  animate.obj(oRock);  set.view(oRock, vw.OceanItems);  set.loop(oRock, 0);  fix.loop(oRock);  set.priority(oRock, 5);  vRockStep = 2;  ignore.objs(oRock);  ignore.blocks(oRock);    [ icebergs  animate.obj(oIceberg);  set.view(oIceberg, vw.OceanItems);  set.loop(oIceberg, 1);  fix.loop(oIceberg);  set.priority(oIceberg, 5);  ignore.objs(oIceberg);  ignore.blocks(oIceberg);    [ the wake that follows the ship  [ (use two objects)  animate.obj(oWake1);  set.view(oWake1, vw.ShipSternArt2);  set.loop(oWake1, 0);  set.cel(oWake1, 0);  set.priority(oWake1, 14);  position(oWake1, 55, 108);  ignore.objs(oWake1);  ignore.blocks(oWake1);  draw(oWake1);  start.cycling(oWake1);  [ wake 2  animate.obj(oWake2);  set.view(oWake2, vw.ShipSternArt2);  set.loop(oWake2, 1);  set.cel(oWake2, 0);  set.priority(oWake2, 5);  position(oWake2, 0, 107);  ignore.blocks(oWake2);  draw(oWake2);  start.cycling(oWake2);    [ captain, sitting at his desk  animate.obj(oCaptain);  set.view(oCaptain, vw.ShipSternArt2);  set.loop(oCaptain, 4);  set.priority(oCaptain, 9);  ignore.objs(oCaptain);  ignore.blocks(oCaptain);  position(oCaptain, 84, 94);  draw(oCaptain);    [ helmsman, in pilot house  animate.obj(oHelmsman);  set.view(oHelmsman, vw.ShipSternArt2);  set.loop(oHelmsman, 5);  set.priority(oHelmsman, 9);  ignore.objs(oHelmsman);  position(oHelmsman, 92, 52);  draw(oHelmsman);  vTmpStep = 4;  cycle.time(oHelmsman, vTmpStep);  start.cycling(oHelmsman);    [ aft door to pilot house  animate.obj(oAftDoor);  stop.cycling(oAftDoor);  set.view(oAftDoor, vw.MidShipArt2);  set.loop(oAftDoor, 0);  set.cel(oAftDoor, 0);  set.priority(oAftDoor, 13);  ignore.objs(oAftDoor);  [ all doors start closed  set(fDoorClosed);  position(oAftDoor, 69, 52);  draw(oAftDoor);    [ forward door to pilot house  animate.obj(oFwdDoor);  stop.cycling(oFwdDoor);  set.view(oFwdDoor, vw.MidShipArt2);  set.loop(oFwdDoor, 1);  set.cel(oFwdDoor, 0);  set.priority(oFwdDoor, 8);  ignore.objs(oFwdDoor);  ignore.blocks(oFwdDoor);  position(oFwdDoor, 151, 52);  draw(oFwdDoor);    [ door to captain's cabin  animate.obj(oCabinDoor);  stop.cycling(oCabinDoor);  set.view(oCabinDoor, vw.MidShipArt2);  set.loop(oCabinDoor, 0);  set.cel(oCabinDoor, 0);  set.priority(oCabinDoor, 13);  ignore.objs(oCabinDoor);  position(oCabinDoor, 93, 94);  draw(oCabinDoor);    [ Jerrod  animate.obj(ego);    [ if timer is not at one where Jerrod gets sick  if (CurrentTripTime != ScurvyTime &&       CurrentTripTime != CholeraTime &&       CurrentTripTime != TripPoint_15)    {    [ use the normal New York view    set.view(ego, vw.JerrodNY);    }  else    {    [ assume Jerrod is sick    set.view(ego, vw.SickJerrodNY);    [ unless on final leg going into California    if (CurrentTripTime == TripPoint_15)      {      [ if not sick at sea      if (!isset(SickAtSea))        {        [ reset to normal view        set.view(ego, vw.JerrodNY);        }      }    else      {      [ set sick flag for for scurvy or cholera time      set(SickAtSea);      }    }      [ since room is 2D, priority doesn't change  set.priority(ego, 10);    [ adjust Jerrod's position based on which level he  [ was on in the previous room (rm.ShipMidInterior)  if (posn(ego, 150, 51, 159, 53))    {    position(ego, 135, 52);    }  if (posn(ego, 150, 93, 159, 108))    {    position(ego, 134, 102);    }      [ now draw Jerrod on screen and show the picture  draw(ego);  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is at top of ladder and not climbingif (posn(ego, 146, 107, 148, 107))  {  [ adjust position so the climbing view will appear  [ correctly  if (posn(ego, 146, 107, 146, 107))    {    TmpX = 0;    }  if (posn(ego, 147, 107, 147, 107))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 107, 148, 107))    {    TmpX = -2; [ 254;    }  [ start climbing  set(fOnLadder);  TmpY = 17;  [ change view to climbing view  set.view(ego, vw.ClimbingJerrodNY);  [ set and fix loop  set.loop(ego, 3);  fix.loop(ego);  [ adjust step time  vTmpVal = 2;  step.size(ego, vTmpVal);  [ reposition so view looks correct on the ladder  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder and climbingif (posn(ego, 146, 156, 146, 156) && isset(fOnLadder))  {  [ stop climbing  reset(fOnLadder);  [ adjust position so normal view will appear correctly  TmpX = 1;  TmpY = 0;  [ if trip timing point is NOT sick time, or last leg of  [ journey  if (CurrentTripTime != ScurvyTime &&       CurrentTripTime != CholeraTime &&       CurrentTripTime != TripPoint_15)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ assume Jerrod is sick    set.view(ego, vw.SickJerrodNY);    [ unless on last leg of journey    if (CurrentTripTime == TripPoint_15)      {      [ if NOT sick      if (!isset(SickAtSea))        {        [ reset to normal ego view        set.view(ego, vw.JerrodNY);        }      }    }  [ allow auto loop selection  release.loop(ego);  [ restore step value  vTmpVal = 1;  step.size(ego, vTmpVal);  [ reposition so ego appears correctly  reposition(ego, TmpX, TmpY);  }  [ if one pixel above bottom of ladder, and NOT climbingif (posn(ego, 146, 155, 148, 155) && !isset(fOnLadder))  {  [ adjust position so climbing view will appear correctly  if (posn(ego, 146, 155, 146, 155))    {    TmpX = 0;    }  if (posn(ego, 147, 155, 147, 155))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 155, 148, 155))    {    TmpX = -2; [ 254;    }  [ start climbing  set(fOnLadder);  TmpY = -1; [ 255;  [ switch to climbing view  set.view(ego, vw.ClimbingJerrodNY);  [ set and fix loop  set.loop(ego, 3);  fix.loop(ego);  [ adjust step size  vTmpVal = 2;  step.size(ego, vTmpVal);  [ reposition so view appears in correct location  reposition(ego, TmpX, TmpY);  }  [ if at top of ladder and climbingif (posn(ego, 146, 122, 146, 123) && isset(fOnLadder))  {  [ stop climbing  reset(fOnLadder);  [ if trip timing point is NOT a sick point or last leg of  [ journey  if (CurrentTripTime != ScurvyTime &&       CurrentTripTime != CholeraTime &&       CurrentTripTime != TripPoint_15)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ assume sick    set.view(ego, vw.SickJerrodNY);    [ unless on last leg of journey    if (CurrentTripTime == TripPoint_15)      {      [ if NOT sick      if (!isset(SickAtSea))        {        [ restore normal ego view        set.view(ego, vw.JerrodNY);        }      }    }  [ restore auto loop selection  release.loop(ego);  [ restore step size to 1  vTmpVal = 1;  step.size(ego, vTmpVal);  [ adjust view position so it will appear in correct  [ location  TmpX = 1;  TmpY = -16; [ 240;  reposition(ego, TmpX, TmpY);  }  [ captain will swivel in his chair at random intervalrandom(0, 100, vCaptainStatus);[ 8 in 100 chanceif (vCaptainStatus < 7)  {  [ captain cycles to end of loop  end.of.loop(oCaptain, fCaptainMoved);  }[ 8 in 100 chanceif (vCaptainStatus > 93)  {  [ captain cycles back to front of loop  reverse.loop(oCaptain, fCaptainMoved);  }  [ if trip timing point is time for scurvyif (CurrentTripTime == ScurvyTime)  {  [ if Jerrod is currently healthy  if (EgoHealthStatus == 0)    {    [ if he's set to die    if (isset(DyingAtSea))      {      [ only happens if NOT on stairs or on ladder      if ((posn(ego, 56, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ no more player control        program.control();        [ reset set to die flag        reset(DyingAtSea);        [ switch to dying view        set.view(ego, vw.DyingJerrodNY);        set.cel(ego, 0);        end.of.loop(ego, fDoneDying);        set(CycleAtRest);        }      }    [ after Jerrod finishes dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      stop.update(ego);      [ set reason to death by cholera      EgoHealthStatus = 20;      [ load and call logic to handle final death sequence      load.logics(lgc.DeathScurvy);      call(lgc.DeathScurvy);      }    }  }  [ if trip timing point is time for choleraif (CurrentTripTime == CholeraTime)  {  [ if Jerrod is healthy  if (EgoHealthStatus == 0)    {    [ but also set to die    if (isset(DyingAtSea))      {      [ only if NOT on stairs or on ladder      [ (need room to fall down dead)      if ((posn(ego, 56, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ no more player control        program.control();        [ reset set to die flag        reset(DyingAtSea);        [ switch to dying view        set.view(ego, vw.DyingJerrodNY);        set.cel(ego, 0);        end.of.loop(ego, fDoneDying);        set(CycleAtRest);        }      }    [ after Jerrod is finished dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      stop.update(ego);      [ set reason to death by cholera      EgoHealthStatus = 21;      [ load and call logic to handle final death sequence      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      }    }  }  [ if trip timing point is last leg of journey, heading into[ Californiaif (CurrentTripTime == TripPoint_15)  {  [ if Jerrod is healthy  if (EgoHealthStatus == 0)    {    [ if cycle count has reached beginning of starving    [ sequence AND not already sick, AND haven't eaten yet    if (TripCycles2 == vStarveStart &&         TripCycles == 100 &&         !isset(SickAtSea) &&         !isset(AteHam))      {      [ Jerrod is starving- set sick flag      set(SickAtSea);      [ if currently fishing      if (isset(fFishing))        {        [ defer notifying player of starve status        set(fDeferStarve);        }      [ if not fishing      if (!isset(fFishing))        {        [ warn player        print("All the supplies and food are running very low and you are "              "feeling weak to the point of death.");        }      [if not fishing and not climbing      if (!isset(fFishing) && !isset(fOnLadder))        {        [ switch to sick view        set.view(ego, vw.SickJerrodNY);        }      }    [ if starve msg was deferred, and now done fishing    if (isset(fDeferStarve) && !isset(fFishing))      {      [ warn player      reset(fDeferStarve);      print("All the supplies and food are running very low and you are feeling "            "weak to the point of death.");      [ switch to sick view      set.view(ego, vw.SickJerrodNY);      [ and initiate dying      set(DyingAtSea);      }    [ if the starvation point of death is reached    if (TripCycles2 == StarveDying && TripCycles == 100)      {      [ if Jerrod is sick, but didn't eat bad meat      if (isset(SickAtSea) && !isset(fAteBadMeat))        {        [ initiate dying        set(DyingAtSea);        }      [ if Jerrod isn't sick AND didn't eat bad meat      if (!isset(SickAtSea) && !isset(fAteBadMeat))        {        [ he made it! set flag to continue the journey!        set(ContinueJourney);        }      }    [ if Jerrod is set to die    if (isset(DyingAtSea))      {      [ only if NOT on stairs or on ladder      if ((posn(ego, 57, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ no more player control        program.control();        reset(DyingAtSea);        [ switch to dying view        set.view(ego, vw.DyingJerrodNY);        set.cel(ego, 0);        end.of.loop(ego, fDoneDying);        set(CycleAtRest);        }      }    [ after Jerrod finishes dying    if (isset(fDoneDying))      {      [ Jerrod stops moving      reset(fDoneDying);      stop.update(ego);      if (isset(fAteBadMeat))        {        [ set reason to death by rotten meat        EgoHealthStatus = 25;        }      else        {        [ set reason to death by starvation        EgoHealthStatus = 26;        }      [ load and call logic to handle final death sequence      load.logics(lgc.DeathStarvation);      call(lgc.DeathStarvation);      }    }  }  [ if fishing and sick at seaif (isset(fFishing) && isset(SickAtSea))  {  [ decrement cycle counter; this effectively freezes time   [ (since cycle counter is advanced at end of each  [ interpreter cycle)  --TripCycles;  }  [ if Jerrod is ready to begin fishingif (isset(fFishMoved) && vFishingStatus == 1)  {  [ advance status to next phase  reset(fFishMoved);  vFishingStatus = 2;  print("You pull the string you found in the bunk room out of your pocket and "        "attach one end of it to the wooden stick. The other end you attach to "        "the paper clip.");  print("You tie the metal scraps from the engine room to the string a few feet "        "from the paper clip.");  print("And last, but certainly not least, you gladly take that piece of pork "        "out of your pocket and carefully place it on the paper clip so that it "        "won't fall off!");  print("With great anticipation, you lower this make-shift apparatus into the "        "churning sea.");          [ the ham is the bait  drop("Piece of ham");  reset(HasHam);    [ adjust position so fishing view will be in correct location  vEgoDX = -8; [ 248;  vEgoDY = -10; [ 246;  reposition(ego, vEgoDX, vEgoDY);    [ switch to fishing view  set.view(ego, vw.Fishing);  set.loop(ego, 0);  fix.loop(ego);  set.cel(ego, 0);    [ and now Jerrod is fishing  set(fFishing);    [ setting step size to 0 doesn't really do anything since  [ the ego object isn't moving  vEgoDX = 0;  step.size(ego, vEgoDX);    [ add the fishing line above water  animate.obj(oFishLine1);  set.view(oFishLine1, vw.Fishing);  set.loop(oFishLine1, 4);  fix.loop(oFishLine1);  ignore.objs(oFishLine1);  ignore.blocks(oFishLine1);  position(oFishLine1, 42, 103);  draw(oFishLine1);    [ and also add the fishing line below water  animate.obj(oFishLine2);  set.view(oFishLine2, vw.Fishing);  set.loop(oFishLine2, 6);  fix.loop(oFishLine2);  ignore.objs(oFishLine2);  ignore.blocks(oFishLine2);  position(oFishLine2, 23, 116);  draw(oFishLine2);  [ the line will slowly sink  move.obj(oFishLine2, 23, 135, 1, fFishMoved);  vEgoDX = 4;  step.time(oFishLine2, vEgoDX);  }  [ after fish line sinksif (isset(fFishMoved) && vFishingStatus == 2)  {  [ the fish comes into view  reset(fFishMoved);  vFishingStatus = 3;  [ animate the fish  animate.obj(oFish);  set.view(oFish, vw.Fish);  ignore.objs(oFish);  ignore.blocks(oFish);  [ fish starts out of view, behind the boat  position(oFish, 93, 128);  set.priority(oFish, 5);  draw(oFish);  [ fish swims to left edge of screen  move.obj(oFish, 1, 128, 2, fFishMoved);  }  [ after fish comes into viewif (isset(fFishMoved) && vFishingStatus == 3)  {  [ fish moves a bit deeper, but slowly   reset(fFishMoved);  vFishingStatus = 4;  set.loop(oFish, 0);  fix.loop(oFish);  move.obj(oFish, 1, 137, 1, fFishMoved);  vEgoDX = 4;  step.time(oFish, vEgoDX);  }  [ after fish gets deeperif (isset(fFishMoved) && vFishingStatus == 4)  {  [ it moves forward toward bait  reset(fFishMoved);  vFishingStatus = 5;  move.obj(oFish, 6, 137, 1, fFishMoved);  }  [ after fish gets to baitif (isset(fFishMoved) && vFishingStatus == 5)  {  [ it stops there for a bit  reset(fFishMoved);  vFishingStatus = 6;  }  [ while pausing at the baitif (vFishingStatus == 6)  {  [ increment the timer  ++vFishTimer;  [ after 20 cycles  if (vFishTimer == 20)    {    [ fish jumps at hook    vFishTimer = 0;    vFishingStatus = 7;    }  }  [ when fish is ready to jump at the baitif (vFishingStatus == 7)  {  vFishingStatus = 8;  [ change view to biting fish  set.view(oFish, vw.Fishing);  set.loop(oFish, 1);  fix.loop(oFish);  end.of.loop(oFish, fFishMoved);  }  [ after fish bites the baitif (isset(fFishMoved) && vFishingStatus == 8)  {  [ fish starts to flail about  reset(fFishMoved);  vFishingStatus = 9;  set.loop(oFish, 2);  fix.loop(oFish);  start.cycling(oFish);  move.obj(oFish, 33, 156, 1, fFishMoved);  [ fish line moves as fish is flailing  vEgoDX = -1; [ 255;  vEgoDY = 0;  reposition(oFishLine1, vEgoDX, vEgoDY);  set.loop(oFishLine1, 5);  fix.loop(oFishLine1);  start.cycling(oFishLine1);  [ the fishing pole also begins moving  start.cycling(ego);  set(CycleAtRest);  [ line below water goes away (fish has it in mouth)  erase(oFishLine2);  }  [ after fish finishes flailingif (isset(fFishMoved) && vFishingStatus == 9)  {  [ Jerrod begins pulling the fish up  reset(fFishMoved);  vFishingStatus = 10;  vEgoDX = 1;  vEgoDY = 0;  reposition(ego, vEgoDX, vEgoDY);  set.loop(ego, 3);  fix.loop(ego);  [ adjust loation of fish line  vEgoDX = 2;  vEgoDY = -1; [ 255;  reposition(oFishLine1, vEgoDX, vEgoDY);  [ move line and fish as Jerrod pulls it up  move.obj(oFishLine1, 46, 105, 1, fLineMoved);  move.obj(oFish, 40, 116, 2, fFishMoved);  }  [ after Jerrod pulls the fish to the surfaceif (isset(fFishMoved) && vFishingStatus == 10)  {  [ Jerrod pulls it up the rest of the way  reset(fFishMoved);  vFishingStatus = 11;  [ line is gone  erase(oFishLine1);  [ adjust fish position  vEgoDX = 7;  vEgoDY = 2;  reposition(oFish, vEgoDX, vEgoDY);  [ set to view of fish out of water  set.loop(oFish, 7);  [ move fish up to Jerrod  move.obj(oFish, 47, 63, 2, fFishMoved);  vEgoDX = 2;  step.time(oFish, vEgoDX);  }  [ after fish is hauled out of the waterif (isset(fFishMoved) && vFishingStatus == 11)  {  [ done fishing  reset(fFishMoved);  vFishingStatus = 12;  [ erase the fish  erase(oFish);  [ adjust Jerrod's position so switch to normal view will  [ appear correctly  vEgoDX = 7;  vEgoDY = 10;  reposition(ego, vEgoDX, vEgoDY);  [ switch back to normal view  set.view(ego, vw.JerrodNY);  [ restore step size  vEgoDX = 1;  step.size(ego, vEgoDX);  [ restore auto loop function  release.loop(ego);  [ set loop to left facing  set.loop(ego, 1);  [ stop cycling Jerrod when he's not moving  reset(CycleAtRest);  print("Once again, Jerrod, you have saved the day and the lives of those "        "around you.");  print("You reel in the catch of the day and share it with your companions. "        "Now you will all make it to California!");  [ if Jerrod has previously eaten ham (without dying)  if (isset(AteHam))    {    [ only score 2 points    currentScore  += 2;    }  else    {    [ if no ham eaten yet, score 5 points    currentScore  += 5;    }  [ Jerrod made it! set flag to continue the journey  set(ContinueJourney);  reset(fFishing);  }  [ if currently no land is in sightif (vLandStatus != 250)  {  [ random chance some land will appear  random(210, 249, vLandStatus);  [ one in 40 chance  if (vLandStatus == 230)    {    [ make sure cel 0 is selected    set.cel(oLand, 0);    [ set status to show land is visible    vLandStatus = 250;    [ position it on right side of screen    position(oLand, 75, 107);    draw(oLand);    [ there's only one cel, so stop.cycling doesn't     [ actually do anything    stop.cycling(oLand);    [ move the island to left of screen (to simulate ship    [ is passing it)    move.obj(oLand, 1, 107, 1, fLandMoved);    step.time(oLand, vLandStep);    }  }  [ when land has passed byif (isset(fLandMoved))  {  [ remove it from screen  reset(fLandMoved);  erase(oLand);  [ increment status so randomizer will start again  ++vLandStatus;  }  [ if trip time point is one of the South America legsif ((CurrentTripTime == 9 || CurrentTripTime == 11))  {  [ if currently no rock in sight  if (vRockStatus != 250)    {    [ random chance a rock will appear    random(210, 249, vRockStatus);    [ one in 40 chance    if (vRockStatus == 230)      {      [ rock is visible      vRockStatus = 250;      [ randomly choose how severe rock crash will be      random(0, 5, vRockSize);      [ two in six chance to hit rock - it's really bad      if ((vRockSize == 0 || vRockSize == 1))        {        [ ship hits rock; play sound        sound(s.RockCrash, fSoundDone);        [ if anything other than VGA        if (monitorType != VGA)          {          [ shake the screen          shake.screen(5);          }        [ if trip time is designated for sinking by rock        if (CurrentTripTime == vRockTime)          {          [ if Jerrod is currently OK          if (EgoHealthStatus == 0)            {            [ he's not OK anymore...            print("This rock has done serious damage to the hull of the ship.");            print("The captain orders the crew and passengers to abandon ship, "                  "but it is too late.");            print("The lower levels of the ship fill with water and you are on "                  "your way down in some of the most frigid water in the world.");            }          [ ship is sinking          set(fShipSinking);          }        }      [ three in six chance the hit isn't bad      if ((vRockSize == 2 || vRockSize == 3 || vRockSize == 4))        {        [ ship hits rock; play sound        sound(s.RockCrash, fSoundDone);        [ if monitor is anything other than VGA        if (monitorType != VGA)          {          [ shake screen          shake.screen(3);          }        }      [ one in six chance ship just grazes the rock      if (vRockSize == 5)        {        [ ship hits rock; play sound        sound(s.RockCrash, fSoundDone);        [ if monitor is anything other than VGA        if (monitorType != VGA)          {          [ only one shake          shake.screen(1);          }        }      [ use the random number as the rock cel number      set.cel.v(oRock, vRockSize);      [ position rock on sceen behind boat      position(oRock, 100, 167);      draw(oRock);      stop.cycling(oRock);      [ move the rock to left edge of screen      move.obj(oRock, 1, 167, 1, fRockMoved);      step.time(oRock, vRockStep);      }    }  [ if rock reaches left edge  if (isset(fRockMoved))    {    [ remove it from screen    reset(fRockMoved);    erase(oRock);    [ increment status so randomizer can find another one    ++vRockStatus;    }  }  [ if trip timer matches time for rock to sink shipif (CurrentTripTime == vRockTime)  {  [ if ship hit rock and is sinking  if (isset(fShipSinking))    {    [ reset the flag    reset(fShipSinking);    [ use vRockSize as a counter    vRockSize = 7;    }  [ if counter is initiated  if (vRockSize > 6)    {    [ increment timer    ++vRockSize;    [ after 26 cycles    if (vRockSize == 26)      {      [ begin sinking ship sequence, due to hitting a rock      EgoHealthStatus = 27;      new.room(cs.SinkingShipClear); [ ##LE001##      }    }  }  [ if off the coast of South Americaif ((CurrentTripTime == 9 || CurrentTripTime == 11))  {  [ if no iceberg present  if (vIcebergStatus != 250)    {    [ random chance one appears    random(210, 249, vIcebergStatus);    [ one in 40 chance    if (vIcebergStatus == 230)      {      [ iceberg is visible       vIcebergStatus = 250;      [ play a sound      sound(s.RockCrash, fSoundDone);      [ if anything but VGA monitor      if (monitorType != VGA)        {        [ shake screen        shake.screen(3);        }      [ increment count of iceberg hits      ++IcebergCounter;      [ if five hits      if (IcebergCounter == 5)        {        [ set rock status so no more rocks appear        vRockStatus = 250;        [ if trip time point is time for iceberg to sink ship        if (CurrentTripTime == vIcebergTime)          {          [ if Jerrod is currenly OK          if (EgoHealthStatus == 0)            {            [ set flag to begin sinking sequence            print("The iceberg once again pounds the side of the ship, but this "                  "time the force may be too much for the hull to withstand.");            print("The wretched iceberg punctures the shell of the ship, "                  "flooding the lower levels.");            print("The end is near.");            }          set(fShipSinking);          }        }      else        {        [ empty block; there was probably something here at one point        [ but it appears to have been deleted        }      [ position iceberg just behind ship      position(oIceberg, 103, 126);      draw(oIceberg);      [ move it to left edge of screen (to simulate the       [ ship passing by)      move.obj(oIceberg, 1, 126, 1, fIcebergMoved);      step.time(oIceberg, vRockStep);      }    }  [ when iceberg reaches left edge of screen  if (isset(fIcebergMoved))    {    [ remove it from screen    reset(fIcebergMoved);    erase(oIceberg);    [ increment status so another berg can show up later    ++vIcebergStatus;    }  }  [ if trip time point matches time for iceberg to sink shipif (CurrentTripTime == vIcebergTime)  {  [ if ship is set to sink  if (isset(fShipSinking))    {    [ use vRockSize as a counter    reset(fShipSinking);    vRockSize = 7;    }  [ if counter is initiated  if (vRockSize > 6)    {    [ increment counter    ++vRockSize;    [ when counter reaches 26 (+19 cycles)    if (vRockSize == 26)      {      [ start ship sink sequence, due to iceberg      EgoHealthStatus = 28;      new.room(cs.SinkingShipClear); [ ##LE002##      }    }  }  [ if Jerrod is in pilot house, exiting to rightif (posn(ego, 143, 52, 155, 52) && isset(egoHitSpecial))  {  [ bump him down so he can continue to mid ship room  TmpX = 1;  TmpY = 5;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is on deck outside pilot house and going inif (posn(ego, 148, 56, 155, 58) && isset(egoHitSpecial))  {  [ bump him up so he can continue into pilot house  TmpX = -1; [ 255;  TmpY = -5; [ 251;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is on upper stairs, and flag not setif (posn(ego, 106, 53, 138, 91) && !isset(fOnStairs))  {  [ set flag, and adjust priority  set(fOnStairs);  set.priority(ego, 8);  }  [ if Jerrod is NOT on upper stairs and flag IS setif (!posn(ego, 106, 53, 138, 91) && isset(fOnStairs))  {  [ reset flag, and restore priority  reset(fOnStairs);  set.priority(ego, 10);  }[ if Jerrod is on upper stairs and on the alarm lineif (posn(ego, 106, 53, 138, 91) && isset(egoHitSpecial))  {  [ if going down or down/left  if ((egoDir == DOWN || egoDir == DOWN_LEFT))    {    [ force direction to left    egoDir = LEFT;    }      [ if going left  if (egoDir == LEFT)    {    [ bump down one row    TmpX = 0;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }      [ if going up or up/right  if ((egoDir == UP_RIGHT || egoDir == UP))    {    [ force direction to right    egoDir = RIGHT;    }      [ if going right  if (egoDir == RIGHT)    {    [ bump up one row and one column to right    TmpX = 1;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }[ if Jerrod is on lower stairs and on alarm lineif (posn(ego, 122, 94, 145, 107) && isset(egoHitSpecial))  {  [ if going right or down/right  if ((egoDir == DOWN_RIGHT || egoDir == RIGHT))    {    [ bump down one, right one    TmpX = 1;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }  [ if going left or up/left  if ((egoDir == UP_LEFT || egoDir == LEFT))    {    [ bump up one, left one    TmpX = -1; [ 255;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ if Jerrod is by aft door, and door is closedif (posn(ego, 65, 52, 79, 52) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oAftDoor, fAftDoorOpen);  }  [ if Jerrod is NOT by aft door, and door is openif (!posn(ego, 65, 52, 79, 52) && (isset(fAftDoorOpen)))  {  [ close it  reset(fAftDoorOpen);  reverse.loop(oAftDoor, fDoorClosed);  }  [ if Jerrod is by forward door, an door is closedif (posn(ego, 143, 52, 154, 57) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oFwdDoor, fFwdDoorOpen);  }  [ if Jerrod is NOT by forward door, and door is openif (!posn(ego, 143, 52, 154, 57) && (isset(fFwdDoorOpen)))  {  [ close it  reset(fFwdDoorOpen);  reverse.loop(oFwdDoor, fDoorClosed);  }  [ if Jerrod is by cabin door and door is closedif (posn(ego, 89, 94, 103, 94) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oCabinDoor, fCabDoorOpen);  }  [ if Jerrod is NOT by cabin door and door is openif (!posn(ego, 89, 94, 103, 94) && (isset(fCabDoorOpen)))  {  [ close it  reset(fCabDoorOpen);  reverse.loop(oCabinDoor, fDoorClosed);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == RIGHT_EDGE)  {  new.room(rm.ShipMidInterior); [ ##LE003##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  [ response depends on Jerrod's location    [ on bridge deck  if (EgoY == 52)    {    if (EgoX < 66)      {      print("You are on the bridge deck.");      print("This would be a good place to fish!");      }    else      {      print("You are on the bridge deck.");      print("You see a wheel, a compass and a staircase.");      }    }      [ top deck  if (EgoY == 57)    {    print("This is the aft section of the sun, rain, snow, hail, and sleet "          "deck.");    }  if (EgoY > 57 && EgoY < 94)    {    print("This is the staircase that connects the captain's deck to the bridge "          "deck.");    }      [ captain's quarters  if (EgoY == 94)    {    if (EgoX < 97)      {      print("This is the captain's cabin.");      }    if (EgoX > 96)      {      print("You are immediately outside of the captain's cabin.");      }    }      [ on stairs between main deck and captain's deck  if (EgoY < 106 && EgoY > 94)    {    print("This is the small set of stairs connecting the main deck to the "          "captain's deck.");    }      [ main deck  if (EgoY == 106)    {    print("This is the main deck of the ship.");    }      [ ladder between main deck and lower deck  if (EgoY > 106 && EgoY < 156)    {    print("You are on the ladder that connects the main deck with the lower "          "deck.");    }      [ lower deck  if (EgoY == 156)    {    print("This is the ship's lower deck.");    }  }  [ get paperclipif ((said("acquire", "clip") || said("ask", "clip")))  {  [ if Jerrod already has it  if (PaperclipStatus == 1)    {    print("You already have the paper clip.");    }  else    {    [ if Jerrod is in captain's cabin    if (posn(ego, 20, 94, 96, 94))      {      [ if time point is AFTER the storm      if (CurrentTripTime > StormTime)        {        [ if clip hasn't been picked up yet        if (PaperclipStatus == 0)          {          print("You pick up the paper clip and put it in your pocket.");          get("Paper clip");          PaperclipStatus = 1;          if (!isset(ScorePaperclip))            {            [ score 3 points            sound(s.AddToScore, fSoundDone);            set(ScorePaperclip);            currentScore  += 3;            }          }        else          {          print("There is no paper clip here now.");          }        }      else        {        print("There is no paper clip here now.");        }      }    else      {      print("There is no paper clip right here.");      }    }  }  [ look at paperclipif (said("examine", "clip"))  {  [ if paperclip is gone  if (PaperclipStatus == 2)    {    [ if in captain's cabin    if (posn(ego, 20, 94, 96, 94))      {      print("There is no paper clip here now.");      }    else      {      print("There is no paper clip right here.");      }    }      [ if paperclip hasn't been picked up yet  if (PaperclipStatus == 0)    {    [ if in captain's cabin    if (posn(ego, 20, 94, 96, 94))      {      [ if current time point is past storm time      if (CurrentTripTime > StormTime)        {        print("There is a hefty-looking paper clip lying on the floor.");        }      else        {        print("There is no paper clip here now.");        }      }    }  }  [ eat hamif ((said("eat", "bacon") ||     said("eat", "meat") ||     said("eat", "bacon", "meat")))  {  if (isset(HasHam))    {    [ random chance the ham is OK    random(0, 9, vBadHam);    [ only ONE in TEN chance that ham is safe    if (vBadHam == 0)      {      print("You eat the piece of ham you have been carrying around. It really "            "hits the spot!");      [ checking this flag isn't necessary; once this flag      [ gets set, Jerrod doesn't have the ham anymore so      [ Jerrod can't eat it again      if (!isset(AteHam))        {        [ eat it, score 3 points        set(AteHam);        if (!isset(ScoreEatHam))          {          currentScore  += 3;          }        }      drop("Piece of ham");      reset(HasHam);      [ if not climbing, make sure normal view is set (in      [ case it was the sick Jerrod view)      if (!isset(fOnLadder))        {        set.view(ego, vw.JerrodNY);        }      [ and Jerrod is no longer sick      reset(SickAtSea);      }    else      {      [ NINE in TEN chance the meat is BAD      print("As soon as you sink your teeth into this piece of meat, you "            "realize something terrible is about to happen.");      print("That pig had some type of disease that poisoned the meat. It looks "            "like your trip is over!");      [ Jerrod is gonna die from eating tainted meat      set(DyingAtSea);      set(fAteBadMeat);      }    }  else    {    print("How can you do that? You don't have anything to eat!");    }  }  [ go fishingif ((said("go", "fish") ||     said("go", "fishing") ||     said("fish") ||     said("acquire", "fish") ||     said("catch", "fish")))  {  [ Jerrod has to be on the aft deck  if (posn(ego, 40, 30, 65, 52))    {    [ if already fishing    if (isset(fFishing))      {      print("You are already fishing.");      goto(Done);      }          [ if sick    if (isset(SickAtSea))      {      [ too weak to fish      print("That is a wonderful idea, but you just can't muster the strength "            "to do it!");      }    else      {      [ check for all the required pieces needed to fish            [ paperclip for a hook      if (PaperclipStatus != 1)        {        print("This is the place to fish, but how can you fish without "              "something to use as a hook?");        goto(Continue);        }      [ string for line      if (StringStatus != 1)        {        print("This is the place to fish, but you are going to need some "              "fishing line!");        goto(Continue);        }      [ metal for weights      if (MetalStatus != 1)        {        print("This is the place to fish, but you need some weight to attach to "              "the fishing line!");        goto(Continue);        }      [ ham for bait      if (!isset(HasHam))        {        print("This is the place to fish, but the fish are going to want to see "              "some bait at the end of that line!");        goto(Continue);        }      [ shovel handle for pole      if (HandleStatus != 1)        {        print("This is the place to fish, all you need now is something to use "              "as a fishing pole!");        goto(Continue);        }            [ ready to go fishing!      print("Well you've done it!");      print("You have found the perfect place to fish, and you have everything "            "you need to do it!");      [ move into position on the stern deck      move.obj(ego, 56, 52, 1, fFishMoved);      [ initiate fishing status      vFishingStatus = 1;            [ score 8 points      if (!isset(ScoreFishing))        {        sound(s.AddToScore, fSoundDone);        set(ScoreFishing);        currentScore  += 8;        }      }    }  else    {    print("You're getting close to the ideal fishing spot, but you're not quite "          "there!");    }  }  Continue:[ eat fish[  (this is actually not possible; when Jerrod catches the[ fish the game immediately moves to next time point; the[ fish is never put into Jerrod's inventory. This looks like[ old code that should have been removed)if (said("eat", "fish"))  {  if (has("Fish"))    {    if (!isset(ScoreEatHam))      {      set(ScoreEatHam);      if (isset(AteHam))        {        currentScore  += 2;        }      else        {        currentScore  += 5;        }      }    drop("Fish");    [ this flag is not used anywhere else    reset(f97);    set.view(ego, vw.JerrodNY);    reset(SickAtSea);    reset(DyingAtSea);    TripCycles2 = 6;    TripCycles = 75;    }  else    {    print("You have no fish to eat.");    }  }  [ look man/mate/captain/ericif ((said("examine", "boy") ||     said("examine", "crew") ||     said("examine", "crew", "boy") ||     said("examine", "crewman") ||     said("examine", "mate") ||     said("examine", "first", "mate") ||     said("examine", "captain") ||     said("examine", "eric")))  {  [ if in captain's office, on aft stern deck, or in pilot house   if ((posn(ego, 80, 94, 103, 94) ||       posn(ego, 56, 52, 72, 52) ||       posn(ego, 73, 52, 159, 79)))    {    [ in captain's office    if (posn(ego, 80, 94, 103, 94))      {      print("The captain is busy at his desk doing whatever is necessary to "            "keep this ship moving!");      }    [ on aft stern deck    if (posn(ego, 56, 52, 72, 52))      {      [ answer depends on which trip time point      if (CurrentTripTime == 2)        {        print("You met this young man, Eric, the first day you were on the "              "ship. You are both from Brooklyn, the same age, and have the "              "same interests, one of them gold. The two of you have been "              "friends ever since.");        }      if (CurrentTripTime == 4)        {        print("Most others wouldn't notice, but you detect that Eric is getting "              "pale.");        }      if ((CurrentTripTime == 9 || CurrentTripTime == 11))        {        print("When you met Eric, he was strong and healthy. Now he is thin and "              "very weak. He stays outside, despite the cold, to breathe the "              "fresh air.");        }      if (CurrentTripTime == 15)        {        [ eric is gone, so no one to talk to        print("You are not close enough.");        }      }    [ in pilot house    if (posn(ego, 73, 52, 159, 79))      {      print("The first mate is keeping this massive ship on course.");      }    }  else    {    print("You are not close enough.");    }  }  [ talk to man/captain/eric/crewmanif ((said("speak", "boy") ||     said("speak", "crewman") ||     said("speak", "crew", "boy") ||     said("speak", "crew") ||     said("speak", "mate") ||     said("speak", "first", "mate") ||     said("speak", "captain") ||     said("speak") ||     said("speak", "eric")))  {  [ if in captain's cabin, on aft stern deck or in pilot  [ house  if ((posn(ego, 80, 94, 94, 94) ||       posn(ego, 56, 52, 72, 52) ||       posn(ego, 73, 52, 114, 52)))    {    [ in captain's cabin    if (posn(ego, 80, 94, 94, 94))      {      print("Talking helps pass the time on such a long, boring journey. And "            "talk, the captain can do. He always seems to have a story to tell.");      [ display a random story from the captain      random(130, 131, vEgoDX);      print.v(vEgoDX);      }    [ on aft stern deck    if (posn(ego, 56, 52, 72, 52))      {      [ response depends on current trip time point      if (CurrentTripTime == 2)        {        print.at("Eric says, \"Hi, Jerrod. We're one day closer to that "                 "California gold! This is easier than I thought it was going "                 "to be!\"", 2, 5, 0);        print("You reply, \"That's right, one day closer! I'll drop by and talk "              "to you later.\"");        print.at("\"Okay, that sounds great. Make sure you come by again,\" "                 "says Eric.", 2, 5, 0);        }      if (CurrentTripTime == 4)        {        print("You say to your best friend on the ship, \"I've noticed that "              "you're not looking healthy lately. It's probably just a slight "              "case seasickness. You'll be over it in no time!\"");        print.at("\"It's true, Jerrod. I've not been feeling well lately. I "                 "hope you're right about the seasickness,\" says Eric.", 2, 5, 0);        }      if ((CurrentTripTime == 9 ||           CurrentTripTime == 11))        {        print.at("With all the enthusiasm Eric can muster he says, \"I feel "                 "very weak, Jerrod. But I'm going to make it to California. I "                 "am determined to make it to California!\"", 2, 5, 0);        print("Trying to be as convincing as possible you say, \"That's right! "              "We're both going to make it to California.\"");        }      [ in the last leg of the journey, Eric is gone      if (CurrentTripTime == 15)        {        print("You are not close enough.");        }      }    [ in the pilot house    if (posn(ego, 73, 52, 114, 52))      {      print("The ship's first mate says, \"I've been sailing with the captain "            "many years and have never had a mishap. You can count on a safe "            "trip!\"");      }    }  else    {    print("You are not close enough.");    }  }[ look water/look ocean  if ((said("examine", "water") || said("examine", "ocean")))  {  [ if on first or second deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("The sea is deep blue and gently rolling.");    }  else    {    print("You can't see outside from here.");    }  }  [ look island/look landif ((said("examine", "island") ||     said("examine", "land")))  {  [ if on first or second deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("You see an island on the distant horizon.");    }  else    {    print("You can't see outside from here.");    }  }  [ look rockif (said("examine", "rock"))  {  [ if on first or second deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("There are no rocks in sight.");    }  else    {    print("You can't see outside from here.");    }  }  [ look icebergif (said("examine", "iceberg"))  {  [ if on first or second deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    [ if time point is one of the South America legs    if ((CurrentTripTime == 9 || CurrentTripTime == 11))      {      print("You see the tips of a few icebergs floating in the frigid sea.");      }    else      {      print("You can't see an iceberg from here.");      }    }  else    {    print("You can't see outside from here.");    }  }  [ look coalif (said("examine", "coal"))  {  [ if in the hold  if (posn(ego, 141, 142, 159, 156))    {    print("You can't see through the coal hold door.");    }  else    {    print("You can't do that from here.");    }  }  [ open doorif (said("open", "door"))  {  [ if in the hold  if (posn(ego, 141, 108, 159, 156))    {    print("You just can't get it open!");    }  else    {    print("Just walk up to it.");    }  }  [ look doorif (said("examine", "door"))  {  [ if near one of the four doors in the room  if ((posn(ego, 56, 52, 111, 52) ||       posn(ego, 112, 52, 159, 79) ||       posn(ego, 80, 80, 116, 94) ||       posn(ego, 141, 108, 159, 156)))    {    if (posn(ego, 56, 52, 111, 52))      {      print("This is the aft door.");      }    if (posn(ego, 112, 52, 159, 79))      {      print("This is the forward door.");      }    if (posn(ego, 80, 80, 116, 94))      {      print("This is the door to the captain's cabin.");      }    if (posn(ego, 141, 108, 159, 156))      {      print("The door keeps coal from falling out of the coal hold.");      }    }  else    {    print("You can't do that from here.");    }  }  [ open coal hold doorif ((said("open", "coal", "hold", "door") ||     said("open", "coalhold", "door") ||     said("open", "coal", "door") ||     said("unlock", "door") ||     said("unlock", "coal", "hold", "door") ||     said("unlock", "coalhold", "door") ||     said("unlock", "coal", "door") ||     said("unlock", "coal", "hold", "door")))  {  [ if in hold  if (posn(ego, 141, 108, 159, 156))    {    print("You just can't get it open!");    }  else    {    print("You can't do that from here.");    }  }  [ look coal hold doorif ((said("examine", "coal", "hold", "door") ||     said("examine", "coalhold", "door") ||     said("examine", "coal", "door")))  {  [ if in hold  if (posn(ego, 141, 108, 159, 156))    {    print("The door keeps coal from falling out of the coal hold.");    }  else    {    print("You can't do that from here.");    }  }  [ look mastif (said("examine", "mast"))  {  [ if anywhere but the hold  if (posn(ego, 56, 52, 159, 107))    {    print("The mast looks very sturdy.");    }  else    {    print("You can't do that from here.");    }  }  [ look riggingif (said("examine", "rigging"))  {  [ if anywhere but the hold  if (posn(ego, 56, 52, 159, 79))    {    print("The rigging whistles in the wind!");    }  else    {    print("You can't do that from here.");    }  }  [ look lampif (said("examine", "lamp"))  {  [ if near the lamps  if (posn(ego, 80, 83, 159, 130))    {    print("They are whale oil lamps.");    }  else    {    print("You can't do that from here.");    }  }  [ look ladderif (said("examine", "ladder"))  {  [ if near a ladder  if (posn(ego, 123, 94, 159, 156))    {    print("Just a typical ladder.");    }  else    {    print("You can't do that from here.");    }  }  [ look windowif (said("examine", "glass"))  {  [ if near a window  if (posn(ego, 56, 52, 159, 107))    {    print("You see nothing but blue sky and water.");    }  else    {    print("You can't do that from here.");    }  }  [ look stairsif (said("examine", "stair"))  {  [ if near the captain's deck stairs  if (posn(ego, 120, 94, 159, 167))    {    print("This is the small set of stairs connecting the main deck to the "          "captain's deck.");    }  else    {    print("These stairs provide quick access between the bridge deck and the "          "captain's cabin.");    }  }  [ use stairs/use ladderif ((said("go", "stair") ||     said("go", "up", "stair") ||     said("go", "down", "stair") ||     said("climb", "stair") ||     said("climb", "up", "stair") ||     said("climb", "down", "stair") ||     said("use", "stair") ||     said("go", "ladder") ||     said("go", "up", "ladder") ||     said("go", "down", "ladder") ||     said("climb", "ladder") ||     said("climb", "up", "ladder") ||     said("climb", "down", "ladder") ||     said("use", "ladder")))  {  print("You have to do that yourself.");  }    [ look sceneif (said("examine", "scene"))  {  print("Today is a beautiful day!\n      What a view!");  }  [ look at captain's quartersif ((said("examine", "quarter") ||     said("examine", "captain", "quarter") ||     said("examine", "cabin") ||     said("examine", "captain", "cabin") ||     said("examine", "office") ||     said("examine", "captain", "office")))  {  [ if  in captain's quarters  if (posn(ego, 60, 94, 96, 94))    {    [ if time point is after the storm time    if (CurrentTripTime > StormTime)      {      if (PaperclipStatus == 0)        {        print("There is a paper clip lying on the floor. It must have been "              "tossed there by the storm.");        }      else        {        print("The captain keeps his quarters very tidy. There is nothing out "              "of place.");        }      }    else      {      print("The captain keeps his quarters very tidy. Only after a storm will "            "you find anything out of place here.");      }    }  else    {    print("You can't see the captain's cabin from here.");    }  }  if ((said("examine", "desk") ||     said("examine", "captain", "desk") ||     said("examine", "in", "desk") ||     said("examine", "in", "captain", "desk") ||     said("examine", "drawer") ||     said("examine", "desk", "drawer") ||     said("examine", "in", "drawer") ||     said("examine", "in", "desk", "drawer") ||     said("open", "drawer") ||     said("open", "desk", "drawer")))  {  [ if in captain's room  if (posn(ego, 60, 94, 96, 94))    {    [ if time point is after storm time    if (CurrentTripTime > StormTime)      {      if (PaperclipStatus == 0)        {        print("A paper clip that was on the desk is now lying on the floor. It "              "must have been tossed there by the storm.");        }      else        {        print("The captain keeps his quarters very tidy. There is nothing out "              "of place.");        }      }    else      {      print("The captain keeps his quarters very tidy. Only after a storm will "            "you find anything out of place here.");      }    }  else    {    print("There's no desk right here.");    }  }  [ look wheelif (said("examine", "wheel"))  {  [ if in pilot house  if (posn(ego, 65, 52, 159, 52))    {    print("The first mate controls the rudder of the ship by turning this "          "wheel.");    }  else    {    print("You can't do that from here.");    }  }  [ look in drawer/open drawer/open deskif ((said("examine", "drawer") ||     said("open", "drawer") ||     said("open", "desk") ||     said("examine", "in", "desk")))  {  [ if in captain's quarters  if (posn(ego, 80, 94, 103, 94))    {    print("You find nothing of interest.");    }  else    {    print("You can't do that from here.");    }  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "ocean") ||     said("jump") ||     said("jump", "overboard") ||     said("go", "overboard")))  {  print("You'll never get to California if you do that!");  }  [ turn wheel/take wheelif ((said("rotate", "wheel") || said("acquire", "wheel")))  {  print("It might be best to leave that up to the crew. They know what they are "        "doing!");  }  [ feel doorif (said("feel", "door"))  {  [ if in hold  if (posn(ego, 141, 108, 159, 156))    {    if (CoalFireTime > 0)      {      print("The door is warm to the touch.");      }    else      {      print("The door is cool.");      }    }  else    {    print("You can't do that from here.");    }  }  [ look floorif (said("examine", "deck"))  {  [ if in captain's room  if (posn(ego, 60, 94, 96, 94))    {    [ if time pointer is after storm time    if (CurrentTripTime > StormTime)      {      if (PaperclipStatus == 0)        {        print("There is a paper clip lying on the floor. It must have been "              "tossed there by the storm.");        }      else        {        print("The captain keeps his floor spotless. Only after a storm will "              "there be anything on the floor.");        }      }    else      {      print("The captain keeps his floor spotless. Only after a storm will "            "there be anything on the floor.");      }    }  else    {    print("There's nothing interesting on the floor right here.");    }  }  [ knockif ((said("knock", "knock") ||     said("knock", "door") ||     said("knock") ||     said("knock", "knock", "knock")))  {  print("None of these doors are locked; just walk up to them.");  }  [ look bridge deckif (said("examine", "bridge", "deck"))  {  print("From here the captain and crew do their utmost to ensure a safe voyage "        "for the passengers and cargo.");  }  [ look captain deckif (said("examine", "captain", "deck"))  {  print("The main attraction on the captain's deck is the captain's cabin.");  }  [ look main deck/look lower deckif ((said("examine", "main", "deck") || said("examine", "lower", "deck")))  {  print("You can't see much of that deck from here.");  }  [ look compassif (said("examine", "compass"))  {  [ if in the pilot house  if (posn(ego, 65, 52, 159, 52))    {    print("This compass is crucial for accurate navigation.");    }  else    {    print("You can't do that from here.");    }  }  Done:[ call the main timing logiccall(lgc.CapeTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "You are on the bridge deck."#message 2 "You see a wheel, a compass and a staircase."#message 3 "There's nothing interesting on the floor right here."#message 4 "From here the captain and crew do their utmost to ensure a safe voyage for the passengers and cargo."#message 5 "The captain keeps his floor spotless. Only after a storm will there be anything on the floor."#message 6 "The main attraction on the captain's deck is the captain's cabin."#message 7 "This is the aft section of the sun, rain, snow, hail, and sleet deck."#message 8 "Today is a beautiful day!\n      What a view!"#message 9 "This is the staircase that connects the captain's deck to the bridge deck."#message 10 "This is the captain's cabin."#message 11 "The captain keeps his quarters very tidy. Only after a storm will you find anything out of place here."#message 12 "There is a paper clip lying on the floor. It must have been tossed there by the storm."#message 13 "You are immediately outside of the captain's cabin."#message 14 "This is the small set of stairs connecting the main deck to the captain's deck."#message 15 "This is the main deck of the ship."#message 16 "You are on the ladder that connects the main deck with the lower deck."#message 17 "This is the ship's lower deck."#message 18 "You already have the paper clip."#message 19 "There is no paper clip right here."#message 20 "You pick up the paper clip and put it in your pocket."#message 21 "There is no paper clip here now."#message 22 "There is a hefty-looking paper clip lying on the floor."#message 23 "This is the place to fish, but how can you fish without something to use as a hook?"#message 24 "This is the place to fish, but you are going to need some fishing line!"#message 25 "This is the place to fish, but you need some weight to attach to the fishing line!"#message 26 "This is the place to fish, but the fish are going to want to see some bait at the end of that line!"#message 27 "This is the place to fish, all you need now is something to use as a fishing pole!"#message 28 "Well you've done it!"#message 29 "You have found the perfect place to fish, and you have everything you need to do it!"#message 30 "You can't see much of that deck from here."#message 31 "You pull the string you found in the bunk room out of your pocket and attach one end of it to the wooden stick. The other end you attach to the paper clip."#message 32 "You tie the metal scraps from the engine room to the string a few feet from the paper clip."#message 33 "And last, but certainly not least, you gladly take that piece of pork out of your pocket and carefully place it on the paper clip so that it won't fall off!"#message 34 "With great anticipation, you lower this make-shift apparatus into the churning sea."#message 35 "All the supplies and food are running very low and you are feeling weak to the point of death."#message 36 "You're getting close to the ideal fishing spot, but you're not quite there!"#message 37 "The captain keeps his quarters very tidy. There is nothing out of place."#message 38 "You can't see the captain's cabin from here."#message 39 "This rock has done serious damage to the hull of the ship."#message 40 "The captain orders the crew and passengers to abandon ship, but it is too late."#message 41 "The lower levels of the ship fill with water and you are on your way down in some of the most frigid water in the world."#message 43 "The iceberg once again pounds the side of the ship, but this time the force may be too much for the hull to withstand."#message 44 "The wretched iceberg punctures the shell of the ship, flooding the lower levels."#message 45 "The end is near."#message 46 "That is a wonderful idea, but you just can't muster the strength to do it!"#message 49 "You have no fish to eat."#message 50 "The captain is busy at his desk doing whatever is necessary to keep this ship moving!"#message 51 "You are not close enough."#message 52 "Talking helps pass the time on such a long, boring journey. And talk, the captain can do. He always seems to have a story to tell."#message 54 "The first mate is keeping this massive ship on course."#message 55 "The ship's first mate says, \"I've been sailing with the captain many years and have never had a mishap. You can count on a safe trip!\""#message 57 "It looks like this wooden stick once was a shovel handle."#message 58 "You can't see outside from here."#message 59 "The sea is deep blue and gently rolling."#message 60 "You see an island on the distant horizon."#message 61 "There are no rocks in sight."#message 62 "You see the tips of a few icebergs floating in the frigid sea."#message 63 "You can't see an iceberg from here."#message 64 "You can't see through the coal hold door."#message 65 "The mast looks very sturdy."#message 66 "That piece of pork sure does look tasty!"#message 68 "You can't do that from here."#message 69 "You eat the piece of ham you have been carrying around. It really hits the spot!"#message 70 "As soon as you sink your teeth into this piece of meat, you realize something terrible is about to happen."#message 71 "That pig had some type of disease that poisoned the meat. It looks like your trip is over!"#message 72 "How can you do that? You don't have anything to eat!"#message 77 "You just can't get it open!"#message 78 "Just walk up to it."#message 79 "The rigging whistles in the wind!"#message 80 "They are whale oil lamps."#message 81 "Just a typical ladder."#message 82 "This is the aft door."#message 83 "This is the forward door."#message 84 "This is the door to the captain's cabin."#message 85 "You see nothing but blue sky and water."#message 86 "These stairs provide quick access between the bridge deck and the captain's cabin."#message 88 "The door keeps coal from falling out of the coal hold."#message 89 "You have to do that yourself."#message 90 "The first mate controls the rudder of the ship by turning this wheel."#message 91 "You find nothing of interest."#message 92 "You'll never get to California if you do that!"#message 93 "It might be best to leave that up to the crew. They know what they are doing!"#message 94 "This compass is crucial for accurate navigation."#message 95 "This would be a good place to fish!"#message 112 "The door is warm to the touch."#message 113 "The door is cool."#message 114 "You met this young man, Eric, the first day you were on the ship. You are both from Brooklyn, the same age, and have the same interests, one of them gold. The two of you have been friends ever since."#message 115 "Eric says, \"Hi, Jerrod. We're one day closer to that California gold! This is easier than I thought it was going to be!\""#message 116 "You reply, \"That's right, one day closer! I'll drop by and talk to you later.\""#message 117 "\"Okay, that sounds great. Make sure you come by again,\" says Eric."#message 118 "Most others wouldn't notice, but you detect that Eric is getting pale."#message 119 "You say to your best friend on the ship, \"I've noticed that you're not looking healthy lately. It's probably just a slight case seasickness. You'll be over it in no time!\""#message 120 "\"It's true, Jerrod. I've not been feeling well lately. I hope you're right about the seasickness,\" says Eric."#message 122 "He replies, \"You better believe it! I've got plans!\""#message 123 "When you met Eric, he was strong and healthy. Now he is thin and very weak. He stays outside, despite the cold, to breathe the fresh air."#message 124 "With all the enthusiasm Eric can muster he says, \"I feel very weak, Jerrod. But I'm going to make it to California. I am determined to make it to California!\""#message 125 "Trying to be as convincing as possible you say, \"That's right! We're both going to make it to California.\""#message 126 "You are already fishing."#message 127 "None of these doors are locked; just walk up to them."#message 128 "Once again, Jerrod, you have saved the day and the lives of those around you."#message 129 "You reel in the catch of the day and share it with your companions. Now you will all make it to California!"#message 130 "The captain strokes his beard and says, \"Did I ever tell you about the time I maneuvered that overloaded steamer through the Straits of Magellan. Well...\""#message 131 "The captain thinks for a moment then says, \"Did I ever tell you about the time I broke the existing world record for the quickest trip from London to Hong Kong? Well...\""#message 133 "A paper clip that was on the desk is now lying on the floor. It must have been tossed there by the storm."#message 134 "There's no desk right here."