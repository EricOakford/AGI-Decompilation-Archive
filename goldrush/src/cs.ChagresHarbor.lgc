[***********************************************************[[ cs.ChagresHarbor[[ This room shows the steamship's final approach into[ Panama. The ego object is not used, but the player can [ use the input line to interact with the scene while it[ plays out.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSteamship                   o1#define oRowboat                     o2#define oLgWave1                     o3#define oLgWave2                     o4#define oLgWave3                     o5#define oMdWave1                     o6#define oMdWave2                     o7#define oMdWave3                     o8#define oSmWave1                     o9#define oSmWave2                    o10#define oSmWave3                    o11[ o12 - o19 are not used#define oLocation                   o20#define vShipStatus                v220#define vShipStep                  v221#define vShipCycle                 v222#define vWaveCycle                 v223#define vLocTimer                  v224#define vWaveX                     v225#define vWaveY                     v226#define vMdWave1Status             v227#define vMdWave2Status             v228#define vMdWave3Status             v229#define vSmWave1Status             v230#define vSmWave2Status             v231#define vSmWave3Status             v232#define vShipTimer                 v233#define vLabelTimer                v234#define fShipMoved                 f220#define fMdWave1Done               f221#define fMdWave2Done               f222#define fMdWave3Done               f223#define fSmWave1Done               f224#define fSmWave2Done               f225#define fSmWave3Done               f226#define fMusicDone                 f227[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the timing logics (this tracks when events happen  [ in the trip timeline)  load.logics(lgc.PanamaTripTiming);    [ load the room picture  load.pic(currentRoom);    [ load the view that has graphics used in the room  load.view(vw.ChagresArt);    [ load the arrival music  load.sound(m.Arrival);    [ draw the room  draw.pic(currentRoom);    [add the ship  animate.obj(oSteamship);  set.view(oSteamship, vw.ChagresArt);  set.loop(oSteamship, 0);  fix.loop(oSteamship);  position(oSteamship, 115, 143);  draw(oSteamship);  move.obj(oSteamship, 92, 134, 1, fShipMoved);  vShipStep = 2;  step.time(oSteamship, vShipStep);  vShipCycle = 2;  cycle.time(oSteamship, vShipCycle);  [ set status to first sequence  vShipStatus = 1;    [ waves along bottom of screen  [ - left  animate.obj(oLgWave1);  set.view(oLgWave1, vw.ChagresArt);  set.loop(oLgWave1, 2);  fix.loop(oLgWave1);  position(oLgWave1, 0, 167);  draw(oLgWave1);  vWaveCycle = 2;  cycle.time(oLgWave1, vWaveCycle);  start.cycling(oLgWave1);  [ - center  animate.obj(oLgWave2);  set.view(oLgWave2, vw.ChagresArt);  set.loop(oLgWave2, 2);  fix.loop(oLgWave2);  position(oLgWave2, 53, 167);  ignore.objs(oLgWave2);  draw(oLgWave2);  vWaveCycle = 2;  cycle.time(oLgWave2, vWaveCycle);  start.cycling(oLgWave2);  [ - right  animate.obj(oLgWave3);  set.view(oLgWave3, vw.ChagresArt);  set.loop(oLgWave3, 2);  fix.loop(oLgWave3);  position(oLgWave3, 106, 167);  draw(oLgWave3);  vWaveCycle = 2;  cycle.time(oLgWave3, vWaveCycle);  start.cycling(oLgWave3);    [ place the location banner  animate.obj(oLocation);  set.view(oLocation, vw.ChagresArt);  set.loop(oLocation, 7);  fix.loop(oLocation);  set.cel(oLocation, 0);  position(oLocation, 57, 31);  set.priority(oLocation, 15);  ignore.objs(oLocation);  ignore.blocks(oLocation);  ignore.horizon(oLocation);  draw(oLocation);  stop.cycling(oLocation);    [ medium and small waves that appear randomly on the ocean;  [ but don't draw them yet  animate.obj(oMdWave1);  set.view(oMdWave1, vw.ChagresArt);  set.loop(oMdWave1, 3);  fix.loop(oMdWave1);  set.cel(oMdWave1, 0);  ignore.objs(oMdWave1);  ignore.blocks(oMdWave1);  [ second large  animate.obj(oMdWave2);  set.view(oMdWave2, vw.ChagresArt);  set.loop(oMdWave2, 3);  fix.loop(oMdWave2);  set.cel(oMdWave2, 0);  ignore.objs(oMdWave2);  ignore.blocks(oMdWave2);  [ third large  animate.obj(oMdWave3);  set.view(oMdWave3, vw.ChagresArt);  set.loop(oMdWave3, 3);  fix.loop(oMdWave3);  set.cel(oMdWave3, 0);  ignore.objs(oMdWave3);  ignore.blocks(oMdWave3);    [ first small wave  animate.obj(oSmWave1);  set.view(oSmWave1, vw.ChagresArt);  set.loop(oSmWave1, 4);  fix.loop(oSmWave1);  set.cel(oSmWave1, 0);  ignore.objs(oSmWave1);  ignore.blocks(oSmWave1);  [ second small wave  animate.obj(oSmWave2);  set.view(oSmWave2, vw.ChagresArt);  set.loop(oSmWave2, 4);  fix.loop(oSmWave2);  set.cel(oSmWave2, 0);  ignore.objs(oSmWave2);  ignore.blocks(oSmWave2);  [ third small wave  animate.obj(oSmWave3);  set.view(oSmWave3, vw.ChagresArt);  set.loop(oSmWave3, 4);  fix.loop(oSmWave3);  set.cel(oSmWave3, 0);  ignore.objs(oSmWave3);  ignore.blocks(oSmWave3);    [ the rowboat comes to the ship to bring passengers ashore  animate.obj(oRowboat);  set.view(oRowboat, vw.ChagresArt);  set.loop(oRowboat, 6);  fix.loop(oRowboat);  position(oRowboat, 97, 92);  ignore.objs(oRowboat);  draw(oRowboat);  stop.update(oRowboat);    [show the picture  show.pic();    [ set the music flag so the theme music begins playing  set(fMusicDone);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if the location display is still presentif (vLocTimer < 201)  {  [ increment the timer  ++vLocTimer;  [ at 150 cycles  if (vLocTimer == 100)    {    [ change location display to show 'Isthmus of Panama'    set.cel(oLocation, 1);    }  [ at 150 cycles begin fading the location display  if (vLocTimer == 150)    {    set.cel(oLocation, 2);    }  [ at 200 cycles, remove it from the screen  if (vLocTimer == 200)    {    erase(oLocation);    [ increment the location labels counter    ++vLabelTimer;    }  }  [ if labels showing the area's towns and features are activeif (vLabelTimer > 0 &&     vLabelTimer < 151)  {  [ increment the timer  ++vLabelTimer;  if (vLabelTimer == 2)    {    [ after two cycles, show the first label leaving the    [ print window open while the program continues    set(leaveWindow);    print.at("Ft. San Lorenzo", 5, 2, 21);    }  if (vLabelTimer == 50)    {    [ at 50 cycles, show the second label    set(leaveWindow);    print.at("City of Chagres", 6, 21, 17);    }  if (vLabelTimer == 100)    {    [ at 100 cycles, show the third label    set(leaveWindow);    print.at("The thickest jungle you have ever seen!!", 4, 10, 22);    }  if (vLabelTimer == 150)    {    [ at 150 cycles, close the labels    close.window();    }  }  [ if the music has endedif (isset(fMusicDone))  {  [ play the music continuously  sound(m.Arrival, fMusicDone);  }  [ if ship reaches first pointif (isset(fShipMoved) && vShipStatus == 1)  {  [ move ship to second point  reset(fShipMoved);  vShipStatus = 2;  move.obj(oSteamship, 62, 134, 1, fShipMoved);  vShipStep = 4;  step.time(oSteamship, vShipStep);  }  [ if ship reaches second pointif (isset(fShipMoved) && vShipStatus == 2)  {  [ move ship to third point  reset(fShipMoved);  vShipStatus = 3;  move.obj(oSteamship, 41, 134, 1, fShipMoved);  vShipStep = 6;  step.time(oSteamship, vShipStep);  }  [if ship is at third pointif (isset(fShipMoved) && vShipStatus == 3)  {  [ ship stops moving  reset(fShipMoved);  vShipStatus = 4;  [ set loop to show paddle wheel stopped, but flags still  [ waving  set.loop(oSteamship, 1);  vShipCycle = 4;  cycle.time(oSteamship, vShipCycle);  start.cycling(oSteamship);  }  [ when ship has stoppedif (vShipStatus == 4)  {  [ increment timer  ++vShipTimer;  [ after 30 cycles  if (vShipTimer == 30)    {    [ go to next sequence    vShipStatus = 5;    vShipTimer = 0;    }  }  [ after the ship has stopped for 30 cyclesif (vShipStatus == 5)  {  [ send the rowboat from shore to the boat  vShipStatus = 6;  start.update(oRowboat);  set.loop(oRowboat, 5);  vShipStep = 2;  step.time(oRowboat, vShipStep);  cycle.time(oRowboat, vShipStep);  move.obj(oRowboat, 60, 129, 1, fShipMoved);  }  [ when rowboat reaches shipif (isset(fShipMoved) && vShipStatus == 6)  {  [ stop the rowboat  reset(fShipMoved);  vShipStatus = 7;  stop.cycling(oRowboat);  }  [ after stopping the rowboatif (vShipStatus == 7)  {  [ increment timer  ++vShipTimer;  if (vShipTimer == 20)    {    [ after 20 cycles, move to next sequence    vShipStatus = 8;    vShipTimer = 0;    }  }  [ after waiting at the shipif (vShipStatus == 8)  {  [ send the rowboat back to shore  vShipStatus = 9;  set.loop(oRowboat, 6);  vShipStep = 2;  step.time(oRowboat, vShipStep);  cycle.time(oRowboat, vShipStep);  move.obj(oRowboat, 97, 92, 1, fShipMoved);  start.cycling(oRowboat);  }  [ when rowboat gets back to shoreif (isset(fShipMoved) && vShipStatus == 9)  {  [ it stops at shore  reset(fShipMoved);  vShipStatus = 10;  stop.update(oRowboat);  }  [ after stopping back at shoreif (vShipStatus == 10)  {  [ increment timer  ++vShipTimer;  if (vShipTimer == 20)    {    [ after 20 cycles, passengers have made it to Panama!    vShipStatus = 11;    vShipTimer = 0;    [ set flag so journey can continue    set(ContinueJourney);    }  }  [ randomly place medium and small waves if they are not [ currently on screen[ check medium wave 1  if (vMdWave1Status != 25)  {  [ random chance of wave reappearing  random(20, 30, vMdWave1Status);  [ one in 11 chance  if (vMdWave1Status == 25)    {    [ choose a random location    random(0, 142, vWaveX);    random(135, 163, vWaveY);    position.v(oMdWave1, vWaveX, vWaveY);    set.cel(oMdWave1, 0);    draw(oMdWave1);    end.of.loop(oMdWave1, fMdWave1Done);    }  }[ when medium 1 is done cyclingif (isset(fMdWave1Done))  {  [ remove it from the screen  reset(fMdWave1Done);  erase(oMdWave1);  [ increment status so it can reappear  ++vMdWave1Status;  }  [ check medium wave 2if (vMdWave2Status != 25)  {  [ random chance of wave reappearing  random(20, 30, vMdWave2Status);  [ one in 11 chance  if (vMdWave2Status == 25)    {    [ choose a random location    random(0, 142, vWaveX);    random(135, 163, vWaveY);    position.v(oMdWave2, vWaveX, vWaveY);    set.cel(oMdWave2, 0);    draw(oMdWave2);    end.of.loop(oMdWave2, fMdWave2Done);    }  }[ when medium 2 is done cyclingif (isset(fMdWave2Done))  {  [ remove it from the screen  reset(fMdWave2Done);  erase(oMdWave2);  [ increment status so it can reappear  ++vMdWave2Status;  }  [ check medium wave 3if (vMdWave3Status != 25)  {[ random chance of wave reappearing  random(20, 30, vMdWave3Status);  [ one in 11 chance  if (vMdWave3Status == 25)    {    [ choose a random location    random(0, 142, vWaveX);    random(126, 131, vWaveY);    position.v(oMdWave3, vWaveX, vWaveY);    set.cel(oMdWave3, 0);    draw(oMdWave3);    end.of.loop(oMdWave3, fMdWave3Done);    }  }[ when medium 3 is done cyclingif (isset(fMdWave3Done))  {  [ remove it from the screen  reset(fMdWave3Done);  erase(oMdWave3);  [ increment status so it can reappear  ++vMdWave3Status;  }  [ check small wave 1if (vSmWave1Status != 25)  {  [ random chance of wave reappearing  random(20, 30, vSmWave1Status);  [ one in 11 chance  if (vSmWave1Status == 25)    {    [ choose a random location    random(0, 158, vWaveX);    random(97, 113, vWaveY);    position.v(oSmWave1, vWaveX, vWaveY);    set.cel(oSmWave1, 0);    draw(oSmWave1);    end.of.loop(oSmWave1, fSmWave1Done);    }  }  [ if small 1 is done cyclingif (isset(fSmWave1Done))  {  [ remove it from the screen  reset(fSmWave1Done);  erase(oSmWave1);  [ increment status so it can reappear  ++vSmWave1Status;  }  [ check small wave 2if (vSmWave2Status != 25)  {  [ random chance of wave reappearing  random(20, 30, vSmWave2Status);  [ one in 11 chance  if (vSmWave2Status == 25)    {    [ choose a random location    random(0, 158, vWaveX);    random(97, 113, vWaveY);    position.v(oSmWave2, vWaveX, vWaveY);    set.cel(oSmWave2, 0);    draw(oSmWave2);    end.of.loop(oSmWave2, fSmWave2Done);    }  }[ if small 2 is done cyclingif (isset(fSmWave2Done))  {  [ remove it from the screen  reset(fSmWave2Done);  erase(oSmWave2);  [ increment status so it can reappear  ++vSmWave2Status;  }  [ check small wave 3if (vSmWave3Status != 25)  {  [ random chance of wave reappearing  random(20, 30, vSmWave3Status);  [ one in 11 chance  if (vSmWave3Status == 25)    {    [ choose a random location    random(27, 158, vWaveX);    random(93, 96, vWaveY);    position.v(oSmWave3, vWaveX, vWaveY);    set.cel(oSmWave3, 0);    draw(oSmWave3);    end.of.loop(oSmWave3, fSmWave3Done);    }  }[ if small 3 is done cyclingif (isset(fSmWave3Done))  {  [ remove it from the screen  reset(fSmWave3Done);  erase(oSmWave3);  [ increment status so it can reappear  ++vSmWave3Status;  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("You are approaching the Isthmus of Panama!");  }[ look boatif (said("examine", "boat"))  {  print("The Sea Farer has served its crew and passengers well.  The sounding "        "of a cannon on shore has announced its arrival.");  }[ look flagif (said("examine", "flag"))  {  print("Red, white, and blue is waving proudly at the stern of the ship.");  }[ look jungleif (said("examine", "jungle"))  {  print("The thickest jungle you have ever seen!!");  }[ look rowboatif (said("examine", "rowboat"))  {  print("The boatmen are American, Irish and Dutch profiteers who by force keep "        "natives from competing against their exorbitant prices.");  }[ look cityif (said("examine", "city"))  {  print("The \"Old Town\" or native town is on the south side of the river and "        "is mostly palm-thatched houses.  New Town or \"the American Side\" is "        "composed of frame buildings and sprang up overnight.");  }[ look riverif (said("examine", "creek"))  {  print("The river's mouth is filled with every kind of small boat imaginable.");  }[ look water/look oceanif ((said("examine", "water") || said("examine", "ocean")))  {  print("There is not much protection here and the seas are rough.  "        "Transferring supplies and people from the ship to rowboats is "        "perilous.");  }[ jump overboard/swimif ((said("jump") ||     said("jump", "across") ||     said("jump", "across", "board") ||     said("jump", "overboard") ||     said("swim") ||     said("go", "swim")))  {  print("You're not here to go for a swim, you're going to California!!");  }[ look panamaif (said("examine", "isthmus"))  {  print("Seeing this new place is exciting, but you feel some uneasiness about "        "what lies ahead.");  }[ look wall/look fortif ((said("examine", "wall") || said("examine", "fort")))  {  print("On a high rocky point stands the ancient \"Fort San Lorenzo\", now in "        "ruins.  The cannons are there, but are useless.");  }[ a bug; checking for 'examine flag' has already been done [ above; this if block is redundant if (said("examine", "flag"))  {  print("Red, white, and blue is waving proudly at the stern of the ship.");  }  Done:[ call th main timing logic to manage trip timing eventscall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Ft. San Lorenzo"#message 2 "City of Chagres"#message 3 "The thickest jungle you have ever seen!!"#message 4 "You are approaching the Isthmus of Panama!"#message 43 "The Sea Farer has served its crew and passengers well.  The sounding of a cannon on shore has announced its arrival."#message 44 "The \"Old Town\" or native town is on the south side of the river and is mostly palm-thatched houses.  New Town or \"the American Side\" is composed of frame buildings and sprang up overnight."#message 45 "The river's mouth is filled with every kind of small boat imaginable."#message 46 "The boatmen are American, Irish and Dutch profiteers who by force keep natives from competing against their exorbitant prices."#message 47 "There is not much protection here and the seas are rough.  Transferring supplies and people from the ship to rowboats is perilous."#message 48 "You're not here to go for a swim, you're going to California!!"#message 49 "Seeing this new place is exciting, but you feel some uneasiness about what lies ahead."#message 50 "On a high rocky point stands the ancient \"Fort San Lorenzo\", now in ruins.  The cannons are there, but are useless."#message 51 "Red, white, and blue is waving proudly at the stern of the ship."