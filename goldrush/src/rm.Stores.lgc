[***********************************************************[[ rm.Stores[[ The Grocery Store and the Hardware Store are both accessed[ from this room. There are two sailors who appear in the [ room that Jerrod can interact with.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************[ o1 is not used#define oHardwareDoor                o2#define oGroceryDoor                 o3#define o1stSailor                   o4#define o2ndSailor                   o5#define vSailor1Status             v220#define vSailor2Status             v221#define vSailor1Dist               v222#define vSailor2Dist               v223[ v224 through v231 are not used#define vSailor1X                  v232#define vSailor1Y                  v233#define vSailor2X                  v234#define vSailor2Y                  v235#define fInStore                   f220#define fPoster                    f221#define fBehindWindow              f222#define fDoorOpen                  f223   [ one flag for both doors#define fDoorMoved                 f224   [ one flag for both doors#define fSailor1Moved              f225#define fSailor2Moved              f226#define fGrocerClosed              f227#define fEffectDone                f228#define fPostPriority              f229[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw, discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load views with art to add to the picture  load.view(vw.Posters);  load.view(vw.SkylineArt);    [ if the gold rush has been made public  if (isset(RushIsPublic))    {    [ add a poster to one of the posts    add.to.pic(vw.Posters, 0, 5, 61, 115, 12, 12);    set(fPoster);    }  [ add skyline art to the horizon  add.to.pic(vw.SkylineArt, 0, 1, 0, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 2, 20, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 3, 40, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 4, 60, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 5, 80, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 6, 100, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 120, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 140, 52, 4, 4);    [ poser aret not needed anymore (this also discards  [ vw.SkylineArt)  discard.view(vw.Posters);    [ load views used in this room  load.view(vw.JerrodNY);  load.view(vw.JerrodWindow);  load.view(vw.StoresArt);  load.view(vw.Sailor1);  load.view(vw.Sailor4);  load.view(vw.BoilerTech);  load.view(vw.Sailor3);    [ load sounds used in this room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ add detail art to the room    [ interior floor of hardware store   add.to.pic(vw.StoresArt, 0, 0, 109, 86, 5, 5);  [ grocery store sign  add.to.pic(vw.StoresArt, 0, 1, 16, 84, 5, 5);  [ hardware store sign  add.to.pic(vw.StoresArt, 0, 2, 83, 39, 11, 11);  [ interior of grocery store  add.to.pic(vw.StoresArt, 2, 0, 24, 134, 5, 5);    [ hardware store door  animate.obj(oHardwareDoor);  set.view(oHardwareDoor, vw.StoresArt);  set.loop(oHardwareDoor, 1);    [ if Jerrod is coming out of the hardware store  if (previousRoom == rm.StoreInterior)    {    [ show the door open    set.cel(oHardwareDoor, 4);    set(fDoorOpen);    }  else    {    set.cel(oHardwareDoor, 0);    }  set.priority(oHardwareDoor, 6);  ignore.objs(oHardwareDoor);  position(oHardwareDoor, 109, 86);  draw(oHardwareDoor);  stop.update(oHardwareDoor);    [ grocery door  animate.obj(oGroceryDoor);  set.view(oGroceryDoor, vw.StoresArt);  set.loop(oGroceryDoor, 3);  [ if Jerrod is coming from inside the grocery store  if (previousRoom == rm.GrocerInterior)    {    [ show the door open    set.cel(oGroceryDoor, 4);    set(fDoorOpen);    }  else    {    set.cel(oGroceryDoor, 0);    }  set.priority(oGroceryDoor, 10);  ignore.objs(oGroceryDoor);  position(oGroceryDoor, 24, 133);  draw(oGroceryDoor);  stop.update(oGroceryDoor);    [ sailor #1  animate.obj(o1stSailor);  [ starts off screen  vSailor1Status = 10;    [ sailor #2  animate.obj(o2ndSailor);  [ also starts off screen  vSailor2Status = 10;    [ Jerrod in normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ adjust Jerrod's position, depending on which room he's  [ coming from  if (previousRoom == rm.GrocerInterior)    {    position(ego, 34, 133);    }  if (previousRoom == rm.StoreInterior)    {    position(ego, 110, 92);    }  [ add Jerrod to screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if gold rush is announced, and grocery store is not closed[ and door is not openif (isset(RushIsPublic) && !isset(fGrocerClosed) &&     !isset(fDoorOpen))  {  [ close the grocery store  set(fGrocerClosed);  [ use block to keep Jerrod from going in  block(20, 100, 31, 136);  }  [ if sailor #1 is off screen AND ship hasn't sailed yetif (vSailor1Status > 9 && !isset(ShipSailed))  {  [ random chance sailor #1 will appear  random(20, 100, vSailor1Status);  [ a one in 80 chance  if (vSailor1Status == 77)    {    [ choose one of two random sailors    random(0, 1, vSailor1Status);    if (vSailor1Status == 0)      {      set.view(o1stSailor, vw.BoilerTech);      }    if (vSailor1Status == 1)      {      set.view(o1stSailor, vw.Sailor3);      }    [ choose a random starting point and direction    random(0, 1, vSailor1Status);    if (vSailor1Status == 0)      {      set.loop(o1stSailor, 0);      position(o1stSailor, 152, 120);      draw(o1stSailor);      move.obj(o1stSailor, 83, 120, 1, fSailor1Moved);      }    if (vSailor1Status == 1)      {      set.loop(o1stSailor, 2);      position(o1stSailor, 83, 167);      draw(o1stSailor);      move.obj(o1stSailor, 83, 120, 1, fSailor1Moved);      }    [ next destination is 'point' 3    vSailor1Status = 3;    }  }  [ if sailor #1 reaches 'point' 3if (isset(fSailor1Moved) && vSailor1Status == 3)  {  [ choose a new random direction  reset(fSailor1Moved);  random(0, 1, vSailor1Status);  if (vSailor1Status == 0)    {    move.obj(o1stSailor, 152, 120, 1, fSailor1Moved);    }  if (vSailor1Status == 1)    {    move.obj(o1stSailor, 83, 167, 1, fSailor1Moved);    }  [ next destination is 'point' 4  vSailor1Status = 4;  }  [ if sailor #1 reaches 'point' 4if (isset(fSailor1Moved) && vSailor1Status == 4)  {  [ remove sailor #1 from screen  reset(fSailor1Moved);  vSailor1Status = 10;  erase(o1stSailor);  }  [ if sailor #2 is off screen and ship hasn't sailed yetif (vSailor2Status > 9 && !isset(ShipSailed))  {  [ random chance sailor #2 will appear  random(20, 100, vSailor2Status);  [ one in 80 chance  if (vSailor2Status == 77)    {    [ choose one of two random sailors    random(0, 1, vSailor2Status);    if (vSailor2Status == 0)      {      set.view(o2ndSailor, vw.Sailor4);      }    if (vSailor2Status == 1)      {      set.view(o2ndSailor, vw.Sailor1);      }    [ choose a random start location    random(0, 1, vSailor2Status);    if (vSailor2Status == 0)      {      set.loop(o2ndSailor, 0);      position(o2ndSailor, 152, 133);      draw(o2ndSailor);      move.obj(o2ndSailor, 109, 133, 1, fSailor2Moved);      }    if (vSailor2Status == 1)      {      set.loop(o2ndSailor, 2);      position(o2ndSailor, 109, 167);      draw(o2ndSailor);      move.obj(o2ndSailor, 109, 133, 1, fSailor2Moved);      }    [ next destination is 'point' 3    vSailor2Status = 3;    }  }[ if sailor #2 gets to 'point' 3if (isset(fSailor2Moved) && vSailor2Status == 3)  {  [ choose a new random destination  reset(fSailor2Moved);  random(0, 1, vSailor2Status);  if (vSailor2Status == 0)    {    move.obj(o2ndSailor, 152, 133, 1, fSailor2Moved);    }  if (vSailor2Status == 1)    {    move.obj(o2ndSailor, 109, 167, 1, fSailor2Moved);    }  [ next destination is 'point' 4  vSailor2Status = 4;  }  [ if sailor #2 gets to 'point' 4if (isset(fSailor2Moved) && vSailor2Status == 4)  {  [ remove him from screen  reset(fSailor2Moved);  vSailor2Status = 10;  erase(o2ndSailor);  }  [ get current position of sailor #1get.posn(o1stSailor, vSailor1X, vSailor1Y);[ if sailor #1 has not moved (blocked by Jerrod)if (OldObj1X == vSailor1X && OldObj1Y == vSailor1Y)  {  [ stop cycling when not moving  stop.cycling(o1stSailor);  }else  {  [ cycle when moving  start.cycling(o1stSailor);  }[ save sailor #1's positionOldObj1X = vSailor1X;OldObj1Y = vSailor1Y;[ get current position sailor #2get.posn(o2ndSailor, vSailor2X, vSailor2Y);[ if sailor #2 has not moved (blocked by Jerrod)if (OldObj2X == vSailor2X && OldObj2Y == vSailor2Y)  {  [ stop cyclign when not moving  stop.cycling(o2ndSailor);  }else  {  [ cycle when moving  start.cycling(o2ndSailor);  }[ save sailor #2's positionOldObj2X = vSailor2X;OldObj2Y = vSailor2Y;[ if Jerrod is in front of post by hardware store and[ priority not set if (posn(ego, 112, 105, 123, 108) && !isset(fPostPriority))  {  [ force priority so Jerrod draws correctly here  set.priority(ego, 10);  set(fPostPriority);  }[ if Jerrod is NOT in front of the post and priority IS setif (!posn(ego, 112, 105, 123, 108) && isset(fPostPriority))  {  [ release priority  release.priority(ego);  reset(fPostPriority);  }  [ if Jerrod is in the grocery store, behind the window and [ priority is not setif (posn(ego, 15, 131, 32, 135) && !isset(fInStore))  {  [ force priority so Jerrod draws correctly inside the store  set.priority(ego, 11);  set(fInStore);  }  [ if Jerrod is NOT in the store and priority IS setif (!posn(ego, 15, 131, 32, 135) && isset(fInStore))  {  [ release priority  release.priority(ego);  reset(fInStore);  }  [ if Jerrod is behind the window but flag is not setif (posn(ego, 15, 131, 26, 135) && !isset(fBehindWindow))  {  [ set the flag  set(fBehindWindow);  [ use the view that shows Jerrod behind a window  set.view(ego, vw.JerrodWindow);  }  [ if Jerrod is NOT behind the window and flag IS setif (!posn(ego, 15, 131, 26, 135) && isset(fBehindWindow))  {  [ reset the flag  reset(fBehindWindow);  [ restore normal view of Jerrod  set.view(ego, vw.JerrodNY);  }  [ if Jerrod is near the door to the grocery storeif (posn(ego, 15, 115, 45, 145))  {  [ if Gold rush has not been announced  if (!isset(RushIsPublic))    {    [ if Jerrod is on an alarm line and the door isn't open    if (isset(egoHitSpecial) && !isset(fDoorOpen))      {      [ play door-open sound      sound(s.Effect1, fEffectDone);      [ allow door to update      start.update(oGroceryDoor);      [ open the door      end.of.loop(oGroceryDoor, fDoorMoved);      [ temporarily halt Jerrod while door opens      stop.update(ego);      [ set door open flag      set(fDoorOpen);      }    }      [ if Jerrod is NOT on an alarm line, and the door is open  if (!isset(egoHitSpecial) && isset(fDoorOpen))    {    [ allow door to upate    start.update(oGroceryDoor);    [ close the door    reverse.loop(oGroceryDoor, fDoorMoved);    reset(fDoorOpen);    }      [ if door is done moving  if (isset(fDoorMoved))    {    [ and it is now open    if (isset(fDoorOpen))      {      [ change door priority      set.priority(oGroceryDoor, 12);      }    else      {      [ play close-door sound      sound(s.Effect2, fEffectDone);      [ restore priority      set.priority(oGroceryDoor, 10);      }    [ door is done cycling    stop.update(oGroceryDoor);    [ allow Jerrod to continue moving    start.update(ego);    [ reset movement flag    reset(fDoorMoved);    }  }  [ if Jerrod is by the hardware store doorif (posn(ego, 85, 70, 130, 100))  {  [ if Jerrod is on an alarm line and the door is not open  if (isset(egoHitSpecial) && !isset(fDoorOpen))    {    [ play door-open sound    sound(s.Effect1, fEffectDone);    [ allow door to upate    start.update(oHardwareDoor);    [ open the door    end.of.loop(oHardwareDoor, fDoorMoved);    [ temporarily halt Jerrod while door is opening    stop.update(ego);    [ set door-open flag    set(fDoorOpen);    }      [ if Jerrod is NOT on an alarm line, and door is open  if (!isset(egoHitSpecial) && isset(fDoorOpen))    {    [ allow door to update    start.update(oHardwareDoor);    [ close the door    reverse.loop(oHardwareDoor, fDoorMoved);    reset(fDoorOpen);    }      [ if door is done moving  if (isset(fDoorMoved))    {    [ stop updating the door    stop.update(oHardwareDoor);    [ allow Jerrod to continue moving    start.update(ego);    [ reset movement flag    reset(fDoorMoved);    [ if door is now closed    if (!isset(fDoorOpen))      {      [ play door-closed sound      sound(s.Effect2, fEffectDone);      }    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ bottom edge goes to stagecoach office - Jerrod's current[ 'X' position gets adjusted for new room to account for[ perspectiveif (posn(ego, 10, 162, 33, 162))  {  position(ego, 90, 95);  new.room(rm.StageCoachOffice); [ ##LE001##  }if (posn(ego, 1, 167, 62, 167))  {  position(ego, 107, 93);  new.room(rm.StageCoachOffice); [ ##LE002##  }if (posn(ego, 63, 167, 101, 167))  {  position(ego, 117, 93);  new.room(rm.StageCoachOffice); [ ##LE003##  }if (posn(ego, 102, 167, 124, 167))  {  position(ego, 132, 93);  new.room(rm.StageCoachOffice); [ ##LE004##  }if (posn(ego, 125, 167, 160, 167))  {  position(ego, 139, 93);  new.room(rm.StageCoachOffice); [ ##LE005##  }  [ grocery store entranceif (posn(ego, 16, 131, 16, 135))  {  new.room(rm.GrocerInterior); [ ##LE006##  }  [ hardware store entranceif (posn(ego, 109, 80, 111, 80))  {  new.room(rm.StoreInterior); [ ##LE007##  }  [ Water street continues to the rightif (edgeEgoHit == RIGHT_EDGE)  {  new.room(rm.WaterSt_Left); [ ##LE008##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look sign/read signif ((said("examine", "sign") ||     said("examine", "billboard") ||     said("read", "sign") ||     said("read", "billboard")))  {  [ if there are posters here  if (isset(fPoster))    {    [ if Jerrod is near either poster    if ((posn(ego, 50, 133, 69, 141) ||         posn(ego, 63, 117, 69, 132)))      {      print("\n  Get your goods here \n and then  get going!! \n\n    "            "CALIFORNIA GOLD \n     won't  wait!!\n");      }    [ if by NEITHER poster    if (!posn(ego, 50, 133, 69, 141) &&         !posn(ego, 63, 117, 69, 132))      {      print("You can't see the poster from here.");      }    }  else    {    print("As you look around you can read \"Fast Grocery\" and \"Rand's "          "Hardware.\"");    }  }  [ look manif (said("examine", "boy"))  {  [ get distance to both sailors  distance(ego, o1stSailor, vSailor1Dist);  distance(ego, o2ndSailor, vSailor2Dist);  [ if either sailor is close enough  if ((vSailor1Dist < 60 || vSailor2Dist < 60))    {    [ if sailor #1 is close enough    if (vSailor1Dist < 60)      {      [ use view number to determine identity of sailor #1      current.view(o1stSailor, vSailor1Dist);      if (vSailor1Dist == vw.Sailor3)        {        print("This part of town is full of seafaring men when the ship is at "              "the dock.");        }      if (vSailor1Dist == vw.BoilerTech)        {        print("Whenever the ship is at the dock, seaman are seen around town.");        }      }    [ if sailor #2 is close enough    if (vSailor2Dist < 60)      {      [ use view number to determine identity of sailor #2      current.view(o2ndSailor, vSailor2Dist);      if (vSailor2Dist == vw.Sailor1)        {        print("This man takes pride in his heritage as a sailor!");        }      if (vSailor2Dist == vw.Sailor4)        {        print("Whenever the ship is at the dock, seaman are seen around town.");        }      }    }  else    {    [ if both sailors are off screen    if (vSailor1Dist == 255 && vSailor2Dist == 255)      {      print("There is no one around.");      }    else      {      print("The man isn't close enough.");      }    }  }  [ talk manif ((said("speak", "boy") || said("speak")))  {  [ get distances to both sailors  distance(ego, o1stSailor, vSailor1Dist);  distance(ego, o2ndSailor, vSailor2Dist);  [ if either sailor is close enough  if ((vSailor1Dist < 40 || vSailor2Dist < 40))    {    [ if sailor #1 is close enough    if (vSailor1Dist < 40)      {      [ use view number to determine identity of sailor #2      current.view(o1stSailor, vSailor1Dist);      if (vSailor1Dist == vw.Sailor3)        {        print("This crewman says, \"After being at sea for so long, I'm having "              "to get my land legs back!\"");        }      if (vSailor1Dist == vw.BoilerTech)        {        print("This ship worker says, \"Uhhhhh, I'm waiting for the ship to "              "leave.\"");        }      }    [ if sailor #2 is close enough    if (vSailor2Dist < 40)      {      [ use view number to determine identity of sailor #2      current.view(o2ndSailor, vSailor2Dist);      if (vSailor2Dist == vw.Sailor1)        {        print("This sailor says, \"I have been riding the high seas all my life "              "and I love it!\"");        }      if (vSailor2Dist == vw.Sailor4)        {        print("This ship worker says, \"Uhhhhh, I'm ready to get back on the "              "high seas.\"");        }      }    }  else    {    [ if both sailors are off screen    if (vSailor1Dist == 255 && vSailor2Dist == 255)      {      print("There is no one around.");      }    else      {      print("The man isn't close enough.");      }    }  }  [look roadif (said("examine", "path"))  {  print("Here, in front of these stores, Water Street turns and heads toward "        "Fulton Street.");  }  [ look streetlampif (said("examine", "lamp"))  {  print("Everyone in town loves these streetlights.");  }  [ look hardware storeif ((said("examine", "hardware", "shop") ||     said("examine", "rand", "hardware") ||     said("examine", "rand", "shop") ||     said("examine", "rand", "hardware", "shop") ||     said("examine", "rand")))  {  print("This hardware store is one of the most prominent businesses in all of "        "Brooklyn.");  }  [ look hardwareif (said("examine", "hardware"))  {  print("If you want to look at the hardware, you ought to go in the hardware "        "store.");  }  [ look grocery store/look fast food storeif ((said("examine", "food", "shop") ||     said("examine", "f", "food", "shop") ||     said("examine", "f", "food") ||     said("examine", "f", "shop")))  {  print("The grocery store is a booming business in this part of Brooklyn.");  }  [ look foodif (said("examine", "food"))  {  print("If you want to see the groceries, you need to go into the grocery "        "store.");  }  [ read buildingif (said("read", "building"))  {  print("As you look around you can read \"Fast Grocery\" and \"Rand's "        "Hardware.\"");  }  [ look windowif (said("examine", "glass"))  {  [ if Jerrod is by hardware store window or grocery store window  if ((posn(ego, 77, 70, 159, 110) ||       posn(ego, 0, 70, 76, 167)))    {    [ if Jerrod is by hardware store    if (posn(ego, 77, 70, 159, 110))      {      print("Through the hardware store windows you can see all kinds of "            "hardware.");      }    else      {      [ otherwise Jerrod is by grocery store - if Gold rush      [ has been announced      if (isset(RushIsPublic))        {        [ if door is open ( in case the rush was announced        [ while Jerrod was in the store, and then came out        [ here)        if (isset(fDoorOpen))          {          print("Just look at all that good food in there!");          }        else          {          print("The shelves inside the store are bare!");          }        }      else        {        print("Just look at all that good food in there!");        }      }    }  else    {    print("The grocery and hardware stores have windows.");    }  }  [ look sidewalkif ((said("examine", "sidewalk") ||     said("examine", "boardwalk")))  {  print("The boardwalk is just outside of these stores.");  }  [ look/look aroundif ((said("examine") ||     said("examine", "around") ||     said("examine", "building") ||     said("examine", "business") ||     said("examine", "shop")))  {  print("The grocery and hardware stores make up this part of town.");  }  [ look canopyif (said("examine", "canopy"))  {  print("What a pretty magenta canopy!");  }  [ open doorif (said("open", "door"))  {  [ if Jerrod is near hardware store door, or near grocery  [ store door  if ((posn(ego, 20, 127, 39, 140) ||       posn(ego, 103, 85, 117, 101)))    {    [ if by grocery store door    if (posn(ego, 20, 127, 39, 140))      {      [ if gold rush has been announced      if (isset(RushIsPublic))        {        [ if door is already open        if (isset(fDoorOpen))          {          print("The door is already open.");          }        else          {          print("This door is locked and there is a note on it..");          }        }      else        {        print("Just walk up to it.");        }      }    else      {      print("Just walk up to it.");      }    }  else    {    print("There is no door close enough.");    }  }  [ look doorif (said("examine", "door"))  {  [ if Jerrod is near hardware store door, or near grocery  [ store door  if ((posn(ego, 100, 70, 120, 108) ||       posn(ego, 9, 120, 51, 142)))    {    [ if near the hardware store door    if (posn(ego, 100, 70, 120, 108))      {      print("This is the door to the hardware store.");      }    else      {      [ must be near the grocery store door - if gold rush      [ has been announced      if (isset(RushIsPublic))        {        print("This is the door to the grocery store and there is a note on it.");        }      else        {        print("This is the door to the grocery store.");        }      }    }  else    {    print("There is no door close enough.");    }  }  [ look note/read noteif ((said("examine", "note") || said("read", "note")))  {  [ if Jerrod is near the grocery store door  if (posn(ego, 9, 120, 51, 142))    {    [ if gold rush has been announced    if (isset(RushIsPublic))      {      print("    The note says,\n\n\"GONE TO CALIFORNIA!\"");      }    else      {      print("What note?");      }    }  else    {    print("What note?");    }  }  [ get noteif (said("acquire", "note"))  {  [ if Jerrod is near the grocery store door  if (posn(ego, 9, 120, 51, 142))    {    [ if the gold rush has been announced    if (isset(RushIsPublic))      {      print("The note is securely attached to the door and you cannot remove "            "it.");      }    else      {      print("What note?");      }    }  else    {    print("What note?");    }  }  [ unlock door/use keyif ((said("unlock", "door") || said("use", "house key")))  {  [ if gold rush has been announced  if (isset(RushIsPublic))    {    [ if the door is already open    if (isset(fDoorOpen))      {      print("The door is already open.");      }    else      {      [ if Jerrod is near the grocery store door, or the      [ hardware store door      if ((posn(ego, 20, 127, 39, 140) ||           posn(ego, 103, 85, 117, 101)))        {        [ if near the grocery store door        if (posn(ego, 20, 127, 39, 140))          {          print("You have no key for this door!");          }        else          {          print("This door isn't locked!");          }        }      else        {        print("What good will that do right here?");        }      }    }  else    {    print("For what?");    }  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "\n  Get your goods here \n and then  get going!! \n\n    CALIFORNIA GOLD \n     won't  wait!!\n"#message 2 "You can't see the poster from here."#message 3 "There isn't a poster around here."#message 4 "This part of town is full of seafaring men when the ship is at the dock."#message 5 "Whenever the ship is at the dock, seaman are seen around town."#message 6 "This man takes pride in his heritage as a sailor!"#message 7 "There is no one around."#message 8 "The man isn't close enough."#message 9 "This ship worker says, \"Uhhhhh, I'm waiting for the ship to leave.\""#message 10 "This ship worker says, \"Uhhhhh, I'm ready to get back on the high seas.\""#message 11 "This crewman says, \"After being at sea for so long, I'm having to get my land legs back!\""#message 12 "This sailor says, \"I have been riding the high seas all my life and I love it!\""#message 13 "The grocery and hardware stores make up this part of town."#message 14 "The boardwalk is just outside of these stores."#message 15 "Everyone in town loves these streetlights."#message 16 "Here, in front of these stores, Water Street turns and heads toward Fulton Street."#message 17 "This hardware store is one of the most prominent businesses in all of Brooklyn."#message 18 "The grocery store is a booming business in this part of Brooklyn."#message 19 "The most prominent businesses in Brooklyn are located here in this part of  town."#message 20 "Through the hardware store windows you can see all kinds of hardware."#message 21 "Just look at all that good food in there!"#message 22 "The grocery and hardware stores have windows."#message 24 "Just walk up to it."#message 25 "What a pretty magenta canopy!"#message 26 "There is no door close enough."#message 27 "This is the door to the hardware store."#message 28 "This is the door to the grocery store and there is a note on it."#message 29 "This is the door to the grocery store."#message 30 "This door is locked and there is a note on it.."#message 31 "The door is already open."#message 32 "    The note says,\n\n\"GONE TO CALIFORNIA!\""#message 33 "What note?"#message 34 "The shelves inside the store are bare!"#message 35 "The note is securely attached to the door and you cannot remove it."#message 36 "For what?"#message 37 "What good will that do right here?"#message 38 "This door isn't locked!"#message 39 "You have no key for this door!"#message 40 "If you want to look at the hardware, you ought to go in the hardware store."#message 41 "If you want to see the groceries, you need to go into the grocery store."#message 42 "As you look around you can read \"Fast Grocery\" and \"Rand's Hardware.\""