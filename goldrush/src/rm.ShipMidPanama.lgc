[***********************************************************[[ rm.ShipMidPanama[[ An interior room of the steamship, that looks like it was[ intended for use in the Panama journey, but is never[ actually used in the game. But they never deleted the[ unused room.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oPiston                      o1#define oCams                        o2#define oAftDoor                     o3#define oMidDoor                     o4#define oFwdDoor                     o5#define oWhistleSteam                o6#define oWhistlePull                 o7#define oPilotDoor                   o8#define oWorker1                     o9#define oWorker2                    o10#define oCart                       o11#define vCholeraTime                v86  [ override CoalFireTime#define vTmpStep                   v220#define vWhistleStatus             v221#define vWhistleTimer              v222#define vCoalStatus                v223#define vWorkerStatus              v224#define vCoalTimer                 v225[v226 through v228 are not used#define vRoomPic                   v229#define fOnLadder                  f220#define fPilotDoorClosed           f221#define fPilotDoorOpen             f222#define fCoalActionDone            f223#define fCoalDoorShut              f224#define fCoalDoorMoved             f225[ f226 is not used#define fDoneDying                 f227#define fSoundDone                 f228[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard the normal midship interior  [ picture  vRoomPic = pic.ShipMidInterior;  load.pic(vRoomPic);  draw.pic(vRoomPic);  discard.pic(vRoomPic);    [ load the background art needed in the room  load.view(vw.ShipArt2);  [ add stove and table  add.to.pic(vw.ShipArt2, 0, 0, 28, 106, 9, 9);  add.to.pic(vw.ShipArt2, 0, 1, 42, 106, 9, 9);  [ add shovel  add.to.pic(vw.ShipArt2, 0, 2, 43, 156, 9, 9);    [ if at trip point 2 (beginning of trip)  if (CurrentTripTime == 2)    {    [ show cutouts of coal hold, full    add.to.pic(vw.ShipArt2, 6, 0, 31, 150, 7, 7);    add.to.pic(vw.ShipArt2, 6, 0, 53, 150, 7, 7);    }      [ at trip point 4 ( trip point four is never assigned) or  [ at trip point 19 (going from Panama to California)  if ((CurrentTripTime == 4 || CurrentTripTime == 19))    {    [ show holds half full    add.to.pic(vw.ShipArt2, 6, 1, 31, 150, 7, 7);    add.to.pic(vw.ShipArt2, 6, 1, 53, 150, 7, 7);    }  [ done with art view  discard.view(vw.ShipArt2);    [ load main timing logic  load.logics(lgc.PanamaTripTiming);    [ load all the other views used in the room  load.view(vw.JerrodNY);  load.view(vw.ClimbingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.ShipMachineryArt);  load.view(vw.MidShipArt2);  load.view(vw.CoalRoomArt);    [ load the sound used in the room  load.sound(s.Whistle);    [ add lamps  add.to.pic(vw.MidShipArt2, 2, 0, 2, 82, 7, 7);  add.to.pic(vw.MidShipArt2, 2, 0, 45, 82, 7, 7);  add.to.pic(vw.MidShipArt2, 2, 0, 87, 82, 7, 7);    [ if at trip point 2 (beginning of trip)  if (CurrentTripTime == 2)    {    [ draw coal pile mostly full at left edge of room    add.to.pic(vw.ShipMachineryArt, 5, 0, 0, 158, 10, 10);    }      [ at trip point 4 ( trip point four is never assigned) or  [ at trip point 19 (going from Panama to California)  if ((CurrentTripTime == 4 || CurrentTripTime == 19))    {    [ draw coal pile half full at left edge of room    add.to.pic(vw.ShipMachineryArt, 5, 1, 0, 158, 10, 10);    }      [ if at trip point 2 (beginning of trip)  if (CurrentTripTime == 2)    {    [ draw barrels in forward hold mostly full    add.to.pic(vw.ShipMachineryArt, 5, 2, 155, 158, 10, 10);    }      [ at trip point 4 ( trip point four is never assigned) or  [ at trip point 19 (going from Panama to California)  if ((CurrentTripTime == 4 || CurrentTripTime == 19))    {    [ draw fewer barrels in forward    add.to.pic(vw.ShipMachineryArt, 5, 3, 155, 158, 10, 10);    }      [ coal cart  animate.obj(oCart);  set.view(oCart, vw.CoalRoomArt);  set.loop(oCart, 5);  set.cel(oCart, 0);  set.priority(oCart, 13);  position(oCart, 7, 156);  ignore.objs(oCart);  draw(oCart);  stop.cycling(oCart);    [ boiler worker #1 (he shovels coal from the hold to the  [ cart)  animate.obj(oWorker1);  set.view(oWorker1, vw.CoalRoomArt);  set.loop(oWorker1, 1);  set.cel(oWorker1, 0);  set.priority(oWorker1, 12);  position(oWorker1, 7, 156);  ignore.objs(oWorker1);  draw(oWorker1);  stop.cycling(oWorker1);  stop.update(oWorker1);    [ boiler worker #2  animate.obj(oWorker2);  set.view(oWorker2, vw.CoalRoomArt);  set.loop(oWorker2, 2);  set.cel(oWorker2, 0);  set.priority(oWorker2, 12);  position(oWorker2, 63, 156);  draw(oWorker2);  ignore.objs(oWorker2);  stop.update(oWorker2);    [ main engine piston  animate.obj(oPiston);  set.view(oPiston, vw.ShipMachineryArt);  set.loop(oPiston, 0);  set.cel(oPiston, 0);  set.priority(oPiston, 14);  position(oPiston, 116, 92);  draw(oPiston);  start.cycling(oPiston);    [ engine cam rockers  animate.obj(oCams);  set.view(oCams, vw.ShipMachineryArt);  set.loop(oCams, 1);  set.cel(oCams, 0);  set.priority(oCams, 14);  position(oCams, 86, 96);  draw(oCams);  start.cycling(oCams);    [ aft coal hold door  animate.obj(oAftDoor);  set.view(oAftDoor, vw.ShipMachineryArt);  set.loop(oAftDoor, 2);  set.cel(oAftDoor, 0);  position(oAftDoor, 9, 150);  ignore.blocks(oAftDoor);  ignore.objs(oAftDoor);  draw(oAftDoor);  stop.cycling(oAftDoor);    [ mid coal hold door  animate.obj(oMidDoor);  set.view(oMidDoor, vw.ShipMachineryArt);  set.loop(oMidDoor, 3);  set.cel(oMidDoor, 0);  position(oMidDoor, 28, 152);  set.priority(oMidDoor, 8);  draw(oMidDoor);  stop.update(oMidDoor);    [ forward coal hold door  animate.obj(oFwdDoor);  set.view(oFwdDoor, vw.ShipMachineryArt);  set.loop(oFwdDoor, 3);  set.cel(oFwdDoor, 0);  position(oFwdDoor, 50, 152);  set.priority(oFwdDoor, 8);  draw(oFwdDoor);  stop.update(oFwdDoor);    [ pilot house door  animate.obj(oPilotDoor);  stop.cycling(oPilotDoor);  set.view(oPilotDoor, vw.MidShipArt2);  set.loop(oPilotDoor, 1);  set.cel(oPilotDoor, 0);  set.priority(oPilotDoor, 8);  ignore.objs(oPilotDoor);  ignore.blocks(oPilotDoor);  [ door starts closed  set(fPilotDoorClosed);  position(oPilotDoor, 17, 52);  draw(oPilotDoor);    [ steam whistle smoke (don't draw yet)  animate.obj(oWhistleSteam);  set.view(oWhistleSteam, vw.ShipMachineryArt);  set.loop(oWhistleSteam, 4);  set.priority(oWhistleSteam, 9);  ignore.horizon(oWhistleSteam);  position(oWhistleSteam, 100, 20);    [ whistle pull string  animate.obj(oWhistlePull);  set.view(oWhistlePull, vw.ShipMachineryArt);  set.loop(oWhistlePull, 6);  set.cel(oWhistlePull, 0);  set.priority(oWhistlePull, 9);  ignore.horizon(oWhistlePull);  position(oWhistlePull, 99, 41);  draw(oWhistlePull);  stop.update(oWhistlePull);    [ Jerrod  animate.obj(ego);  [ if not time to get sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal New York view    set.view(ego, vw.JerrodNY);    }  else    {    [ Jerrod is sick    set.view(ego, vw.SickJerrodNY);    }      [ since this is a 2D room, force priority to 10 and leave  [ it there  set.priority(ego, 10);    [ if NOT coming from another room on the ship  if (previousRoom != 142 && previousRoom != 144)    {    [ start Jerrod on top deck, to the left    position(ego, 30, 57);    }      [ if Jerrod came from one of the other two interior rooms,  [ reposition him based on where he came from    [ if coming from pilot house  if (posn(ego, 0, 50, 19, 58))    {    [ start just past the door    position(ego, 20, 57);    [ with door open    reset(fPilotDoorClosed);    set(fPilotDoorOpen);    set.cel(oPilotDoor, 3);    }  [ if coming from stern mid-deck  if (posn(ego, 0, 102, 5, 110))    {    position(ego, 20, 106);    }  [ if coming from stern, lower deck  if (posn(ego, 0, 150, 5, 160))    {    position(ego, 20, 156);    }  [ if coming from bow, on main deck  if (posn(ego, 150, 56, 159, 58))    {    position(ego, 135, 57);    }  [ if coming from bow, mid-deck  if (posn(ego, 150, 102, 159, 110))    {    position(ego, 135, 106);    }      [ during trip point 2 only (very first leg of journey that  [ takes place in this room) AND counter is at beginning  if (CurrentTripTime == TripPoint_2 &&       TripCycles == 0 &&       TripCycles2 == 0)    {    [ keep Jerrod right where he is ( the exterior room    [ 'dissolves' into the interior view for trip point 2)    position.v(ego, EgoX, EgoY);    }  [ draw Jerrod on screen  draw(ego);    [ and now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if coal fueling status is ready for another cycleif (vCoalStatus != 250)  {  [ random chance the coal fueling animation will happen  random(210, 249, vCoalStatus);  [ one in 40 chance  if (vCoalStatus == 230)    {    [ set status to 250 so cycle won't run again until it's    [ over    vCoalStatus = 250;    end.of.loop(oAftDoor, fCoalActionDone);    start.cycling(oAftDoor);    [ worker is ready to shovel coal    vWorkerStatus = 1;    }  }  [ after door opens and worker is readyif (isset(fCoalActionDone) && vWorkerStatus == 1)  {  [ reset action flag  reset(fCoalActionDone);  [ increment timer  ++vCoalTimer;  [ reset worker to first cel   start.update(oWorker1);  set.cel(oWorker1, 0);  [ begin shoveling coal  end.of.loop(oWorker1, fCoalActionDone);    [ as cycles continue, fill the cart  if (vCoalTimer == 5)    {    set.cel(oCart, 1);    }  if (vCoalTimer == 10)    {    set.cel(oCart, 2);    }      [ after 15 cycles,  if (vCoalTimer == 15)    {    [ cart is full; second worker is ready to shovel coal    [ into boiler    vWorkerStatus = 2;    vCoalTimer = 0;    [ cart is completely full    set.cel(oCart, 3);    [ move cart to boiler    move.obj(oCart, 64, 156, 1, fCoalActionDone);    [ worker 1 stops updating    stop.update(oWorker1);    [ now close the door    reverse.loop(oAftDoor, fCoalDoorShut);    }  }  [ after cart moves to boiler, and worker 2 is ready if (isset(fCoalActionDone) && vWorkerStatus == 2)  {  [ worker 2 begins shoveling coal from cart into the boiler  reset(fCoalActionDone);  vWorkerStatus = 3;  start.update(oWorker2);  end.of.loop(oWorker2, fCoalActionDone);  }  [ after worker 2 completes a shoveling actionif (isset(fCoalActionDone) && vWorkerStatus == 3)  {  reset(fCoalActionDone);  [ increment timer  ++vCoalTimer;  [ start another shoveling loop  set.cel(oWorker2, 0);  end.of.loop(oWorker2, fCoalActionDone);  [ as time goes on, reduce coal on cart  if (vCoalTimer == 5)    {    set.cel(oCart, 2);    }  if (vCoalTimer == 10)    {    set.cel(oCart, 1);    }      [ after 10 cycles, cart is empty  if (vCoalTimer == 15)    {    [ workers are done    vWorkerStatus = 4;    vCoalTimer = 0;    [ show cart empty    set.cel(oCart, 0);    [ move it back to coal hold    move.obj(oCart, 7, 156, 1, fCoalActionDone);    stop.update(oWorker2);    }  }  [ after work is done and cart moves backif (isset(fCoalActionDone) && vWorkerStatus == 4)  {  [ reset flags and status variables so another cycle can  [ randomly start again  reset(fCoalActionDone);  vWorkerStatus = 0;  ++vCoalStatus;  }  [ if Jerrod is going from deck into the pilot houseif (posn(ego, 14, 56, 16, 58) && isset(egoHitSpecial))  {  [ bump him up, and over a bit  TmpX = -2; [ 254;  TmpY = -5; [ 251;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is going from pilot house to the deckif (posn(ego, 12, 51, 16, 53) && isset(egoHitSpecial))  {  [ bump him down and over a bit  TmpX = 2;  TmpY = 5;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is on stairs coming from stern sectionif (posn(ego, 0, 93, 8, 108) && isset(egoHitSpecial))  {  [when going downstairs or to the right  if ((egoDir == DOWN_RIGHT || egoDir == RIGHT))    {    [ bump Jerrod down and to the right by one pixel    TmpX = 1;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }  [ when going upstairs or to the left  if ((egoDir == UP_LEFT || egoDir == LEFT))    {    [ bump Jerrod up and to the left by one pixel    TmpX = -1; [ 255;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ when Jerrod  is at top of ladderif (posn(ego, 12, 107, 14, 107))  {  [ bump position so the climbing view gets postioned  [ correctly  if (posn(ego, 12, 107, 12, 107))    {    TmpX = 0;    }  if (posn(ego, 13, 107, 13, 107))    {    TmpX = -1; [ 255;    }  if (posn(ego, 14, 107, 14, 107))    {    TmpX = -2; [ 254;    }  [ position Jerrod on the ladder, with climbing view  set(fOnLadder);  TmpY = 17;  [ set and fix loop to show Jerrod climbing  set.view(ego, vw.ClimbingJerrodNY);  set.loop(ego, 3);  fix.loop(ego);  [ set step time, and reposition the view  vTmpStep = 2;  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [ when Jerrod reaches bottom of ladder while climbingif (posn(ego, 12, 156, 12, 156) && isset(fOnLadder))  {  [ he gets off the ladder  reset(fOnLadder);  TmpX = 1;  TmpY = 0;  [ if Jerrod is NOT sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal NY view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise, use sick view    set.view(ego, vw.SickJerrodNY);    }  [ allow loop to change based on direction  release.loop(ego);  vTmpStep = 1;  [ restore normal step time and resposition the view  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }[ if at bottom of ladder, and not yet climbing itif (posn(ego, 12, 155, 14, 155) && !isset(fOnLadder))  {  [ bump position so the climbing view gets positioned  [ correctly  if (posn(ego, 12, 155, 12, 155))    {    TmpX = 0;    }  if (posn(ego, 13, 155, 13, 155))    {    TmpX = -1; [ 255;    }  if (posn(ego, 14, 155, 14, 155))    {    TmpX = -2; [ 254;    }  [ Jerrod is now climbing the ladder  set(fOnLadder);  TmpY = -1; [ 255;  [ change to climbing view  set.view(ego, vw.ClimbingJerrodNY);  [ set and fix loop  set.loop(ego, 3);  fix.loop(ego);  vTmpStep = 2;  [ adjust step time, and resposition the view  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [ when Jerrod reaches top of ladder while climbingif (posn(ego, 12, 122, 12, 122) && isset(fOnLadder))  {  [ Jerrod gets off the ladder  reset(fOnLadder);  [ if not sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }  [ allow loop to change by direction  release.loop(ego);  [ restore step size  vTmpStep = 1;  step.size(ego, vTmpStep);  [ reposition the view  TmpX = 1;  TmpY = -16; [ 240;  reposition(ego, TmpX, TmpY);  }  [ if by the pilot house door while it is closedif (posn(ego, 9, 52, 20, 57) && (isset(fPilotDoorClosed)))  {  [ open the door  reset(fPilotDoorClosed);  end.of.loop(oPilotDoor, fPilotDoorOpen);  }  [ if NOT by the pilot house door and it's openif (!posn(ego, 9, 52, 20, 57) && (isset(fPilotDoorOpen)))  {  [ close it  reset(fPilotDoorOpen);  reverse.loop(oPilotDoor, fPilotDoorClosed);  }  [ if Jerrod pulled the steam whistle ropeif (vWhistleStatus == 1)  {  [ show the steam cloud coming from the whistle  draw(oWhistleSteam);  start.cycling(oWhistleSteam);  vWhistleStatus = 2;  sound(s.Whistle, fSoundDone);  }  [ after whistle plays first soundif (vWhistleStatus == 2)  {  [ increment the timer  ++vWhistleTimer;  [ if sound is done playing  if (isset(fSoundDone))    {    [ play it again    sound(s.Whistle, fSoundDone);    }  [ after 15 cycles  if (vWhistleTimer == 15)    {    [ reset whistle status and stop sounding the whistle    vWhistleTimer = 0;    vWhistleStatus = 0;    [ reset the pull to its normal position    set.cel(oWhistlePull, 0);    force.update(oWhistlePull);    [ steam goes away    erase(oWhistleSteam);    }  }  [ if Jerrod is due to die from choleraif (CurrentTripTime == vCholeraTime)  {  [ if currently OK  if (EgoHealthStatus == 0)    {    [ and already set to die at sea    if (isset(DyingAtSea))      {      [ only begin dying sequence if he's NOT on stairs or      [ ladder (i.e. on deck with room to show him dying)      if ((EgoY == 57 || EgoY == 106 || EgoY == 156))        {        [ reset the dying flag        reset(DyingAtSea);        [ show view of ego falling down dead        set.view(ego, vw.DyingJerrodNY);        [ reset to first cel to get the full loop        set.cel(ego, 0);        end.of.loop(ego, fDoneDying);        [ allow cycling at rest        set(CycleAtRest);        }      }    [ after Jerrod finishes dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      [ stop updating      stop.update(ego);      [ finish the death by cholera sequence      EgoHealthStatus = 21;      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      }    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit != NOT_HIT)  {  if (edgeEgoHit == LEFT_EDGE)    {    new.room(rm.ShipSternPanama); [ ##LE001##    }  if (edgeEgoHit == RIGHT_EDGE)    {    new.room(rm.ShipBowPanama); [ ##LE002##    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ pull chainif ((said("pull", "handle") || said("pull", "chain")))  {  [ if near the whistle chain  if (posn(ego, 94, 57, 102, 106))    {    [ show the pull-chain in down position    set.cel(oWhistlePull, 1);    force.update(oWhistlePull);    [ set status to blow the whistle    vWhistleStatus = 1;    }  else    {    print("You can not do that from here.");    }  }  [ feel doorif (said("feel", "door"))  {  [ if near the door  if (posn(ego, 7, 156, 60, 156))    {    print("The door is cool to the touch.");    }  else    {    print("There is no door close enough.");    }  }  [ open doorif (said("open", "door"))  {  [ if near a coal-hold door, or near the pilot house door  if ((posn(ego, 7, 156, 16, 156) ||       posn(ego, 28, 156, 37, 156) ||       posn(ego, 49, 156, 60, 156) ||       posn(ego, 0, 52, 50, 57)))    {    [ if near the aft coal-hold door    if (posn(ego, 7, 156, 16, 156))      {      print("You can not get access to the coal hold door because the worker is "            "in the way.");      }          [ if near the mid coal-hold door    if (posn(ego, 28, 156, 37, 156))      {      [ open it      start.update(oMidDoor);      end.of.loop(oMidDoor, fCoalDoorMoved);      }          [ if near the forward coal-hold door    if (posn(ego, 49, 156, 60, 156))      {      [ open it      start.update(oFwdDoor);      end.of.loop(oFwdDoor, fCoalDoorMoved);      }          [ if near the pilot house door    if (posn(ego, 0, 52, 50, 57))      {      print("The door is not locked; walk right in!");      }    }  else    {    print("There is no door close enough.");    }  }  [ close doorif (said("close", "door"))  {  [ if near a coal-hold door  if ((posn(ego, 7, 156, 16, 156) ||       posn(ego, 28, 156, 37, 156) ||       posn(ego, 49, 156, 60, 156)))    {    [ if near aft coal-hold door    if (posn(ego, 7, 156, 16, 156))      {      print("You can not get access to the coal hold door because the worker is "            "in the way.");      }    [ if near mid coal-hold door    if (posn(ego, 28, 156, 37, 156))      {      [ close it      start.update(oMidDoor);      reverse.loop(oMidDoor, fCoalDoorMoved);      }    [ if near forward coal-hold door    if (posn(ego, 49, 156, 60, 156))      {      [ close it      start.update(oFwdDoor);      reverse.loop(oFwdDoor, fCoalDoorMoved);      }    }  else    {    [ if pilot house door is open (meaning Jerrod is near    [ it)    if (isset(fPilotDoorOpen))      {      print("Just walk away from it!");      }    else      {      print("There is no door close enough.");      }    }  }  [ look at engineif (said("examine", "engine"))  {  [ if on mid-deck near engine  if (posn(ego, 81, 106, 108, 106))    {    print("This is where the real guts of the engine are located.");    print("You find it quite fascinating.");    [ if pressure valve is not broken    if (!isset(BrokeValve1))      {      print("You also find something else.  It appears to be a pressure relief "            "valve, in the open position, and a pressure gauge.");      }    }  [ if on mid-deck, near piston  if (posn(ego, 109, 106, 159, 106))    {    print("Some more amazing engineering!!  This must be the piston and the "          "paddle crank.");    }  [ if on mid deck away from engines  if (!posn(ego, 81, 106, 159, 106))    {    print("You need to get closer.");    }  }  [ look relief valveif (said("examine", "pressure relief valve"))  {  [ if in near the relief valve  if (posn(ego, 81, 106, 108, 106))    {    [ if valve is not broken    if (!isset(BrokeValve1))      {      print("The valve obviously is not used very much.  It is very rusty from "            "the moist sea air.  There is an open and closed position.");      }    else      {      print("You look earnestly in the area where the pressure relief valve "            "once was located, but it is no longer there.");      }    }  else    {    print("What %w2?");    }  }  [ look gaugeif (said("examine", "gauge"))  {  [ if on mid-deck, near engine  if (posn(ego, 81, 106, 108, 106))    {    print("The needle in the gauge is riding right in the middle of the green!!");    }  else    {    print("What gauge?");    }  }  [ turn valveif ((said("rotate", "pressure relief valve") ||     said("move", "pressure relief valve") ||     said("feel", "pressure relief valve") ||     said("close", "pressure relief valve")))  {  [ if on mid deck, near valve  if (posn(ego, 81, 106, 108, 106))    {    if (!isset(BrokeValve1))      {      [ it breaks      print("As you attempt to move the valve, it moves to the closed position "            "and breaks off.");      print("You try to catch the valve handle but it falls onto the floor and "            "rolls out of sight.");      [ nothing is done about it; in fact, if you try again      [ it will break again!      }    else      {      print("What %w2?");      }    }  else    {    print("What %w2?");    }  }  [ look shovel/look shovel handleif ((said("examine", "shovel") ||     said("examine", "shovel", "handle") ||     said("examine", "handle") ||     said("examine", "shovel handle") ||     said("examine", "beam", "shovel handle")))  {  [ if in boiler room, near the shovel handle  if (posn(ego, 38, 156, 47, 156))    {    print("This is the spare shovel used by these men to stoke the boiler.");    }  else    {    print("You can not do that from here.");    }  }  [ take shovel/take shovel handleif ((said("acquire", "shovel") ||     said("acquire", "shovel", "handle") ||     said("acquire", "handle") ||     said("acquire", "shovel handle") ||     said("acquire", "beam", "shovel handle")))  {  [ if in boiler room, near the shovel handle  if (posn(ego, 38, 156, 47, 156))    {    [ Jerrod is not allowed to take the shovel    print("I wouldn't try taking that shovel.  The workers might need to use "          "it.");    }  else    {    print("You can not do that from here.");    }  }  [ look aroundif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  [ if on pilot house level  if (EgoY == 52)    {    print("This is the most forward section of the bridge deck.");    }      [ if on main deck  if (EgoY == 57)    {    print("This is the midsection of the sun, rain, snow, hail and sleet deck.");    print("Today is a beautiful day!! \n      What a view!!");    }      [ if on stairs coming from captain's deck  if (EgoY < 106 && EgoY > 90)    {    print("You are on the short staircase that connects the main deck with the "          "captain's deck.");    }  [ if on galley/engine room deck  if (EgoY == 106)    {    [ if by aft stairs    if (EgoX < 21)      {      print("From this position on the main deck, if you go aft, you will go up "            "the stairs to the captain's deck.  If you go forward, you go "            "directly into the galley.");      }    [ if by the galley    if (EgoX > 20 && EgoX < 66)      {      print("This is the galley, which is on the main deck.");      print("There is a stove, table and benches.");      print("This is a favorite social gathering place.");      }    [ if between galley and engineroom    if (EgoX > 65 && EgoX < 78)      {      print("From this position on the main deck, if you go aft, you will go "            "into the galley.  If you go forward, you go directly into the "            "engine room.");      }    [ if in engineroom    if (EgoX > 77)      {      [ if Jerrod has the metal scraps      if (MetalStatus == 0)        {        print("This room, the engine room, is undoubtedly the noisiest, and "              "most interesting, place on the ship.");        print("Considering all the work that goes on here, the area stays "              "surprisingly clean.  There are only a few scraps of metal lying "              "on the floor.");        }      else        {        print("This room, the engine room, is undoubtedly the noisiest, and "              "most interesting, place on the ship.");        print("It makes your knees quiver just to think of how powerful this "              "engine is!!");        }      }    }      [ if on ladder leading to boiler room  if (EgoY > 106 && EgoY < 156)    {    print("You are on the ladder that connects the main deck with the lower "          "deck.");    }      [ if in boiler room  if (EgoY == 156)    {    [ if by the aft worker    if (EgoX < 20)      {      print("Here is a hard-working man!  He is standing next to one of the "            "coal hold doors.");      }    [ if by the coal doors    if (EgoX > 19 && EgoX < 61)      {      print("Here are two coal hold doors.  The coal is stored behind these "            "doors.");      print("There is a shovel resting against the wall between the two doors.");      }    [ if by the forward worker    if (EgoX > 60 && EgoX < 75)      {      print("You are right next to another hard-worker.  You can sure tell he "            "has been working hard.");      }    [ if by the boiler    if (EgoX > 74)      {      print("The boiler is located down here on the lower deck.  It is a hot "            "spot to be!!");      }    }  }  [ look metalif (said("examine", "metal"))  {  [ if metal hasn't been picked up yet  if (MetalStatus == 0)    {    [ if Jerrod is in engineroom    if (EgoY == 106 && EgoX > 77)      {      print("There are a few scraps of metal lying on the floor around the "            "engine.  Apparently little pieces have broken off of the engine "            "and haven't been picked up.");      }    else      {      print("What metal scraps?");      }    }  [ if metal is long gone  if (MetalStatus == 2)    {    print("What metal scraps?");    }  }  [ get metalif (said("acquire", "metal"))  {  [ if Jerrod already has the metal scraps  if (MetalStatus == 1)    {    print("You already have some metal scraps.");    }  [ if metal scraps haven't been picked up yet  if (MetalStatus == 0)    {    [ if Jerrod is in the engineroom    if (EgoY == 106 && EgoX > 77)      {      [ get the scraps      print("You scoop up a handful of metal scraps, being careful not to cut "            "your hands, and put them in your pocket.");      MetalStatus = 1;      get("Metal scraps");      [ no points scored here!      }    else      {      print("What metal scraps?");      }    }  [ if metal scraps are gone  if (MetalStatus == 2)    {    print("What metal scraps?");    }  }  [ look stringif (said("examine", "string"))  {  print("There is no string in sight.");  }  [ look paperclipif (said("examine", "clip"))  {  print("What paper clip?");  }  [ go fishingif ((said("go", "fish") ||     said("go", "fishing") ||     said("fish")))  {  print("That is a great idea, but this isn't the best place to do it!!");  }  [ look tableif (said("examine", "table"))  {  [ if in galley, by table  if (posn(ego, 21, 106, 65, 106))    {    print("The table is bare.");    }  else    {    print("You need to get closer.");    }  }  [ look stoveif (said("examine", "stove"))  {  [ if in galley, by stove  if (posn(ego, 21, 106, 65, 106))    {    print("This is the galley stove.");    }  else    {    print("You need to get closer.");    }  }  [ climb ladderif ((said("go", "ladder") ||     said("go", "up", "ladder") ||     said("go", "down", "ladder") ||     said("use", "ladder") ||     said("climb", "ladder")))  {  [ it happens automatically by just moving to it  print("Go ahead and climb on!");  }  [ look riggingif ((said("examine", "rope") || said("examine", "rigging")))  {  print("The rigging on the Sea Farer isn't nearly as complicated as on some "        "clippers you've seen.");  }  [ look mastif (said("examine", "mast"))  {  print("Made of strong wood, the mast goes through both decks to the keel, "        "making a sturdy structure.");  }  [ look smokestackif ((said("examine", "smokestack") ||     said("examine", "smoke", "smokestack")))  {  print("The stack is ironclad, and carries the smoke and sparks high above the "        "deck.  The ship's whistle is hitched to the side.");  }  [ look whistleif ((said("examine", "whistle") ||     said("examine", "chain")))  {  [ if by the whistle  if (posn(ego, 0, 52, 159, 75))    {    print("Using steam from the boiler, the whistle gives a loud toot!  The "          "pull chain reaches clear to the engine room.");    }  else    {    print("You can not do that from here.");    }  }  [ look paddle wheelif ((said("examine", "wheel") ||     said("examine", "paddle", "wheel") ||     said("examine", "paddle")))  {  print("The paddles are turning, propelling the ship without the wind's aid.");  }  [ look ladderif (said("examine", "ladder"))  {  [ if on top deck  if (posn(ego, 0, 52, 159, 57))    {    print("You can not do that from here.");    }  else    {    print("No one gets to the boiler but by this ladder.");    }  }  [ look manif ((said("examine", "boy") ||     said("examine", "crew") ||     said("examine", "crewman") ||     said("examine", "crew", "boy") ||     said("examine", "worker")))  {  [ by men in boiler room  if (posn(ego, 7, 138, 130, 156))    {    print("These men move when the captain bellows, \"Pour the coals on!\"");    }  else    {    print("You can not do that from here.");    }  }  [ look doorif (said("examine", "door"))  {  [ if by coal-hold doors, or by pilot house door  if ((posn(ego, 7, 138, 130, 156) ||       posn(ego, 0, 52, 159, 57)))    {    [ by pilot house door    if (posn(ego, 0, 52, 159, 57))      {      [ reset haveMatch so generic response will handle this      reset(haveMatch);      }    else      {      print("The coal lies behind these doors.");      }    }  else    {    print("You can not do that from here.");    }  }  [ look coal hold doorif ((said("examine", "coal", "hold", "door") ||     said("examine", "coal", "door")))  {  [ if in the boiler room  if (posn(ego, 7, 138, 130, 156))    {    print("The coal lies behind these doors.");    }  else    {    print("You can not do that from here.");    }  }  [ look coalif (said("examine", "coal"))  {  [ if in boiler room  if (posn(ego, 7, 138, 130, 156))    {    print("Coal is the fuel used in the boiler.");    }  else    {    print("You can not do that from here.");    }  }  [ look boilerif (said("examine", "boiler"))  {  [ if in boiler room  if (posn(ego, 7, 138, 130, 156))    {    print("There is a hot fire in the boiler.  It boils water which produces "          "steam pressure, used to drive the engines above you.");    }  else    {    print("You can not do that from here.");    }  }  [ talk to manif ((said("speak", "boy") ||     said("speak", "crew") ||     said("speak", "crewman") ||     said("speak") ||     said("speak", "crew", "boy") ||     said("speak", "worker")))  {  [ if in boiler room  if (posn(ego, 7, 138, 130, 156))    {    print("Conversing with these men, you learn that they wish to put their "          "shovels to better use, IN THE GOLD FIELDS!");    }  else    {    print("You can not do that from here.");    }  }  [ look deckif (said("examine", "deck"))  {  [ if in engine room  if (posn(ego, 78, 106, 159, 106))    {    if (MetalStatus == 0)      {      print("Considering all the work that goes on here, the area stays "            "surprisingly clean.  There are only a few scraps of metal lying on "            "the floor.");      }    else      {      print("Nothing important right here!");      }    }  else    {    print("Nothing important right here!");    }  }  Done:[ call the main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "You can not do that from here."#message 2 "This is where the real guts of the engine are located."#message 3 "You find it quite fascinating."#message 6 "You also find something else.  It appears to be a pressure relief valve, in the open position, and a pressure gauge."#message 7 "The table is bare."#message 9 "This is the galley stove."#message 10 "You need to get closer."#message 13 "Some more amazing engineering!!  This must be the piston and the paddle crank."#message 15 "The door is cool to the touch."#message 16 "You can not get access to the coal hold door because the worker is in the way."#message 17 "There is no door close enough."#message 19 "The valve obviously is not used very much.  It is very rusty from the moist sea air.  There is an open and closed position."#message 20 "You look earnestly in the area where the pressure relief valve once was located, but it is no longer there."#message 21 "What %w2?"#message 22 "What gauge?"#message 23 "The reading on the gauge does not look good.  It is buried in the red zone!!"#message 24 "The needle in the gauge is riding right in the middle of the green!!"#message 25 "The needle is approaching the red area and is continually rising."#message 26 "As you attempt to move the valve, it moves to the closed position and breaks off."#message 27 "You try to catch the valve handle but it falls onto the floor and rolls out of sight."#message 31 "There isn't a %w2 around here."#message 32 "This is the spare shovel used by these men to stoke the boiler."#message 34 "I wouldn't try taking that shovel.  The workers might need to use it."#message 35 "This is the most forward section of the bridge deck."#message 36 "This is the midsection of the sun, rain, snow, hail and sleet deck."#message 37 "Today is a beautiful day!! \n      What a view!!"#message 38 "It is a great day to be up here!!"#message 40 "You are on the short staircase that connects the main deck with the captain's deck."#message 41 "From this position on the main deck, if you go aft, you will go up the stairs to the captain's deck.  If you go forward, you go directly into the galley."#message 42 "This is the galley, which is on the main deck."#message 43 "There is a stove, table and benches."#message 44 "This is a favorite social gathering place."#message 46 "From this position on the main deck, if you go aft, you will go into the galley.  If you go forward, you go directly into the engine room."#message 47 "This room, the engine room, is undoubtedly the noisiest, and most interesting, place on the ship."#message 48 "Considering all the work that goes on here, the area stays surprisingly clean.  There are only a few scraps of metal lying on the floor."#message 49 "It makes your knees quiver just to think of how powerful this engine is!!"#message 50 "You are on the ladder that connects the main deck with the lower deck."#message 51 "Here is a hard-working man!  He is standing next to one of the coal hold doors."#message 52 "There are a few scraps of metal lying on the floor around the engine.  Apparently little pieces have broken off of the engine and haven't been picked up."#message 53 "What metal scraps?"#message 54 "You already have some metal scraps."#message 55 "You scoop up a handful of metal scraps, being careful not to cut your hands, and put them in your pocket."#message 58 "Here are two coal hold doors.  The coal is stored behind these doors."#message 59 "There is a shovel resting against the wall between the two doors."#message 61 "You are right next to another hard-worker.  You can sure tell he has been working hard."#message 62 "The boiler is located down here on the lower deck.  It is a hot spot to be!!"#message 72 "How can you do that?  You don't have anything to eat!"#message 74 "What paper clip?"#message 75 "There is no string in sight."#message 77 "That is a great idea, but this isn't the best place to do it!!"#message 90 "Go ahead and climb on!"#message 91 "The rigging on the Sea Farer isn't nearly as complicated as on some clippers you've seen."#message 92 "Made of strong wood, the mast goes through both decks to the keel, making a sturdy structure."#message 93 "The stack is ironclad, and carries the smoke and sparks high above the deck.  The ship's whistle is hitched to the side."#message 94 "Using steam from the boiler, the whistle gives a loud toot!  The pull chain reaches clear to the engine room."#message 95 "The paddles are turning, propelling the ship without the wind's aid."#message 96 "No one gets to the boiler but by this ladder."#message 97 "These men move when the captain bellows, \"Pour the coals on!\""#message 98 "The coal lies behind these doors."#message 102 "Coal is the fuel used in the boiler."#message 103 "There is a hot fire in the boiler.  It boils water which produces steam pressure, used to drive the engines above you."#message 104 "Conversing with these men, you learn that they wish to put their shovels to better use, IN THE GOLD FIELDS!"#message 105 "The door is not locked; walk right in!"#message 106 "Just walk away from it!"#message 107 "Nothing important right here!"