[***********************************************************[[ rm.JungleAnts[[ Second jungle scene where Jerrod has to avoid the ants and[ get to next room to continue. This is also the room where[ Jerrod can obtain a copy of the Bible by talking to the[ reading man. Player is allowed to control ego object in[ this scene.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oAntSwarm1                   o1#define oAntSwarm2                   o2#define oMule1                       o3#define oMule2                       o4#define oGuide1                      o5#define oGuide2                      o6[ o7 is not used#define oTraveler1                   o8#define oTraveler2                   o9#define oTraveler3                  o10#define oAntSwarm3                  o11#define oAntSwarm4                  o12#define oAntSwarm5                  o13#define oAntSwarm6                  o14#define oAntSwarm7                  o15#define oReader                     o16#define vCholeraTime                v86  [ override CoalFireTime#define vMosquitoTime               v87  [ override BoilerTime#define vYellowFeverTime            v88  [ override YoungOxDeathTime#define vDysenteryTime              v89  [ override AnimalStarveTime#define vSwarm3Status              v220#define vAntAttackStatus           v221  #define AA_NO_ATTACK          0  [ no attack is happening  #define AA_BEGIN_ATTACK       1  [ ants begin their attack  #define AA_BITING_1           2  [ ants are biting Jerrod, who begins to flail  #define AA_BITING_2           3  [ Jerrod is stops flailing  #define AA_BITING_3           4  [ Jerrod slumps down  #define AA_DYING_1            5  [ death sequence starts  #define AA_DYING_2            6  [ Jerrod falls down dead  #define AA_JERROD_DEAD        7  [ Jerrod is dead from ant bites  #define AA_DEAD_2             8  [ more ants on Jerrod's dead body  #define AA_DEAD_3             9  [ even more ants on Jerrod's body  #define AA_DEAD_4            10  [ even MORE ants on Jerrod's body  #define AA_ATTACK_OVER       11  [ ants are done  #define AA_READY_TO_JUMP     20  [ Jerrod is below vine ready to jump  #define AA_JUMPING           21  [ Jerrod is jumping on the vine  #define AA_LEAVING_1         22  [ ants are beginning to leave  #define AA_LEAVING_2         23  [ ants are mostly gone, but still not safe  #define AA_GONE              24  [ ants are gone - OK to jump down#define vGuide1Status              v222#define vGuide2Status              v223#define vSwarm1Status              v224#define vMule1Status               v225#define vMule2Status               v226#define vTraveler1Status           v227#define vTraveler2Status           v228#define vTraveler3Status           v229#define vSwarm4Status              v230#define vTimer                     v231#define vSwarm2Status              v232[ v233 and v234 are not used#define vSwarm5Status              v235#define vSwarm6Status              v236#define vSwarm7Status              v237#define vRndNum                    v238#define fSwarm2Moved               f220#define fDoneDying                 f221#define fGuide1Moved               f222#define fGuide2Moved               f223#define fSwarm1Moved               f224#define fMule1Moved                f225#define fMule2Moved                f226#define fTraveler1Moved            f227#define fTraveler2Moved            f228#define fTraveler3Moved            f229#define fSwarm3Moved               f230#define fSwarm4Moved               f231#define fSwarm5Moved               f232#define fSwarm6Moved               f233#define fSwarm7Moved               f234#define fSndDone                   f237[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard current room picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load death logic, in case Jerrod dies  load.logics(lgc.DeathDisease);    [ load main timing logic  load.logics(lgc.PanamaTripTiming);    [ load all the views used in the room  load.view(vw.JerrodNY);  load.view(vw.FallingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.JungleMule);  load.view(vw.JungleGuide);  load.view(vw.Traveler1);  load.view(vw.Traveler2);  load.view(vw.Traveler3);  load.view(vw.JungleArt_3);    [ load sounds used in the room  load.sound(s.AddToScore);  load.sound(m.Death);  load.sound(m.Chase);    [ if Jerrod doesn't have the Bible yet  if (!has("Bible"))    {    [ add the reading man as an object    animate.obj(oReader);    set.view(oReader, vw.JungleArt_3);    set.loop(oReader, 3);    set.cel(oReader, 0);    [ near the tree in the center    position(oReader, 99, 91);    ignore.blocks(oReader);    draw(oReader);    stop.cycling(oReader);    }  else    {    [ otherwise, add the reader as an overlay    add.to.pic(vw.JungleArt_3, 4, 0, 99, 91, 0, 0);    }      [ if this is first time through this room  if (!isset(PastAnts))    {    [ set flag    set(PastAnts);    [ add the guides, mules, and other travelers        [ guide #1    animate.obj(oGuide1);    set.view(oGuide1, vw.JungleGuide);    set.loop(oGuide1, 1);    position(oGuide1, 152, 43);    draw(oGuide1);    move.obj(oGuide1, 123, 43, 1, fGuide1Moved);    vGuide1Status = 1;    [ mule #1    animate.obj(oMule1);    set.view(oMule1, vw.JungleMule);    set.loop(oMule1, 1);    position(oMule1, 140, 43);    [ guide #2    animate.obj(oGuide2);    set.view(oGuide2, vw.JungleGuide);    set.loop(oGuide2, 1);    position(oGuide2, 152, 43);    [ mule #2    animate.obj(oMule2);    set.view(oMule2, vw.JungleMule);    set.loop(oMule2, 1);    position(oMule2, 140, 43);    [ traveler #1    animate.obj(oTraveler1);    set.view(oTraveler1, vw.Traveler1);    set.loop(oTraveler1, 1);    position(oTraveler1, 152, 43);    [ traveler #2    animate.obj(oTraveler2);    set.view(oTraveler2, vw.Traveler2);    set.loop(oTraveler2, 1);    position(oTraveler2, 152, 43);    [ traveler #3    animate.obj(oTraveler3);    set.view(oTraveler3, vw.Traveler3);    set.loop(oTraveler3, 1);    position(oTraveler3, 152, 43);    }      [ Jerrod, in his Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);  [ position on right side of screen (but don't draw yet)  position(ego, 150, 43);    [ UNLESS..... if revisiting (i.e. coming from  [ rm.ThickJungle)  if (previousRoom == rm.ThickJungle)    {    [ position on bottom/right    position(ego, 150, 158);    set.loop(ego, 1);    [ and add ego to screen now    draw(ego);    egoDir = STOPPED;    }      [ ant swarm #1; don't draw yet  animate.obj(oAntSwarm1);  set.view(oAntSwarm1, vw.JungleArt_3);  set.loop(oAntSwarm1, 0);  fix.loop(oAntSwarm1);  set.priority(oAntSwarm1, 11);  position(oAntSwarm1, 150, 155);  ignore.blocks(oAntSwarm1);  ignore.objs(oAntSwarm1);    [ ant swarm #2; don't draw yet  animate.obj(oAntSwarm2);  set.view(oAntSwarm2, vw.JungleArt_3);  set.loop(oAntSwarm2, 0);  fix.loop(oAntSwarm2);  set.priority(oAntSwarm2, 11);  position(oAntSwarm2, 150, 155);  ignore.blocks(oAntSwarm2);  ignore.objs(oAntSwarm2);    [ ant swarm #3; don't draw yet  animate.obj(oAntSwarm3);  set.view(oAntSwarm3, vw.JungleArt_3);  set.loop(oAntSwarm3, 0);  fix.loop(oAntSwarm3);  set.priority(oAntSwarm3, 11);  position(oAntSwarm3, 150, 155);  ignore.blocks(oAntSwarm3);  ignore.objs(oAntSwarm3);    [ ant swarm #4; don't draw yet  animate.obj(oAntSwarm4);  set.view(oAntSwarm4, vw.JungleArt_3);  set.loop(oAntSwarm4, 0);  fix.loop(oAntSwarm4);  set.priority(oAntSwarm4, 11);  position(oAntSwarm4, 150, 155);  ignore.blocks(oAntSwarm4);  ignore.objs(oAntSwarm4);    [ ant swarm #5; don't draw yet  animate.obj(oAntSwarm5);  set.view(oAntSwarm5, vw.JungleArt_3);  set.loop(oAntSwarm5, 0);  fix.loop(oAntSwarm5);  set.priority(oAntSwarm5, 11);  position(oAntSwarm5, 91, 142);  ignore.blocks(oAntSwarm5);  ignore.objs(oAntSwarm5);    [ ant swarm #6; don't draw yet  animate.obj(oAntSwarm6);  set.view(oAntSwarm6, vw.JungleArt_3);  set.loop(oAntSwarm6, 0);  fix.loop(oAntSwarm6);  set.priority(oAntSwarm6, 11);  position(oAntSwarm6, 91, 142);  ignore.blocks(oAntSwarm6);  ignore.objs(oAntSwarm6);    [ ant swarm #7; don't draw yet  animate.obj(oAntSwarm7);  set.view(oAntSwarm7, vw.JungleArt_3);  set.loop(oAntSwarm7, 0);  fix.loop(oAntSwarm7);  set.priority(oAntSwarm7, 11);  position(oAntSwarm7, 91, 142);  ignore.blocks(oAntSwarm7);  ignore.objs(oAntSwarm7);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod doesn't have the Bibleif (!has("Bible"))  {  [ reading man will occasionally flip pages    [ pick a random number  random(0, 64, vRndNum);  [ 5 in 65 chance he turns a page  if (vRndNum < 5)    {    [ start at first cel    set.cel(oReader, 0);    [ and go to end of loop    end.of.loop(oReader, DoneNoAction);    }  }  [ a use timer to add rest of caravan objects[ if guide #1 is moving and timer is <200if (vGuide1Status > 0 && vTimer < 200)  {  [ increment timer  ++vTimer;  if (vTimer == 20)    {    [ mule #1 appears    draw(oMule1);    move.obj(oMule1, 123, 43, 1, fMule1Moved);    vMule1Status = 1;    }  if (vTimer == 32)    {    [ guide #2 appears    draw(oGuide2);    move.obj(oGuide2, 123, 43, 1, fGuide2Moved);    vGuide2Status = 1;    }  if (vTimer == 52)    {    [ mule #2 appears    draw(oMule2);    move.obj(oMule2, 123, 43, 1, fMule2Moved);    vMule2Status = 1;    }  if (vTimer == 65)    {    [ traveler #1 appears    draw(oTraveler1);    move.obj(oTraveler1, 123, 43, 1, fTraveler1Moved);    vTraveler1Status = 1;    }  if (vTimer == 78)    {    [ traveler #2 appears    draw(oTraveler2);    move.obj(oTraveler2, 123, 43, 1, fTraveler2Moved);    vTraveler2Status = 1;    }  if (vTimer == 91)    {    [ traveller #3 appears    draw(oTraveler3);    move.obj(oTraveler3, 123, 43, 1, fTraveler3Moved);    vTraveler3Status = 1;    }  if (vTimer == 134)    {    [ Jerrod appears    set.loop(ego, 1);    egoDir = STOPPED;    draw(ego);        [ if Jerrod is due to die from a disease    if ((CurrentTripTime == vMosquitoTime ||         CurrentTripTime == vCholeraTime ||         CurrentTripTime == vYellowFeverTime ||         CurrentTripTime == vDysenteryTime))      {      [ use sick view      set.view(ego, vw.SickJerrodNY);      [ mosquitoes are the only thing that can actually kill      [ Jerrod in this room      if (CurrentTripTime == vMosquitoTime)        {        print("You are not feeling well. Every inch of exposed skin is covered "              "with mosquito bites. You have the chills, a fever and are "              "sweating profusely!");        }              [ this can never happen; it may have been an option       [ at one time, but apparently it was removed- this      [ code block should have also been removed      if (CurrentTripTime == vCholeraTime)        {        print("The jungle is taking its toll on you. You are feeling nauseous, "              "your limbs are cramping badly, and, despite the moist "              "surroundings, you are extremely dehydrated.");        }              [ this can never happen; it may have been an option       [ at one time, but apparently it was removed- this      [ code block should have also been removed      if (CurrentTripTime == vYellowFeverTime)        {        print("Your physical well-being has been weighing heavily on your mind "              "lately. Your skin has a strange, yellow tinge and your tummy is "              "upset. The natives say it may not go well for you.");        }              [ this can never happen; it may have been an option       [ at one time, but apparently it was removed- this      [ code block should have also been removed      if (CurrentTripTime == vDysenteryTime)        {        print("Let's just say you aren't feeling well. You don't even want to "              "know what your symptoms are!");        }      }    }  }  [ **************************[ manage guide #1[ **************************[ when guide #1 gets to first pointif (isset(fGuide1Moved) && vGuide1Status == 1)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oGuide1, 106, 50, 1, fGuide1Moved);  }  [ when guide #1 gets to second pointif (isset(fGuide1Moved) && vGuide1Status == 2)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oGuide1, 87, 55, 1, fGuide1Moved);  }  [ when guide #1 gets to third pointif (isset(fGuide1Moved) && vGuide1Status == 3)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oGuide1, 87, 55, 1, fGuide1Moved);  }[ when guide #1 gets to fourth pointif (isset(fGuide1Moved) && vGuide1Status == 4)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 5;  [ continue moving down the upper path  move.obj(oGuide1, 63, 63, 1, fGuide1Moved);  }  [ when guide #1 gets to fifth pointif (isset(fGuide1Moved) && vGuide1Status == 5)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 6;  [ move further along; almost to the turn  move.obj(oGuide1, 23, 67, 1, fGuide1Moved);  }  [ when guide #1 gets to sixth pointif (isset(fGuide1Moved) && vGuide1Status == 6)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 7;  [ move to left edge; at the turn  move.obj(oGuide1, 6, 72, 1, fGuide1Moved);  }  [ when guide #1 gets to seventh pointif (isset(fGuide1Moved) && vGuide1Status == 7)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 8;  [ move around the corner, down toward the lower path  move.obj(oGuide1, 0, 98, 1, fGuide1Moved);  }  [ when guide #1 gets to eighth pointif (isset(fGuide1Moved) && vGuide1Status == 8)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 9;  [ move to right, along start of lower path  move.obj(oGuide1, 15, 117, 1, fGuide1Moved);  }  [ when guide #1 gets to ninth pointif (isset(fGuide1Moved) && vGuide1Status == 9)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 10;  [ continue moving right along bottom path  move.obj(oGuide1, 61, 145, 1, fGuide1Moved);  }  [ when guide #1 gets to tenth pointif (isset(fGuide1Moved) && vGuide1Status == 10)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 11;  [ move right to halfway point along lower path  move.obj(oGuide1, 87, 154, 1, fGuide1Moved);  }  [ when guide #1 gets to eleventh pointif (isset(fGuide1Moved) && vGuide1Status == 11)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 12;  [ last move to right edge  move.obj(oGuide1, 152, 160, 1, fGuide1Moved);  }  [ when guide #1 reaches right edgeif (isset(fGuide1Moved) && vGuide1Status == 12)  {  [ guide #1 is done; remove him from screen  reset(fGuide1Moved);  vGuide1Status = 13;  erase(oGuide1);  }  [ **************************[ manage mule #1[ **************************[ when mule #1 gets to first pointif (isset(fMule1Moved) && vMule1Status == 1)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oMule1, 106, 50, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 2)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oMule1, 87, 55, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 3)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oMule1, 87, 55, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 4)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 5;  [ continue moving down the upper path  move.obj(oMule1, 63, 63, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 5)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 6;  [ move further along; almost to the turn  move.obj(oMule1, 23, 67, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 6)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 7;  [ move to left edge; at the turn  move.obj(oMule1, 6, 72, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 7)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 8;  [ move around the corner, down toward the lower path  move.obj(oMule1, 0, 98, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 8)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 9;  [ move to right, along start of lower path  move.obj(oMule1, 15, 117, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 9)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 10;  [ continue moving right along bottom path  move.obj(oMule1, 61, 145, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 10)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 11;  [ move right to halfway point along lower path  move.obj(oMule1, 87, 154, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 11)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 12;  [ last move to right edge  move.obj(oMule1, 152, 160, 1, fMule1Moved);  }[ when mule #1 gets to second pointif (isset(fMule1Moved) && vMule1Status == 12)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 13;  [ mule #1 is done; remove him from screen  erase(oMule1);  }[ **************************[ manage guide #2[ **************************[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 1)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oGuide2, 106, 50, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 2)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oGuide2, 87, 55, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 3)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oGuide2, 87, 55, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 4)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 5;  [ continue moving down the upper path  move.obj(oGuide2, 63, 63, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 5)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 6;  [ move further along; almost to the turn  move.obj(oGuide2, 23, 67, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 6)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 7;  [ move to left edge; at the turn  move.obj(oGuide2, 6, 72, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 7)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 8;  [ move around the corner, down toward the lower path  move.obj(oGuide2, 0, 98, 1, fGuide2Moved);  }  [ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 8)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 9;  [ move to right, along start of lower path  move.obj(oGuide2, 15, 117, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 9)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 10;  [ continue moving right along bottom path  move.obj(oGuide2, 61, 145, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 10)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 11;  [ move right to halfway point along lower path  move.obj(oGuide2, 87, 154, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 11)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 12;  [ last move to right edge  move.obj(oGuide2, 152, 160, 1, fGuide2Moved);  }[ when guide #2 gets to second pointif (isset(fGuide2Moved) && vGuide2Status == 12)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 13;  [ guide #2 is done; remove him from screen  erase(oGuide2);  }[ **************************[ manage mule #2[ **************************[ when mule #2 gets to first pointif (isset(fMule2Moved) && vMule2Status == 1)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oMule2, 106, 50, 1, fMule2Moved);  }[ when mule #2 gets to second pointif (isset(fMule2Moved) && vMule2Status == 2)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oMule2, 87, 55, 1, fMule2Moved);  }[ when mule #2 gets to third pointif (isset(fMule2Moved) && vMule2Status == 3)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oMule2, 87, 55, 1, fMule2Moved);  }[ when mule #2 gets to fourth pointif (isset(fMule2Moved) && vMule2Status == 4)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 5;  [ continue moving down the upper path  move.obj(oMule2, 63, 63, 1, fMule2Moved);  }[ when mule #2 gets to fifth pointif (isset(fMule2Moved) && vMule2Status == 5)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 6;  [ move further along; almost to the turn  move.obj(oMule2, 23, 67, 1, fMule2Moved);  }[ when mule #2 gets to sixth pointif (isset(fMule2Moved) && vMule2Status == 6)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 7;  [ move to left edge; at the turn  move.obj(oMule2, 6, 72, 1, fMule2Moved);  }[ when mule #2 gets to seventh pointif (isset(fMule2Moved) && vMule2Status == 7)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 8;  [ move around the corner, down toward the lower path  move.obj(oMule2, 0, 98, 1, fMule2Moved);  }[ when mule #2 gets to eighth pointif (isset(fMule2Moved) && vMule2Status == 8)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 9;  [ move to right, along start of lower path  move.obj(oMule2, 15, 117, 1, fMule2Moved);  }[ when mule #2 gets to ninth pointif (isset(fMule2Moved) && vMule2Status == 9)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 10;  [ continue moving right along bottom path  move.obj(oMule2, 61, 145, 1, fMule2Moved);  }[ when mule #2 gets to tenth pointif (isset(fMule2Moved) && vMule2Status == 10)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 11;  [ move right to halfway point along lower path  move.obj(oMule2, 87, 154, 1, fMule2Moved);  }[ when mule #2 gets to eleventh pointif (isset(fMule2Moved) && vMule2Status == 11)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 12;  [ last move to right edge  move.obj(oMule2, 152, 160, 1, fMule2Moved);  }[ when mule #2 gets to last pointif (isset(fMule2Moved) && vMule2Status == 12)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 13;  [ mule #2 is done; remove him from screen  erase(oMule2);  }[ **************************[ manage traveler #1[ **************************[ when traveler #1 gets to first pointif (isset(fTraveler1Moved) && vTraveler1Status == 1)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oTraveler1, 106, 50, 1, fTraveler1Moved);  }[ when traveler #1 gets to second pointif (isset(fTraveler1Moved) && vTraveler1Status == 2)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oTraveler1, 87, 55, 1, fTraveler1Moved);  }[ when traveler #1 gets to third pointif (isset(fTraveler1Moved) && vTraveler1Status == 3)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oTraveler1, 87, 55, 1, fTraveler1Moved);  }[ when traveler #1 gets to fourth pointif (isset(fTraveler1Moved) && vTraveler1Status == 4)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 5;  [ continue moving down the upper path  move.obj(oTraveler1, 63, 63, 1, fTraveler1Moved);  }[ when traveler #1 gets to fifth pointif (isset(fTraveler1Moved) && vTraveler1Status == 5)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 6;  [ move further along; almost to the turn  move.obj(oTraveler1, 23, 67, 1, fTraveler1Moved);  }[ when traveler #1 gets to sixth pointif (isset(fTraveler1Moved) && vTraveler1Status == 6)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 7;  [ move to left edge; at the turn  move.obj(oTraveler1, 6, 72, 1, fTraveler1Moved);  }[ when traveler #1 gets to seventh pointif (isset(fTraveler1Moved) && vTraveler1Status == 7)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 8;  [ move around the corner, down toward the lower path  move.obj(oTraveler1, 0, 98, 1, fTraveler1Moved);  }[ when traveler #1 gets to eighth pointif (isset(fTraveler1Moved) && vTraveler1Status == 8)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 9;  [ move to right, along start of lower path  move.obj(oTraveler1, 15, 117, 1, fTraveler1Moved);  }[ when traveler #1 gets to ninth pointif (isset(fTraveler1Moved) && vTraveler1Status == 9)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 10;  [ continue moving right along bottom path  move.obj(oTraveler1, 61, 145, 1, fTraveler1Moved);  }[ when traveler #1 gets to tenth pointif (isset(fTraveler1Moved) && vTraveler1Status == 10)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 11;  [ move right to halfway point along lower path  move.obj(oTraveler1, 87, 154, 1, fTraveler1Moved);  }[ when traveler #1 gets to eleventh pointif (isset(fTraveler1Moved) && vTraveler1Status == 11)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 12;  [ last move to right edge  move.obj(oTraveler1, 152, 160, 1, fTraveler1Moved);  }[ when traveler #1 gets to last pointif (isset(fTraveler1Moved) && vTraveler1Status == 12)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 13;  [ traveler #1 is done; remove him from screen  erase(oTraveler1);  }[ **************************[ manage traveler #2[ **************************[ when traveler #2 gets to first pointif (isset(fTraveler2Moved) && vTraveler2Status == 1)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oTraveler2, 106, 50, 1, fTraveler2Moved);  }[ when traveler #2 gets to second pointif (isset(fTraveler2Moved) && vTraveler2Status == 2)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oTraveler2, 87, 55, 1, fTraveler2Moved);  }[ when traveler #2 gets to third pointif (isset(fTraveler2Moved) && vTraveler2Status == 3)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oTraveler2, 87, 55, 1, fTraveler2Moved);  }[ when traveler #2 gets to fourth pointif (isset(fTraveler2Moved) && vTraveler2Status == 4)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 5;  [ continue moving down the upper path  move.obj(oTraveler2, 63, 63, 1, fTraveler2Moved);  }[ when traveler #2 gets to fifth pointif (isset(fTraveler2Moved) && vTraveler2Status == 5)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 6;  [ move further along; almost to the turn  move.obj(oTraveler2, 23, 67, 1, fTraveler2Moved);  }[ when traveler #2 gets to sixth pointif (isset(fTraveler2Moved) && vTraveler2Status == 6)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 7;  [ move to left edge; at the turn  move.obj(oTraveler2, 6, 72, 1, fTraveler2Moved);  }[ when traveler #2 gets to seventh pointif (isset(fTraveler2Moved) && vTraveler2Status == 7)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 8;  [ move around the corner, down toward the lower path  move.obj(oTraveler2, 0, 98, 1, fTraveler2Moved);  }[ when traveler #2 gets to eighth pointif (isset(fTraveler2Moved) && vTraveler2Status == 8)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 9;  [ move to right, along start of lower path  move.obj(oTraveler2, 15, 117, 1, fTraveler2Moved);  }[ when traveler #2 gets to ninth pointif (isset(fTraveler2Moved) && vTraveler2Status == 9)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 10;  [ continue moving right along bottom path  move.obj(oTraveler2, 61, 145, 1, fTraveler2Moved);  }[ when traveler #2 gets to tenth pointif (isset(fTraveler2Moved) && vTraveler2Status == 10)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 11;  [ move right to halfway point along lower path  move.obj(oTraveler2, 87, 154, 1, fTraveler2Moved);  }[ when traveler #2 gets to eleventh pointif (isset(fTraveler2Moved) && vTraveler2Status == 11)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 12;  [ last move to right edge  move.obj(oTraveler2, 152, 160, 1, fTraveler2Moved);  }[ when traveler #2 gets to last pointif (isset(fTraveler2Moved) && vTraveler2Status == 12)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 13;  [ traveler #2 is done; remove him from screen  erase(oTraveler2);  }[ **************************[ manage traveler #3[ **************************[ when traveler #3 gets to first pointif (isset(fTraveler3Moved) && vTraveler3Status == 1)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 2;  [ move to next point, third of the way down the upper path  move.obj(oTraveler3, 106, 50, 1, fTraveler3Moved);  }[ when traveler #3 gets to second pointif (isset(fTraveler3Moved) && vTraveler3Status == 2)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 3;  [ move to next point, halfway down the upper path, behind  [ the large tree  move.obj(oTraveler3, 87, 55, 1, fTraveler3Moved);  }[ when traveler #3 gets to third pointif (isset(fTraveler3Moved) && vTraveler3Status == 3)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 4;  [ move to same point? this is a bug; it has no bad effect,  [ because the flag gets set immediately in the next cycle  move.obj(oTraveler3, 87, 55, 1, fTraveler3Moved);  }[ when traveler #3 gets to fourth pointif (isset(fTraveler3Moved) && vTraveler3Status == 4)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 5;  [ continue moving down the upper path  move.obj(oTraveler3, 63, 63, 1, fTraveler3Moved);  }[ when traveler #3 gets to fifth pointif (isset(fTraveler3Moved) && vTraveler3Status == 5)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 6;  [ move further along; almost to the turn  move.obj(oTraveler3, 23, 67, 1, fTraveler3Moved);  }[ when traveler #3 gets to sixth pointif (isset(fTraveler3Moved) && vTraveler3Status == 6)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 7;  [ move to left edge; at the turn  move.obj(oTraveler3, 6, 72, 1, fTraveler3Moved);  }[ when traveler #3 gets to seventh pointif (isset(fTraveler3Moved) && vTraveler3Status == 7)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 8;  [ move around the corner, down toward the lower path  move.obj(oTraveler3, 0, 98, 1, fTraveler3Moved);  }[ when traveler #3 gets to eighth pointif (isset(fTraveler3Moved) && vTraveler3Status == 8)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 9;  [ move to right, along start of lower path  move.obj(oTraveler3, 15, 117, 1, fTraveler3Moved);  }[ when traveler #3 gets to ninth pointif (isset(fTraveler3Moved) && vTraveler3Status == 9)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 10;  [ continue moving right along bottom path  move.obj(oTraveler3, 61, 145, 1, fTraveler3Moved);  }[ when traveler #3 gets to tenth pointif (isset(fTraveler3Moved) && vTraveler3Status == 10)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 11;  [ move right to halfway point along lower path  move.obj(oTraveler3, 87, 154, 1, fTraveler3Moved);  }[ when traveler #3 gets to eleventh pointif (isset(fTraveler3Moved) && vTraveler3Status == 11)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 12;  [ last move to right edge  move.obj(oTraveler3, 152, 160, 1, fTraveler3Moved);  }[ when traveler #3 gets to last pointif (isset(fTraveler3Moved) && vTraveler3Status == 12)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 13;  [ traveler #3 is done; remove him from screen  erase(oTraveler3);  }  [ there are two groups of ant swarms - [ #1, #2, #3, #4 on right, and #5, #6, #7 on left[ if Jerrod passes by the vine, and ants haven't [ attacked yetif (posn(ego, 111, 132, 112, 167) && vSwarm1Status == 0)  {  [ begin ant attack from right  vSwarm1Status = 1;    [ prevent Jerrod from leaving area  block(89, 130, 148, 167);  set(fSndDone);  }  [ if ants are attacking, and sound is not playingif (vSwarm1Status != 0 && isset(fSndDone))  {  [ play it again (don't need to reset flag; it happens  [ automatically when sound() command is called)  reset(fSndDone);  sound(m.Chase, fSndDone);  }  [ if Jerrod is moving to leftif ((egoDir == LEFT ||     egoDir == UP_LEFT ||     egoDir == DOWN_LEFT))  {  [ if ant attack has started, and swarm #5 hasn't activated  [ yet  if (vSwarm1Status > 0 && vSwarm5Status == 0)    {    [ begin attack from left    vSwarm5Status = 1;    }  }  [ if ant attack has startedif (vSwarm1Status == 1)  {  [ advance to next stage of ant attack  vSwarm1Status = 2;  [ reset guide 1 status (not sure why- by the time Jerrod  [ can reach this point, the guide is long gone)  vGuide1Status = 0;    [ initiate main ant attack sequence  vAntAttackStatus = AA_BEGIN_ATTACK;    [ reset the timer  vTimer = 0;  [ draw ants on screen  draw(oAntSwarm1);  [ and they move down from their hiding place  move.obj(oAntSwarm1, 150, 167, 1, fSwarm1Moved);  }  [ after swarm #1 reaches bottomif (isset(fSwarm1Moved) && vSwarm1Status == 2)  {  [ advance to next stage of ant attack  reset(fSwarm1Moved);  vSwarm1Status = 3;  [ move swarm #1 to the left  move.obj(oAntSwarm1, 140, 167, 1, fSwarm1Moved);    [ second swarm becomes active  vSwarm2Status = 1;  [ fifth swarm also becomes active if not already  if (vSwarm5Status == 0)    {    vSwarm5Status = 1;    }  }  [ when swarm #1 reaches point 3if (isset(fSwarm1Moved) && vSwarm1Status == 3)  {  [ advance to next stage   reset(fSwarm1Moved);  vSwarm1Status = 4;  [ move to further to left  move.obj(oAntSwarm1, 126, 167, 1, fSwarm1Moved);  }  [ when swarm #1 reaches point 4if (isset(fSwarm1Moved) && vSwarm1Status == 4)  {  [ advance to next stage  reset(fSwarm1Moved);  vSwarm1Status = 5;  [ keep moving ants to left  move.obj(oAntSwarm1, 118, 165, 1, fSwarm1Moved);  }  [ when swarm #2 is activatedif (vSwarm2Status == 1)  {  [ advance it to stage 2  vSwarm2Status = 2;  [ draw it on screen  draw(oAntSwarm2);  [ move it down to the path  move.obj(oAntSwarm2, 150, 167, 1, fSwarm2Moved);  }  [ when swarm #2 gets to the pathif (isset(fSwarm2Moved) && vSwarm2Status == 2)  {  [ advance to next stage  reset(fSwarm2Moved);  vSwarm2Status = 3;  [ move it to the left  move.obj(oAntSwarm2, 140, 167, 1, fSwarm2Moved);  [ activate third swarm  vSwarm3Status = 1;  }  [ when swarm #2 reaches point 3if (isset(fSwarm2Moved) && vSwarm2Status == 3)  {  [ advance to next stage  reset(fSwarm2Moved);  vSwarm2Status = 4;  [ move it further to left  move.obj(oAntSwarm2, 128, 167, 1, fSwarm2Moved);  }  [ when swarm #3 is activatedif (vSwarm3Status == 1)  {  [ advance to next stage  vSwarm3Status = 2;  [ draw it on screen  draw(oAntSwarm3);  [ move it down to the path  move.obj(oAntSwarm3, 150, 167, 1, fSwarm3Moved);  }  [ when swarm #3 moves down to the pathif (isset(fSwarm3Moved) && vSwarm3Status == 2)  {  [ advance to next stage  reset(fSwarm3Moved);  vSwarm3Status = 3;  [ move it to left  move.obj(oAntSwarm3, 139, 167, 1, fSwarm3Moved);  [ activate swarm #4  vSwarm4Status = 1;  }  [ when swarm #4 is activeif (vSwarm4Status == 1)  {  [ advance to next stage  vSwarm4Status = 2;  [ add it to screen  draw(oAntSwarm4);  [ move it down to the path  move.obj(oAntSwarm4, 150, 167, 1, fSwarm4Moved);  }  [ when swarm #4 gets to the pathif (isset(fSwarm4Moved) && vSwarm4Status == 2)  {  [ advance to next stage  reset(fSwarm4Moved);  vSwarm4Status = 3;  [ another bug- swarm is already at this location  move.obj(oAntSwarm4, 150, 167, 1, fSwarm4Moved);  }  [ when swarm #5 is activatedif (vSwarm5Status == 1)  {  [ advance to next stage  vSwarm5Status = 2;  [ draw it on screen  draw(oAntSwarm5);  [ move it to the path  move.obj(oAntSwarm5, 91, 154, 1, fSwarm5Moved);  }  [ when swarm #5 gets to the pathif (isset(fSwarm5Moved) && vSwarm5Status == 2)  {  [ advance to next stage  reset(fSwarm5Moved);  vSwarm5Status = 3;  [ move to the right a bit  move.obj(oAntSwarm5, 94, 154, 1, fSwarm5Moved);  [ activate swarm #6  vSwarm6Status = 1;  }  [ when swarm #5 gets to point 3if (isset(fSwarm5Moved) && vSwarm5Status == 3)  {  [ advance to next stage  reset(fSwarm5Moved);  vSwarm5Status = 4;  [ continue moving to right  move.obj(oAntSwarm5, 98, 158, 1, fSwarm5Moved);  }  [ when swarm #5 gets to point 4if (isset(fSwarm5Moved) && vSwarm5Status == 4)  {  [ advance to next stage  reset(fSwarm5Moved);  vSwarm5Status = 5;  [ continue moving to the right  move.obj(oAntSwarm5, 103, 158, 1, fSwarm5Moved);  }  [ when swarm #5 gets to point 5if (isset(fSwarm5Moved) && vSwarm5Status == 5)  {  [ advance to next stage  reset(fSwarm5Moved);  vSwarm5Status = 6;  [ continue moving to the right  move.obj(oAntSwarm5, 108, 164, 1, fSwarm5Moved);  }  [ when swarm #6 gets activatedif (vSwarm6Status == 1)  {  [ advance to next stage  vSwarm6Status = 2;  draw(oAntSwarm6);  [ move down to the path  move.obj(oAntSwarm6, 91, 154, 1, fSwarm6Moved);  }  [ when swarm #6 gets to pathif (isset(fSwarm6Moved) && vSwarm6Status == 2)  {  [ advance to next stage  reset(fSwarm6Moved);  vSwarm6Status = 3;  [ move swarm to the right  move.obj(oAntSwarm6, 94, 154, 1, fSwarm6Moved);  [ activate swarm #7  vSwarm7Status = 1;  }  [ when swarm #6 gets to point 3if (isset(fSwarm6Moved) && vSwarm6Status == 3)  {  [ advance to next stage  reset(fSwarm6Moved);  vSwarm6Status = 4;  [ continue moving swarm to right  move.obj(oAntSwarm6, 98, 162, 1, fSwarm6Moved);  }  [ when swarm #7 gets activatedif (vSwarm7Status == 1)  {  [ advance to next stage  vSwarm7Status = 2;  [ add it to screen  draw(oAntSwarm7);  [ move it to the path  move.obj(oAntSwarm7, 91, 154, 1, fSwarm7Moved);  }  [ when swarm #7 gets to the pathif (isset(fSwarm7Moved) && vSwarm7Status == 2)  {  [ advance to next stage  reset(fSwarm7Moved);  vSwarm7Status = 3;  [ move swarm to the right  move.obj(oAntSwarm7, 95, 154, 1, fSwarm7Moved);  }  [ when swarm #7 gets to point 3if (isset(fSwarm7Moved) && vSwarm7Status == 3)  {  [ advance to next stage  reset(fSwarm7Moved);  vSwarm7Status = 4;  [ move swarm down a bit  move.obj(oAntSwarm7, 95, 158, 1, fSwarm7Moved);  }  [ when swarm #7 gets to point 4if (isset(fSwarm7Moved) && vSwarm7Status == 4)  {  [ advance to next stage  reset(fSwarm7Moved);  vSwarm7Status = 5;  [ move swarm further to the right  move.obj(oAntSwarm7, 88, 160, 1, fSwarm7Moved);  }  [ by the time the ants get activated, the caravan is gone[ from the screen; use mule status variables for distance[ calculations[ if swarm is set to disperseif ((vAntAttackStatus == AA_LEAVING_1 ||     vAntAttackStatus == AA_LEAVING_2))  {  [ increment timer  ++vTimer;  [ at various cycle times, the swarms will go back into  [ the bushes    [ swarm #1 leaves after 220 cycles  if (vTimer == 220)    {    [ used the swarm's current position    get.posn(oAntSwarm1, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 150;    vGuide1Status = 0;    move.obj.v(oAntSwarm1,  vMule1Status, vMule2Status, vGuide1Status, fSwarm1Moved);    [ change status to show swarm is gone    vSwarm1Status = 10;    }    [ swarm #2 leaves after 190 cycles  if (vTimer == 190)    {    [ advance main attack status to show swarm is mostly gone    vAntAttackStatus = AA_LEAVING_2;    [ use the swarm's current position    get.posn(oAntSwarm2, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 150;    vGuide1Status = 0;    move.obj.v(oAntSwarm2, vMule1Status, vMule2Status, vGuide1Status, fSwarm2Moved);    [ change status to show swarm is gone    vSwarm2Status = 10;    }      [ swarm #3 leaves after 240 cycles  if (vTimer == 240)    {    [ reset timer    vTimer = 0;    [ use the swarm's current position    get.posn(oAntSwarm3, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 150;    vGuide1Status = 0;    move.obj.v(oAntSwarm3, vMule1Status, vMule2Status, vGuide1Status, fSwarm3Moved);    [ change status to show swarm is gone    vSwarm3Status = 10;    }      [ swarm #4 leaves after 210 cycles  if (vTimer == 210)    {    [ use the swarm's current position    get.posn(oAntSwarm4, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 150;    vGuide1Status = 0;    move.obj.v(oAntSwarm4, vMule1Status, vMule2Status, vGuide1Status, fSwarm4Moved);    [ change status to show swarm is gone    vSwarm4Status = 10;    }      [ swarm #5 leaves after 205 cycles  if (vTimer == 205)    {    [ use swarm's current position    get.posn(oAntSwarm5, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 145;    vGuide1Status = 0;    move.obj.v(oAntSwarm5, vMule1Status, vMule2Status, vGuide1Status, fSwarm5Moved);    [ change status to show swarm is gone    vSwarm5Status = 10;    }    [ swarm #6 leaves after 215 cycles  if (vTimer == 215)    {    [ use swarm's current position     get.posn(oAntSwarm6, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 142;    vGuide1Status = 0;    move.obj.v(oAntSwarm6, vMule1Status, vMule2Status, vGuide1Status, fSwarm6Moved);    [ change status to show swarm is gone    vSwarm6Status = 10;    }      [ swarm #7 leaves after 225 cycles  if (vTimer == 225)    {    [ use swarm's current position    get.posn(oAntSwarm7, vMule1Status, vMule2Status);    [ move it up (into the bushes)    vMule2Status = 142;    vGuide1Status = 0;    move.obj.v(oAntSwarm7, vMule1Status, vMule2Status, vGuide1Status, fSwarm7Moved);    [ change status to show swarm is gone    vSwarm7Status = 10;    }  }  [ when swarm #1 is goneif (isset(fSwarm1Moved) && vSwarm1Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm1Moved);  vSwarm1Status = 0;  erase(oAntSwarm1);  }  [ when swarm #2 is goneif (isset(fSwarm2Moved) && vSwarm2Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm2Moved);  vSwarm2Status = 0;  erase(oAntSwarm2);  }  [ when swarm #3 is goneif (isset(fSwarm3Moved) && vSwarm3Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm3Moved);  vSwarm3Status = 0;  erase(oAntSwarm3);  [ this is the last swarm to leave;  [ it's now completely safe  vAntAttackStatus = AA_GONE;  }[ when swarm #4 is goneif (isset(fSwarm4Moved) && vSwarm4Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm4Moved);  vSwarm4Status = 0;  erase(oAntSwarm4);  }[ when swarm #5 is goneif (isset(fSwarm5Moved) && vSwarm5Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm5Moved);  vSwarm5Status = 0;  erase(oAntSwarm5);  }[ when swarm #6 is goneif (isset(fSwarm6Moved) && vSwarm6Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm6Moved);  vSwarm6Status = 0;  erase(oAntSwarm6);  }[ when swarm #7 is goneif (isset(fSwarm7Moved) && vSwarm7Status == 10)  {  [ reset it to initial state and remove it  reset(fSwarm7Moved);  vSwarm7Status = 0;  erase(oAntSwarm7);  }  [ if ant attack has begunif (vAntAttackStatus == AA_BEGIN_ATTACK)  {  [ increment timer  ++vTimer;  [ after 20 cycles  if (vTimer == 20)    {    [ warn player ants are coming    print.at("Oh no! It can't be!! Not the dreaded jungle ants!!!", 3, 6, 30);    }  [ after 40 cycles  if (vTimer == 40)    {    [ reset the timer    vTimer = 0;    [ change ego view to show Jerrod flailing around    set.view(ego, vw.FallingJerrodNY);    [ allow cycling at rest    set(CycleAtRest);    [ and begin cycling     start.cycling(ego);    [ advance to next state    vAntAttackStatus = AA_BITING_1;    print.at("It only takes one of those tiny, vicious creatures to get up your "             "pants leg and you'll be hoppin' like a Panamanian jumping bean!", 3, 6, 30);    }  }  [ after ants begin bitingif (vAntAttackStatus == AA_BITING_1)  {  [ increment timer  ++vTimer;  [ after 50 cycles  if (vTimer == 50)    {    [ reset timer    vTimer = 0;    [ advance to next stage    vAntAttackStatus = AA_BITING_2;    }  }  [ after ants have bitten Jerrod for a few cyclesif (vAntAttackStatus == AA_BITING_2)  {  [ advance to next stage  vAntAttackStatus = AA_BITING_3;  [ Jerrod doesn't flail around anymore  reset(CycleAtRest);  [ he is getting ill from the attack  set.view(ego, vw.SickJerrodNY);  print.at("You can only jump around like that for so long before you become "           "completely exhausted.", 3, 6, 30);  }  [ when ant bites begin to affect Jerrodif (vAntAttackStatus == AA_BITING_3)  {  [ increment timer  ++vTimer;  [ after 40 cycles  if (vTimer == 40)    {    [ reset timer    vTimer = 0;    [ now Jerrod begins dying sequence    vAntAttackStatus = AA_DYING_1;    }  }  [ when Jerrod begins dying sequence if (vAntAttackStatus == AA_DYING_1)  {  [ advance to next stage  vAntAttackStatus = AA_DYING_2;  [ Jerrod is now dying from the ant bites  stop.motion(ego);  set.view(ego, vw.DyingJerrodNY);  set.loop(ego, 0);  fix.loop(ego);  set(CycleAtRest);  set.cel(ego, 0);  print.at("You can fight the ants no longer.", 3, 6, 30);  [ now show Jerrod dying  end.of.loop(ego, fDoneDying);  }  [ after dying sequence is doneif (vAntAttackStatus == AA_DYING_2)  {  [ increment timer  ++vTimer;  [ after 15 cycles  if (vTimer == 15)    {    [ reset timer    vTimer = 0;    [ advance to next stage    vAntAttackStatus = AA_JERROD_DEAD;    [ show view of Jerrod's body being eaten by ants    set.priority(ego, 10);    set.view(ego, vw.JungleArt_3);    set.loop(ego, 1);    set.cel(ego, 0);    reset(CycleAtRest);    stop.cycling(ego);    }  }[ after Jerrod has been dead for a few cyclesif (vAntAttackStatus == AA_JERROD_DEAD)  {  [ increment timer  ++vTimer;  [ after 15 seconds  if (vTimer == 15)    {    [ reset timer    vTimer = 0;    [ advance to next stage    vAntAttackStatus = AA_DEAD_2;    [ show next cel, with more ants on Jerrod's body    set.cel(ego, 1);    }  }  [ after ants swarm Jerrod's dead bodyif (vAntAttackStatus == AA_DEAD_2)  {  [ increment timer  ++vTimer;  [ after 15 seconds  if (vTimer == 15)    {    [ reset timer    vTimer = 0;    [ advance to next stage    vAntAttackStatus = AA_DEAD_3;    [ show next cel; even more ants on Jerrod's body    set.cel(ego, 2);    }  }  [ more ants on Jerrod's dead bodyif (vAntAttackStatus == AA_DEAD_3)  {  [ increment timer  ++vTimer;  [ after 15 cycles  if (vTimer == 15)    {    [ reset timer    vTimer = 0;    [ advance to last stage    vAntAttackStatus = AA_DEAD_4;    [ last cel with ants on Jerrod's body    set.cel(ego, 3);    }  }[ when at last attack stageif (vAntAttackStatus == AA_DEAD_4)  {  [ increment timer  ++vTimer;  [ after 15 cycles  if (vTimer == 15)    {    [ reset timer    vTimer = 0;    [ ant attack is done    vAntAttackStatus = AA_ATTACK_OVER;    [ if any print windows are open, close them    close.window();    [ play death sound    sound(m.Death, DoneNoAction);    [ no more player input    prevent.input();    [ no more ego motion    stop.motion(ego);    [ announce game end    display(22, 0, "What a terrible way to go. These jungle ants are ruthless!");    set(JerrodIsDead);    }  }  [ if Jerrod is in place to jump on vineif (isset(fDoneDying) &&     vAntAttackStatus == AA_READY_TO_JUMP)  {  [ reset movement flag  reset(fDoneDying);  [ advance to next stage  vAntAttackStatus = AA_JUMPING;  [ change view to show Jerrod jumping  up onto the vine  set.view(ego, vw.JungleArt_3);  set.loop(ego, 2);  set.cel(ego, 0);  fix.loop(ego);  set(CycleAtRest);  stop.motion(ego);  end.of.loop(ego, fDoneDying);  [ if not already scored,  if (!isset(ScoreAnts))    {    [ score four points for avoiding the ants    set(ScoreAnts);    currentScore  += 4;    }  }  [ after Jerrod has completed the jump onto the vineif (isset(fDoneDying) && vAntAttackStatus == AA_JUMPING)  {  [ reset the flag  reset(fDoneDying);  [ if swarm #1 is gone  if (vSwarm1Status == 0)    {    [ safe to continue    vAntAttackStatus = AA_GONE;    }  else    {    [ not safe to continue    vAntAttackStatus = AA_LEAVING_1;    }  }[ if Jerrod jumped down, it's safe to continueif (isset(fDoneDying) && vAntAttackStatus == AA_GONE)  {  [ reset the flag  reset(fDoneDying);  [ restore ant attack status to initial state  vAntAttackStatus = AA_NO_ATTACK;  [ reset ego to normal view, with normal cycling behavior  reset(CycleAtRest);  start.motion(ego);  set.view(ego, vw.JerrodNY);  set.loop(ego, 1);  release.loop(ego);  observe.blocks(ego);  unblock();  }  [ if Jerrod is due to die from some other cause (only mosquito[ attack is actually possible)if ((CurrentTripTime == vMosquitoTime ||     CurrentTripTime == vCholeraTime ||     CurrentTripTime == vYellowFeverTime ||     CurrentTripTime == vDysenteryTime))  {  [ after sufficient time has past (and if ants aren't attacking)  if (TripCycles == 120 &&       TripCycles2 == 1 &&       vAntAttackStatus == AA_NO_ATTACK)    {    [ Jerrod begins dying sequence    set.view(ego, vw.DyingJerrodNY);    set.cel(ego, 0);    end.of.loop(ego, fDoneDying);    [ set ant attack status to prevent it from occurring    vAntAttackStatus = 100;    }      [ after Jerrod finishes dying  if (isset(fDoneDying) && vAntAttackStatus == 100)    {    [ reset flag    reset(fDoneDying);    [ advance to next stage    vAntAttackStatus = 101;    stop.motion(ego);    set(CycleAtRest);    [ if Jerrod is dying from cholera, (which is actually    [ not possible in this room)    if (CurrentTripTime == vCholeraTime)      {      EgoHealthStatus = 21;      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      goto(Done);      }    [ if dying from anything else, use the disease logic    call(lgc.DeathDisease);    }  }[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod is by the right edge of the pathif (posn(ego, 152, 151, 153, 167))  {  [ instead of using the ContinueJourney flag, this room  [ handles transition to next room right here in this logic    [ advance trip time  ++CurrentTripTime;  [ reset main cycle counters  TripCycles = 0;  TripCycles2 = 0;  TripCycles3 = 0;  [ move to next jungle scene  new.room(rm.ThickJungle); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ look aroundif ((said("examine", "around") ||     said("examine", "jungle") ||     said("examine")))  {  print("The Spanish road is steep, treacherous, and surrounded by bushes and "        "vines.");  }  [ look plantsif ((said("examine", "plant") ||     said("examine", "bush")))  {  print("Bushes and vines line the road.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water")))  {  print("There is no river right here.");  }  [ climb treeif (said("climb", "forest"))  {  print("You don't want to prolong your stay in this jungle by doing that!");  }  [ look treeif (said("examine", "forest"))  {  print("The jungle has both large and small trees.");  }  [ look upif ((said("examine", "up") ||     said("examine", "sky")))  {  [ if by the vine  if (posn(ego, 113, 130, 139, 167))    {    [ give a clue that vine is important    print("There is a long vine hanging above the road.");    }  else    {    print("Right here, all you notice is the blue Panamanian sky.");    }  }[ look down/look groundif ((said("examine", "down") ||     said("examine", "dirt")))  {  [ if ants are visible (based on ant attack status)  if ((vAntAttackStatus == AA_BEGIN_ATTACK ||       vAntAttackStatus == AA_BITING_1 ||       vAntAttackStatus == AA_BITING_2 ||       vAntAttackStatus == AA_BITING_3 ||       vAntAttackStatus == AA_DYING_1 ||       vAntAttackStatus == AA_DYING_2 ||       vAntAttackStatus == AA_READY_TO_JUMP ||       vAntAttackStatus == AA_JUMPING ||       vAntAttackStatus == AA_LEAVING_1 ||       vAntAttackStatus == AA_LEAVING_2 ||       vAntAttackStatus == AA_GONE))    {    [ if ant swarm #1 is still on screen    if (vSwarm1Status != 0)      {      print("You see a road covered with dreaded jungle ants.");      }    else      {      print("All you notice right now is the rough ground.");      }    }  else    {    print("All you notice right now is the rough ground.");    }  }[ look rockif (said("examine", "rock"))  {  print("The road is lined with rocks.");  }  [ look vineif ((said("examine", "vine", "rol") ||     said("examine", "anyword", "vine")))  {  [ if by the vine  if (posn(ego, 43, 110, 139, 167))    {    print("There is a long vine hanging above the road.");    }  else    {    print("There are many vines in this part of the jungle, but right here you "          "see none that are interesting.");    }  }  [ look swampif (said("examine", "swamp"))  {  print("There's no sign of a swamp right here.");  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("enter", "water")))  {  print("There is no river right here.");  }  [ look boatif (said("examine", "boat"))  {  print("You left that back in Cruces.");  }  [ look manif (said("examine", "boy"))  {  [ if by the man reading the Bible  if (posn(ego, 74, 70, 129, 116))    {    [ if Jerrod already has the Bible    if (has("Bible"))      {      print("A weary traveler is taking a nap under the tree.");      }    else      {      print("The man is resting under the tree reading a book.");      }    }  else    {    [ if the last traveler has gone off screen    if (vTraveler3Status == 13)      {      print("There's a man resting beneath a tree next to the road.");      }    else      {      print("There are others ahead of you on the road. There is also a man "            "resting beneath a tree next to the road.");      }    }  }  [ talk (to anyone)if (said("speak", "rol"))  {  [ if by the man with the Bible  if (posn(ego, 74, 70, 129, 116))    {    [ if Jerrod already has the Bible    if (has("Bible"))      {      [ the man has nothing to say      print("The tired man is taking a nap. Don't disturb him.");      }    else      {      print("The resting man says, \"I've been traveling long and hard. It's "            "time to rest and relax for awhile.\"");      print("The man continues, \"In fact, stranger, you look tired. I wish "            "there was something I could do for you. Well, maybe there is "            "something I can do.\"");      print("\"Here. Take this book. It may be helpful to you. Go ahead, take "            "it,\" says the man.");      print("You gratefully receive it and say, \"Thank you!\"");      [ Jerrod gets the Bible      get("Bible");      [ score seven points      currentScore  += 7;      [ show the reading man with no bible      set.loop(oReader, 4);      sound(s.AddToScore, DoneNoAction);      }    }  else    {    [ if not by the man with Bible and all other travelers    [ have gone off screen    if (vTraveler3Status == 13)      {      print("There are others ahead of you on the road. There is also a man "            "resting beneath a tree next to the road.");      }    else      {      print("The man walking ahead of you says, \"We're in a hurry to get to "            "California. You can take your time if you want to!\"");      }    }  }  [ look grassif (said("examine", "grass"))  {  print("The grass is long and lush from the moist climate.");  }  [ look muleif (said("examine", "donkey"))  {  [ if mules are gone (or haven't come on screen yet)  if ((vMule2Status == 13 || vMule1Status == 0))    {    print("There isn't a mule to look at now.");    }  else    {    print("These mules will carry the provisions.");    }  }  [ look snakeif (said("examine", "boa"))  {  print("It is difficult to see snakes in the jungle. You could be looking "        "right at one and not see it!");  }  [ look road/pathif ((said("examine", "path") ||     said("examine", "anyword", "path")))  {  print("This portion of the road is very steep and rocky.");  }  [ jump/climb vineif ((said("jump") ||     said("jump", "up") ||     said("jump", "vine") ||     said("acquire", "vine") ||     said("acquire", "vine") ||     said("jump", "up", "acquire", "vine") ||     said("jump", "up", "vine") ||     said("climb", "vine") ||     said("climb", "up", "vine") ||     said("hang", "vine") ||     said("hang")))  {  [ if near the vine  if (posn(ego, 121, 132, 131, 167))    {    [ if Jerrod is going to the vine, or already on the vine    if (vAntAttackStatus > 19 && vAntAttackStatus < 25)      {      [ if moving toward the vine, or in process of jumping      if ((vAntAttackStatus == AA_READY_TO_JUMP ||           vAntAttackStatus == AA_JUMPING))        {        print("You are on your way to the vine.");        }      else        {        [ on the vine! hang on!        print("It's all you can do to just hold on!");        }      }    else      {      print("That's a great idea!");      [ depending on position, move Jerrod to the the      [ correct position to jump on the vine      if (posn(ego, 121, 132, 131, 156))        {        move.obj(ego, 126, 155, 0, fDoneDying);        ignore.blocks(ego);        vAntAttackStatus = AA_READY_TO_JUMP;        }      else        {        EgoX = 126;        vGuide1Status = 0;        move.obj.v(ego, EgoX, EgoY, vGuide1Status, fDoneDying);        vAntAttackStatus = AA_READY_TO_JUMP;        }      }    }  else    {    print("That's a great idea, but there's no vine nearby to jump onto!");    }  }  [ jump down/let goif ((said("discard") ||     said("let", "go") ||     said("release", "vine") ||     said("discard", "vine") ||     said("let", "go", "vine") ||     said("release") ||     said("go", "down") ||     said("acquire", "down") ||     said("discard", "down") ||     said("acquire", "off") ||     said("discard", "off")))  {  [ if on the vine  if ((vAntAttackStatus == AA_LEAVING_1 ||       vAntAttackStatus == AA_LEAVING_2 ||       vAntAttackStatus == AA_GONE))    {    [ on the vine with lots of ants    if (vAntAttackStatus == AA_LEAVING_1)      {      print("That would be crazy right now. There are jungle ants galore down "            "there!");      }    [ on the vine, with ants thinning out    if (vAntAttackStatus == AA_LEAVING_2)      {      print("The ants are thinning out, but you better wait until they are all "            "gone.");      }    [ on the vine, ants are gone    if (vAntAttackStatus == AA_GONE)      {      print("The road looks clear, so get down from here!");      [ jump down (use the done dying flag)      reverse.loop(ego, fDoneDying);      }    }  else    {    [ not on the vine, so can't jump down    print("Right now, that doesn't make sense.");    }  }  [ look Bibleif ((said("examine", "book") || said("examine", "bible")))  {  [ if Jerrod does NOT have the bible  if (!has("Bible"))    {    [ if near the man reading the bible    if (posn(ego, 74, 70, 129, 116))      {      print("It is a black book; the pages are edged with gold.");      }    else      {      print("From here, it looks like the man under the tree is reading a book.");      }    }  }  [ look antsif (said("examine", "ant"))  {  if (vSwarm1Status == 0)    {    print("There are no ants in sight right now.");    }  else    {    print("Those are the dreaded jungle ants!");    }  }  [ swing on vineif ((said("swing") ||     said("swing", "anyword") ||     said("anyword", "swing")))  {  [ if going to or on the vine  if (vAntAttackStatus > 19 &&       vAntAttackStatus < 25)    {    [ print a message, but don't actually do anything    print("You swing back and forth for awhile. Isn't this fun?!");    }  else    {    print("You aren't hanging on a vine.");    }  }  [ get Bibleif ((said("acquire", "bible") ||     said("acquire", "book") ||     said("ask", "bible") ||     said("ask", "book") ||     said("ask", "boy", "book") ||     said("ask", "boy", "bible") ||     said("ask", "boy", "read", "book") ||     said("ask", "boy", "read", "bible") ||     said("ask", "read", "bible") ||     said("ask", "read", "book")))  {  [ if Jerrod has the Bible  if (has("Bible"))    {    print("You already have the Bible.");    }  else    {    [ if near the man reading the Bible    if (posn(ego, 74, 70, 129, 116))      {      print("The resting man says, \"I've been traveling long and hard. It's "            "time to rest and relax for awhile.\"");      print("The man continues, \"In fact, stranger, you look tired. I wish "            "there was something I could do for you. Well, maybe there is "            "something I can do.\"");      print("\"Here. Take this book. It may be helpful to you. Go ahead, take "            "it,\" says the man.");      print("You gratefully receive it and say, \"Thank you!\"");      get("Bible");      [ score seven points      currentScore  += 7;      set.loop(oReader, 4);      [ play sound      sound(s.AddToScore, DoneNoAction);      }    else      {      print("You won't be able to do that from here.");      }    }  }  Done:[ call the main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Oh no! It can't be!! Not the dreaded jungle ants!!!"#message 2 "It only takes one of those tiny, vicious creatures to get up your pants leg and you'll be hoppin' like a Panamanian jumping bean!"#message 3 "You can only jump around like that for so long before you become completely exhausted."#message 4 "You are not feeling well. Every inch of exposed skin is covered with mosquito bites. You have the chills, a fever and are sweating profusely!"#message 5 "The jungle is taking its toll on you. You are feeling nauseous, your limbs are cramping badly, and, despite the moist surroundings, you are extremely dehydrated."#message 6 "Your physical well-being has been weighing heavily on your mind lately. Your skin has a strange, yellow tinge and your tummy is upset. The natives say it may not go well for you."#message 7 "Let's just say you aren't feeling well. You don't even want to know what your symptoms are!"#message 8 "You can fight the ants no longer."#message 10 "That's a great idea!"#message 11 "That's a great idea, but there's no vine nearby to jump onto!"#message 12 "Right now, that doesn't make sense."#message 13 "That would be crazy right now. There are jungle ants galore down there!"#message 14 "The ants are thinning out, but you better wait until they are all gone."#message 15 "What a terrible way to go. These jungle ants are ruthless!"#message 16 "The Spanish road is steep, treacherous, and surrounded by bushes and vines."#message 17 "Bushes and vines line the road."#message 18 "There is no river right here."#message 19 "You don't want to prolong your stay in this jungle by doing that!"#message 20 "The jungle has both large and small trees."#message 21 "There are no ants in sight right now."#message 22 "Right here, all you notice is the blue Panamanian sky."#message 23 "All you notice right now is the rough ground."#message 24 "The road is lined with rocks."#message 25 "There is a long vine hanging above the road."#message 26 "There's no sign of a swamp right here."#message 27 "Those are the dreaded jungle ants!"#message 28 "It's all you can do to just hold on!"#message 29 "You left that back in Cruces."#message 30 "You swing back and forth for awhile. Isn't this fun?!"#message 31 "There's a man resting beneath a tree next to the road."#message 32 "The man walking ahead of you says, \"We're in a hurry to get to California. You can take your time if you want to!\""#message 33 "The grass is long and lush from the moist climate."#message 34 "These mules will carry the provisions."#message 35 "There isn't a mule to look at now."#message 36 "There are others ahead of you on the road. There is also a man resting beneath a tree next to the road."#message 37 "It is difficult to see snakes in the jungle. You could be looking right at one and not see it!"#message 38 "This portion of the road is very steep and rocky."#message 39 "The road looks clear, so get down from here!"#message 40 "There are many vines in this part of the jungle, but right here you see none that are interesting."#message 41 "You see a road covered with dreaded jungle ants."#message 42 "The man is resting under the tree reading a book."#message 43 "A weary traveler is taking a nap under the tree."#message 44 "From here, it looks like the man under the tree is reading a book."#message 45 "It is a black book; the pages are edged with gold."#message 46 "You already have the Bible."#message 49 "You gratefully receive it and say, \"Thank you!\""#message 50 "You won't be able to do that from here."#message 51 "The tired man is taking a nap. Don't disturb him."#message 52 "The resting man says, \"I've been traveling long and hard. It's time to rest and relax for awhile.\""#message 53 "The man continues, \"In fact, stranger, you look tired. I wish there was something I could do for you. Well, maybe there is something I can do.\""#message 54 "\"Here. Take this book. It may be helpful to you. Go ahead, take it,\" says the man."#message 55 "You aren't hanging on a vine."#message 56 "You are on your way to the vine."