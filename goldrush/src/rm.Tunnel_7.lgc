[***********************************************************[[ rm.Tunnel_7[[ Another tunnel location, this one is a dead end.[ [***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDark1                       o1#define oDark2                       o2#define oDark3                       o3#define oDark4                       o4#define oDark5                       o5#define oDark6                       o6#define oDark7                       o7#define vFlicker                   v220#define vEgoDX                     v221#define vEgoDY                     v222#define vDigTimer                  v223#define fDrawDark                  f220#define fLight1                    f221#define fLight2                    f222#define fLight3                    f223#define fLight4                    f224#define fLight5                    f225#define fLight6                    f226#define fLight7                    f227[ f228 through f237 are not used#define fClimbing                  f238#define fFalling                   f239[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the tunnel logic, that handles all the common  [ tunnel functions  load.logics(lgc.Tunnels);    [ load picture for current room  load.pic(currentRoom);    [ load views needed by objects in the room  load.view(vw.WideJerrodCA);  load.view(vw.Darkness);  load.view(vw.TunnelClimbing);  load.view(vw.TunnelFalling);  load.view(vw.TunnelDigging);  [ draw the picture  draw.pic(currentRoom);    [ add the darkness panels - these black out areas of the  [ tunnel that are beyond the range of Jerrod's light  [ (don't draw them yet, lgc.DarkenTunnel will do that)  animate.obj(oDark1);  set.view(oDark1, vw.Darkness);  set.cel(oDark1, 4);  set.priority(oDark1, 15);  ignore.objs(oDark1);  ignore.blocks(oDark1);  position(oDark1, 53, 134);  [ darkness panel 2  animate.obj(oDark2);  set.view(oDark2, vw.Darkness);  set.cel(oDark2, 4);  set.priority(oDark2, 15);  ignore.objs(oDark2);  ignore.blocks(oDark2);  position(oDark2, 53, 114);  [ darkness panel 3  animate.obj(oDark3);  set.view(oDark3, vw.Darkness);  set.cel(oDark3, 4);  set.priority(oDark3, 15);  ignore.objs(oDark3);  ignore.blocks(oDark3);  position(oDark3, 53, 94);  [ darkness panel 4  animate.obj(oDark4);  set.view(oDark4, vw.Darkness);  set.cel(oDark4, 4);  set.priority(oDark4, 15);  ignore.objs(oDark4);  ignore.blocks(oDark4);  position(oDark4, 53, 74);  [ darkness panel 5  animate.obj(oDark5);  set.view(oDark5, vw.Darkness);  set.cel(oDark5, 4);  set.priority(oDark5, 15);  ignore.objs(oDark5);  ignore.blocks(oDark5);  position(oDark5, 53, 54);  [ darkness panel 6  animate.obj(oDark6);  set.view(oDark6, vw.Darkness);  set.cel(oDark6, 4);  set.priority(oDark6, 15);  ignore.objs(oDark6);  ignore.blocks(oDark6);  position(oDark6, 53, 34);  [ darkness panel 7  animate.obj(oDark7);  set.view(oDark7, vw.Darkness);  set.cel(oDark7, 4);  set.priority(oDark7, 15);  ignore.objs(oDark7);  ignore.blocks(oDark7);  ignore.horizon(oDark7);  position(oDark7, 53, 19);    [ Jerrod  animate.obj(ego);  [ Jerrod is climbing when entering this room  set.view(ego, vw.TunnelClimbing);  set.loop(ego, 1);  fix.loop(ego);  set(fClimbing);  draw(ego);  [ set a block so Jerrod can't go all the way to the bottom  block(30, 64, 100, 68);    [ the room starts out all darkened  call(lgc.DarkenTunnel);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ to simulate flickering of torch, use a random timer to[ redraw a black box over the area of tunnel that is[ darkened[ if flicker timer has counted downif (vFlicker == 0)  {  [ if Jerrod is stopped  if (egoDir == STOPPED)    {    [ if the redraw darkness flag is NOT set    if (!isset(fDrawDark))      {      [ draw a black box over the entire tunnel (when Jerrod      [ moves, the cleared areas will be uncovered)      clear.text.rect(1, 0, 21, 39, BLACK);      set(fDrawDark);      }    }  else    {    [ Jerrod is moving; clear the redraw darkness flag    reset(fDrawDark);    [ choose a random time between 2 and 4 cycles    random(2, 4, FlickerTime);    [ set flicker delay to the random vlaue    vFlicker = FlickerTime;    [ draw a black box over the entire tunnel    clear.text.rect(1, 0, 21, 39, BLACK);    }  }  [ decrement flicker counter--vFlicker;[ if Jerrod has a lit lantern or lit matchif ((isset(LanternLit) || isset(MatchLit)))  {  [ depending on position, remove the darkness panels so  [ Jerrod can see the area around him  if (posn(ego, 45, 114, 80, 167) && !isset(fLight1))    {    erase(oDark1);    set(fLight1);    }  if (posn(ego, 45, 94, 80, 163) && !isset(fLight2))    {    erase(oDark2);    set(fLight2);    }  if (posn(ego, 45, 74, 80, 143) && !isset(fLight3))    {    erase(oDark3);    set(fLight3);    }  if (posn(ego, 45, 54, 80, 123) && !isset(fLight4))    {    erase(oDark4);    set(fLight4);    }  if (posn(ego, 45, 34, 80, 103) && !isset(fLight5))    {    erase(oDark5);    set(fLight5);    }  if (posn(ego, 45, 14, 80, 83) && !isset(fLight6))    {    erase(oDark6);    set(fLight6);    }  if (posn(ego, 45, 0, 80, 68) && !isset(fLight7))    {    erase(oDark7);    set(fLight7);    }  }  [ if on ladder but not climbing yetif (posn(ego, 61, 69, 63, 76) && !isset(fClimbing))  {  [ Jerrod is climbing the ladder  set(fClimbing);  [ reposition ego object so Jerrod appears on the ladder  [ correctly  vEgoDX = -7; [ 249;  vEgoDY = -15; [ 241;  reposition(ego, vEgoDX, vEgoDY);  set.view(ego, vw.TunnelClimbing);  [ set and fix loop  set.loop(ego, 1);  fix.loop(ego);  }  [ if off the ladder but climbing (reached bottom of ladder)if (posn(ego, 54, 62, 59, 63) && isset(fClimbing))  {  [ Jerrod isn't climbing  reset(fClimbing);  [ reposition ego object so Jerrod appears on the ground  [ correctly  vEgoDX = 7;  vEgoDY = 15;  reposition(ego, vEgoDX, vEgoDY);  set.view(ego, vw.WideJerrodCA);  release.loop(ego);  [ step size when walking is 1  vEgoDX = 1;  step.size(ego, vEgoDX);  }  [ if Jerrod is NOT falling (in this room, falling is not[ possible!)if (!isset(fFalling))  {    if (isset(fClimbing))    {    [ set step size based on direction        [ if moving up or down ladder    if ((egoDir == UP || egoDir == DOWN))      {      vEgoDY = 2;      step.size(ego, vEgoDY);      }    else      {      vEgoDX = 1;      [ any other direction, step size is 1      step.size(ego, vEgoDX);      }    }  }  [ if timer is activated (>0)if (vDigTimer > 0)  {  [ increment timer each cycle  ++vDigTimer;  }  [ when 30 cycles passif (vDigTimer == 30)  {  [ Jerrod is done digging    [ Jerrod no longer cycles when not moving  reset(CycleAtRest);  start.motion(ego);  [ restore normal tunnel view  set.view(ego, vw.WideJerrodCA);  }  [ after 31 cyclesif (vDigTimer == 31)  {  [ reset the timer  vDigTimer = 0;  [ if no gold found,   print.at("Nothin'!", 2, 26, 10);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ top edge (check for climbing is unneeded; there is no[ other way to reach the top)if (posn(ego, 50, 59, 100, 60) && isset(fClimbing))  {  [ update all objects (not sure why they do this since the  [ new.room command comes next - I guess it's so there'a a  [ split second before the room change with the room  [ updated)  force.update(ego);  position(ego, 56, 164);  new.room(rm.Tunnel_6); [ ##LE001##  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look gold/look nuggetif ((said("examine", "gold") ||     said("examine", "gold", "nugget") ||     said("examine", "nugget")))  {  print.at("There's no gold in sight right here.", 2, 5, 0);  }  [ get goldif ((said("acquire", "gold") ||     said("acquire", "gold", "nugget") ||     said("acquire", "nugget")))  {  print.at("There's no gold in sight right here.", 2, 5, 0);  }  [ use pickif ((said("pick") ||     said("pick", "gold") ||     said("use", "pick") ||     said("swing", "pick")))  {  if (has("Pick"))    {    [ if Jerrod is climbing    if (isset(fClimbing))      {      print.at("Ya can't do that while yer climbin'!", 2, 26, 10);      }    else      {      [ in this room, Jerrod can dig anywhere (but there is      [ no gold)      set.view(ego, vw.TunnelDigging);      [ start timer      vDigTimer = 1;      [ begin at first cel      set.cel(ego, 0);      stop.motion(ego);      [ allow ego object to cycle when not moving      set(CycleAtRest);      [ start digging      start.cycling(ego);      }    }  else    {    print.at("Ya don't have a pick.", 2, 26, 10);    }  }  [ look ladderif (said("examine", "ladder"))  {  [ if Jerrod has a lit lantern or lit match  if ((isset(LanternLit) || isset(MatchLit)))    {    [ if close to the ladder    if (posn(ego, 48, 0, 85, 113))      {      print.at("It's just a wooden ladder!", 2, 26, 10);      }    else      {      print.at("There's no ladder in sight right here.", 2, 26, 10);      }    }  else    {    print.at("It's too dern dark in here to see!", 2, 26, 10);    }  }  Done:[ call tunnel logic to run code common to all tunnelscall(lgc.Tunnels);return();[ **************************************[ MESSAGES[ **************************************#message 13 "Ya can't do that while yer climbin'!"#message 14 "You're close to a likely spot. Try that nearby."#message 15 "Ya don't have a pick."#message 16 "That's impossible right now!"#message 17 "It's too dern dark in here to see!"#message 20 "Nothin'!"#message 47 "There's no gold in sight right here."#message 80 "There's no ladder in sight right here."#message 81 "It's just a wooden ladder!"