[***********************************************************[[ rm.WaterSt_Right[[ The rightmost location along the East River. Key[ interactions are watching the neighbor rake his yard;[ meeting Leonard (who sells boat tickets), the real estate[ agent who wants to buy Jerrod's house, and the hardware[ and grocery store clerks[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oGull1                       o1#define oGull2                       o2[ o3 through o14 are not used#define oLeafPile                   o15#define oNeighbor                   o16#define oSteamship                  o17#define oPedestrian1                o18#define oPedestrian2                o19#define vTmpVal                    v220#define vPed2Dist                  v221#define vGullStep                  v222#define vGullX                     v223#define vGullY                     v224#define vPileSite                  v225#define vPed1Dist                  v226[ v227 is not used#define vPed1Status                v228#define vPed2Status                v229#define vPedView                   v230#define vNgbrDist                  v231#define vObj1X                     v232#define vObj1Y                     v233#define vObj2X                     v234#define vObj2Y                     v235[ f220 is not used#define fGull1Moved                f221#define fGull2Moved                f222#define fGull2Flying               f223#define fNotUsed                   f224[ f224 is set and reset by the leaf pile code, but its value[ is never used#define fPileGrows                 f225#define fStartRaking               f226#define fAtThePile                 f227#define fNgbrMoved                 f228#define fShipMoved                 f229#define fShowShip                  f230#define fTreePoster                f231[ f232 is not used#define fPed1Moved                 f233#define fPed2Moved                 f234[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw, discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ views for addtions to the picture  load.view(vw.SkylineArt);  load.view(vw.Posters);    [ add skyline art to the background image  add.to.pic(vw.SkylineArt, 0, 6, 3, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 23, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 43, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 63, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 83, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 11, 103, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 12, 123, 52, 4, 4);    [ if gold rush has been announced  if (isset(RushIsPublic))    {    [ add the poster indicating stagecoach is available    add.to.pic(vw.Posters, 0, 0, 58, 64, 8, 8);    set(fTreePoster);    }  [ once added, horizon art not needed anymore (this also  [ discards vw.Posters)  discard.view(vw.SkylineArt);    [ load other views for various objects  load.view(vw.JerrodNY);  load.view(vw.StmshipLg);  load.view(vw.Gulls);  load.view(vw.NeighborRake);  load.view(vw.Raking);  load.view(vw.LeafPile);  load.view(vw.Leonard);  load.view(vw.Agent);  load.view(vw.HardwareClerk);    [ if gold rush has not been announced yet  if (!isset(RushIsPublic))    {    [ grocer clerk only comes out before Jerrod is ready to    [ travel    load.view(vw.GrocerClerk);    }      [ if showing the steamship cutscene  if (isset(OnSteamship))    {    [ load music to play    load.sound(m.AnchorsAway);    }      [ two  seagulls randomly fly about    [ cycle time is two  vTmpVal = 2;    [ gull #1, starts out flying  animate.obj(oGull1);  set.view(oGull1, vw.Gulls);  ignore.horizon(oGull1);  ignore.blocks(oGull1);  ignore.objs(oGull1);  position(oGull1, 30, 25);  set.priority(oGull1, 6);  cycle.time(oGull1, vTmpVal);  set(fGull1Moved);  draw(oGull1);    [ gull #2, starts out landed  animate.obj(oGull2);  [ the cel showing gull landed is in the leafpile view  set.view(oGull2, vw.LeafPile);  set.loop(oGull2, 4);  ignore.horizon(oGull2);  ignore.blocks(oGull2);  ignore.objs(oGull2);  position(oGull2, 56, 24);  set.priority(oGull2, 8);  cycle.time(oGull2, vTmpVal);  draw(oGull2);  stop.update(oGull2);    [ animate pedestrian #1  animate.obj(oPedestrian1);  [ set status to indicate not visible  vPed1Status = 10;  [ animate pedestrian #2   animate.obj(oPedestrian2);  [ set status to indicate not visible  vPed2Status = 10;    [ if the leaf pile is not at max size  if (LeafPileSize < 5)    {    [ add neighbor raking    animate.obj(oNeighbor);    set.view(oNeighbor, vw.NeighborRake);    [ starting near the leaf pile    position(oNeighbor, 132, 76);    draw(oNeighbor);    [ set flag to allow leaf pile to grow    set(fPileGrows);    }      [ animate the leaf pile that the neighbor is raking up  animate.obj(oLeafPile);  set.view(oLeafPile, vw.LeafPile);  set.loop(oLeafPile, 1);  set.cel.v(oLeafPile, LeafPileSize);  position(oLeafPile, 130, 75);  draw(oLeafPile);  stop.update(oLeafPile);      [ if steamship is moving  if (SteamshipXR > 0 && SteamshipXR < 107)    {    [ add it to screen    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipLg);    set.loop(oSteamship, 2);    fix.loop(oSteamship);    position.v(oSteamship, SteamshipXR, SteamshipY);    draw(oSteamship);    step.time(oSteamship, StmShipStep);    move.obj(oSteamship, 106, 57, 1, fShipMoved);    set(fShowShip);    }    [ Jerrod is in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ if coming from room above, ego is at horizon,  [ adjust position to account for change in  [ perspective   [ *** except that's not possible for this room!  if (posn(ego, 68, 70, 76, 75))    {    position(ego, 54, 167);    }  if (posn(ego, 77, 70, 87, 75))    {    position(ego, 87, 167);    }  if (posn(ego, 88, 70, 92, 75))    {    position(ego, 110, 167);    }    [ if not moving the steamship  if (!isset(OnSteamship))    {    [ it's not a cutscene - add Jerrod    draw(ego);    }      [ now show the screen  show.pic();    [ if showing steamship cutscene  if (isset(OnSteamship))    {    [ play the music    sound(m.AnchorsAway, f235);    }  }  [ **************************************[ EVERY CYCLE[ **************************************[ get distance to the neighbor raking his yarddistance(ego, oNeighbor, vNgbrDist);[ if pedestrian #1 is not present  if (vPed1Status > 9)  {  [ use randomizer to see if pedestrian #1 comes back  random(20, 100, vPed1Status);  [ one-in-eighty chance  if (vPed1Status == 77)    {    [ pick one of two possible pedestrians at random    random(0, 1, vPed1Status);    if (vPed1Status == 0)      {      set.view(oPedestrian1, vw.HardwareClerk);      }    if (vPed1Status == 1)      {      set.view(oPedestrian1, vw.Leonard);      }    [ choose a random starting position    random(0, 1, vPed1Status);    if (vPed1Status == 0)      {      set.loop(oPedestrian1, 0);      position(oPedestrian1, 0, 80);      draw(oPedestrian1);      move.obj(oPedestrian1, 66, 80, 1, fPed1Moved);      }    if (vPed1Status == 1)      {      set.loop(oPedestrian1, 2);      position(oPedestrian1, 66, 167);      draw(oPedestrian1);      move.obj(oPedestrian1, 66, 80, 1, fPed1Moved);      }    [ set status to indicate pedestrian #1 is on first leg    vPed1Status = 3;    }  }[ when pedestrian #1 reaches first point change direction[ and continueif (isset(fPed1Moved) && vPed1Status == 3)  {  reset(fPed1Moved);  [ randomly determine second leg  random(0, 1, vPed1Status);  if (vPed1Status == 0)    {    move.obj(oPedestrian1, 0, 80, 1, fPed1Moved);    }  if (vPed1Status == 1)    {    move.obj(oPedestrian1, 66, 167, 1, fPed1Moved);    }  [ set status to indicate pedestrian #1 is on second leg  vPed1Status = 4;  }   [ when pedestrian #1 reaches end  if (isset(fPed1Moved) && vPed1Status == 4)  {  [ hide him  reset(fPed1Moved);  vPed1Status = 10;  erase(oPedestrian1);  }  [ if pedestrian #2 is not present  if (vPed2Status > 9)  {  [ if game state is where Jerrod can begin a trip  if (isset(RushIsPublic))    {    [ there is lower chance of this pedestrian appearing    [ (1 in 230)    random(20, 250, vPed2Status);    }  else    {    [ early in game, 1 in 80 chance    random(20, 100, vPed2Status);    }      [ if the random number matches  if (vPed2Status == 77)    {    [ if gold rush has been announced    if (isset(RushIsPublic))      {      [ only the agent will appear      vPed2Status = 0;      }    else      {      [ othwerwise, pick one of two at random      random(0, 1, vPed2Status);      }    if (vPed2Status == 0)      {      set.view(oPedestrian2, vw.Agent);      }    if (vPed2Status == 1)      {      set.view(oPedestrian2, vw.GrocerClerk);      }          [ choose a random starting position    random(0, 1, vPed2Status);    if (vPed2Status == 0)      {      set.loop(oPedestrian2, 0);      position(oPedestrian2, 0, 76);      draw(oPedestrian2);      move.obj(oPedestrian2, 85, 76, 1, fPed2Moved);      }    if (vPed2Status == 1)      {      set.loop(oPedestrian2, 2);      position(oPedestrian2, 85, 167);      draw(oPedestrian2);      move.obj(oPedestrian2, 85, 76, 1, fPed2Moved);      }    vPed2Status = 3;    [ set status to indicate pedestrian #2 is on first leg    }  }  [ when pedestrian #2 reaches first pointif (isset(fPed2Moved) && vPed2Status == 3)  {  [ reset flag  reset(fPed2Moved);  [ randomly determine second leg  random(0, 1, vPed2Status);  if (vPed2Status == 0)    {    move.obj(oPedestrian2, 0, 76, 1, fPed2Moved);    }  if (vPed2Status == 1)    {    move.obj(oPedestrian2, 85, 167, 1, fPed2Moved);    }  [ set status to indicate pedestrian #2 is on second leg  vPed2Status = 4;  }  [ when pedestrian #2 reaches end  if (isset(fPed2Moved) && vPed2Status == 4)  {  [ hide him  reset(fPed2Moved);  vPed2Status = 10;  erase(oPedestrian2);  }[ get pedestrian #1 coordinatesget.posn(oPedestrian1, vObj1X, vObj1Y);[ if pedestrian #1 stops (because Jerrod blocks him)if (OldObj1X == vObj1X &&     OldObj1Y == vObj1Y)  {  [ stop cycling until movement resumes  stop.cycling(oPedestrian1);  }else  {  [ otherwise cycle him as he moves  start.cycling(oPedestrian1);  }[ save the position valuesOldObj1X = vObj1X;OldObj1Y = vObj1Y;[ get pedestrian #2 positionget.posn(oPedestrian2, vObj2X, vObj2Y);[ if pedestrian #2 stops (because Jerrod blocks him)if (OldObj2X == vObj2X && OldObj2Y == vObj2Y)  {  [ stop cycling until movement resumes  stop.cycling(oPedestrian2);  }else  {  [ otherwise cycle him as he moves  start.cycling(oPedestrian2);  }[ save the position valuesOldObj2X = vObj2X;OldObj2Y = vObj2Y;[ if Jerrod hits a special line it means he's giong up the[ walkway stairs;if (isset(egoHitSpecial))if (isset(egoHitSpecial))  {  [ if going up-left or down-left  if ((egoDir == UP_LEFT || egoDir == DOWN_LEFT))    {    [ change to just left    egoDir = LEFT;    }  [ if going left  if (egoDir == LEFT)    {    [ move Jerrod down one pixel    TmpX = 0;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }  [ if going up-right or down-right  if ((egoDir == UP_RIGHT || egoDir == DOWN_RIGHT))    {    [ change to just right    egoDir = RIGHT;    }  [ if going right  if (egoDir == RIGHT)    {    [ move Jerrod up one pixel    TmpX = 0;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }[ when seagull #1 reaches its destinationif (isset(fGull1Moved))  {  [ send it on another random direction    [ (no need to reset the flag; it will get reset   [ automatically by the move.obj.v command)  reset(fGull1Moved);  [ get a random location  random(1, 150, vGullX);  random(5, 114, vGullY);  [ and a random step value  random(1, 2, vGullStep);  move.obj.v(oGull1, vGullX, vGullY, vGullStep, fGull1Moved);  }  [ when seagull #2 reaches its destinationif (isset(fGull2Moved))  {  [ send it on another random direction    [ (no need to reset the flag; it will get reset   [ automatically by the move.obj.v command)  reset(fGull2Moved);  [ get a random location  random(1, 150, vGullX);  random(5, 114, vGullY);  [ and a random step value  random(1, 2, vGullStep);  move.obj.v(oGull2, vGullX, vGullY, vGullStep, fGull2Moved);  }  [ if Jerrod gets close to the sitting gullif (!isset(fGull2Flying) && posn(ego, 48, 75, 74, 96))  {  [ the gull takes flight  set(fGull2Flying);  set(fGull2Moved);  start.update(oGull2);  set.priority(oGull2, 6);  set.view(oGull2, vw.Gulls);  }  [ if the leaf pile is not at max and neighbor has added to the pileif (isset(fPileGrows) && LeafPileSize < 5)  {  [ reset flags  reset(fPileGrows);  reset(fNotUsed);  [ change neighbor view to show him  [ carrying his rake  set.view(oNeighbor, vw.NeighborRake);  [ set step time to one  vPed2Dist = 1;  step.time(oNeighbor, vPed2Dist);  GetPileLocation:  [ choose a random location for to start raking  random(1, 5, vPileSite);  [ determine if this location is available by checking if  [ he already started there  if (vPileSite == 1 && !isset(StartRake1))    {    move.obj(oNeighbor, 108, 90, 1, fStartRaking);    }  else    {    if (vPileSite == 2 && !isset(StartRake2))      {      move.obj(oNeighbor, 123, 125, 1, fStartRaking);      }    else      {      if (vPileSite == 3 && !isset(StartRake3))        {        move.obj(oNeighbor, 132, 159, 1, fStartRaking);        }      else        {        if (vPileSite == 4 && !isset(StartRake4))          {          move.obj(oNeighbor, 148, 160, 1, fStartRaking);          }        else          {          if (vPileSite == 5 && !isset(StartRake5))            {            move.obj(oNeighbor, 148, 97, 1, fStartRaking);            }          else            {            goto(GetPileLocation);            }          }        }      }    }  }[ when neighbor reaches starting point   if (isset(fStartRaking))  {  [ reset the flag  reset(fStartRaking);  [ neighbor begins raking  set.view(oNeighbor, vw.Raking);  [ and moves to the leaf pile  move.obj(oNeighbor, 132, 76, 1, fAtThePile);  vPed2Dist = 2;  step.time(oNeighbor, vPed2Dist);  [ this flag is set but never used anywhere  set(fNotUsed);  }[ when neighbor reaches the leaf pile if (isset(fAtThePile))  {  [ leaf pile grows  ++LeafPileSize;  [ reset the flag  reset(fAtThePile);  [ change view to match size of pile  set.cel.v(oLeafPile, LeafPileSize);  [ force it to update now  force.update(oLeafPile);  [ set flag to show pile has grown  set(fPileGrows);  [ set flag for whichever starting point was used  if (vPileSite == 1)    {    set(StartRake1);    }  if (vPileSite == 2)    {    set(StartRake2);    }  if (vPileSite == 3)    {    set(StartRake3);    }  if (vPileSite == 4)    {    set(StartRake4);    }  if (vPileSite == 5)    {    set(StartRake5);    }  }  [ if pile is at max and done raking if (isset(fPileGrows) && LeafPileSize == 5)  {  reset(fPileGrows);  [ neighbor picks up rake and moves to edge  move.obj(oNeighbor, 149, 98, 1, fNgbrMoved);  set.view(oNeighbor, vw.NeighborRake);  }[ after neighbor gets to edgeif (isset(fNgbrMoved))  {  [ he goes away  reset(fNgbrMoved);  set(DoneRaking);  [ although this global flag is set, it                    [ is never used anywhere else  erase(oNeighbor);  }  [ if steamship is moving across screen but hasn't been added[ to screen yetif (SteamshipXR > 0 && SteamshipXR < 107 && !isset(fShowShip))  {  [ add it now  animate.obj(oSteamship);  set.view(oSteamship, vw.StmshipLg);  set.loop(oSteamship, 2);  fix.loop(oSteamship);  position.v(oSteamship, SteamshipXR, SteamshipY);  draw(oSteamship);  [ and send it on its way across the screen  step.time(oSteamship, StmShipStep);  move.obj(oSteamship, 106, 57, 1, fShipMoved);  set(fShowShip);  }[ if the ship is done moving, but it's not a cutsceneif (isset(fShipMoved) && !isset(OnSteamship))  {  [ just remove ship from screen  reset(fShipMoved);  erase(oSteamship);  }  [ if ship is done moving while Jerrod is on the ship[ (meaning this is a cutscene) if (isset(fShipMoved) && isset(OnSteamship))  {  [ move to next room cutscene  new.room(rm.Overlook); [ ##LE001##  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit != NOT_HIT)  {  release.loop(oSteamship);  if (edgeEgoHit == LEFT_EDGE)    {    new.room(rm.MainSt); [ ##LE002##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    new.room(rm.LeonardsHouse); [ ##LE003##    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************  [ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ look roadif (said("examine", "path"))  {  print("You are near the intersection of Washington and Water Streets.");  }  [ look houseif (said("examine", "home"))  {  print("Houses in this neighborhood are usually in high demand.");  }  [ look grassif (said("examine", "grass"))  {  print("These homeowners take a great deal of pride in their yards.");  }  [ look fenceif (said("examine", "fence"))  {  print("These fences are to keep passers-by off the lawns.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "east river") ||     said("examine", "ocean")))  {  print("This is the East River.");  }  [ look across riverif ((said("examine", "across") ||     said("examine", "across", "creek") ||     said("examine", "across", "east river")))  {  print("On the far side of the East River you see New York City.");  }  [ look streetlamp/look postif ((said("examine", "lamp") || said("examine", "post")))  {  print("These streetlights help keep the streets safe at night.");  [ more to say if there is a tree poster  if (isset(fTreePoster))    {    print("There is a poster attached to the streetlight on the corner.");    }  }  [ look New Yorkif (said("examine", "new york"))  {  print("New York City is a place full of hustle and bustle.");  }  [ look treeif (said("examine", "forest"))  {  print("Brooklyn is filled with beautiful trees like this!");  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("Fine houses line this residential street.");  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ get distance to all other people in the scene  distance(ego, oNeighbor, vNgbrDist);  distance(ego, oPedestrian1, vPed1Dist);  distance(ego, oPedestrian2, vPed2Dist);  [ if close enough to at least one of them  if ((vNgbrDist < 60 ||       vPed1Dist < 40 ||       vPed2Dist < 40))    {    [ if close enough to pedestrian #1    if (vPed1Dist < 40)      {      [ use view to determine who it is, and what response      [ to provide      current.view(oPedestrian1, vPedView);      if (vPedView == 67)        {        print("The bearded man says, \"Drop by the hardware store sometime. You "              "may find something you need!\"");        }      if (vPedView == 37)        {        print("Leonard says, \"I've put up a new poster in the warehouse. You "              "should check it out sometime!\"");        }      }        [ if close enough to pedestrian #2    if (vPed2Dist < 40)      {      [ use view to determine who it is, and what response      [ to provide      current.view(oPedestrian2, vPedView);      if (vPedView == 48)        {        print("This real estate man says, \"Excuse me, sir, if you ever need "              "some extra cash, we might be able to work something out.\"");        }      if (vPedView == 70)        {        print("The young man from the grocery store says, \"Good day to you, "              "sir!\"");        }      }          [ if close enough to neighbor raking leaves    if (vNgbrDist < 60)      {      print("You say to the man working on his yard, \"Have you heard about the "            "rumors of gold in California?\"");      [ neighbor's reply depends on whether or not gold rush      [ has been announced      if (isset(RushIsPublic))        {        print.at("The homeowner replies, \"Who hasn't, Jerrod? There's gold "                 "over there, but I just can't give up everything I have and "                 "take a chance like that.", 4, 5, 15);        }      else        {        print.at("The homeowner says, \"I've heard talk about gold, but so far "                 "it's all talk. But anyway, I don't think I could leave my "                 "house and friends.\"", 4, 5, 15);        }      }    }  else    {    [ no one is close enough - if all the people are not on    [ the screen    if (vNgbrDist == 255 && vPed1Dist == 255 && vPed2Dist == 255)      {      print("At this particular moment there isn't a soul in sight.");      }    else      {      print("There is someone in the neighborhood, but not close enough to talk "            "to.");      }    }  }  [ look wagonif (said("examine", "cart"))  {  [ if on steamship  if (isset(OnSteamship))    {    print("Along the Brooklyn shore you see many people and wagons! This may be "          "your last look at these familiar scenes!!");    }  else    {    [ reset match flag so main logic can handle this input    reset(haveMatch);    }  }  [ look manif (said("examine", "boy"))  {  [ if Jerrod is on the steam ship  if (isset(OnSteamship))    {    print("Along the Brooklyn shore you see many people and wagons! This may be "          "your last look at these familiar scenes!!");    [ skip to the end    goto(Done);    }      [ if not on the ship, response depends on whether or not  [ anyone is close to Jerrod    [ get distances to each person  distance(ego, oNeighbor, vNgbrDist);  distance(ego, oPedestrian1, vPed1Dist);  distance(ego, oPedestrian2, vPed2Dist);    [ if at least one is close  if ((vNgbrDist < 60 || vPed1Dist < 60 || vPed2Dist < 60))    {    [ if close enough to pedestrian #1    if (vPed1Dist < 60)      {      [ use current view to determine who it is and how to      [ respond      current.view(oPedestrian1, vPedView);      if (vPedView == 67)        {        print("There goes Rand, the hardware man!");        }      if (vPedView == 37)        {        print("There's Leonard! He sure has been busy!");        }      }    [ if close enough to pedestrian #2    if (vPed2Dist < 60)      {      [ use current view to determine who it is and how to       [ respond      current.view(oPedestrian2, vPedView);      if (vPedView == 48)        {        print("All you see in this real estate man's eyes are dollar signs!!");        }      if (vPedView == 70)        {        print("There's that young man from the grocery store.");        }      }    [ if close enough to neighbor raking leaves    if (vNgbrDist < 60)      {      print("This man is neighborly enough, but he is forever working around "            "the house!");      }    }  else    {    [ no one is close    if (vNgbrDist == 255 && vPed1Dist == 255 && vPed2Dist == 255)      {      [ if all others are not on screen, then no one to look at      print("At this particular moment there isn't a soul in sight.");      }    else      {      print("There is someone in the neighborhood, but you can't quite make out "            "his identity.");      }    }  }  [ look seagullif (said("examine", "bird"))  {  print("It is normal for sea gulls to fly along the river front.");  }  [ look shipif (said("examine", "boat"))  {  [ if Jerrod is on the ship in the cutscene  if (isset(OnSteamship))    {    print("You are aboard the mighty \"Sea Farer!\"");    }  else    {    [ if ship is moving across screen    if (SteamshipXR > 0 && SteamshipXR < 107)      {      print("There goes the ship to California!");      }    else      {      print("There is no ship here!");      }    }  }  [ look sign/read signif ((said("examine", "sign") ||     said("examine", "billboard") ||     said("read", "sign") ||     said("read", "billboard")))  {  [ if the tree poster is present  if (isset(fTreePoster))    {    [ if Jerrod is close to the tree    if (posn(ego, 56, 80, 71, 96))      {      print("     Westward Ho!!!   \n      Take a wagon \n           or \n   "            "Take a stage coach  \n           to \n      CALIFORNIA!!");      }    else      {      print("You can't do that from here!");      }    }  else    {    print("There is no poster in sight!");    }  }  [ take sign/take billboardif ((said("acquire", "sign") || said("acquire", "billboard")))  {  [ if tree poster is present  if (isset(fTreePoster))    {    if (posn(ego, 56, 80, 71, 96))      {      print("It is firmly attached to the streetlight.");      }    else      {      print("You can't do that from here!");      }    }  else    {    print("There is no poster in sight!");    }  }  [ look sidewalk/look boardwalkif ((said("examine", "sidewalk") || said("examine", "boardwalk")))  {  print("The sidewalk is made of rocks.");  }  [ open gateif (said("open", "gate"))  {  [ if Jerrod is by the homeowner's gate  if (posn(ego, 105, 102, 115, 120))    {    print("The gate is locked. I guess this homeowner doesn't want anyone "          "walking on his lawn.");    }  else    {    print("You can't do that from here!");    }  }  [ unlock gateif (said("unlock", "gate"))  {  [ if Jerrod is by the homeowner's gate  if (posn(ego, 105, 102, 115, 120))    {    print("You have no key to unlock this gate.");    }  else    {    print("You can't do that from here!");    }  }    [ look leavesif (said("examine", "leaf"))  {  print("There are a few leaves on the grass.");  }    [ look gate/look stairsif ((said("examine", "gate") || said("examine", "stair")))  {  print("There are a few steps leading to the gate.");  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "creek") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "creek") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "creek") ||     said("enter", "ocean")))  {  print("You have more sense than that! That water is cold!!");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "That hard working homeowner can't hear you from here."#message 4 "You are near the intersection of Washington and Water Streets."#message 5 "Houses in this neighborhood are usually in high demand."#message 7 "These homeowners take a great deal of pride in their yards."#message 8 "These fences are to keep passers-by off the lawns."#message 9 "This is the East River."#message 10 "On the far side of the East River you see New York City."#message 11 "This man is neighborly enough, but he is forever working around the house!"#message 12 "These streetlights help keep the streets safe at night."#message 14 "New York City is a place full of hustle and bustle."#message 15 "Brooklyn is filled with beautiful trees like this!"#message 16 "Fine houses line this residential street."#message 17 "The homeowner says, \"I've heard talk about gold, but so far it's all talk. But anyway, I don't think I could leave my house and friends.\""#message 18 "You say to the man working on his yard, \"Have you heard about the rumors of gold in California?\""#message 19 "The homeowner replies, \"Who hasn't, Jerrod? There's gold over there, but I just can't give up everything I have and take a chance like that."#message 22 "It is normal for sea gulls to fly along the river front."#message 23 "There goes the ship to California!"#message 24 "There is no ship here!"#message 25 "     Westward Ho!!!   \n      Take a wagon \n           or \n   Take a stage coach  \n           to \n      CALIFORNIA!!"#message 26 "You can't do that from here!"#message 27 "There is no poster in sight!"#message 29 "At this particular moment there isn't a soul in sight."#message 30 "There is someone in the neighborhood, but not close enough to talk to."#message 31 "The bearded man says, \"Drop by the hardware store sometime. You may find something you need!\""#message 32 "Leonard says, \"I've put up a new poster in the warehouse. You should check it out sometime!\""#message 33 "This real estate man says, \"Excuse me, sir, if you ever need some extra cash, we might be able to work something out.\""#message 34 "The young man from the grocery store says, \"Good day to you, sir!\""#message 35 "You take a look around the neighborhood and see a couple of people."#message 37 "There is someone in the neighborhood, but you can't quite make out his identity."#message 38 "There goes Rand, the hardware man!"#message 39 "There's Leonard! He sure has been busy!"#message 40 "All you see in this real estate man's eyes are dollar signs!!"#message 41 "There's that young man from the grocery store."#message 42 "You reply, \"Things are going great. But, you know, it's the same old thing day after day.\""#message 46 "The sidewalk is made of rocks."#message 47 "The gate is locked. I guess this homeowner doesn't want anyone walking on his lawn."#message 48 "You can't do that from here!"#message 49 "There is a poster attached to the streetlight on the corner."#message 50 "It is firmly attached to the streetlight."#message 51 "You have no key to unlock this gate."#message 56 "Along the Brooklyn shore you see many people and wagons! This may be your last look at these familiar scenes!!"#message 57 "You are aboard the mighty \"Sea Farer!\""#message 58 "There are a few leaves on the grass."#message 59 "There are a few steps leading to the gate."#message 60 "You have more sense than that! That water is cold!!"