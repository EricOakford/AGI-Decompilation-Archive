[***********************************************************[[ rm.SF_Corral[ [ This is the corral where Jerrod can go to get a mule. [[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDoor                        o1#define oSweep                       o2#define oGate                        o3#define oMule1                       o4#define oMule2                       o5#define oSeller                      o6#define oLazyMule                   o22#define vDX                        v220#define vTmpVal                    v221#define vSellerStatus              v222[ v223 is not used#define vChatStatus                v224  #define NOT_STARTED           0  [ mule seller is waiting for Jerrod to start a conversation  #define STARTED               1  [ Jerrod has begun a conversation with the seller  #define WAIT_PAYMENT          2  [ seller s waiting for Jerrod to pay for mule  #define ACCEPT_PAYMENT        3  [ seller has accepted payment  #define CHAT_OVER             4  [ conversation is over#define vSellerDist                v225#define vCurrentX                  v226#define vCurrentY                  v227#define vOldX                      v228#define vOldY                      v229#define vDY                        v230#define fOnStairs                  f220#define fDoorMoved                 f221#define fDoorOpen                  f222#define fSellerMoved               f223[ f224 is not used#define fSellerStopped             f225#define fShowMsg                   f226#define fSoundDone                 f227#define fBehindWindow              f228[ f229 through 237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard current room picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load mule logic  load.logics(lgc.Mule);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.CorralArt);  load.view(vw.Mule);  load.view(vw.SuttersFortArt);  load.view(vw2.MuleHand);  load.view(vw.WindowJerrod);    [ load sounds used in the room  load.sound(m.FoundGold);  load.sound(m.LoseGold);  load.sound(s.Effect1);  load.sound(s.Effect2);    [ add wood shop bench  add.to.pic(vw.SuttersFortArt, 5, 0, 10, 88, 6, 6);  [ add barrels by the corral  add.to.pic(vw.SuttersFortArt, 5, 1, 2, 101, 9, 0);  add.to.pic(vw.SuttersFortArt, 5, 2, 21, 101, 9, 0);    [ corral gate  animate.obj(oGate);  set.view(oGate, vw.SuttersFortArt);  set.loop(oGate, 6);  set.cel(oGate, 0);  position(oGate, 133, 137);  draw(oGate);  stop.update(oGate);    [ door to wood shop  animate.obj(oDoor);  set.view(oDoor, vw.CorralArt);  set.loop(oDoor, 1);  set.cel(oDoor, 0);  ignore.objs(oDoor);  ignore.blocks(oDoor);  set.priority(oDoor, 8);  position(oDoor, 10, 94);  draw(oDoor);  stop.update(oDoor);    [ mule working a sweep  animate.obj(oSweep);  set.view(oSweep, vw.CorralArt);  set.loop(oSweep, 0);  ignore.objs(oSweep);  ignore.blocks(oSweep);  set.priority(oSweep, 8);  position(oSweep, 30, 92);  draw(oSweep);  vTmpVal = 7;  cycle.time(oSweep, vTmpVal);  start.cycling(oSweep);    [ mule seller  animate.obj(oSeller);  [ he begins the scene leaning on fence  set.view(oSeller, vw.SuttersFortArt);  set.loop(oSeller, 7);  set.cel(oSeller, 0);  position(oSeller, 77, 102);  ignore.blocks(oSeller);  draw(oSeller);  stop.cycling(oSeller);    [ mule #1  animate.obj(oMule1);  set.view(oMule1, vw.Mule);  set.loop(oMule1, 1);  position(oMule1, 117, 96);  draw(oMule1);  stop.update(oMule1);    [ mule #2  animate.obj(oMule2);  set.view(oMule2, vw.Mule);  set.loop(oMule2, 1);  position(oMule2, 100, 106);  draw(oMule2);  stop.update(oMule2);    [ if Jerrod hasn't bought a mule yet  if (!isset(BoughtMule))    {    [ add lazy mule    animate.obj(oLazyMule);    set.view(oLazyMule, vw.Mule);    set.loop(oLazyMule, 1);    position(oLazyMule, 139, 138);    ignore.blocks(oLazyMule);    draw(oLazyMule);    stop.update(oLazyMule);    }      [ Jerrod, in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  [ if coming from the kitchen area  if (previousRoom == rm.SF_Kitchen)    {    [ change direction and loop    egoDir = UP;    set.loop(ego, 3);    }  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization    call(lgc.Mule);    }      [ now show thie picture  show.pic();    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);    [ if Jerrod has already bought a mule  if (isset(BoughtMule))    {    [ set conversation status to 'over'    vChatStatus = CHAT_OVER;    }  }  [ **************************************[ EVERY CYCLE[ **************************************[ in this room, there aren't any areas where Jerrod can go[ behind a window; this code isn't needed in this room[ if Jerrod is on an alarm line and not marked[ as behind a windowif (isset(egoHitSpecial) && !isset(fBehindWindow))  {  [ show Jerrod behind window  set(fBehindWindow);  set.view(ego, vw.WindowJerrod);  }  [ if Jerrod is not on alarm line but is marked as behind a[ windowif (!isset(egoHitSpecial) && isset(fBehindWindow))  {  [ no longer behind window  reset(fBehindWindow);  [ restore normal view  set.view(ego, vw.JerrodCA);  }  [ if Jerrod is behind corral on stairs but flag is not setif (posn(ego, 81, 67, 101, 71) && !isset(fOnStairs))  {  [ mark Jerrod as on stairs  set(fOnStairs);  [ force priority here  set.priority(ego, 7);  }  [ if Jerrod is not behind corral on stairs and flag is setif (!posn(ego, 81, 67, 101, 71) && isset(fOnStairs))  {  [ not on stairs anymore  reset(fOnStairs);  [ restore automatic priority assignment  release.priority(ego);  }  [ if Jerrod is by the wood shop door and it is not openif (posn(ego, 1, 80, 21, 96) && !isset(fDoorOpen))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door to update  start.update(oDoor);  [ temporarily halt Jerrod while door opens  stop.update(ego);  [ open the door  end.of.loop(oDoor, fDoorMoved);  set(fDoorOpen);  }  [ if Jerrod is not by the wood shop door and it is openif (!posn(ego, 1, 80, 21, 96) && isset(fDoorOpen))  {  [ allow door to update  start.update(oDoor);  [ close the door  reverse.loop(oDoor, fDoorMoved);  reset(fDoorOpen);  }  [ when door is done cyclingif (isset(fDoorMoved))  {  [ stop updating the door  stop.update(oDoor);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoorMoved);  [ if the door is now closed  if (!isset(fDoorOpen))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ this is a bad 'if' statement; the first part will always[ evaluate true; looks like the original programmer didn't[ understand how ORs and ANDs are grouped[ if chatting, and seller is not moving from[ waiting for mule to come out of corral if ((vChatStatus > 0 || vChatStatus == NOT_STARTED) &&     vSellerStatus != 5)  {  [ get distance from Jerrod to the seller  distance(ego, oSeller, vSellerDist);  [ if distance is greater than 19 and a message window is  [ currently set  if (vSellerDist > 19 && isset(fShowMsg))    {    [ reset the showmsg flag    reset(fShowMsg);    [ dismiss message window        [ this won't actually work, because none of the affected    [ print statements use the leaveWindow flag; the message    [ windows will already be closed by the time this    [ command is reached    close.window();    }  }  [ if seller is ready to get a mule for Jerrodif (vSellerStatus == 1)  {  [ seller starts moving to point 2 by the gate  start.update(oSeller);  start.cycling(oSeller);  [ change to view showing seller walking  set.view(oSeller, vw2.MuleHand);  [ move to point 2  move.obj(oSeller, 113, 136, 1, fSellerMoved);  [ advance to next stage  vSellerStatus = 2;  }  [ when seller gets to point 2if (isset(fSellerMoved) && vSellerStatus == 2)  {  [ he moves to point 3 (at the gate)  reset(fSellerMoved);  vSellerStatus = 3;  move.obj(oSeller, 120, 136, 1, fSellerMoved);  }  [ when seller gets to the gateif (isset(fSellerMoved) && vSellerStatus == 3)  {  [ reset moved flag  reset(fSellerMoved);  [ advance to next stage  vSellerStatus = 4;  [ seller isn't moving, so he stops cycling  stop.cycling(oSeller);  [ allow gate to open  start.update(oGate);  [ then open the gate  end.of.loop(oGate, fSellerMoved);  }  [ after gate opensif (isset(fSellerMoved) && vSellerStatus == 4)  {  [ reset flag  reset(fSellerMoved);  [ advance to next stage  vSellerStatus = 5;  [ allow mule to update  start.update(oLazyMule);  [ move the mule out of the corral  move.obj(oLazyMule, 105, 138, 1, fSellerMoved);  [ seller yells at the mule  print.at("\"Come on! Get outta there, ya lazy good fer nothin' mule!\"", 2, 7, 0);  }  [ when mule gets out of corralif (isset(fSellerMoved) && vSellerStatus == 5)  {  [ reset the flag  reset(fSellerMoved);  [ advance to next stage  vSellerStatus = 6;  [ the conversation is over  vChatStatus = CHAT_OVER;  [ dismiss window (not necessary since the previous message  [ was not printed with the leaveWindow flag set)  close.window();  [ then close the gate  reverse.loop(oGate, fSellerMoved);  }  [ once the gate is closedif (isset(fSellerMoved) && vSellerStatus == 6)  {  [ reset the flag  reset(fSellerMoved);  [ advance to next stage  vSellerStatus = 7;  [ gate is done updating  stop.update(oGate);  [ seller moves to fence  start.cycling(oSeller);  move.obj(oSeller, 109, 124, 1, fSellerMoved);  }  [ after seller gets to the fenceif (isset(fSellerMoved) && vSellerStatus == 7)  {  [ reset flag  reset(fSellerMoved);  [ the seller sequence is done  vSellerStatus = 8;  [ switch back to leaning on fence  set.view(oSeller, vw.SuttersFortArt);  set.loop(oSeller, 7);  set.cel(oSeller, 0);  [ adjust position   vDX = 2;  vDY = -1; [ 255;  reposition(oSeller, vDX, vDY);  [ seller is done moving and cycling  stop.cycling(oSeller);  }  [ during stages where seller is movingif ((vSellerStatus == 2 ||     vSellerStatus == 3 ||     vSellerStatus == 7))  {  [ get seller's current position  get.posn(oSeller, vCurrentX, vCurrentY);  [ if seller hasn't moved  if (vOldX == vCurrentX && vOldY == vCurrentY)    {    [ he's blocked; if the stopped flag isn't set yet    if (!isset(fSellerStopped))      {      [ set stopped flag      set(fSellerStopped);      [ stop cycling while not moving      stop.cycling(oSeller);      [ here the programmers use the leave window flag      [ correctly      set(leaveWindow);      [ yell at Jerrod to move      print.at("\"Outta my way!\"", 2, 14, 0);      }    }  else    {    [ seller is moving; if the stopped flag is set    if (isset(fSellerStopped))      {      [ seller starts moving again      reset(fSellerStopped);      start.cycling(oSeller);      [ dismiss the print message      close.window();      }    }  [ save position values  vOldX = vCurrentX;  vOldY = vCurrentY;  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ going left leads to the bunkroomif (posn(ego, 1, 81, 1, 166))  {  vDX = 151;  position.v(ego, vDX, EgoY);  new.room(rm.SF_BunkRoom); [ ##LE001##  }  [ going south leads to kitchen area on left edge of screen[ position Jerrod on right edge of kitchen sceneif (posn(ego, 1, 166, 82, 166))  {  position(ego, 2, 152);  new.room(rm.SF_Kitchen); [ ##LE002##  }  [ on right edge, posiiton Jerrod a little to the left of the[ right edgeif (posn(ego, 83, 166, 152, 166))  {  position(ego, 2, 121);  new.room(rm.SF_Kitchen); [ ##LE003##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  [ response depends on Jerrod's position  if ((posn(ego, 0, 81, 14, 96) ||       posn(ego, 80, 55, 102, 70) ||       posn(ego, 52, 64, 102, 94)))    {    [ in the wood shop    if (posn(ego, 0, 81, 14, 96))      {      print("Everything made here in the wood shop is made with lumber from "            "Sutter's own sawmill in Coloma!");      print("You don't need anything here!");      }          [ the jail (behind corral)    if (posn(ego, 80, 55, 102, 70))      {      print("From here, all ya can see is the jail.");      print("You don't need anything here!");      }          [ in accessible areas of the corral    if (posn(ego, 52, 64, 102, 94))      {      print("Ya know yer in the middle of the corral area 'cause of the aroma. "            "These are nice lookin' mules!");      }    }  else    {    print("There's a man watchin' over the mules.");    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ get distance from Jerrod to the seller  distance(ego, oSeller, vSellerDist);  [ if less than 19 pixels away  if (vSellerDist < 20)    {    [ if seller is done with conversation    if (vChatStatus == CHAT_OVER)      {      [ if Jerrod has the mule      if (has(LazyMule))        {        print.at("\"I hope that there mule helps ya strike it rich somewhere!\"", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        }      else        {        [ must mean Jerrod lost the mule; too bad        print.at("\"Well, are ya gonna get that mule, or let it run away?!\"", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        }      }          [ if seller has accepted payment    if (vChatStatus == ACCEPT_PAYMENT)      {      print.at("\"I'm busy tryin' to get a mule fer ya!\"", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }          [ if seller is waiting to be paid    if (vChatStatus == WAIT_PAYMENT)      {      [ if Jerrod has already bought a mule      if (isset(BoughtMule))        {        [ no more mules        print.at("\"Sorry, shorty. I have no more mules fer sale.\"", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        }      else        {        [ seller asks for gold        print.at("\"It's gonna cost ya a bit of gold to get yer hands on one of "                 "these beauties!\" says the man.", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        }      }          [ if conversation is just getting started    if ((vChatStatus == NOT_STARTED || vChatStatus == STARTED))      {      [ seller introduces himself      print.at("\"I'm the man that watches over all these fine mules,\" says "               "the man.", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      [ set conversations status to 'beginning'      vChatStatus = STARTED;      }    }  else    {    print.at("Ya gotta get closer fer somebody to hear ya.", 2, 7, 0);    }  }[ get mule/buy muleif ((said("acquire", "donkey") ||     said("buy", "donkey") ||     said("acquire", "animal") ||     said("buy", "animal") ||     said("acquire", "rope")))  {  [ if conversation is over  if (vChatStatus == CHAT_OVER)    {    [ if Jerrod already has a mule    if ((has(LazyMule) || has("James' ol' mule")))      {      print("Ya already have a mule!");      }    else      {      [ if mule is more than 15 pixels away       if (MuleDistance > 15)        {        [ this message gets displayed even if Jerrod        [ previously bought a mule, but lost it there should        [ have been a check for that condition so a separate        [ message that made sense could be shown for that        [ condition        print("If ya want the mule, yer gonna have to get closer!");        }      else        {        [ mule is close enough for Jerrod to grab        sound(m.FoundGold, fSoundDone);        print("Ya grab hold of the rope 'round the neck of the docile mule and "              "take it away! It willingly follows you!");        [ get the mule        get(LazyMule);        [ Jerrod has bout a mule        set(BoughtMule);        [ score three points        currentScore  += 3;        }      }    }  else    {    [ for any other conversation status, get distance to    [ seller    distance(ego, oSeller, vSellerDist);    [ if Jerrod is close enough    if (vSellerDist < 20)      {      [ if seller has accepted payment      if (vChatStatus == ACCEPT_PAYMENT)        {        print.at("\"I'm busy tryin' to get a mule fer ya!\"", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        }      [ for any other status      if ((vChatStatus == WAIT_PAYMENT ||           vChatStatus == STARTED ||           vChatStatus == NOT_STARTED))        {        [ if Jerrod already bought a mule        if (isset(BoughtMule))          {          print.at("\"Sorry, shorty. I have no more mules fer sale.\"", 2, 7, 0);          [ setting this flag does nothing because the           [ leaveWindow flag is not set before calling the          [ print.at command          set(fShowMsg);          }        else          {          [ tell Jerrod the cost          print.at("\"It's gonna cost ya a bit of gold to get yer hands on one "                   "of these beauties!\" says the man.", 2, 7, 0);          [ setting this flag does nothing because the           [ leaveWindow flag is not set before calling the          [ print.at command          set(fShowMsg);          }        [ set status to 'waiting for payment'        vChatStatus = WAIT_PAYMENT;        }      }    else      {      print.at("Ya gotta get closer fer somebody to hear ya.", 2, 7, 0);      }    }  }  [ pay with gold diskif ((said("use", "gold", "disk") ||     said("use", "disk") ||     said("contribute", "gold", "disk") ||     said("contribute", "disk") ||     said("pay", "gold", "disk") ||     said("pay", "disk") ||     said("contribute", "anyword", "disk") ||     said("contribute", "disk", "anyword") ||     said("contribute", "anyword", "gold", "disk") ||     said("contribute", "gold", "disk", "anyword") ||     said("pay", "anyword", "disk") ||     said("pay", "disk", "anyword") ||     said("pay", "anyword", "gold", "disk") ||     said("pay", "gold", "disk", "anyword")))  {  [ get distance to seller  distance(ego, oSeller, vSellerDist);  [ if close enough  if (vSellerDist < 20)    {    [ if payment has already been made    if ((vChatStatus == ACCEPT_PAYMENT || vChatStatus == CHAT_OVER))      {      print.at("\"Ya already paid me once. I don't really think ya want to pay "               "twice!\" says the man.", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    [ if waiting for payment    if (vChatStatus == WAIT_PAYMENT)      {      [ if Jerrod has the gold disk      if (has("Gold disk"))        {        [ play lose-gold sound        sound(m.LoseGold, fSoundDone);        print.at("The man smiles and says, \"I'll gladly take that gold disk "                 "off yer hands. It looks priceless!\"", 2, 7, 0);        [ seller accepts        vChatStatus = ACCEPT_PAYMENT;        [ begin sequence to move seller and get mule        vSellerStatus = 1;        [ lose two points        currentScore -= 2;        [ lose the disk        drop("Gold disk");        [ skip to the end        goto(Done);        }      print.at("The man says, \"Ya don't have a gold disk!\"", 2, 7, 0);      set(fShowMsg);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      }    [ if not asking for payment    if ((vChatStatus == STARTED ||         vChatStatus == NOT_STARTED))      {      print.at("\"What would ya want to do that fer?!\"", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    }  else    {    print.at("Ya gotta get closer fer somebody to hear ya.", 2, 7, 0);    }  }  [ pay with gold coinif ((said("use", "coin") ||     said("use", "gold", "coin") ||     said("contribute", "coin") ||     said("contribute", "gold", "coin") ||     said("contribute", "boy", "coin") ||     said("contribute", "coin", "boy") ||     said("contribute", "anyword", "coin") ||     said("contribute", "coin", "anyword") ||     said("contribute", "anyword", "gold", "coin") ||     said("contribute", "gold", "coin", "anyword") ||     said("pay", "coin") ||     said("pay", "gold", "coin") ||     said("pay", "anyword", "coin") ||     said("pay", "coin", "anyword") ||     said("pay", "anyword", "gold", "coin") ||     said("pay", "gold", "coin", "anyword")))  {  [ get distance to seller  distance(ego, oSeller, vSellerDist);  [ if Jerrod is close enough  if (vSellerDist < 20)    {    [ if Jerrod already paid    if ((vChatStatus == ACCEPT_PAYMENT ||         vChatStatus == CHAT_OVER))      {      print.at("\"Ya already paid me once. I don't really think ya want to pay "               "twice!\" says the man.", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    [ if waiting for payment    if (vChatStatus == WAIT_PAYMENT)      {      [ if Jerrod has the coin      if (has("Gold coin"))        {        [ the coin isn't enough        print.at("The man says, \"That measley gold coin ain't gonna land ya "                 "one of these mules!\"", 2, 7, 0);        [ setting this flag does nothing because the         [ leaveWindow flag is not set before calling the        [ print.at command        set(fShowMsg);        goto(Done);        }      print.at("The man says, \"Ya don't have a gold coin!\"", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    [ if not waiting for payment    if ((vChatStatus == STARTED ||         vChatStatus == NOT_STARTED))      {      print.at("\"What would ya want to do that fer?!\"", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    }  else    {    print.at("Ya gotta get closer fer somebody to hear ya.", 2, 7, 0);    }  }  [ look muleif ((said("examine", "donkey") ||     said("examine", "animal") ||     said("examine", "horse")))  {  [ if Jerrod doesn't have a mule  if (!has("James' ol' mule") && !has(LazyMule))    {    [ if mule is not close    if (MuleDistance > 15)      {      print("A mule might come in handy in these parts.");      }    else      {      print("This mule don't look that bad!");      }    }  else    {    [ reset match flag so lgc.Mule can handle the input    reset(haveMatch);    }  }  [ anything moneyif ((said("anyword", "bucks") ||     said("anyword", "anyword", "bucks") ||     said("anyword", "bucks", "anyword") ||     said("bucks", "rol")))  {  print("Ya don't have any money.");  }  [ look ground/look grassif ((said("examine", "dirt") ||     said("examine", "grass")))  {  print("The animals keep the grass short.");  }  [ look doorif (said("examine", "door"))  {  print("There's nothin' unusual 'bout these doors.");  }  [ look windowif (said("examine", "glass"))  {  print("Lookin' in the window reveals nothin'.");  }  [ open doorif (said("open", "door"))  {  print("Do it!");  }  [ look fort/look wallif ((said("examine", "fort") || said("examine", "wall")))  {  print("The walls of Sutter's Fort surround you!");  }  [ look manif (said("examine", "boy"))  {  print("This long, lean, lanky man is watchin' over the mules in the corral.");  }  [ look fenceif ((said("examine", "fence") || said("examine", "corral")))  {  print("If it weren't fer this corral, these flea bitten varmits would be all "        "over the fort!");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Diggin ain't allowed here! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  [ look barrelif (said("examine", "barrel"))  {  print("There are a couple of barrels sittin' on the ground just outside of "        "the wood shop.");  }  [ get barrel/buy barrelif ((said("acquire", "barrel") || said("buy", "barrel")))  {  print("Ya got no need fer a barrel!");  }if ((said("open", "gate") ||     said("open", "corral")))  {  print("That man ain't gonna let no one open that gate!");  }  [ pay with gold flakeif ((said("use", "flake") ||     said("use", "gold", "flake") ||     said("contribute", "flake") ||     said("contribute", "gold", "flake") ||     said("contribute", "anyword", "flake") ||     said("contribute", "anyword", "gold", "flake") ||     said("contribute", "flake", "anyword") ||     said("contribute", "gold", "flake", "anyword") ||     said("pay", "flake") ||     said("contribute", "gold", "flake") ||     said("pay", "anyword", "flake") ||     said("pay", "anyword", "gold", "flake") ||     said("pay", "flake", "anyword") ||     said("pay", "gold", "flake", "anyword")))  {  [ if Jerrod has the gold flake  if (has("Gold flake"))    {    print.at("The man laughs and says, \"That gold flake is worthless in these "             "parts!\"", 2, 7, 0);    }  else    {    print.at("The man says, \"Ya don't have a gold flake!\"", 2, 7, 0);    }  }  [ look jailif (said("examine", "jail"))  {  [ if Jerrod is near the jail  if (posn(ego, 80, 55, 102, 70))    {    print("The jail is never used. The solution to crime 'round here is a good, "          "strong rope and shady spot!");    }  else    {    [ not by the jail; reset match flag so main logic can    [ handle the input    reset(haveMatch);    }  }  [ look sawmillif (said("examine", "sawmill"))  {  print("There's a sawmill in the town of Coloma.");  }  [ look Colomaif (said("examine", "coloma"))  {  print("The town of Coloma lies east of the fort.");  }  [ pay with goldif ((said("use", "gold") ||     said("pay") ||     said("pay", "gold") ||     said("pay", "boy") ||     said("pay", "anyword", "gold") ||     said("pay", "gold", "anyword") ||     said("contribute", "gold") ||     said("contribute", "anyword", "gold") ||     said("contribute", "gold", "anyword")))  {  [ get distance to seller  distance(ego, oSeller, vSellerDist);  [ if Jerrod is close enough  if (vSellerDist < 20)    {    [ if Jerrod has already paid    if ((vChatStatus == ACCEPT_PAYMENT || vChatStatus == CHAT_OVER))      {      print.at("\"Ya already paid me once. I don't really think ya want to pay "               "twice!\" says the man.", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    [ if waiting for payment    if (vChatStatus == WAIT_PAYMENT)      {      [ if Jerrod has enough gold      if (GoldIndex > 60)        {        print.at("\"All right, I'll just take a little of that gold ya got "                 "there and give ya a mule!\"", 2, 7, 0);        [ seller accepts the payment        vChatStatus = ACCEPT_PAYMENT;        [ begins moving to get the mule        vSellerStatus = 1;        [ Jerrod loses two steps of gold        GoldIndex -= 2;        call(lgc.AdjustGold);        [ skip to end        goto(Done);        }      print.at("\"Ya ain't found enough California gold to buy a mule with,\" "               "scoffs the man.", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    [ if not waiting for payment    if ((vChatStatus == STARTED || vChatStatus == NOT_STARTED))      {      print.at("\"What would ya want to do that fer?!\"", 2, 7, 0);      [ setting this flag does nothing because the       [ leaveWindow flag is not set before calling the      [ print.at command      set(fShowMsg);      }    }  else    {    print.at("Ya gotta get closer fer somebody to hear ya.", 2, 7, 0);    }  }  Done:[ call mule logic to handle mule related commands (doesn't[ matter if Jerrod has a mule because this is the corral)call(lgc.Mule);return();[ **************************************[ MESSAGES[ **************************************#message 1 "The man says, \"Ya don't have a gold disk!\""#message 2 "\"I'm busy tryin' to get a mule fer ya!\""#message 3 "The man says, \"Ya don't have a gold coin!\""#message 4 "\"I'm the man that watches over all these fine mules,\" says the man."#message 5 "The man says, \"Ya don't have a gold flake!\""#message 6 "\"It's gonna cost ya a bit of gold to get yer hands on one of these beauties!\" says the man."#message 8 "\"Ya already paid me once. I don't really think ya want to pay twice!\" says the man."#message 9 "The man says, \"That measley gold coin ain't gonna land ya one of these mules!\""#message 11 "The man smiles and says, \"I'll gladly take that gold disk off yer hands. It looks priceless!\""#message 13 "\"All right, I'll just take a little of that gold ya got there and give ya a mule!\""#message 15 "\"Ya ain't found enough California gold to buy a mule with,\" scoffs the man."#message 17 "\"What would ya want to do that fer?!\""#message 18 "Ya gotta get closer fer somebody to hear ya."#message 19 "\"Come on! Get outta there, ya lazy good fer nothin' mule!\""#message 20 "\"Outta my way!\""#message 21 "\"Sorry, shorty. I have no more mules fer sale.\""#message 22 "\"I hope that there mule helps ya strike it rich somewhere!\""#message 23 "\"Well, are ya gonna get that mule, or let it run away?!\""#message 24 "Ya grab hold of the rope 'round the neck of the docile mule and take it away! It willingly follows you!"#message 25 "If ya want the mule, yer gonna have to get closer!"#message 26 "Ya already have a mule!"#message 27 "There's a man watchin' over the mules."#message 28 "Everything made here in the wood shop is made with lumber from Sutter's own sawmill in Coloma!"#message 29 "From here, all ya can see is the jail."#message 30 "Ya know yer in the middle of the corral area 'cause of the aroma. These are nice lookin' mules!"#message 31 "A mule might come in handy in these parts."#message 32 "Ya don't have any money."#message 33 "The animals keep the grass short."#message 34 "There's nothin' unusual 'bout these doors."#message 35 "Lookin' in the window reveals nothin'."#message 36 "Do it!"#message 37 "The walls of Sutter's Fort surround you!"#message 38 "This long, lean, lanky man is watchin' over the mules in the corral."#message 39 "If it weren't fer this corral, these flea bitten varmits would be all over the fort!"#message 40 "Diggin ain't allowed here! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"#message 43 "There are a couple of barrels sittin' on the ground just outside of the wood shop."#message 44 "That man ain't gonna let no one open that gate!"#message 45 "Ya got no need fer a barrel!"#message 46 "The man laughs and says, \"That gold flake is worthless in these parts!\""#message 47 "This mule don't look that bad!"#message 48 "The jail is never used. The solution to crime 'round here is a good, strong rope and shady spot!"#message 49 "There's a sawmill in the town of Coloma."#message 50 "The town of Coloma lies east of the fort."#message 74 "You don't need anything here!"