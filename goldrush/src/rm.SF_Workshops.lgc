[***********************************************************[[ rm.SF_Workshops[ [ The cooper's workshop and the granary are in this room. [ There is nothing for Jerrod to do here.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDoor1                       o1#define oDoor2                       o2#define vTmpX                      v220[ f220 is not used#define fDoor1Moved                f221#define fDoor1Open                 f222#define fDoor2Moved                f223#define fDoor2Open                 f224[ f225 and f226 are not used#define fBehindWindow              f227[ f228 through f237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load mule logic  load.logics(lgc.Mule);    [ load picture for current room  load.pic(currentRoom);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.SF_Doors2);  load.view(vw.SuttersFortArt2);  load.view(vw.WindowJerrod);    [ load sounds used in the room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ draw current rooom picture  draw.pic(currentRoom);    [ add granary detail art  add.to.pic(vw.SuttersFortArt2, 1, 0, 110, 82, 6, 0);  [ add cooper shop detail art  add.to.pic(vw.SuttersFortArt2, 1, 1, 61, 82, 6, 0);  add.to.pic(vw.SuttersFortArt2, 1, 2, 10, 82, 6, 6);  add.to.pic(vw.SuttersFortArt2, 1, 2, 44, 82, 6, 6);  add.to.pic(vw.SuttersFortArt2, 1, 2, 82, 82, 6, 6);    [ cooper shop door  animate.obj(oDoor1);  set.view(oDoor1, vw.SF_Doors2);  set.loop(oDoor1, 7);  set.cel(oDoor1, 0);  ignore.objs(oDoor1);  ignore.blocks(oDoor1);  set.priority(oDoor1, 7);  position(oDoor1, 61, 94);  draw(oDoor1);  stop.update(oDoor1);    [ granary door  animate.obj(oDoor2);  set.view(oDoor2, vw.SF_Doors2);  set.loop(oDoor2, 7);  set.cel(oDoor2, 0);  ignore.objs(oDoor2);  ignore.blocks(oDoor2);  set.priority(oDoor2, 7);  position(oDoor2, 110, 94);  draw(oDoor2);  stop.update(oDoor2);    [ Jerrod, in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization stuff    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is on an alarm line and not marked as behind a[ windowif (isset(egoHitSpecial) && !isset(fBehindWindow))  {  [ show Jerrod behind window  set(fBehindWindow);  set.view(ego, vw.WindowJerrod);  }  [ if Jerrod is not on an alarm line but is marked as behind[ a windowif (!isset(egoHitSpecial) && isset(fBehindWindow))  {  [ no longer behind window  reset(fBehindWindow);  [ restore normal view  set.view(ego, vw.JerrodCA);  }  [ if Jerrod is by door to cooper shop and door is not openif (posn(ego, 1, 81, 92, 96) && !isset(fDoor1Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #1 to update  start.update(oDoor1);  [ temporarily halt Jerrod while door #1 opens  stop.update(ego);  [ open door #1  end.of.loop(oDoor1, fDoor1Moved);  set(fDoor1Open);  }  [ if Jerrod is not by door to cooper shop and door is openif (!posn(ego, 1, 81, 92, 96) && isset(fDoor1Open))  {  [ allow door #1 to update  start.update(oDoor1);  [ close it  reverse.loop(oDoor1, fDoor1Moved);  reset(fDoor1Open);  }  [ if door #1 is done cyclingif (isset(fDoor1Moved))  {  [ stop updating door #1  stop.update(oDoor1);  [ allow Jerrod to continue moving  start.update(ego);  [ reset movement flag  reset(fDoor1Moved);  [ if door #1 is now closed  if (!isset(fDoor1Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ if Jerrod is by granary door and door is not openif (posn(ego, 100, 81, 152, 96) && !isset(fDoor2Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #2 to update  start.update(oDoor2);  [ temporarily halt Jerrod while door #2 opens  stop.update(ego);  [ open door #2  end.of.loop(oDoor2, fDoor2Moved);  set(fDoor2Open);  }  [ if Jerrod is not by granary door an door is openif (!posn(ego, 100, 81, 152, 96) && isset(fDoor2Open))  {  [ allow door #2 to update  start.update(oDoor2);  [ close it  reverse.loop(oDoor2, fDoor2Moved);  reset(fDoor2Open);  }  [ if door #2 is done cyclingif (isset(fDoor2Moved))  {  [ stop updating door #2  stop.update(oDoor2);  [ allow Jerrod to continue mvoing  start.update(ego);  [ reset movement flag  reset(fDoor2Moved);  [ if door #2 is now closed  if (!isset(fDoor2Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ to the left is the cemetery gateif (posn(ego, 1, 97, 1, 166))  {  [ put Jerrod at same Y value, but to left of screen in new  [ room  vTmpX = 151;  position.v(ego, vTmpX, EgoY);  new.room(rm.SF_CemeteryGate); [ ##LE001##  }  [ south gate is to the right[ if at upper-right edgeif (posn(ego, 152, 97, 152, 143))  {  [ put Jerrod as same Y value, but on left edge of screen  [ in new room  vTmpX = 2;  position.v(ego, vTmpX, EgoY);  new.room(rm.SF_SouthGate); [ ##LE002##  }[ if at lower-left edgeif (posn(ego, 152, 144, 152, 166))  {  [ put Jerrod at far left edge  position(ego, 7, 143);  new.room(rm.SF_SouthGate); [ ##LE003##  }  [ the bottom edge leads to the fort officesif (posn(ego, 1, 166, 152, 166))  {  [ put Jerrod in lower left corner  position(ego, 2, 135);  set.loop(ego, 0);  egoDir = RIGHT;  new.room(rm.SF_Offices); [ ##LE004##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/look roomif ((said("examine", "around") || said("examine")))  {  [ response depends on Jerrod's location  if ((posn(ego, 1, 81, 92, 96) ||       posn(ego, 100, 81, 152, 96)))    {    if (posn(ego, 1, 81, 92, 96))      {      print("This here's the cooper's workshop. Casks, barrels, and other items "            "are repaired here.");      print("You don't need anything here!");      }    if (posn(ego, 100, 81, 152, 96))      {      print("This is the fort granary. Seems logical folks would store their "            "grain here.");      print("You don't need anything here!");      }    }  else    {    print("There's nothin' goin' on in this part of the fort. There might be "          "somethin' nearby though.");    }  }  [ look grainif (said("examine", "grain"))  {  [ if in the granary  if (posn(ego, 100, 81, 152, 96))    {    print("The supply of grain is beginnin' to dwindle. Harvest is coming soon "          "and it will soon be overflowin'!");    }  else    {    print("Ya cain't do that from here!");    }  }  [ take grain/buy grainif ((said("acquire", "grain") ||     said("buy", "grain")))  {  [ if in the granary  if (posn(ego, 100, 81, 152, 96))    {    print("The last thing ya need is yer pockets full of grain!");    }  else    {    print("Ya cain't do that from here!");    }  }  [ look barrelif (said("examine", "barrel"))  {  [ if in cooper shop  if (posn(ego, 1, 81, 92, 96))    {    print("The barrels and casks are repaired and then stacked against the "          "wall.");    }  else    {    print("Ya cain't do that from here!");    }  }  [ take barrel/buy barrelif ((said("acquire", "barrel") ||     said("buy", "barrel")))  {  [ if in the cooper shop  if (posn(ego, 1, 81, 92, 96))    {    print("These barrels and casks belong to someone else.");    }  else    {    print("Ya cain't do that from here!");    }  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Diggin' ain't allowed here! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }[ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya need to be in the water!");  }  [ look ground/look grassif ((said("examine", "dirt") || said("examine", "grass")))  {  print("The grass is kept short by all the animals!");  }  [ look doorif (said("examine", "door"))  {  print("Nothin' unusual 'bout these doors.");  }  [ look windowif (said("examine", "glass"))  {  print("The windows ain't important.");  }  [ open doorif (said("open", "door"))  {  print("Just walk up to it.");  }  [ look fort/look wallsif ((said("examine", "fort") || said("examine", "wall")))  {  print("There is nothin' important about these walls.");  }  Done:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ call mule logic to handle mule related commands  call(lgc.Mule);  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "This here's the cooper's workshop. Casks, barrels, and other items are repaired here."#message 2 "This is the fort granary. Seems logical folks would store their grain here."#message 3 "There's nothin' goin' on in this part of the fort. There might be somethin' nearby though."#message 4 "The supply of grain is beginnin' to dwindle. Harvest is coming soon and it will soon be overflowin'!"#message 6 "The barrels and casks are repaired and then stacked against the wall."#message 7 "Ya cain't do that from here!"#message 8 "These barrels and casks belong to someone else."#message 9 "The last thing ya need is yer pockets full of grain!"#message 40 "Diggin' ain't allowed here! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya need to be in the water!"#message 63 "The grass is kept short by all the animals!"#message 64 "Nothin' unusual 'bout these doors."#message 65 "The windows ain't important."#message 66 "Just walk up to it."#message 69 "There is nothin' important about these walls."#message 74 "You don't need anything here!"