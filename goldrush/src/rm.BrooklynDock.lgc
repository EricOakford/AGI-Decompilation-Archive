[***********************************************************[ [ rm.BrooklynDock[ [ The ship to Panama or Cape Horn route leaves from this[ dock. After getting a ticket, Jerrod has to come here to [ board the ship. Before the ship leaves, Jerrod can explore[ the top deck of the ship, where he can encounter the[ crewman who is preparing the ship, as wellas the Captain,[ another sailor, or the boiler technician.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWheel                       o1#define oGangPlank                   o2#define oCrewman                     o3#define oGull1                       o4#define oGull2                       o5#define oPedestrian                  o6#define vShipTimer                 v220#define vCrewSailStatus            v221  #define CS_DOCK_START         1  [ 1: ship docked, crewman is at starting point  #define CS_DOCK_MOVE          2  [ 2: ship docked, crewman is moving  #define CS_DOCK_RETURN        3  [ 3: ship docked, crewman is returning to starting point  #define CS_LV_MOVE            6  [ 6: ship departing, crewman moves to departing location  #define CS_LV_GANGPLANK       7  [ 7: ship departing, crewman is raising gangplank  #define CS_LV_ENGINE          8  [ 8: ship departing, engine starting  #define CS_SHIP_GONE         12  [ 12: ship is going/gone, crew is gone#define vCrewMoveStatus            v222#define vCrewY                     v223#define vPedStatus                 v224#define vTimer                     v225#define vPedDist                   v226#define vTmpCycle                  v227#define vGullStep                  v228#define vGullX                     v229#define vGullY                     v230#define vTmpPic                    v231#define vCrewDist                  v232#define vBoardTimer                v233#define vTimeLeft                  v234#define vPedX                      v235#define vPedY                      v236#define oldCrewX                   v237#define oldCrewY                   v238#define vCrewX                     v239#define vEgoStatus                 v240#define vTmpStep                   v241#define fInside                    f220#define fGull1Moved                f221#define fGull2Moved                f222#define fCrewMoved                 f223#define fPedMoved                  f224[ f225 is not used#define fShowScore                 f226#define fHideMsg                   f227#define fSndDone                   f228#define fCrewDepart                f229#define fEgoMoved                  f230[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ if ship has sailed  if (isset(ShipSailed))    {    [ load the picture of the empty dock    vTmpPic = pic.EmptyDock;    load.pic(vTmpPic);    vCrewSailStatus = CS_SHIP_GONE;    }  else    {    [ ship has not sailed; load, draw and discard the    [ current room picture which includes the ship at the    [ dock    load.pic(currentRoom);    draw.pic(currentRoom);    discard.pic(currentRoom);        [ load other views used when ship is still at the dock    load.view(vw.Sailor1);    load.view(vw.BoilerTech);    load.view(vw.Captain);    load.view(vw.Sailor2);    [ pedestrian starts off screen    vPedStatus = 10;    }      [ load other views used regardless of whether or not the  [ ship has sailed  load.view(vw.JerrodNY);  load.view(vw.JerrodWindow);  load.view(vw.SkylineArt);  load.view(vw.Gulls);  load.view(vw.ShipArt);    [ load sounds used in the room  load.sound(s.UhOh);  load.sound(s.EngineStart);    [ if ship has sailed, draw it  [ (this could have been included in the 'if' statement   [ above for cleaner code)  if (isset(ShipSailed))    {    vTmpPic = pic.EmptyDock;    draw.pic(vTmpPic);    }  else    {    [ the dockworker is only in the room if the ship is     [ still at the dock    animate.obj(oCrewman);    set.view(oCrewman, vw.Sailor1);    position(oCrewman, 43, 77);    draw(oCrewman);    stop.cycling(oCrewman);    [ crew is on ship, preparing for the voyage    vCrewSailStatus = CS_DOCK_START;    [ crew member is ready to move    vCrewMoveStatus = 1;    }    [ add skyline art to the picture  add.to.pic(vw.SkylineArt, 0, 5, 40, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 6, 60, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 80, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 100, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 120, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 140, 52, 4, 4);    [two seagull fly around the room randomly  animate.obj(oGull1);  set.view(oGull1, vw.Gulls);  ignore.horizon(oGull1);  ignore.blocks(oGull1);  ignore.objs(oGull1);  position(oGull1, 30, 35);  set.priority(oGull1, 5);  vTmpCycle = 2;  cycle.time(oGull1, vTmpCycle);  [ set moved flag so gull will immediately get sent off to  [ a new location  set(fGull1Moved);  draw(oGull1);  [ seagull #2  animate.obj(oGull2);  set.view(oGull2, vw.Gulls);  ignore.horizon(oGull2);  ignore.blocks(oGull2);  ignore.objs(oGull2);  position(oGull2, 50, 35);  set.priority(oGull2, 5);  cycle.time(oGull2, vTmpCycle);  [ set moved flag so gull will immediately get sent off to  [ a new location  set(fGull2Moved);  draw(oGull2);    [ if ship has not left the dock  if (!isset(ShipSailed))    {    [ set flag to indicate ship is still at the dock    set(ShipDocked);        [ ship's paddle wheel    animate.obj(oWheel);    set.view(oWheel, vw.ShipArt);    set.loop(oWheel, 0);    position(oWheel, 105, 128);    ignore.objs(oWheel);    ignore.blocks(oWheel);    set.priority(oWheel, 7);    draw(oWheel);    stop.update(oWheel);        [ gang plank (a fold-down section of the deck railing    [ that is uses to walk on to the ship)    animate.obj(oGangPlank);    set.view(oGangPlank, vw.ShipArt);    set.loop(oGangPlank, 2);    set.cel(oGangPlank, 0);    position(oGangPlank, 68, 91);    ignore.blocks(oGangPlank);    ignore.objs(oGangPlank);    set.priority(oGangPlank, 8);    draw(oGangPlank);    stop.update(oGangPlank);    }      [ pedestrian can be one of three different people  animate.obj(oPedestrian);    [ Jerrod, in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);  [ default position  position(ego, 79, 100);    [ if coming from another room, adjust ego position  if (previousRoom == rm.Bank)    {    position(ego, 79, 167);    }  if (previousRoom == rm.WarehouseInterior)    {    [ when coming from the warehouse, Jerrod first appears    [ through the windows    set.view(ego, vw.JerrodWindow);    [ make sure ego comes out facing right    egoDir = RIGHT;    position(ego, 6, 96);    }  if (previousRoom == rm.ParkNorth)    {    position(ego, 70, 100);    set.loop(ego, 0);    set.cel(ego, 1);    egoDir = STOPPED;    }  draw(ego);    [ now show the picture  show.pic();    [ if ship has sailed,  if (isset(ShipSailed))    {    [ don't let Jerrod walk off dock     observe.blocks(ego);    }  else    {    [ allow Jerrod to pass over gangplank onto the ship    ignore.blocks(ego);    }  }  [ **************************************[ EVERY CYCLE[ **************************************[ if pedestrian not on screenif (vPedStatus > 9)  {  [ random chance that a pedestrian appears  random(20, 100, vPedStatus);  [ a one in 80 chance  if (vPedStatus == 77)    {    [ pick one of three pedestrians    random(0, 2, vPedStatus);    if (vPedStatus == 0)      {      set.view(oPedestrian, vw.Captain);      }    if (vPedStatus == 1)      {      set.view(oPedestrian, vw.Sailor2);      }    if (vPedStatus == 2)      {      set.view(oPedestrian, vw.BoilerTech);      }    [ position the pedestrian at starting location    [ on the ship    set.loop(oPedestrian, 0);    position(oPedestrian, 37, 68);    draw(oPedestrian);    [ set pedestrian in motion to first point    move.obj(oPedestrian, 118, 68, 1, fPedMoved);    vPedStatus = 3;    }  }  [ if pedestrian has reached first pointif (isset(fPedMoved) && vPedStatus == 3)  {  [ have him turn around  reset(fPedMoved);  [ this is unnecessary code; probably had multiple   [ paths for the pedestrian to walk at one point  [ but now he only goes to the right, and then back  random(0, 1, vPedStatus);  [ set pedestrian in motion to starting point  move.obj(oPedestrian, 37, 68, 1, fPedMoved);  vPedStatus = 4;  }  [ if pedestrian returns to starting pointif (isset(fPedMoved) && vPedStatus == 4)  {  [ remove him from the screen  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }  [ get pedestrian's current positionget.posn(oPedestrian, vPedX, vPedY);[ if pedestrian has not moved (blocked by Jerrod)if (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling the pedestrian  stop.cycling(oPedestrian);  }else  {  [ if moving, cycle the pedestrian  start.cycling(oPedestrian);  }[ save the pedestrian's positionOldObj1X = vPedX;OldObj1Y = vPedY;[ if Jerrod is in the warehouse, but the flag is not setif (isset(egoHitSpecial) && !isset(fInside))  {  [ set the flag, and change his 'behind window' view  set.view(ego, vw.JerrodWindow);  set(fInside);  }  [ if NOT in the warehouse, but the flag IS set,if (!isset(egoHitSpecial) && isset(fInside))  {  [restore Jerrod to normal view and clear the flag  set.view(ego, vw.JerrodNY);  reset(fInside);  }  [ if gull #1 reached its destinationif (isset(fGull1Moved))  {  [ send it to another random location  reset(fGull1Moved);  random(1, 150, vGullX);  random(35, 60, vGullY);  random(1, 2, vGullStep);  move.obj.v(oGull1, vGullX, vGullY, vGullStep, fGull1Moved);  }  [ if gull #2 reached its destinationif (isset(fGull2Moved))  {  [ send it to another random location  reset(fGull2Moved);  random(1, 150, vGullX);  random(35, 60, vGullY);  random(1, 2, vGullStep);  move.obj.v(oGull2, vGullX, vGullY, vGullStep, fGull2Moved);  }  [ if ship hasn't sailed yet and crewman is not movingif (!isset(ShipSailed) && vCrewMoveStatus != 0)  {  [ random chance the crewman starts moving  random(1, 50, vCrewMoveStatus);  }[ one in 50 chance that crewman changes movementif (vCrewMoveStatus == 23)  {  [ update main sail status to show crewman is moving to his  [ 'work' point  vCrewSailStatus = CS_DOCK_MOVE;  vCrewY = 77;  [ pick a random X position value  random(54, 135, vCrewMoveStatus);  vTmpCycle = 1;  [ move the crewman to this 'work' point  move.obj.v(oCrewman,  vCrewMoveStatus, vCrewY, vTmpCycle, fCrewMoved);  start.cycling(oCrewman);  [ reset status so crewman doesn't get repositioned until  [ he's done moving  vCrewMoveStatus = 0;    [ (resetting this flag not necessary; it gets reset by the  [ move.obj.v command above)  reset(fCrewMoved);  }  [ when the crewman reaches his 'work' pointif (vCrewSailStatus == CS_DOCK_MOVE && isset(fCrewMoved))  {  [ he turns around, and returns to his starting point  reset(fCrewMoved);  [ update main status to show crewman is returning  vCrewSailStatus = CS_DOCK_RETURN;  [ move crewman back to his starting spot  move.obj(oCrewman, 41, 77, 1, fCrewMoved);  }  [ if crewman is back at his starting pointif (vCrewSailStatus == CS_DOCK_RETURN && isset(fCrewMoved))  {  [ reset movement flag  reset(fCrewMoved);  [ set main status showing crewman is ready to move again  vCrewSailStatus = CS_DOCK_START;  [ crewman stops cycling  stop.cycling(oCrewman);  [ set move status to non-zero value so crewman  [ can move again  vCrewMoveStatus = 33;  }[ get crewman's current positionget.posn(oCrewman, vCrewX, vCrewY);[ if crewman has not moved (blocked by Jerrod)if (oldCrewX == vCrewX && oldCrewY == vCrewY)  {  [ stop cycling the crewman  stop.cycling(oCrewman);  }else  {  [ if moving, cycle the crewman  start.cycling(oCrewman);  }[ save the crewman's positionoldCrewX = vCrewX;oldCrewY = vCrewY;[ if Jerrod is on gangplank but flag is not setif (posn(ego, 63, 82, 79 , 91) && !isset(OnGangplank))  {  [ set the gangplank flag  set(OnGangplank);  }[ if Jerrod is OFF the gangplank, and flag IS setif (!posn(ego, 63, 82, 79, 91) && isset(OnGangplank))  {  [ reset the gangplank flag  reset(OnGangplank);  }  [ if Jerrod is on board the ship, but flag not setif (posn(ego, 0, 0, 159, 81) && !isset(OnSteamship))  {  [ set the on-ship flag  set(OnSteamship);  }  [ if Jerrod is OFF the ship, and flag IS setif (!posn(ego, 0, 0, 159, 81) && isset(OnSteamship))  {  [ clear the flag  reset(OnSteamship);  }  [ if Jerrod is on the ship, but he doesn't have a ticketif (isset(OnSteamship) &&     TicketChoice != TKT_CAPE &&     TicketChoice != TKT_PANAMA)  {  [ set flag showing he's also on gangplank  [ (this overrides the gangplank code above, but it's not  [ necessary - there is no code that uses this flag other   [ than checking if Jerrod is actually on the gangplank)  set(OnGangplank);  }  [ if ship is supposed to sail, but the crewman hasn't begun[ the departure sequence yet,if (isset(ShipSailed) && vCrewSailStatus < CS_LV_MOVE)  {  [ initiate departure sequence  vCrewSailStatus = CS_LV_MOVE;  [ if Jerrod does NOT have a ticket,  if (TicketChoice != TKT_CAPE &&       TicketChoice != TKT_PANAMA)    {    [ stop him temporarily    stop.motion(ego);    }  [ move the crewman to his departure location  move.obj(oCrewman, 71, 77, 1, fCrewDepart);  start.cycling(oCrewman);  reset(fCrewMoved);  }  [ after crewman gets to depart locationif (vCrewSailStatus == CS_LV_MOVE && isset(fCrewDepart))  {  [ reset flags  reset(fCrewMoved);  reset(fCrewDepart);  [ change status to raising the gangplank  vCrewSailStatus = CS_LV_GANGPLANK;  [ crewman turns to face the gangplank  set.loop(oCrewman, 2);  stop.cycling(oCrewman);  [ the plank goes up  start.update(oGangPlank);  [ (use crewmoved flag to mark when plank is done)  end.of.loop(oGangPlank, fCrewMoved);    [ use blocks to keep Jerrod from walking off the   [ boat where the plank used to be  observe.blocks(ego);    [ if traveling around the cape  if (TicketChoice == TKT_CAPE)    {    [ if not already scored, give points for having fruit    if (has("Citrus fruit") && !isset(ScoreFruit))      {      set(ScoreFruit);      currentScore  += 4;      }    [ ticket not needed anymore    drop("Cape Horn ticket");    }      [ if traveling to Panama  if (TicketChoice == TKT_PANAMA)    {    [ if not already scored, give points for having mosquito    [ net    if (has("Mosquito net") && !isset(ScoreMosquitoNet))      {      set(ScoreMosquitoNet);      currentScore  += 4;      }    [ ticket not needed anymore    drop("Panama ticket");    }  }  [ after gangplank finishes going upif (vCrewSailStatus == CS_LV_GANGPLANK && isset(fCrewMoved))  {  reset(fCrewMoved);  [ if a msg is showing, hide it  if (isset(fHideMsg))    {    reset(fHideMsg);    close.window();    }  [ allow Jerrod to move about while sequence continues  start.motion(ego);  [ change status to starting ship engine  vCrewSailStatus = CS_LV_ENGINE;  [ stop update on gangplank now that it's raised  stop.update(oGangPlank);  [ begin updating the paddle wheel  start.update(oWheel);  set.loop(oWheel, 1);  fix.loop(oWheel);  start.cycling(oWheel);  [ play engine sound  sound(s.EngineStart, fSndDone);  }  [ after starting paddle wheel engine, if (vCrewSailStatus == CS_LV_ENGINE)  {  [ increment timer  ++vShipTimer;  }  [ after 78 cyclesif (vShipTimer == 78)  {  [ changing local variables and flags is not necessary  [ because of the new.room command that follows  reset(fCrewMoved);  vCrewSailStatus = CS_SHIP_GONE;  reset(ShipDocked);    [ set the ship's starting point so it can begin its   [ journey across the rooms along the East River  SteamshipXL = 55;  [ switch to first room to the right to continue the trip  new.room(rm.ParkNorth); [ ##LE001##  }  [ if the ship hasn't sailed yetif (!isset(ShipSailed))  {  [ if ego is on left edge of dock  if (posn(ego, 104, 126, 120, 130))    {    [ this makes no sense; there are no conditional lines    [ in this region; it might be some left over code from    [ something that got taken out of the game earlier    observe.blocks(ego);    }      [ if ego goes just outside that block  if (posn(ego, 103, 125, 121, 131) &&       !posn(ego, 104, 126, 120, 130))    {    [ ignore blocks    ignore.blocks(ego);    }  }[ when the engine sound endsif (isset(fSndDone))  {  [ play it again  sound(s.EngineStart, fSndDone);  }  [ this appears to be old code that should have been deleted;[ vTimer is never set to a non-zero value so the if block [ never happens  if (vTimer > 0)  {  ++vTimer;  if (vTimer == 20)    {    vTimer = 0;    close.window();    }  }  [ if ship has begun its sequence, but the 'all aboard' call[ hasn't gone out, announce itif (SteamshipPhase > 0 && !isset(CallAllAboard))  {  set(CallAllAboard);  [ leave the 'all aboard' or 'disembark' msg up until  [ Jerrod gets on board or disembarks as appropriate  set(leaveWindow);    [ if Jerrod has a ticket  if ((TicketChoice == TKT_CAPE ||       TicketChoice == TKT_PANAMA))    {    [ start the boarding timer    vBoardTimer = 1;    [ set flag to show score after Jerrod boards    set(fShowScore);    [ call for 'all aboard'    print.at("All aboard!!", 2, 14, 0);    }  else    {    [ if Jerrod doesn't have a ticket but is on the     [ ship or gangplank    if ((isset(OnSteamship) || isset(OnGangplank)))      {      [ he has to get off before ship can move            [ set flag to dismiss the disembark message      set(fHideMsg);            [ if Jerrod is on the ship      if (isset(OnSteamship))        {        [ target Y value for moving Jerrod depends on        [ starting row        if ((posn(ego, 0, 71, 159, 71) ||             posn(ego, 0, 68, 159, 68) ||             posn(ego, 0, 64, 159, 65)))          {          [ move Jerrod to row 70          EgoY = 70;          }        if (posn(ego, 0, 77, 159, 77))          {          [ move Jerrod to row 76          EgoY = 76;          }          [         vTmpStep = 0;        EgoX = 71;        [ now move Jerrod to center of boat so he can        [ then be moved off        move.obj.v(ego, EgoX, EgoY, vTmpStep, fEgoMoved);        vEgoStatus = 1;        }      else        {        [ on the gang plank; skip the first force movement        [ by setting fEgoMoved flag        set(fEgoMoved);        vEgoStatus = 1;        }      [ now tell Jerrod to get off      print.at("Disembark! You have no ticket!", 2, 5, 35);      }    else      {      [ if doesn't have a ticke but is off the ship,      [ it's OK to call 'all aboard' in order to set sail      vBoardTimer = 1;      set(fShowScore);      print.at("All aboard!!", 2, 14, 0);      }    }  }  [ if boarding timer is activatedif (vBoardTimer > 0)  {  [ increment the timer  ++vBoardTimer;  [ after 50 cycles, ship is ready to go  if (vBoardTimer == 50)    {    [ reset the timer    vBoardTimer = 0;        [ if Jerrod has a ticket    if ((TicketChoice == TKT_CAPE || TicketChoice == TKT_PANAMA))      {      [ close the 'all aboard' message      close.window();      [ if Jerrod is onboard and OK to score,       if (isset(OnSteamship) && isset(fShowScore))        {        reset(fShowScore);        [ if Jerrod didn't find the cold coin in the gazebo        if (!has("Gold coin"))          {          [ warn player that they missed something          print.at("You still lack something small, but valuable, that you may "                   "need in  California.", 12, 3, 0);          }        [ provide feedback on player's current score, leaving the message up        set(leaveWindow);        if (currentScore == 60)          {          print.at("You have 60 out of 60!!\n\n   CONGRATULATIONS!!", 14, 2, 0);          }        else          {          if (OnGrassCount == 0)            {            print.at("You have %v3 points out of the 60 points available in "                     "Brooklyn! You've missed something somewhere!!", 12, 3, 23);            }          else            {            print.at("You have %v3 points out of the 60 points available in "                     "Brooklyn! Staying off the grass would help!!", 12, 3, 23);            }          }        }      }    else      {      [ Jerrod doesn't have a ticket; ship is ready to go            [ if still on the ship or on the gangplank            if ((isset(OnSteamship) || isset(OnGangplank)))        {        [ need to skip ahead; don't close the 'disembark'        [ message until Jerrod is fully off the ship        goto(MoveJerrodOffShip);        }      [      close.window();      }    }  }  MoveJerrodOffShip:[ if Jerrod is being moved off the ship because he doesn't[ have a ticket, and he's reached first pointif (isset(fEgoMoved) && vEgoStatus == 1)  {  [ move him to the dock, off the ship  reset(fEgoMoved);  vEgoStatus = 2;  move.obj(ego, 71, 92, 0, fEgoMoved);  }  [ once Jerrod is off the gangplankif (isset(fEgoMoved) && vEgoStatus == 2)  {  [ he's free to move again (player control is restored  [ automatically by mov.obj command after ego reaches  [ destination)  reset(fEgoMoved);  vEgoStatus = 3;  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 5, 87, 5, 105))  {  reset(ShipDocked);  new.room(rm.WarehouseInterior); [ ##LE002##  }if (edgeEgoHit == BOTTOM_EDGE)  {  reset(ShipDocked);  new.room(rm.Bank); [ ##LE003##  }    [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look warehouse/look buildingif ((said("examine", "warehouse") ||     said("examine", "building")))  {  print("The warehouse has been built recently.");  }  [ look dockif (said("examine", "dock"))  {  print("At the end of the dock is the warehouse.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "east river") ||     said("examine", "ocean")))  {  print("This is the East River.");  }  [ look across/look New Yorkif ((said("examine", "across") ||     said("examine", "new york") ||     said("examine", "scene")))  {  print("From the end of the dock you get an impressive view of New York City!");  }  [ look shipif (said("examine", "boat"))  {  if (isset(ShipDocked))    {    print("The ship is preparing for departure.");    }  else    {    print("The ship is gone.");    }  }  [ look man/crew/mate/captainif ((said("examine", "boy") ||     said("examine", "crew") ||     said("examine", "crewman") ||     said("examine", "crew", "boy") ||     said("examine", "captain") ||     said("examine", "mate") ||     said("examine", "first", "mate")))  {  [ get distances to crewman and pedestrian  distance(ego, oCrewman, vCrewDist);  distance(ego, oPedestrian, vPedDist);  [ if at least one person is near  if ((vCrewDist < 60 || vPedDist < 60))    {    [ if crewman is close enough    if (vCrewDist < 60)      {      print("It looks like this is the man who checks for tickets. He also "            "looks like he is ready to get on the high seas, soon!");      }    [ if pedestrian is close enough    if (vPedDist < 60)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.Captain)        {        print("The captain of this vessel struts proudly across the ship's "              "deck.");        }      if (vPedDist == vw.Sailor2)        {        print("The first mate is busy attending to his duties.");        }      if (vPedDist == vw.BoilerTech)        {        print("The laborer is anxious for the ship to depart.");        }      }    }  else    {    [ if neither is on screen    if (vCrewDist == 255 && vPedDist == 255)      {      print("There is no one around.");      }    else      {      [ someone is here, just too far away      print("You need to get a little closer to get a good look.");      }    }  }  [ talk man/crewman/captain/mateif ((said("speak", "boy") ||     said("speak", "crew") ||     said("speak", "crew", "boy") ||     said("speak") ||     said("speak", "crewman") ||     said("speak", "worker") ||     said("speak", "captain") ||     said("speak", "mate") ||     said("speak", "first", "mate")))  {  [ determine distances  distance(ego, oCrewman, vCrewDist);  distance(ego, oPedestrian, vPedDist);  [ if at least one is close enough  if ((vCrewDist < 40 || vPedDist < 40))    {    [ if crewman is close enough    if (vCrewDist < 40)      {      [ determine how much time before ship leaves      vTimeLeft = ShipDepartureTime;      vTimeLeft -= GameMinutes;      vTimeLeft  += 1;      if (vTimeLeft == 1)        {        print("The crewman says, \"The ship will be leaving in less than 1 "              "minute!\"");        }      else        {        print("The crewman says, \"The ship will be leaving in %v234 minutes.\"");        }      }    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.Captain)        {        print("\"Welcome aboard the `Sea Farer!' It is my hope that my crew, my "              "vessel and myself will be of service to you,\" says the captain.");        }      if (vPedDist == vw.Sailor2)        {        print("This crew member says, \"Ahoy mate! It won't be much longer and "              "we will be departing for distant lands. I hope you will be with "              "us!");        }      if (vPedDist == vw.BoilerTech)        {        print("The worker says, \"Uhhhhh, all I know is that I, uhhhh, put the "              "coal in the boiler and, uhhh, I get to go where the ship goes.\"");        }      }    }  else    {    [ if neither are on screen    if (vCrewDist == 255 && vPedDist == 255)      {      print("There isn't a seafaring soul in sight.");      }    else      {      [ someone is here, just too far away      print("There is someone in sight, but not close enough to talk to.");      }    }  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  if (isset(ShipDocked))    {    print("The new warehouse stands at the end of the dock. There is a ship "          "preparing for departure.");    }  else    {    print("You see the dock and the warehouse.");    }  }  [ look seagullif (said("examine", "bird"))  {  print("Sea gulls are common sights along the river front.");  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "creek") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "creek") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "creek") ||     said("enter", "ocean")))  {  print("You have more sense than that! That water is cold!!");  }  [ look mastif (said("examine", "mast"))  {  if (isset(ShipDocked))    {    print("The mast looks very sturdy!");    }  else    {    print("The ship is gone.");    }  }  [ look paddle wheelif ((said("examine", "wheel") ||     said("examine", "paddle", "wheel") ||     said("examine", "paddle")))  {  if (isset(ShipDocked))    {    print("The paddle wheel is massive!");    }  else    {    print("The ship is gone.");    }  }  [ look riggingif ((said("examine", "rope") || said("examine", "rigging")))  {  if (isset(ShipDocked))    {    print("The \"Sea Farer\" is outfitted with brand-new rigging!");    }  else    {    print("The ship is gone.");    }  }  [ get ticket/buy ticketif ((said("acquire", "ticket") ||     said("buy", "ticket") ||     said("ask", "ticket")))  {  if (isset(ShipDocked))    {    [ can't buy a ticket at the ship    print("Tickets are not available here!");    }  else    {    print("The ship is gone.");    }  }  [ look smokestackif ((said("examine", "smokestack") ||     said("examine", "pole") ||     said("examine", "pipe")))  {  if (isset(ShipDocked))    {    print("The smokestack has been polished to a fine shine!");    }  else    {    print("The ship is gone.");    }  }  [ give ticket/show ticketif ((said("contribute", "ticket") ||     said("contribute", "anyword", "ticket") ||     said("contribute", "ticket", "anyword") ||     said("show", "ticket") ||     said("show", "anyword", "ticket") ||     said("show", "ticket", "anyword")))  {  if ((has("Cape Horn ticket") ||       has("Panama ticket")))    {    [ if ship is gone, then it's too late    if (isset(ShipSailed))      {      print("The boat is already gone.");      }    else      {      [ if Jerrod onboard the ship      if (isset(OnSteamship))        {        print("The crewman says, \"The ship is ready to go, we have been "              "waiting for you. Let's get going!\"");        [ set phase so the departure sequence will start        SteamshipPhase = 1;        }      else        {        print("Shouldn't you get on the ship first?");        }      }    }  else    {    [ wrong place to use a stagecoach ticket    if (has("Stage coach ticket"))      {      print("That ticket will do you no good here!");      }    else      {      print("You don't have a ticket!");      }    }  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 2 "The warehouse has been built recently."#message 3 "At the end of the dock is the warehouse."#message 4 "This is the East River."#message 5 "From the end of the dock you get an impressive view of New York City!"#message 7 "The ship is preparing for departure."#message 8 "The ship is gone."#message 9 "The captain of this vessel struts proudly across the ship's deck."#message 10 "The first mate is busy attending to his duties."#message 11 "The laborer is anxious for the ship to depart."#message 12 "You need to get a little closer to get a good look."#message 13 "There is no one around."#message 14 "It looks like this is the man who checks for tickets. He also looks like he is ready to get on the high seas, soon!"#message 15 "\"Welcome aboard the `Sea Farer!' It is my hope that my crew, my vessel and myself will be of service to you,\" says the captain."#message 16 "This crew member says, \"Ahoy mate! It won't be much longer and we will be departing for distant lands. I hope you will be with us!"#message 17 "The worker says, \"Uhhhhh, all I know is that I, uhhhh, put the coal in the boiler and, uhhh, I get to go where the ship goes.\""#message 18 "There isn't a seafaring soul in sight."#message 19 "There is someone in sight, but not close enough to talk to."#message 20 "You have %v3 points out of the 60 points available in Brooklyn! You've missed something somewhere!!"#message 21 "You have %v3 points out of the 60 points available in Brooklyn! Staying off the grass would help!!"#message 22 "You have 60 out of 60!!\n\n   CONGRATULATIONS!!"#message 23 "The crewman says, \"The ship will be leaving in %v234 minutes.\""#message 24 "All aboard!!"#message 25 "Disembark! You have no ticket!"#message 26 "The new warehouse stands at the end of the dock. There is a ship preparing for departure."#message 27 "You see the dock and the warehouse."#message 28 "Sea gulls are common sights along the river front."#message 29 "The crewman says, \"The ship will be leaving in less than 1 minute!\""#message 30 "You have more sense than that! That water is cold!!"#message 31 "The mast looks very sturdy!"#message 32 "The paddle wheel is massive!"#message 33 "The \"Sea Farer\" is outfitted with brand-new rigging!"#message 34 "Tickets are not available here!"#message 35 "The smokestack has been polished to a fine shine!"#message 39 "You don't have a ticket!"#message 40 "That ticket will do you no good here!"#message 41 "You still lack something small, but valuable, that you may need in  California."#message 42 "The boat is already gone."#message 43 "The crewman says, \"The ship is ready to go, we have been waiting for you. Let's get going!\""#message 44 "Shouldn't you get on the ship first?"