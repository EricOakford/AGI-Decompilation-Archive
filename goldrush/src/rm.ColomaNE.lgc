[***********************************************************[[ rm.ColomaNE[[ This is the northeast corner of Coloma. Nothing happens in[ this room.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define vPanTimer                  v220#define vPanStatus                 v221#define fWading                    f220#define fOnShore                   f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load the mule logic  load.logics(lgc.Mule);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.WadingJerrodCA);  load.view(vw.Tents);  load.view(vw.Panning);    [ load and draw current room picture  load.pic(currentRoom);  draw.pic(currentRoom);    [ add a tent  add.to.pic(vw.Tents, 0, 0, 1, 77, 0, 4);    [ set horizon so Jerrod can get in the river  set.horizon(35);    [ Jerrod, in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization steps    call(lgc.Mule);    }      [ now show the picture  show.pic();    [ clear the custom status line  clear.lines(24, 24, BLACK);    [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }[ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is on the water but is not wadingif (isset(onWater) && !isset(fWading))  {  [ start wading  set(fWading);  [ switch to wading view  set.priority(ego, 8);  set.view(ego, vw.WadingJerrodCA);  }  [ if Jerrod is not on water and is wadingif (!isset(onWater) && isset(fWading))  {  [ stop wading  reset(fWading);  [ restore normal view  release.priority(ego);  set.view(ego, vw.JerrodCA);  }  [ if Jerrod is on shore or in water and flag not setif (posn(ego, 41, 70, 159, 98) && !isset(fOnShore))  {  [ set flag to ignore conditional line so Jerrod can go in  [ the water (the control line keeps mule from going into  [ the river)  set(fOnShore);  ignore.blocks(ego);  }  [ if Jerrod is not on shore or in water and flag is setif (!posn(ego, 41, 70, 159, 98) && isset(fOnShore))  {  [ reset the flag, and observe blocks  reset(fOnShore);  observe.blocks(ego);  }  [ if pan timer is activeif (vPanTimer > 0)  {  [ increment timer  ++vPanTimer;  }  [ after 15 cycles of panningif (vPanTimer == 15 && vPanStatus == 1)  {  [ reset timer and status  vPanTimer = 0;  vPanStatus = 0;  [ no gold in Coloma  print("Nothin'!");  [ restore wading view  set.view(ego, vw.WadingJerrodCA);  [ Jerrod can continue moving  start.motion(ego);  [ reset cycle at rest flag  reset(CycleAtRest);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckExits);  }  [ look around/lookif ((said("examine", "around") || said("examine")))  {  print("There's not much to look at on the edge of town, but ya can see the "        "Green Pastures Hotel from anywhere in town!");  }  [ look grassif (said("examine", "grass"))  {  print("This is just wild grass.");  }  [ look treeif (said("examine", "forest"))  {  print("This is just one of the mighty trees found in these parts.");  }  [ look rockif (said("examine", "rock"))  {  print("This is just another rock.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "american", "creek")))  {  print("Here's a great view of the American River!");  }  [ look roadif ((said("examine", "path") ||     said("examine", "main", "path") ||     said("examine", "sacramento", "path")))  {  print("Here, Main Street turns into Sacramento Street.");  }  [ look tentif (said("examine", "tent"))  {  print("This is one of the many tents 'round town.");  }  [ look in tent/enter tentif ((said("examine", "in", "tent") ||     said("enter", "tent")))  {  print("There is nothin' of interest in the tent.");  }  [ look across riverif ((said("examine", "across") ||     said("examine", "across", "creek") ||     said("examine", "across", "water") ||     said("examine", "across", "american", "creek")))  {  print("There's more of the same terrain on the other side of the American "        "River.");  }  [ look hotelif ((said("examine", "hotel") ||     said("examine", "green", "pasture", "hotel") ||     said("examine", "green", "pasture") ||     said("examine", "coloma") ||     said("examine", "city")))  {  print("The Green Pastures Hotel is the main attraction in Coloma.");  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  [ if Jerrod has a pan  if (has("Gold pan"))    {    [ if Jerrod is in water, wading    if (isset(fWading))      {      [ switch to panning view      set.view(ego, vw.Panning);      set.cel(ego, 0);      [ Jerrod stops moving while panning      stop.motion(ego);      [ start timer and set status      vPanTimer = 1;      vPanStatus = 1;      [ allow ego object to cycle at rest      set(CycleAtRest);      [ begin cycling (panning)      start.cycling(ego);      }    else      {      print("Ya can't be pannin' unless yer in the water!");      }    }  else    {    print("If yer gonna pan, ya gotta get one!");    }  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  if (has("Shovel"))    {    print("Don't dig up the town! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ (unlike most other logics, the check for exit condition[ happens LAST in this room)CheckExits:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ process mule related commands before checking exits  call(lgc.Mule);  }if (edgeEgoHit != NOT_HIT)  {  if (edgeEgoHit == LEFT_EDGE)    {    --WildernessX;    new.room(rm.ColomaNorth); [ ##LE001##    }  if (edgeEgoHit == RIGHT_EDGE)    {    ++WildernessX;    new.room(lgc.AmRiverWild); [ ##LE002##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    ++WildernessY;    new.room(rm.ColomaEast); [ ##LE003##    }  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "There's not much to look at on the edge of town, but ya can see the Green Pastures Hotel from anywhere in town!"#message 2 "This is just wild grass."#message 3 "This is just one of the mighty trees found in these parts."#message 4 "This is just another rock."#message 5 "Here's a great view of the American River!"#message 6 "Here, Main Street turns into Sacramento Street."#message 7 "This is one of the many tents 'round town."#message 8 "There's more of the same terrain on the other side of the American River."#message 9 "Ya can't be pannin' unless yer in the water!"#message 10 "If yer gonna pan, ya gotta get one!"#message 11 "Nothin'!"#message 12 "There is nothin' of interest in the tent."#message 13 "The Green Pastures Hotel is the main attraction in Coloma."#message 40 "Don't dig up the town! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya need to be in the water!"