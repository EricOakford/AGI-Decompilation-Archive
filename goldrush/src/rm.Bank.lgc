[***********************************************************[[ rm.Bank[[ the right edge of town; just south of the warehouse and [ steam ship dock; the main feature in this room is the[ bank, which has a main entrance, and also an entrance in[ the back out of view. The real estate agent and a lady are[ wandering around this room.[ The chain fence that should keep people from falling in [ water seems to work for everyone but Jerrod![[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSteamship                   o1#define oBankDoor                    o2#define oFlag                        o3#define oChains1                     o4#define oChains2                     o5#define oChains3                     o6#define oGull1                       o7#define oGull2                       o8#define oPedestrian                  o9#define oCrewmember                 o10#define vFallX                     v220#define vFallY                     v221#define vChainStatusR              v222#define vChainStatusL              v223#define vGullCycle                 v224#define vCrewDist                  v225#define vGullStep                  v226#define vGullX                     v227#define vGullY                     v228#define vShipTimer                 v229#define vPedStatus                 v230#define vCrewStatus                v231#define vPedDist                   v232#define vPedX                      v233#define vPedY                      v234#define vCrewX                     v235#define vCrewY                     v236#define fFlagDoneB                 f220 [ backward#define fFlagDoneF                 f221 [ forward#define fFallingRight              f222#define fFallingLeft               f223#define fDoorMoved                 f224#define fChainsMovedR              f225#define fChainsMovedL              f226#define fChainCheck1               f227#define fChainCheck2               f228#define fChainCheck3               f229#define fChainCheck4               f230#define fChainCheck5               f231[ f232 is not used#define fDoorOpen                  f233#define fGull1Moved                f234#define fGull2Moved                f235#define fStartShip                 f236#define fMoveShip                  f237#define fTreePoster                f238#define fPedMoved                  f239#define fCrewMoved                 f240[ f241 - f244 are not used#define fSndDone                   f245#define fDoorSound                 f246[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discount room picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ views for additions to the picture  load.view(vw.SkylineArt);  load.view(vw.Posters);    [ add the skyline   add.to.pic(vw.SkylineArt, 0, 5, 40, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 6, 60, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 100, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 120, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 140, 52, 4, 4);    [ if the gold rush has been announced,  if (isset(RushIsPublic))    {    [ add the poster    add.to.pic(vw.Posters, 0, 3, 72, 100, 11, 11);    set(fTreePoster);    }      [ horizon art not needed anymore  [ (this also discards vw.Posters, if it was loaded)  discard.view(vw.SkylineArt);    [ load views used in the room  load.view(vw.JerrodNY);  load.view(vw.FallingJerrodNY);  load.view(vw.BankArt);  load.view  (vw.Chains);  load.view(vw.StmshipLg);  load.view(vw.Gulls);  load.view(vw.Agent);  load.view(vw.Sailor1);  load.view(vw.Sailor4);  load.view(vw.Lady);    [ load the various sounds used in the room  load.sound(m.Death);  load.sound(s.Splash);  load.sound(s.Effect1);  load.sound(s.Effect2);    [ add the chains used along the walk to keep people from  [ falling in the water (even though they won't stop Jerrod  [ from falling in!)  set.view(oChains1, vw.Chains);  set.cel(oChains1, 0);  position(oChains1, 60, 69);  animate.obj(oChains1);  set.priority(oChains1, 7);  draw(oChains1);  stop.cycling(oChains1);  [ chain #2  set.view(oChains2, vw.Chains);  set.cel(oChains2, 0);  position(oChains2, 88, 65);  animate.obj(oChains2);  set.priority(oChains2, 7);  draw(oChains2);  stop.cycling(oChains2);  [ there is a 'half' chain section in this room  animate.obj(oChains3);  set.view(oChains3, vw.BankArt);  set.loop(oChains3, 2);  set.cel(oChains3, 0);  position(oChains3, 151, 63);  set.priority(oChains3, 7);  draw(oChains3);  stop.cycling(oChains3);    [if ship hasn't sailed yet  if (!isset(ShipSailed))    {    [ add the ship (it's close so use the large view)    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipLg);    set.priority(oSteamship, 5);    set.loop(oSteamship, 0);    set.cel(oSteamship, 0);    position(oSteamship, 107, 55);    draw(oSteamship);    stop.update(oSteamship);    set(ShipVisible);    }      [ add the flag in front of the bank  animate.obj(oFlag);  set.view(oFlag, vw.BankArt);  set.loop(oFlag, 1);  ignore.horizon(oFlag);  position(oFlag, 103, 18);  set.priority(oFlag, 9);  animate.obj(oFlag);  draw(oFlag);    [ two seagulls fly around randomly  set.view(oGull1, vw.Gulls);  animate.obj(oGull1);  ignore.horizon(oGull1);  ignore.blocks(oGull1);  ignore.objs(oGull1);  position(oGull1, 30, 25);  set.priority(oGull1, 6);  vGullCycle = 2;  cycle.time(oGull1, vGullCycle);  set(fGull1Moved);  draw(oGull1);  [ seagull #2  set.view(oGull2, vw.Gulls);  animate.obj(oGull2);  ignore.horizon(oGull2);  ignore.blocks(oGull2);  ignore.objs(oGull2);  position(oGull2, 50, 35);  set.priority(oGull2, 6);  cycle.time(oGull2, vGullCycle);  set(fGull2Moved);  draw(oGull2);    [ the pedestrian can be one of two people  animate.obj(oPedestrian);  [ pedestrian starts off screen  vPedStatus = 10;    [ add the ship crewmember  animate.obj(oCrewmember);  [ he starts off screen  vCrewStatus = 10;    [ Jerrod in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ adjust Jerrod's starting postion, depending on which  [ room he came from  if (previousRoom == rm.BrooklynDock)    {    position(ego, 124, 74);    }  if (previousRoom == rm.PostOffice)    {    if (posn(ego, 80, 70, 100, 77))      {      position(ego, 37, 167);      }    if (posn(ego, 101, 70, 119, 77))      {      position(ego, 87, 167);      }    if (posn(ego, 120, 70, 136, 77))      {      position(ego, 127, 167);      }    if (posn(ego, 137, 70, 159, 77))      {      position(ego, 149, 167);      }    }  if (previousRoom == rm.WaterSt_Left)    {    position(ego, 35, 90);    }      [ conditional control lines are used as borders for walls  [ and objects, so Jerrod has to observe blocks  observe.blocks(ego);  [ draw Jerrod on the screen  draw(ego);    [ bank door  animate.obj(oBankDoor);  set.view(oBankDoor, vw.BankArt);  set.loop(oBankDoor, 0);  set.cel(oBankDoor, 0);  [ if Jerrod is coming out of the bank  if (previousRoom == rm.BankInterior &&       posn(ego, 29, 135, 29, 135))    {    [ show the door as open    set.cel(oBankDoor, 3);    set(fDoorOpen);    }  position(oBankDoor, 27, 129);  set.priority(oBankDoor, 10);  draw(oBankDoor);  stop.update(oBankDoor);    [ now show the picture  show.pic();    [ set fFlagDoneB so the flag will begin waving forward  set(fFlagDoneB);    [ set a block on right edge - this creates a very tiny  [ spot on right edge where Jerrod won't fall over chains;  [ not sure why this block is needed    block(151, 68, 159, 73);  }  [ **************************************[ EVERY CYCLE[ **************************************  [ if pedestrian is not on screenif (vPedStatus > 9)  {  [ use random number to determine if pedestrian reappears  random(25, 100, vPedStatus);  [ one in 80 chance  if (vPedStatus == 77)    {    [ choose one of two pedestrians    random(0, 1, vPedStatus);    if (vPedStatus == 0)      {      [ the real estate agent      set.view(oPedestrian, vw.Agent);      }    if (vPedStatus == 1)      {      [ the lady whose husband is in California      set.view(oPedestrian, vw.Lady);      }    [ pick a random starting location (one of three)    random(0, 2, vPedStatus);    if (vPedStatus == 0)      {      set.loop(oPedestrian, 0);      position(oPedestrian, 44, 83);      draw(oPedestrian);      move.obj(oPedestrian, 125, 83, 1, fPedMoved);      [ first destination is point '3'      vPedStatus = 3;      }    if (vPedStatus == 1)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 83);      draw(oPedestrian);      move.obj(oPedestrian, 125, 83, 1, fPedMoved);      [ first destination is point '3'      vPedStatus = 3;      }    if (vPedStatus == 2)      {      set.loop(oPedestrian, 1);      position(oPedestrian, 152, 162);      draw(oPedestrian);      move.obj(oPedestrian, 125, 162, 1, fPedMoved);      [ first destination is point '6'      vPedStatus = 6;      }    }  }  [ if pedestrian reaches point '3'if (isset(fPedMoved) && vPedStatus == 3)  {  [ choose a random location for next destination  reset(fPedMoved);  random(0, 2, vPedStatus);  if (vPedStatus == 0)    {    move.obj(oPedestrian, 44, 83, 1, fPedMoved);    [ this is last leg    vPedStatus = 9;    }  if (vPedStatus == 1)    {    move.obj(oPedestrian, 152, 83, 1, fPedMoved);    [ this is last leg    vPedStatus = 9;    }  if (vPedStatus == 2)    {    move.obj(oPedestrian, 125, 162, 1, fPedMoved);    [ destination is point '4'    vPedStatus = 4;    }  }[ if pedestrian reaches point '4'if (isset(fPedMoved) && vPedStatus == 4)  {  [ move to point '5'  reset(fPedMoved);  vPedStatus = 5;  move.obj(oPedestrian, 125, 162, 1, fPedMoved);  }[ if pedestrian reaches point '5'if (isset(fPedMoved) && vPedStatus == 5)  {  [ start last leg  reset(fPedMoved);  vPedStatus = 9;  move.obj(oPedestrian, 152, 162, 1, fPedMoved);  }  [ if pedestrian reaches point '6'if (isset(fPedMoved) && vPedStatus == 6)  {  [ move to point '3'  reset(fPedMoved);  vPedStatus = 3;  move.obj(oPedestrian, 125, 83, 1, fPedMoved);  }  [ when last leg is doneif (isset(fPedMoved) && vPedStatus == 9)  {  [ remove pedestrian from screen  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }  [ if no crewmember around, and ship is still inportif (vCrewStatus > 9 && !isset(ShipSailed))  {  [ random chance crewmember will walk by  random(25, 100, vCrewStatus);  [ one in 80 chance  if (vCrewStatus == 77)    {    [ choose a random crewmember    random(0, 1, vCrewStatus);    if (vCrewStatus == 0)      {      set.view(oCrewmember, vw.Sailor4);      }    if (vCrewStatus == 1)      {      set.view(oCrewmember, vw.Sailor1);      }    [ choose a random starting location    random(0, 3, vCrewStatus);    if (vCrewStatus == 0)      {      set.loop(oCrewmember, 0);      position(oCrewmember, 43, 85);      draw(oCrewmember);      move.obj(oCrewmember, 85, 112, 1, fCrewMoved);      [ first destination is point '6'      vCrewStatus = 6;      }    if (vCrewStatus == 1)      {      set.loop(oCrewmember, 1);      position(oCrewmember, 152, 80);      draw(oCrewmember);      move.obj(oCrewmember, 115, 80, 1, fCrewMoved);      [ first destination is point '6'      vCrewStatus = 6;      }    if (vCrewStatus == 2)      {      set.loop(oCrewmember, 1);      position(oCrewmember, 152, 113);      draw(oCrewmember);      move.obj(oCrewmember, 115, 113, 1, fCrewMoved);      [ first destination is point '5'      vCrewStatus = 5;      }    if (vCrewStatus == 3)      {      set.loop(oCrewmember, 2);      position(oCrewmember, 115, 167);      draw(oCrewmember);      move.obj(oCrewmember, 115, 113, 1, fCrewMoved);      [ first destination is point '5'      vCrewStatus = 5;      }    }  }  [ if crewmember reaches point '6'if (isset(fCrewMoved) && vCrewStatus == 6)  {  reset(fCrewMoved);  [ move to point '5'  vCrewStatus = 5;  move.obj(oCrewmember, 115, 113, 1, fCrewMoved);  }[ if crewman reaches point '5'if (isset(fCrewMoved) && vCrewStatus == 5)  {  [ choose a random location for next destination  reset(fCrewMoved);  random(0, 3, vCrewStatus);  if (vCrewStatus == 0)    {    move.obj(oCrewmember, 85, 112, 1, fCrewMoved);    vCrewStatus = 7;    }  if (vCrewStatus == 1)    {    move.obj(oCrewmember, 115, 80, 1, fCrewMoved);    vCrewStatus = 8;    }  if (vCrewStatus == 2)    {    move.obj(oCrewmember, 152, 113, 1, fCrewMoved);    vCrewStatus = 9;    }  if (vCrewStatus == 3)    {    move.obj(oCrewmember, 115, 167, 1, fCrewMoved);    vCrewStatus = 9;    }  }  [ if crewman reaches point '7'if (isset(fCrewMoved) && vCrewStatus == 7)  {  reset(fCrewMoved);  [ this is last leg  vCrewStatus = 9;  move.obj(oCrewmember, 45, 101, 1, fCrewMoved);  }    [ if crewman reaches point '8'if (isset(fCrewMoved) && vCrewStatus == 8)  {  [ this is last leg  reset(fCrewMoved);  vCrewStatus = 9;  move.obj(oCrewmember, 152, 80, 1, fCrewMoved);  }  [ if crewman reaches final pointif (isset(fCrewMoved) && vCrewStatus == 9)  {  [ remove him from screen  reset(fCrewMoved);  vCrewStatus = 10;  erase(oCrewmember);  }  [ get pedestrian's current positionget.posn(oPedestrian, vPedX, vPedY);[ if pedestrian has not moved (blocked by Jerrod)if (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling when not moving  stop.cycling(oPedestrian);  }else  {  [ cycle when moving  start.cycling(oPedestrian);  }[ save pedestrian's positionOldObj1X = vPedX;OldObj1Y = vPedY;[ get crewmember's current positionget.posn(oCrewmember, vCrewX, vCrewY);[ if crewmember has mot movedif (OldObj2X == vCrewX && OldObj2Y == vCrewY)  {  [ stop cycling when not moving  stop.cycling(oCrewmember);  }else  {  [ cycle when moving  start.cycling(oCrewmember);  }[ save crewmember's positionOldObj2X = vCrewX;OldObj2Y = vCrewY;[ if Jerrod gets too close to the chains, he could fall[ in the water (if he hasn't already)[ if near the 'half' chains on rightif (posn(ego, 149, 70, 159, 74) && EgoHealthStatus == 0)  {  [ if at near edge of chains  if (EgoY == 74)    {    [ if moving back to safe area    if ((egoDir == DOWN ||         egoDir == DOWN_LEFT ||         egoDir == DOWN_RIGHT))      {      [ reset chains to normal position      set.cel(oChains3, 0);      [ force them to redraw      force.update(oChains3);      [ then stop updating      stop.update(oChains3);      }    }  [ if one step past safe area  if (EgoY == 73)    {    [ bump the chains    start.update(oChains3);    set.cel(oChains3, 1);    }  [ if two steps past safe area  if (EgoY == 72)    {    [ bump the chains further    set.cel(oChains3, 2);    }  [ if three steps past the chains  if (EgoY == 71)    {    [ chains bumped as far as possible    set.cel(oChains3, 3);    }  [ if over the edge  if (EgoY == 70)    {    [ Jerrod falls in the water!        [ set priority so he will fall behind the road    [ into the water    set.priority(ego, 6);    [ change his status to 'death is imminent'    EgoHealthStatus = 2;    [ adjust his position efore showing falling loop    TmpX = -3; [ 253;    TmpY = 0;    reposition(ego, TmpX, TmpY);    set.view(ego, vw.FallingJerrodNY);    [ ignore the block so he can fall correctly    ignore.objs(ego);    vFallX = 116;    vFallY = 3;    ignore.blocks(ego);    [ move Jerrod downward to have him disappear into     [ the water    move.obj.v(ego, EgoX, vFallX, vFallY, DoneNoAction);    [ set flag to indiate he's falling over right chains    set(fFallingRight);    }  }  [ if Jerrod is fallingif (EgoHealthStatus == 2)  {  [ 'rattle' the chains as he falls; done in several cycles  [ of looping the chains forward and back    [ if falling on the right side  if (isset(fFallingRight))    {    [ rattle the 'half' chains on right    if (vChainStatusR == 0)      {      set.cel(oChains3, 0);      end.of.loop(oChains3, fChainsMovedR);      [ next cycle      vChainStatusR = 1;      }    if (isset(fChainsMovedR) && vChainStatusR == 1)      {      reset(fChainsMovedR);      reverse.loop(oChains3, fChainsMovedR);      [ next cycle      vChainStatusR = 2;      }    if (isset(fChainsMovedR) && vChainStatusR == 2)      {      reset(fChainsMovedR);      end.of.loop(oChains3, fChainsMovedR);      [ next cycle      vChainStatusR = 3;      }    if (isset(fChainsMovedR) && vChainStatusR == 3)      {      reset(fChainsMovedR);      reverse.loop(oChains3, fChainsMovedR);      [ next cycle      vChainStatusR = 4;      }    if (isset(fChainsMovedR) && vChainStatusR == 4)      {      reset(fChainsMovedR);      [ last cycle; Jerrod's gone - play the splash sound      vChainStatusR = 5;      erase(ego);      sound(s.Splash, fSndDone);      }    [ after the splash is done    if (isset(fSndDone) && vChainStatusR == 5)      {      [ reset flag      reset(fSndDone);      vChainStatusR = 6;      [ play death sound      sound(m.Death, fSndDone);      [ no input when dead      prevent.input();      stop.motion(ego);      [ Jerrod is officially dead      set(JerrodIsDead);      display(22, 0, "There is no gold here, but don't give up until you find "              "it!");      }    }      [ if falling over chains on left  if (isset(fFallingLeft))    {    if (vChainStatusL == 0)      {      [ start 'rattling' chains on left,       [ out of synch      set.cel(oChains1, 0);      end.of.loop(oChains1, fChainsMovedL);      set.cel(oChains2, 0);      end.of.loop(oChains2, fChainsMovedL);      [ next cycle      vChainStatusL = 1;      }    if (isset(fChainsMovedL) && vChainStatusL == 1)      {      reset(fChainsMovedL);      reverse.loop(oChains2, fChainsMovedL);      reverse.loop(oChains1, fChainsMovedL);      [ next cycle      vChainStatusL = 2;      }    if (isset(fChainsMovedL) && vChainStatusL == 2)      {      reset(fChainsMovedL);      end.of.loop(oChains1, fChainsMovedL);      end.of.loop(oChains2, fChainsMovedL);      [ next cycle      vChainStatusL = 3;      }    if (isset(fChainsMovedL) && vChainStatusL == 3)      {      reset(fChainsMovedL);      reverse.loop(oChains2, fChainsMovedL);      reverse.loop(oChains1, fChainsMovedL);      [ next cycle       vChainStatusL = 4;      }    if (isset(fChainsMovedL) && vChainStatusL == 4)      {      reset(fChainsMovedL);      vChainStatusL = 5;      [ after chains done moving, remove Jerrod from      [ the screen, and play splash sound      erase(ego);      sound(s.Splash, fSndDone);      }    [ if splash is done    if (isset(fSndDone) && vChainStatusL == 5)      {      reset(fSndDone);      vChainStatusL = 6;      [ play death sound      sound(m.Death, fSndDone);      [ Jerrod is officially dead      set(JerrodIsDead);      [ no input while dead      prevent.input();      stop.motion(ego);      display(22, 0, "There is no gold here, but don't give up until you find "              "it!");      }    }  }  [ for chains on the left, it's a bit more complicated to see if Jerrod[ get too close[ reset the chain checks (used to see if Jerrod is getting[ too close the chains and falling in the water)reset(fChainCheck1);reset(fChainCheck2);reset(fChainCheck3);reset(fChainCheck4);reset(fChainCheck5);[ if along the horizontal chains at far left of screen[ set the appropriate flag based on ego's vertical positionif (posn(ego, 0, 75, 72, 79))  {  if (EgoY == 79)    {    set(fChainCheck1);    }  if (EgoY == 78)    {    set(fChainCheck2);    }  if (EgoY == 77)    {    set(fChainCheck3);    }  if (EgoY == 76)    {    set(fChainCheck4);    }  if (EgoY == 75)    {    set(fChainCheck5);    }  }[ slightly different vertical positions [ apply when ego is further to rightif (posn(ego, 73, 73, 100, 78))  {  if ((EgoY == 77 || EgoY == 78))    {    set(fChainCheck1);    }  if (EgoY == 76)    {    set(fChainCheck2);    }  if (EgoY == 75)    {    set(fChainCheck3);    }  if (EgoY == 74)    {    set(fChainCheck4);    }  if (EgoY == 73)    {    set(fChainCheck5);    }  }[ and also different vertical positions when ego is[ at the right end of the left-hand chainsif (posn(ego, 101, 71, 106, 76))  {  if ((EgoY == 75 || EgoY == 76))    {    set(fChainCheck1);    }  if (EgoY == 74)    {    set(fChainCheck2);    }  if (EgoY == 73)    {    set(fChainCheck3);    }  if (EgoY == 72)    {    set(fChainCheck4);    }  if (EgoY == 71)    {    set(fChainCheck5);    }  }  [ now, bump the chains based on which flag was setif (isset(fChainCheck1))  {  [ at edge of chains; if going toward safety,  if ((egoDir == DOWN ||       egoDir == DOWN_LEFT ||       egoDir == DOWN_RIGHT ||       egoDir == RIGHT))    {    [ reset the chains    set.cel(oChains1, 0);    set.cel(oChains2, 0);    }  }if (isset(fChainCheck2))  {  [ one step past safe area  set.cel(oChains1, 1);  set.cel(oChains2, 1);  }if (isset(fChainCheck3))  {  [ two steps past safe area  set.cel(oChains1, 2);  set.cel(oChains2, 2);  }if (isset(fChainCheck4))  {  [ three steps past safe area  set.cel(oChains1, 3);  set.cel(oChains2, 3);  }if (isset(fChainCheck5))  {  [ too far! he falls!    [ set priority so he will fall behind the road and into  [ the water  set.priority(ego, 6);  [ ignore any blocks   ignore.blocks(ego);  EgoHealthStatus = 2;  [ set the falling view  set.view(ego, vw.FallingJerrodNY);  [ move Jerrod downard to have him disappear into the water  vFallX = 116;  vFallY = 3;  move.obj.v(ego, EgoX, vFallX, vFallY, DoneNoAction);  [ set flag indicating he's falling  set(fFallingLeft);  }  [ if ship has sailed, but hasn't started moving yetif (isset(ShipSailed) &&     !isset(fStartShip) &&     SteamshipXL < 56)  {  set(fStartShip);  start.update(oSteamship);  set.view(oSteamship, vw.StmshipLg);  set.loop(oSteamship, 2);  fix.loop(oSteamship);  start.cycling(oSteamship);  set(fMoveShip);  }  [ if ship is set to moveif (isset(fMoveShip))  {  [ increment the timer  ++vShipTimer;  [ set initial X position for the large ship portion  SteamshipXL = 55;  }  [after appropriate amount of time (168 cycles)if (vShipTimer == 168)  {  [ increment timer up so this set of commands only gets run  [ once  ++vShipTimer;  [ remove ship from screen  reset(fMoveShip);  erase(oSteamship);  reset(ShipVisible);  }  [ if flag is done cycling backwardif (isset(fFlagDoneB))  {  [ cycle it forward  end.of.loop(oFlag, fFlagDoneF);  reset(fFlagDoneB);  }  [ if flag is done cycling forwardif (isset(fFlagDoneF))  {  [ cycle it backward  reverse.loop(oFlag, fFlagDoneB);  reset(fFlagDoneF);  }  [ the alarm line is used to indicate when Jerrod is[ by the bank door so it can open automatically[ if by the door and door is not openif (isset(egoHitSpecial) && !isset(fDoorOpen))  {  [ play door-open sound  sound(s.Effect1, fDoorSound);  start.update(oBankDoor);  [ temporarily halt Jerrod while door is opening  stop.update(ego);  [ open the door  end.of.loop(oBankDoor, fDoorMoved);  set(fDoorOpen);  }  [ if not by the door, and door is openif (!isset(egoHitSpecial) && isset(fDoorOpen))  {  [ close it  start.update(oBankDoor);  reverse.loop(oBankDoor, fDoorMoved);  reset(fDoorOpen);  }  [ if door has finished it's motion and Jerrod is NOT inside[ the bankif (isset(fDoorMoved) && !posn(ego, 14, 128, 16, 143))  {  [ stop updating door; it's done cycling  stop.update(oBankDoor);  [ allow Jerrod to continue moving  start.update(ego);  [ this command is unnecessary - start.update also starts  [ cycling  start.cycling(ego);  [ reset door moved flag  reset(fDoorMoved);  [ if door is now shut  if (!isset(fDoorOpen))    {    [ play door-closed sound    sound(s.Effect2, fDoorSound);    }  }  [ if gull #1 has reached destinationif (isset(fGull1Moved))  {  [ give it a new random destination  reset(fGull1Moved);  random(1, 116, vGullX);  random(5, 85, vGullY);  random(1, 2, vGullStep);  move.obj.v(oGull1, vGullX, vGullY, vGullStep, fGull1Moved);  }  [ if gull #2 has reached destinationif (isset(fGull2Moved))  {  [ give it a new random destination  reset(fGull2Moved);  random(1, 116, vGullX);  random(5, 85, vGullY);  random(1, 2, vGullStep);  move.obj.v(oGull2, vGullX, vGullY, vGullStep, fGull2Moved);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if ego went far enough into the bank, and door is done[ cyclingif (posn(ego, 14, 125, 14, 145) && isset(fDoorMoved))  {  [ reset the flag indicating the ship is visible; when  [ Jerrod comes back, the flag will be set again if the  [ ship is still here  reset(ShipVisible);  [ go into the bank, side entrance  position(ego, 140, 118);  new.room(rm.BankInterior); [ ##LE001##  }  [ there's a back door to the bank; hard to see, but it's[ thereif (posn(ego, 31, 107, 42, 107))  {  [ reset the flag indicating the ship is visible; when  [ Jerrod comes back, the flag will be set again if the  [ ship is still here  reset(ShipVisible);  [ go into bank, top entrance  position(ego, 94, 99);  [ from this direction, make sure ego is facing forward  [ when he enters the bank  set.loop(ego, 2);  egoDir = DOWN;  new.room(rm.BankInterior); [ ##LE002##  }  [ if at edge of path going to the dockif (posn(ego, 117, 73, 141, 73))  {  reset(ShipVisible);  new.room(rm.BrooklynDock); [ ##LE003##  }  [ if at left edge, behind the buildingif (posn(ego, 30, 71, 30, 107))  {  reset(ShipVisible);  new.room(rm.WaterSt_Left); [ ##LE004##  }  [ if an normal edge hit,if (edgeEgoHit != NOT_HIT)  {  reset(ShipVisible);  [ on right edge, make sure falling ego doesn't trigger  [ room change  if (edgeEgoHit == RIGHT_EDGE && EgoHealthStatus == 0)    {    new.room(rm.ParkNorth); [ ##LE005##    }  if (edgeEgoHit == BOTTOM_EDGE)    {    new.room(rm.PostOffice); [ ##LE006##    }  }    [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input[ no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ open doorif ((said("open", "door") ||     said("enter", "bank") ||     said("enter", "bank")))  {  print("Just walk up to the door and it will open.");  }  [ look buildingif (said("examine", "building"))  {  [ answer depends on which building Jerrod is closest to  if (posn(ego, 0, 68, 159, 100))    {    print("It wasn't long ago that a storm destroyed the old warehouse. "          "Already, the townspeople have built another one.");    }  else    {    print("This is the main bank in Brooklyn. Most of the folks in town have "          "their accounts here.");    }  }  [ look warehouseif (said("examine", "warehouse"))  {  print("It wasn't long ago that a storm destroyed the old warehouse. Already, "        "the townspeople have built another one.");  }  [ look bankif ((said("examine", "bank") ||     said("examine", "brooklyn", "bank")))  {  print("This is the main bank in Brooklyn. Most of the folks in town have "        "their accounts here.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "east river") ||     said("examine", "ocean")))  {  print("You see the East River.");  }  [ look flagif (said("examine", "flag"))  {  print("It isn't the same as Betsy Ross's, but it still bears the Stars and "        "Stripes.");  }  [ lowr flagif (said("lower", "flag"))  {  print("There is no need to lower the flag.");  }  [ raise flagif (said("raise", "flag"))  {  print("The flag was raised this morning at dawn.");  }  [ look parkif ((said("examine", "park") ||     said("examine", "brooklyn", "park")))  {  print("Across the street from the bank is the downtown Brooklyn Park.");  }  [ look roadif (said("examine", "path"))  {  print("The bank is on the corner of Water and Dock Streets.");  }  [ look New Yorkif (said("examine", "new york"))  {  print("It's a city full of razzle-dazzle.");  }  [ climb flag pole/get flagif ((said("climb", "pole") ||     said("climb", "flag", "pole") ||     said("acquire", "flag")))  {  print("You don't need to do that.");  }  [ look chainsif (said("examine", "chain"))  {  [ give Jerrod a clue about staying away from the chains  print("The chains are supposed to keep folks from falling into the East "        "River, but some people manage to get by them!");  }  [ look streetlampif (said("examine", "lamp"))  {  print("The streetlights light up the area outside the bank.");  }  [ look treeif (said("examine", "forest"))  {  print("The tree adds to the appearance of the bank.");  if (isset(fTreePoster))    {    print("There is a poster on the tree in front of the bank.");    }  }  [ look acrossif (said("examine", "across"))  {  print("Across the East River you see the metropolis of New York City.");  }  [ look dockif (said("examine", "dock"))  {  print("The dock leads to the warehouse.");  }  [ look shipif (said("examine", "boat"))  {  if (isset(ShipVisible))    {    print("The ship is preparing for departure.");    }  else    {    print("The ship is gone.");    }  }  [ look sign/read signif ((said("examine", "sign") ||     said("examine", "billboard") ||     said("read", "sign") ||     said("read", "billboard")))  {  if (isset(fTreePoster))    {    if (posn(ego, 60, 122, 81, 134))      {      print("    GOLD DISCOVERED\n    IN CALIFORNIA!!\n    Take to the sea\n "            "and RICH you will be! ");      }    else      {      print("You can't quite read the poster from here.");      }    }  else    {    print("There is no poster in sight!");    }  }  [ look manif (said("examine", "boy"))  {  [ get distances to pedestrian and crewman  distance(ego, oPedestrian, vPedDist);  distance(ego, oCrewmember, vCrewDist);  [ if either is close enough  if ((vPedDist < 60 || vCrewDist < 60))    {    [ if pedestrian is close enough    if (vPedDist < 60)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.Agent)        {        print("It wouldn't be suprising if that money-minded real estate man is "              "looking for change that has fallen on the ground!");        }      if (vPedDist == vw.Lady)        {        print("She replies, \"I beg your pardon, sir. I'm a lady.\"");        }      }    [ if crewmember is close enough    if (vCrewDist < 60)      {      [ use view number to determine identity of crewman      current.view(oCrewmember, vCrewDist);      if (vCrewDist == vw.Sailor4)        {        print("This seaman is anxious to get on the high seas soon!");        }      if (vCrewDist == vw.Sailor1)        {        print("Now that is a picture-perfect example of a sailing man!");        }      }    }  else    {    [ if neither is on screen,    if (vPedDist == 255 && vCrewDist == 255)      {      print("There is no one around.");      }    else      {      print("You are not close enough to get a good look.");      }    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ get distances to pedestrian and crewmember  distance(ego, oPedestrian, vPedDist);  distance(ego, oCrewmember, vCrewDist);  [ if either is close enough  if ((vPedDist < 40 || vCrewDist < 40))    {    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.Agent)        {        print("The real estate man says, \"I'm looking for another real estate "              "deal.\"");        }      if (vPedDist == vw.Lady)        {        print("The lady replies, \"My husband just left for California to look "              "for gold. He wants us to be rich, but I'd rather have him "              "here!\"");        }      }    [ if crewmember is close enough    if (vCrewDist < 40)      {      [ use view number to determine identity of crewmember      current.view(oCrewmember, vCrewDist);      if (vCrewDist == vw.Sailor4)        {        print("The working man says, \"Uhhhhh, I'm waiting for the ship to "              "leave.\"");        }      if (vCrewDist == vw.Sailor1)        {        print("This man is obviously a sailor and he says, \"I can't wait to "              "get that ship under way!\"");        }      }    }  else    {    [ if neither is on screen    if (vPedDist == 255 && vCrewDist == 255)      {      print("There is no one around.");      }    else      {      print("The man is too far away.");      }    }  }  [ look womanif (said("examine", "girl"))  {  [ get distances to pedestrian and crewman  distance(ego, oPedestrian, vPedDist);  distance(ego, oCrewmember, vCrewDist);  [ if either is close enough  if ((vPedDist < 60 || vCrewDist < 60))    {    [ if pedestrian is close enough    if (vPedDist < 60)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      [ check for grocer clerk is an error;       [ the grocer never shows up in this room      if (vPedDist == vw.GrocerClerk)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      if (vPedDist == vw.Agent)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      if (vPedDist == vw.Lady)        {        print("You don't see many ladies as beautiful as this one!");        }      }    [ if crewmember is close enough    if (vCrewDist < 60)      {      [ since response is identical for both options, there      [ is no need to use view number      current.view(oCrewmember, vCrewDist);      if (vCrewDist == vw.Sailor4)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      if (vCrewDist == vw.Sailor1)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      }    }  else    {    [ if the pedestrian is not on screen, there can't be a    [ woman    if (vPedDist == 255)      {      print("There is no woman in sight.");      }    else      {      [ if the pedestrian is ons screen but too far away      if (vPedDist < 255 && vPedDist > 59)        {        [ use view number to determine identity of        [ pedestrian        current.view(oPedestrian, vPedStatus);        if (vPedStatus == vw.Lady)          {          print("The %w2 is not close enough.");          }        else          {          print("There is no woman in sight.");          }        }      }    }  }  [ talk womanif (said("speak", "girl"))  {  [ get distances to pedestrian and crewmember  distance(ego, oPedestrian, vPedDist);  distance(ego, oCrewmember, vCrewDist);  [ if either is close enough  if ((vPedDist < 40 || vCrewDist < 40))    {    [ if pedestrian is close enough    if (vPedDist < 40)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedDist);      if (vPedDist == vw.Agent)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      if (vPedDist == vw.Lady)        {        print("The lady replies, \"My husband just left for California to look "              "for gold. He wants us to be rich, but I'd rather have him "              "here!\"");        }      }    [ if crewman is close enough    if (vCrewDist < 40)      {      [ since response is identical for both options, there      [ is no need to use view number      current.view(oCrewmember, vCrewDist);      if (vCrewDist == vw.Sailor4)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      if (vCrewDist == vw.Sailor1)        {        print("This man says, \"Watch it boy! I'm not a %w2!!\"");        }      }    }  else    {    [ no one is close - if pedestrian is off screen    if (vPedDist == 255)      {      print("There is no one around.");      }    [ if pedestrian is on screen (the distance has already    [ been determined to be >39 by previous if statement, so    [ only checking for < 255 is necessary)    if (vPedDist < 255 && vPedDist > 39)      {      [ use view number to determine identity of pedestrian      current.view(oPedestrian, vPedStatus);      if (vPedStatus == vw.Lady)        {        print("The %w2 is not close enough.");        }      else        {        print("There is no woman in sight.");        }      }    }  }  [ read treeif (said("read", "forest"))  {  print("You cannot read a tree!");  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("You are just outside of the Brooklyn Bank!");  }  [ take billboard/take signif ((said("acquire", "billboard") ||     said("acquire", "sign")))  {  if (isset(fTreePoster))    {    print("It is secured to the tree.");    }  else    {    print("There is no poster in sight!");    }  }  [ look windowif (said("examine", "glass"))  {  print("There's nothing unusual about these windows.");  }  [ look down/look groundif ((said("examine", "down") || said("examine", "dirt")))  {  print("Nothing special down here!");  }  [ look bird/look seagullif (said("examine", "bird"))  {  print("Sea gulls are a common sight here!");  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "creek") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "creek") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "creek") ||     said("enter", "ocean")))  {  print("You have more sense than that! That water is cold!!");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "You don't see many ladies as beautiful as this one!"#message 2 "Just walk up to the door and it will open."#message 4 "It wasn't long ago that a storm destroyed the old warehouse. Already, the townspeople have built another one."#message 5 "This is the main bank in Brooklyn. Most of the folks in town have their accounts here."#message 6 "You see the East River."#message 7 "It isn't the same as Betsy Ross's, but it still bears the Stars and Stripes."#message 8 "There is no need to lower the flag."#message 9 "The flag was raised this morning at dawn."#message 10 "Across the street from the bank is the downtown Brooklyn Park."#message 11 "The bank is on the corner of Water and Dock Streets."#message 12 "You don't need to do that."#message 16 "It's a city full of razzle-dazzle."#message 19 "The chains are supposed to keep folks from falling into the East River, but some people manage to get by them!"#message 20 "The streetlights light up the area outside the bank."#message 21 "The tree adds to the appearance of the bank."#message 23 "Across the East River you see the metropolis of New York City."#message 24 "The dock leads to the warehouse."#message 25 "The ship is preparing for departure."#message 26 "The ship is gone."#message 27 "    GOLD DISCOVERED\n    IN CALIFORNIA!!\n    Take to the sea\n and RICH you will be! "#message 28 "You can't quite read the poster from here."#message 29 "There is no poster in sight!"#message 30 "The real estate man says, \"I'm looking for another real estate deal.\""#message 32 "It wouldn't be suprising if that money-minded real estate man is looking for change that has fallen on the ground!"#message 33 "She replies, \"I beg your pardon, sir. I'm a lady.\""#message 34 "This seaman is anxious to get on the high seas soon!"#message 35 "Now that is a picture-perfect example of a sailing man!"#message 36 "There is no one around."#message 37 "You are not close enough to get a good look."#message 39 "The lady replies, \"My husband just left for California to look for gold. He wants us to be rich, but I'd rather have him here!\""#message 40 "The working man says, \"Uhhhhh, I'm waiting for the ship to leave.\""#message 41 "This man is obviously a sailor and he says, \"I can't wait to get that ship under way!\""#message 43 "The man is too far away."#message 44 "This man says, \"Watch it boy! I'm not a %w2!!\""#message 45 "There is no woman in sight."#message 46 "The %w2 is not close enough."#message 48 "There is no gold here, but don't give up until you find it!"#message 49 "You cannot read a tree!"#message 50 "You are just outside of the Brooklyn Bank!"#message 51 "There is a poster on the tree in front of the bank."#message 52 "It is secured to the tree."#message 54 "There's nothing unusual about these windows."#message 55 "Nothing special down here!"#message 56 "Sea gulls are a common sight here!"#message 57 "You have more sense than that! That water is cold!!"