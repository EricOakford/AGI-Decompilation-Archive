[***********************************************************[[ rm.FerryDock[[ This room shows the ferry that brings the stagecoach to[ New York to start the overland trip. It uses two different[ background pictures, depending whether or not the ferry is[ still at the dock.[[ The room has a lot of old code that appears to support [ featured that were later removed (such as allowing Jerrod[ to explore the ferry while the stagecoach is loading);[ not sure how all this unused code got past the QA checks.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oGuard                       o1#define oDoor1                       o2#define oDoor2                       o3#define oHorses1                     o4#define oHorses2                     o5#define oCoach                       o6#define vTmpPic                    v220#define vTimer                     v221#define vFallingX                  v222#define vFallingY                  v223#define vTeam1Stage                v224#define vTeam2Stage                v225#define vCoachStage                v226#define vFallStatus                v227#define fSetEgoPri                 f220#define fDoneFalling               f221#define fTeam1Moved                f222#define fTeam2Moved                f223#define fCoachMoved                f224#define fSplashDone                f225[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load views used by objects in the room  load.view(vw.JerrodNY);  load.view(vw.FallingJerrodNY);  load.view(vw.SkylineArt);  load.view(vw.FerryDockArt);  load.view(vw.StageCoach);    [ load the sounds used in the room  load.sound(s.UhOh);  load.sound(m.Death);  load.sound(s.Splash);    [ if ferry is at the dock  if (isset(FerryAtDock))    {    [ use the picture that shows the ferry still docked    vTmpPic = pic.WagonFerry;        [ load and draw the picture    load.pic(vTmpPic);    draw.pic(vTmpPic);    }  else    {    [ use the picture that shows the ferry gone (which is    [ the picture for the current room number) but still    [ change vTmpPic, as it is used later to track whether    [ ferry is still present (of course they could have    [ just used the flag FerryAtDock!)    vTmpPic = pic.FerryDock;        [ load and draw the picture    load.pic(currentRoom);    draw.pic(currentRoom);    }    [ add the skyline art to the background  add.to.pic(vw.SkylineArt, 0, 0, 0, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 1, 20, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 2, 40, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 3, 60, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 4, 80, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 5, 100, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 6, 120, 52, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 140, 52, 4, 4);    [ add the 'Ferry to New York' sign  add.to.pic(vw.FerryDockArt, 4, 0, 72, 69, 14, 14);    [ the guard/terminal officer  [ ******** the guard is never used anywhere; he doesn't  [ move, he doesn't cycle; it looks like he used to have a  [ part, possibly interacting with the horses, or maybe  [ with Jerrod, but it was removed from the game at some  [ point  animate.obj(oGuard);  set.view(oGuard, vw.FerryDockArt);  position(oGuard, 93, 89);  set.priority(oGuard, 9);    [ different loop chosen depending on whether or not ferry  [ is present, but it doesn't matter, because the guard  [ object is never cycled  if (isset(FerryAtDock))    {    set.loop(oGuard, 3);    }  else    {    set.loop(oGuard, 2);    }  [ guard is just sitting still at beginning  set.cel(oGuard, 0);  draw(oGuard);  stop.update(oGuard);    [ if the ferry is at the dock  if (isset(FerryAtDock))    {    [ doors on the ferry -neither door ever cycles; looks    [ like the programmers originally planned for Jerrod to    [ be able to walk around on the ferry but later    [ abandoned the idea        [ left door    animate.obj(oDoor1);    set.view(oDoor1, vw.FerryDockArt);    set.loop(oDoor1, 0);    set.cel(oDoor1, 0);    set.priority(oDoor1, 12);    position(oDoor1, 13, 115);    draw(oDoor1);    stop.update(oDoor1);        [ right door    animate.obj(oDoor2);    set.view(oDoor2, vw.FerryDockArt);    set.loop(oDoor2, 1);    set.cel(oDoor2, 0);    set.priority(oDoor2, 7);    position(oDoor2, 65, 51);    draw(oDoor2);    stop.update(oDoor2);    }      [ if stagecoach is at the ferry on its way to New York  if (StagecoachPhase == SC_AT_FERRY)    {    [ if prvious room was the cutscene from    [ rm.StageCoachOffice    if (previousRoom == rm.StageCoachOffice)      {      [ only the lead horses are on screen      [ the stagecoach is waiting for the       [ ferry to arrive      animate.obj(oHorses1);      set.view(oHorses1, vw.StageCoach);      set.loop(oHorses1, 1);      fix.loop(oHorses1);      ignore.objs(oHorses1);      ignore.blocks(oHorses1);      position(oHorses1, 136, 137);      draw(oHorses1);      stop.cycling(oHorses1);      }          [ if coming from the wide view (after watching the ferry    [ arrive from New York)    if (previousRoom == rm.DockWideView)      {      [ animate the stagecoach and both horse teams for the      [ cutscene which will show the stagecoach driving      [ across the screen            [ Team #1 of horses at front      animate.obj(oHorses1);      set.view(oHorses1, vw.StageCoach);      set.loop(oHorses1, 1);      fix.loop(oHorses1);      ignore.objs(oHorses1);      ignore.blocks(oHorses1);      position(oHorses1, 78, 130);      set.priority(oHorses1, 11);      draw(oHorses1);      [ set stage so horses will move      vTeam1Stage = 1;            [ Team #2 of horses      animate.obj(oHorses2);      set.view(oHorses2, vw.StageCoach);      set.loop(oHorses2, 2);      fix.loop(oHorses2);      ignore.objs(oHorses2);      ignore.blocks(oHorses2);      position(oHorses2, 102, 133);      set.priority(oHorses2, 11);      draw(oHorses2);      [ set stage so horses will move      vTeam2Stage = 1;            [ stagecoach      animate.obj(oCoach);      set.view(oCoach, vw.StageCoach);      set.loop(oCoach, 0);      set.cel(oCoach, 0);      fix.loop(oCoach);      ignore.objs(oCoach);      ignore.blocks(oCoach);      position(oCoach, 125, 136);      set.priority(oCoach, 11);      draw(oCoach);      [ set stage so coach will move      vCoachStage = 1;      }    }  else    {    [ if stagecoach phase is not starting a cutscene add    [ Jerrod, in his normal Brooklyn attire    animate.obj(ego);    set.view(ego, vw.JerrodNY);        [adjust position based on which room Jerrod came from    if (posn(ego, 150, 93, 160, 113))      {      position(ego, 152, 114);      }          [ if coming from wide view of dock (this block will     [ never execute because it is an 'else' block to an 'if'    [ test that already indicated the room ISN'T the     [ dock wide view!)    if (previousRoom == rm.DockWideView)      {      position(ego, 113, 158);      set.loop(ego, 1);      }          [ Jerrod starts at priority 14 in this room, regardless    [ of his position    set.priority(ego, 14);    draw(ego);    }      [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if horses are moving (part of the cutscene) the scene[ requires very careful choreography of the horse and wagon[ objects so they move in synch and stay together so it[ looks like the horse are hitched to the wagon[ manage team #1 first - if the team is set to begin moving[ on to the ferryif (vTeam1Stage == 1)  {  [ move team #1 to point 2  vTeam1Stage = 2;  move.obj(oHorses1, 34, 113, 1, fTeam1Moved);  }[ when team #1 gets to point 2if (isset(fTeam1Moved) && vTeam1Stage == 2)  {  [ move team #1 to point 3  reset(fTeam1Moved);  vTeam1Stage = 3;  move.obj(oHorses1, 18, 101, 1, fTeam1Moved);  }[ when team #1 gets to point 3if (isset(fTeam1Moved) && vTeam1Stage == 3)  {  [ move to point 4  reset(fTeam1Moved);  vTeam1Stage = 4;  move.obj(oHorses1, 0, 87, 1, fTeam1Moved);  }[ when team #1 gets to point 4if (isset(fTeam1Moved) && vTeam1Stage == 4)  {  [ horses are on the ferry; remove them from screen  reset(fTeam1Moved);  vTeam1Stage = 5;  erase(oHorses1);  }  [ manage team #2 - if the team is set to begin moving on to[ the ferryif (vTeam2Stage == 1)  {  [ move team #2 to point 2  vTeam2Stage = 2;  move.obj(oHorses2, 58, 118, 1, fTeam2Moved);  }[ when team #2 gets to point 2if (isset(fTeam2Moved) && vTeam2Stage == 2)  {  [ move to point 3  reset(fTeam2Moved);  vTeam2Stage = 3;  move.obj(oHorses2, 31, 107, 1, fTeam2Moved);  }[ when team #2 gets to point 3if (isset(fTeam2Moved) && vTeam2Stage == 3)  {  [ mvoe to point 4  reset(fTeam2Moved);  vTeam2Stage = 4;  move.obj(oHorses2, 0, 90, 1, fTeam2Moved);  }[ when team #2 gets to point 4if (isset(fTeam2Moved) && vTeam2Stage == 4)  {  [ horses are on the ferry; remove them from screen  reset(fTeam2Moved);  vTeam2Stage = 5;  erase(oHorses2);  }  [ manage the coach - if the coach is set to begin moving on[ to the ferryif (vCoachStage == 1)  {  [ move to point 2  vCoachStage = 2;  move.obj(oCoach, 82, 123, 1, fCoachMoved);  }[ when coach gets to point 2if (isset(fCoachMoved) && vCoachStage == 2)  {  [ move coach to point 3  reset(fCoachMoved);  vCoachStage = 3;  move.obj(oCoach, 56, 118, 1, fCoachMoved);  }[ when coach gets to point 3if (isset(fCoachMoved) && vCoachStage == 3)  {  [ move coach to point 4  reset(fCoachMoved);  vCoachStage = 4;  move.obj(oCoach, 34, 104, 1, fCoachMoved);  }[ when coach gets to point 4if (isset(fCoachMoved) && vCoachStage == 4)  {  [ move coach to last point  reset(fCoachMoved);  vCoachStage = 5;  move.obj(oCoach, 0, 93, 1, fCoachMoved);  }  [ if coach has moved to last positionif (isset(fCoachMoved) && vCoachStage == 5)  {  [ (it's unnecessary to erase the coach object, because   [ the new.room command resets all screen objects  erase(oCoach);  [ switch to the wide view of the dock to show the ferry  [ going to New York  new.room(rm.DockWideView); [ ##LE001##  }  [ if the ferry is not at the dock yetif (!isset(FerryAtDock))  {  [ increment the timer  ++vTimer;  [ if Jerrod has a stagecoach ticket, and the wagon is  [ here, waiting for the ferry  if (TicketChoice == TKT_COACH &&       StagecoachPhase == SC_AT_FERRY)    {    [ after 10 cycles    if (vTimer == 10)      {      [ switch to wide view to show the ferry coming to the      [ dock      new.room(rm.DockWideView); [ ##LE002##      }    }  }[ if the ferry is present (instead of checking the value of[ vTmpPic, it would have been more efficient to use the flag[ FerryAtDock)if (vTmpPic == pic.WagonFerry)  {  [ none of this is possible because the ego object is not  [ used in this room when the ferry is at the dock  if (isset(egoHitSpecial))    {    if (posn(ego, 35, 80, 119, 120))      {      set.priority(ego, 11);      }    if (posn(ego, 49, 148, 69, 161))      {      set.priority(ego, 14);      }    }  else    {    if (!posn(ego, 1, 108, 28, 125))      {      release.priority(ego);      }    }  if (posn(ego, 1, 108, 28, 125) && !isset(fSetEgoPri))    {    set(fSetEgoPri);    set.priority(ego, 12);    }  if (!posn(ego, 1, 108, 28, 125) && isset(fSetEgoPri))    {    reset(fSetEgoPri);    release.priority(ego);    }  }else  {  [ if ferry is NOT at the dock, is Jerrod touching a signal  [ line?  if (isset(egoHitSpecial))    {    [ if Jerrod is still alive    if (EgoHealthStatus == 0)      {      [ if by right guard shack      if (posn(ego, 101, 107, 121, 121))        {        [ adjust priority so ego draws correctly        set.priority(ego, 11);        }      [ if by left guard shack      if (posn(ego, 49, 148, 69, 161))        {        [ adjust priority so ego draws correctly        set.priority(ego, 14);        }      [ if not in either of those locations      if (!posn(ego, 101, 107, 121, 121) && !posn(ego, 49, 148, 69, 161))        {        [ none of this is possible; there are't any other        [ signal lines in the picture        set.view(ego, vw.FallingJerrodNY);        vFallingX = 165;        vFallingY = 4;        set.priority(ego, 7);        ignore.blocks(ego);        move.obj.v(ego, EgoX, vFallingX, vFallingY, fDoneFalling);        [ ego is falling in water        EgoHealthStatus = 1;        vFallStatus = 1;        }      }    }  else    {    [ not on an alarm line; use normal priority, if Jerrod    [ is alive    if (EgoHealthStatus == 0)      {      release.priority(ego);      }    }  }  [ if Jerrod fell in water (this will never happen; there's[ no way for Jerrod to fall in the water)if (vFallStatus == 1)  {  vFallStatus = 2;  sound(s.Splash, fSplashDone);  }  [ after splash sound ends (this will never happen; there's[ no way for Jerrod to fall in the water)if (isset(fSplashDone) && vFallStatus == 2)  {  reset(fSplashDone);  [ now he's dead  vFallStatus = 3;  sound(m.Death, fSplashDone);  set(JerrodIsDead);  prevent.input();  stop.motion(ego);  display(22, 0, "One false step and your life is over. Watch your step!");  }    [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == RIGHT_EDGE)  {  new.room(rm.StageCoachOffice); [ ##LE003##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") ||     said("examine") ||     said("examine", "ferry", "dock") ||     said("examine", "dock")))  {  print("This is the dock that the ferry to New York uses. You see a man "        "guarding the dock.");  }  [ look acrossif (said("examine", "across"))  {  print("As you look across the East River, you see the city of New York. It "        "amazes you that you have never had time to travel as far as New York!");  }  [ look riverif ((said("examine", "water") ||     said("examine", "ocean") ||     said("examine", "creek") ||     said("examine", "east river")))  {  print("This is another view of the East River.");  }    [ look manif ((said("examine", "boy") ||     said("examine", "ferry", "boy") ||     said("examine", "guard") ||     said("examine", "ferry", "guard")))  {  print("Stationed here at the gate is a man whose job is to guide the huge "        "ferries into the dock.");  }  [ talk manif ((said("speak", "boy") ||     said("speak", "guard") ||     said("speak", "ferry", "boy") ||     said("speak", "ferry", "guard") ||     said("speak")))  {  print("You say to the guard, \"Good day!\"");  print("The guard says, \"Hi, Jerrod. I haven't had any ferries to guide into "        "the dock today.\"");  print("\"The ferry only comes to Brooklyn when the stage company requests "        "it.\"");  }  [ buy ticket/get ticketif ((said("buy", "ticket") ||     said("acquire", "ticket")))  {  print("The guard says, \"I don't sell tickets. Sorry, Jerrod.\"");  }  [ show ticket/give ticket to guardif ((said("show", "ticket") ||     said("show", "ticket", "boy") ||     said("show", "boy", "ticket") ||     said("contribute", "ticket") ||     said("contribute", "ticket", "boy") ||     said("contribute", "boy", "ticket") ||     said("use", "ticket") ||     said("show", "ticket", "guard") ||     said("show", "guard", "ticket") ||     said("contribute", "ticket", "guard") ||     said("contribute", "guard", "ticket")))  {  if (TicketChoice != 0)    {    print("The guard says, \"I can't do anything with your ticket, Jerrod.\"");    }  else    {    print("You don't have a ticket.");    }  }  [ open gateif (said("open", "gate"))  {  print("These gates are kept locked until a ferry arrives.");  }  [ look ferryif ((said("examine", "ferry") ||     said("examine", "ferry", "new york")))  {  if (isset(FerryAtDock))    {    print("Well, here it is! This is the ferry that will take you to across the "          "East River for the first time since you moved to Brooklyn!");    }  else    {    print("You see no ferry. However, one will show up sooner or later!");    print(" Maybe. ");    }  }  [ look buildingif (said("examine", "building"))  {  print("There are two small booths on either side of the gate that house the "        "ferry guards.");  }  [ look roadif (said("examine", "path"))  {  print("This is where Fulton Street comes to an abrupt and watery end.");  }  [ look gateif (said("examine", "gate"))  {  print("This gate is to keep people, such as yourself, from getting hurt when "        "ferries are coming and going from this dock.");  }  [ look New Yorkif (said("examine", "new york"))  {  print("New York City is on the far side of the river.");  }  [ go ferry/rid ferryif ((said("go", "ferry") ||     said("ride", "ferry") ||     said("ferry") ||     said("acquire", "ferry") ||     said("enter", "ferry") ||     said("next", "ferry")))  {  if (isset(FerryAtDock))    {    print("It won't be long and you will be headed for New York City!");    }  else    {    print("The guard says, \"The ferry comes to Brooklyn when a stage needs "          "it.\"");    }  }  [ go swimmingif ((said("swim") ||     said("go", "swim") ||     said("go", "water") ||     said("go", "creek") ||     said("go", "ocean") ||     said("swim", "water") ||     said("go", "swim", "water") ||     said("jump", "water") ||     said("jump", "creek") ||     said("jump", "ocean") ||     said("enter", "water") ||     said("enter", "creek") ||     said("enter", "ocean")))  {  print("You have more sense than that! That water is cold!!");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is the dock that the ferry to New York uses. You see a man guarding the dock."#message 2 "As you look across the East River, you see the city of New York. It amazes you that you have never had time to travel as far as New York!"#message 3 "This is another view of the East River."#message 4 "Stationed here at the gate is a man whose job is to guide the huge ferries into the dock."#message 6 "The guard says, \"Hi, Jerrod. I haven't had any ferries to guide into the dock today.\""#message 8 "These gates are kept locked until a ferry arrives."#message 10 "Well, here it is! This is the ferry that will take you to across the East River for the first time since you moved to Brooklyn!"#message 13 "You see no ferry. However, one will show up sooner or later!"#message 14 "There are two small booths on either side of the gate that house the ferry guards."#message 15 "This is where Fulton Street comes to an abrupt and watery end."#message 18 " Maybe. "#message 19 "This gate is to keep people, such as yourself, from getting hurt when ferries are coming and going from this dock."#message 20 "New York City is on the far side of the river."#message 22 "One false step and your life is over. Watch your step!"#message 23 "The guard says, \"I don't sell tickets. Sorry, Jerrod.\""#message 24 "It won't be long and you will be headed for New York City!"#message 25 "The guard says, \"The ferry comes to Brooklyn when a stage needs it.\""#message 26 "The guard says, \"I can't do anything with your ticket, Jerrod.\""#message 27 "You say to the guard, \"Good day!\""#message 28 "You don't have a ticket."#message 29 "\"The ferry only comes to Brooklyn when the stage company requests it.\""#message 30 "You have more sense than that! That water is cold!!"