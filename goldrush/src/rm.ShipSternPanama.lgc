[***********************************************************[[ rm.ShipSternPanama[[ An interior room of the steamship, that looks like it was[ intended for use in the Panama journey, but is never[ actually used in the game. But they never deleted the[ unused room.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWake1                       o1#define oWake2                       o2#define oCaptain                     o3#define oAftDoor                     o4#define oFwdDoor                     o5#define oCabinDoor                   o6[ o7 through o9 are not used#define oLand                       o10#define vCholeraTime                v86 [ override CoalFireTime#define vOvlPic                    v220#define vTmpStep                   v221#define vTmpVal                    v222#define vLandStep                  v223#define vLandStatus                v224#define vRoomPic                   v225#define fOnLadder                  f220#define fOnStairs                  f221#define fDoorClosed                f222#define fAftDoorOpen               f223#define fFwdDoorOpen               f224#define fCabDoorOpen               f225#define fLandMoved                 f226#define fDoneDying                 f227[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ if at trip point 2 (beginning of trip)  if (CurrentTripTime == 2)    {    [ coal hold is mostly full    vOvlPic = ovl.CoalHold1;    }      [ at trip point 4 ( trip point four is never assigned) or  [ at trip point 19 (going from Panama to California)  if ((CurrentTripTime == 4 || CurrentTripTime == 19))    {    vOvlPic = ovl.CoalHold2;    }      [ use the normal ship internal stern room picture  vRoomPic = pic.ShipSternInterior;    [ load the room picture and overlay picture  load.pic(vRoomPic);  load.pic(vOvlPic);  [ draw the room picture  draw.pic(vRoomPic);  [ add overlay on top  overlay.pic(vOvlPic);  [ discard room picture (this also disards the overlay  [ picture)  discard.pic(vRoomPic);    [ load view with coal hold doors  load.view(vw.ShipMachineryArt);  [ add coal hold door to picture image (this cel is a  [ single, transparent pixel)  add.to.pic(vw.ShipMachineryArt, 2, 0, 143, 150, 14, 14);  [ discard this view  discard.view(vw.ShipMachineryArt);    [ load the main timing logic  load.logics(lgc.PanamaTripTiming);    [ load views used in the room  load.view(vw.JerrodNY);  load.view(vw.ClimbingJerrodNY);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.ShipSternArt2);  load.view(vw.OceanItems);  load.view(vw.MidShipArt2);    [ add captain's desk to the image  add.to.pic(vw.ShipSternArt2, 2, 0, 82, 94, 8, 8);  [ and the lamps (unlit)  add.to.pic(vw.MidShipArt2, 2, 0, 136, 82, 7, 7);  add.to.pic(vw.MidShipArt2, 2, 0, 83, 75, 7, 7);    [ land/islands that pass by  animate.obj(oLand);  set.view(oLand, vw.OceanItems);  [ use islands with more vegetation  set.loop(oLand, 2);  fix.loop(oLand);  set.priority(oLand, 4);  vLandStep = 10;  ignore.objs(oLand);  ignore.blocks(oLand);    [ the wake that follows the ship (use two objects)  animate.obj(oWake1);  set.view(oWake1, vw.ShipSternArt2);  set.loop(oWake1, 0);  set.cel(oWake1, 0);  set.priority(oWake1, 14);  position(oWake1, 55, 108);  ignore.objs(oWake1);  ignore.blocks(oWake1);  draw(oWake1);  start.cycling(oWake1);  [ wake 2  animate.obj(oWake2);  set.view(oWake2, vw.ShipSternArt2);  set.loop(oWake2, 1);  set.cel(oWake2, 0);  set.priority(oWake2, 5);  position(oWake2, 0, 107);  ignore.blocks(oWake2);  draw(oWake2);  draw(oWake2);  start.cycling(oWake2);    [ captain, standing in pilot house at the wheel  animate.obj(oCaptain);  set.view(oCaptain, vw.ShipSternArt2);  set.loop(oCaptain, 3);  set.priority(oCaptain, 9);  ignore.objs(oCaptain);  position(oCaptain, 92, 52);  draw(oCaptain);  vTmpStep = 4;  cycle.time(oCaptain, vTmpStep);  start.cycling(oCaptain);    [ aft door to pilot house  animate.obj(oAftDoor);  stop.cycling(oAftDoor);  set.view(oAftDoor, vw.MidShipArt2);  set.loop(oAftDoor, 0);  set.cel(oAftDoor, 0);  set.priority(oAftDoor, 13);  ignore.objs(oAftDoor);  [ all doors start closed  set(fDoorClosed);  position(oAftDoor, 69, 52);  draw(oAftDoor);    [ forward door to pilot house  animate.obj(oFwdDoor);  stop.cycling(oFwdDoor);  set.view(oFwdDoor, vw.MidShipArt2);  set.loop(oFwdDoor, 1);  set.cel(oFwdDoor, 0);  set.priority(oFwdDoor, 8);  ignore.objs(oFwdDoor);  ignore.blocks(oFwdDoor);  position(oFwdDoor, 151, 52);  draw(oFwdDoor);    [ door to captain's cabin  animate.obj(oCabinDoor);  stop.cycling(oCabinDoor);  set.view(oCabinDoor, vw.MidShipArt2);  set.loop(oCabinDoor, 0);  set.cel(oCabinDoor, 0);  set.priority(oCabinDoor, 13);  ignore.objs(oCabinDoor);  position(oCabinDoor, 93, 94);  draw(oCabinDoor);    [ Jerrod  animate.obj(ego);  [ if NOT time for Jerrod to get cholera  if (CurrentTripTime != vCholeraTime)    {    [ use view with normal NY attire    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }      [ since room is 2D, priority doesn't change  set.priority(ego, 10);    [ adjust Jerrod's position based on which level he was on  [ in the previous room (rm.ShipMidInterior)  if (posn(ego, 150, 51, 159, 53))    {    position(ego, 135, 52);    }  if (posn(ego, 150, 93, 159, 108))    {    position(ego, 134, 102);    }      [ draw ego on screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is at top of ladder and not climbingif (posn(ego, 146, 107, 148, 107))  {  [ adjust position so the climbing view will appear  [ correctly  if (posn(ego, 146, 107, 146, 107))    {    TmpX = 0;    }  if (posn(ego, 147, 107, 147, 107))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 107, 148, 107))    {    TmpX = -2; [ 254;    }  [ start climbing  set(fOnLadder);  TmpY = 17;  [ change view to climbing view  set.view(ego, vw.ClimbingJerrodNY);  [ set and fix loop  set.loop(ego, 3);  fix.loop(ego);  [ adjust step time  vTmpVal = 2;  step.size(ego, vTmpVal);  [ reposition so view looks correct on the ladder  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder and climbingif (posn(ego, 146, 156, 146, 156) && isset(fOnLadder))  {  [ stop climbing  reset(fOnLadder);  [ adjust position so normal view will appear correctly  TmpX = 1;  TmpY = 0;  [ if trip timing point is NOT sick time  if (CurrentTripTime != vCholeraTime)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }  [ allow auto loop selection  release.loop(ego);  [ restore step value  vTmpVal = 1;  step.size(ego, vTmpVal);  [ reposition so ego appears correctly  reposition(ego, TmpX, TmpY);  }  [ if one pixel above bottom of ladder, and NOT climbingif (posn(ego, 146, 155, 148, 155) && !isset(fOnLadder))  {  [ adjust position so climbing view will appear correctly  if (posn(ego, 146, 155, 146, 155))    {    TmpX = 0;    }  if (posn(ego, 147, 155, 147, 155))    {    TmpX = -1; [ 255;    }  if (posn(ego, 148, 155, 148, 155))    {    TmpX = -2; [ 254;    }  [ start climbing  set(fOnLadder);  TmpY = -1; [ 255;  [ switch to climbing view  set.view(ego, vw.ClimbingJerrodNY);  [ set and fix loop  set.loop(ego, 3);  fix.loop(ego);  [ adjust step size  vTmpVal = 2;  step.size(ego, vTmpVal);  [ reposition so view appears in correct location  reposition(ego, TmpX, TmpY);  }  [ if at top of ladder and climbingif (posn(ego, 146, 122, 146, 123) && isset(fOnLadder))  {  [ stop climbing  reset(fOnLadder);  [ if not sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }  [ restore auto loop selection  release.loop(ego);  [ restore step size to 1  vTmpVal = 1;  step.size(ego, vTmpVal);  [ adjust view position so it will appear in correct  [ location  TmpX = 1;  TmpY = -16; [ 240;  reposition(ego, TmpX, TmpY);  }  [ if trip timing point is time for choleraif (CurrentTripTime == vCholeraTime)  {  [ if Jerrod is healthy  if (EgoHealthStatus == 0)    {    [ but also set to die    if (isset(DyingAtSea))      {      [ only if NOT on stairs or on ladder (need room to      [ fall down dead)      if ((posn(ego, 56, 52, 127, 52) ||           posn(ego, 80, 94, 106, 94) ||           EgoY == 106 ||           EgoY == 156))        {        [ reset set to die flag        reset(DyingAtSea);        [ reset set to die flag        [ switch to dying view        set.view(ego, vw.DyingJerrodNY);        set.cel(ego, 0);        end.of.loop(ego, fDoneDying);        set(CycleAtRest);        }      }    [ after Jerrod is finished dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      stop.update(ego);      [ set reason to death by cholera      EgoHealthStatus = 21;      [ load and call logic to handle final death sequence      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      }    }  }  [ if currently no land is in sightif (vLandStatus != 250)  {  [ random chance some land will appear  random(210, 249, vLandStatus);  [ one in 40 chance  if (vLandStatus == 230)    {    [ make sure cel 0 is selected    set.cel(oLand, 0);    [ set status to show land is visible    vLandStatus = 250;    [ position it on right side of screen    position(oLand, 75, 107);    draw(oLand);    [ there's only one cel, so stop.cycling doesn't actually    [ do anything    stop.cycling(oLand);    [ move the island to left of screen (to simulate ship is    [ passing it)    move.obj(oLand, 1, 107, 1, fLandMoved);    step.time(oLand, vLandStep);    }  }  [ when land has passed byif (isset(fLandMoved))  {  [ remove it from screen  reset(fLandMoved);  erase(oLand);  [ increment status so randomizer will start again  ++vLandStatus;  }  [ if Jerrod is in pilot house, exiting to rightif (posn(ego, 143, 52, 155, 52) && isset(egoHitSpecial))  {  [ bump him down so he can continue to mid ship room  TmpX = 1;  TmpY = 5;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is on deck outside pilot house and going inif (posn(ego, 148, 56, 155, 58) && isset(egoHitSpecial))  {  [ bump him up so he can continue into pilot house  TmpX = -1; [ 255;  TmpY = -5; [ 251;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod is on upper stairs, and flag not setif (posn(ego, 106, 53, 138, 91) && !isset(fOnStairs))  {  [ set flag, and adjust priority  set(fOnStairs);  set.priority(ego, 8);  }  [ if Jerrod is NOT on upper stairs and flag IS setif (!posn(ego, 106, 53, 138, 91) && isset(fOnStairs))  {  [ reset flag, and restore priority  reset(fOnStairs);  set.priority(ego, 10);  }[ if on upper stairs and on the alarm lineif (posn(ego, 106, 53, 138, 91) && isset(egoHitSpecial))  {  [ if going down or down/left  if ((egoDir == DOWN || egoDir == DOWN_LEFT))    {    [ force direction to left    egoDir = LEFT;    }      [ if going left  if (egoDir == LEFT)    {    [ bump down one row    TmpX = 0;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }      [ if going up or up/right  if ((egoDir == UP_RIGHT ||       egoDir == UP))    {    [ force direction to right    egoDir = RIGHT;    }      [ if going right  if (egoDir == RIGHT)    {    [ bump up one row and one column to right    TmpX = 1;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ if Jerrod is on lower stairs and on alarm lineif (posn(ego, 122, 94, 145, 107) && isset(egoHitSpecial))  {  [ if going right or down/right  if ((egoDir == DOWN_RIGHT || egoDir == RIGHT))    {    [ bump down one, right one    TmpX = 1;    TmpY = 1;    reposition(ego, TmpX, TmpY);    }  [ if going left or up/left  if ((egoDir == UP_LEFT || egoDir == LEFT))    {    [ bump up one, left one    TmpX = -1; [ 255;    TmpY = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ if by aft door, and door is closedif (posn(ego, 65, 52, 79, 52) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oAftDoor, fAftDoorOpen);  }  [ if NOT by aft door, and door is openif (!posn(ego, 65, 52, 79, 52) && (isset(fAftDoorOpen)))  {  [ close it  reset(fAftDoorOpen);  reverse.loop(oAftDoor, fDoorClosed);  }  [ if by forward door, an door is closedif (posn(ego, 143, 52, 154, 57) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oFwdDoor, fFwdDoorOpen);  }  [ if NOT by fore door, and door is openif (!posn(ego, 143, 52, 154, 57) && (isset(fFwdDoorOpen)))  {  [ close it  reset(fFwdDoorOpen);  reverse.loop(oFwdDoor, fDoorClosed);  }  [ if by cabin door and door is closedif (posn(ego, 89, 94, 103, 94) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oCabinDoor, fCabDoorOpen);  }  [ if NOT by cabin door and door is openif (!posn(ego, 89, 94, 103, 94) && (isset(fCabDoorOpen)))  {  [ close it  reset(fCabDoorOpen);  reverse.loop(oCabinDoor, fDoorClosed);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == RIGHT_EDGE)  {  new.room(rm.ShipMidPanama); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  [ response depends on where Jerrod is    [ on bridge deck  if (EgoY == 52)    {    if (EgoX > 119)      {      print("This is the bridge deck.");      print("You are at the top of the staircase that connects the bridge deck "            "to the captain's deck.");      }    if (EgoX > 73 && EgoX < 120)      {      print("This is the section of the bridge deck that is the command center "            "of the vessel.");      print("It is from here that the captain does his utmost to ensure a safe "            "voyage for the passengers and cargo.");      }    if (EgoX < 74)      {      print("This is the most aft portion of the bridge deck, and also of the "            "ship.");      print("It is a favorite place for passengers to take in the view!");      }    }      [ top deck  if (EgoY == 57)    {    print("This is the aft section of the sun, rain, snow, hail and sleet deck.");    print("Today is a beautiful day!! \n      What a view!!");    }  if (EgoY > 57 && EgoY < 94)    {    print("This is the staircase that connects the captain's deck to the bridge "          "deck.");    }      [ captain's quarters  if (EgoY == 94)    {    if (EgoX < 97)      {      print("The captain keeps his quarters very tidy.");      print("The bed is neatly made and his desk is organized.");      }    if (EgoX > 96)      {      print("You are immediately outside of the captain's quarters, at the base "            "of the staircase connecting the captain's deck to the bridge deck.");      }    }      [ on stairs between main deck and captain's deck  if (EgoY < 106 && EgoY > 94)    {    print("This is the small set of stairs connecting the main deck to the "          "captain's deck.");    }      [ main deck  if (EgoY == 106)    {    print("This is the main deck of the ship.");    }      [ ladder between main deck and lower deck  if (EgoY > 106 && EgoY < 156)    {    print("You are on the ladder that connects the main deck with the lower "          "deck.");    }      [ lower deck  if (EgoY == 156)    {    print("This is the ship's lower deck.  It smells of sweat down here!");    }  }  [ look man/talk to captainif ((said("examine", "boy") ||     said("examine", "crew") ||     said("examine", "crewman") ||     said("examine", "crew", "boy") ||     said("examine", "captain")))  {  [ if in pilot house  if (posn(ego, 65, 52, 159, 79))    {    print("The captain seems to manuever his vessel effortlessly through the "          "high seas!");    }  else    {    print("You are not close enough!");    }  }  [ talk to man/talk to captainif ((said("speak", "boy") ||     said("speak", "crew") ||     said("speak", "crewman") ||     said("speak", "crew", "boy") ||     said("speak", "captain") ||     said("speak")))  {  [ if in pilot house  if (posn(ego, 65, 52, 159, 79))    {    print("\"Welcome aboard the Sea Farer!  It is my sincere desire that you "          "are enjoying the voyage!  Panama is not that far away!!\"");    }  else    {    print("You are not close enough!");    }  }  [ look water/look ocean  if ((said("examine", "water") || said("examine", "ocean")))  {  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("The sea is deep blue and gently rolling.");    }  else    {    print("You can't see outside from here!");    }  }  [ look islandif (said("examine", "island"))  {  [ if on bridge deck or main deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("You see an island on the distant horizon!");    }  else    {    print("You can't see outside from here!");    }  }  [ look rockif (said("examine", "rock"))  {  [ if on bridge deck or main deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("There are no rocks in sight!");    }  else    {    print("You can't see outside from here!");    }  }    [ look icebergif (said("examine", "iceberg"))  {  [ if on bridge deck or main deck  if ((posn(ego, 56, 52, 159, 57) ||       posn(ego, 80, 88, 118, 94) ||       posn(ego, 136, 105, 159, 111)))    {    print("There are no icebergs in sight!");    }  else    {    print("You can't see outside from here!");    }  }  [ look coalif (said("examine", "coal"))  {  [ if in the hold  if (posn(ego, 141, 142, 159, 156))    {    print("You can't see through the coal hold door!");    }  else    {    print("You sure can't see any coal from here!");    }  }  [ open doorif (said("open", "door"))  {  [ if in the hold  if (posn(ego, 141, 108, 159, 156))    {    print("The door just won't open!");    }  else    {    print("Just walk up to them!");    }  }  [ look doorif (said("examine", "door"))  {  [ if near one of the four doors in the room  if ((posn(ego, 56, 52, 111, 52) ||       posn(ego, 112, 52, 159, 79) ||       posn(ego, 80, 80, 116, 94) ||       posn(ego, 141, 108, 159, 156)))    {    if (posn(ego, 56, 52, 111, 52))      {      print("This is the aft command center door!");      }    if (posn(ego, 112, 52, 159, 79))      {      print("This is the forward command center door!");      }    if (posn(ego, 80, 80, 116, 94))      {      print("This is the door to the captain's quarters!");      }    if (posn(ego, 141, 108, 159, 156))      {      print("The door keeps coal from falling out of the coal hold.");      }    }  else    {    print("You can't do that from here!");    }  }  [ open coal hold doorif ((said("open", "coal", "hold", "door") ||     said("open", "coalhold", "door") ||     said("open", "coal", "door") ||     said("unlock", "door") ||     said("unlock", "coal", "hold", "door") ||     said("unlock", "coalhold", "door") ||     said("unlock", "coal", "door") ||     said("unlock", "coal", "hold", "door")))  {  [ if in hold  if (posn(ego, 141, 108, 159, 156))    {    print("The door just won't open!");    }  else    {    print("You can't do that from here!");    }  }  [ look coal hold doorif ((said("examine", "coal", "hold", "door") ||     said("examine", "coalhold", "door") ||     said("examine", "coal", "door")))  {  [ if in hold  if (posn(ego, 141, 108, 159, 156))    {    print("The door keeps coal from falling out of the coal hold.");    }  else    {    print("You can't do that from here!");    }  }  [ look mastif (said("examine", "mast"))  {  [ if anywhere but the hold  if (posn(ego, 56, 52, 159, 107))    {    print("The mast looks very sturdy!");    }  else    {    print("You can't do that from here!");    }  }  [ look riggingif (said("examine", "rigging"))  {  [ if anywhere but the hold  if (posn(ego, 56, 52, 159, 79))    {    print("The rigging whistles in the wind!");    }  else    {    print("You can't do that from here!");    }  }  [ look streetlampif (said("examine", "lamp"))  {  [ if near the lamps  if (posn(ego, 80, 83, 159, 130))    {    print("They are whale oil lamps!");    }  else    {    print("You can't do that from here!");    }  }  [ look ladderif (said("examine", "ladder"))  {  [ if near a ladder  if (posn(ego, 123, 94, 159, 156))    {    print("Just a typical ladder!");    }  else    {    print("You can't do that from here!");    }  }  [ look windowif (said("examine", "glass"))  {  [ if near a window  if (posn(ego, 56, 52, 159, 107))    {    print("You see nothing but blue sky and water!");    }  else    {    print("You can't do that from here!");    }  }  [ look stairsif (said("examine", "stair"))  {  [ if near the captain's deck stairs  if (posn(ego, 89, 52, 146, 130))    {    print("These stairs provide quick access between the command center and the "          "captain's quarters.");    }  else    {    print("You can't do that from here!");    }  }  [ use stairs/use ladderif ((said("go", "stair") ||     said("go", "up", "stair") ||     said("go", "down", "stair") ||     said("climb", "stair") ||     said("climb", "up", "stair") ||     said("climb", "down", "stair") ||     said("use", "stair") ||     said("go", "ladder") ||     said("go", "up", "ladder") ||     said("go", "down", "ladder") ||     said("climb", "ladder") ||     said("climb", "up", "ladder") ||     said("climb", "down", "ladder") ||     said("use", "ladder")))  {  print("Do it!");  }  [ look bed/look deskif ((said("examine", "bed") || said("examine", "desk")))  {  [ if in captain's quarters  if (posn(ego, 80, 94, 96, 94))    {    print("The bed is neatly made and his desk is organized.");    }  else    {    print("You can't do that from here!");    }  }  [ look sceneif (said("examine", "scene"))  {  print("Today is a beautiful day!! \n      What a view!!");  }  [ look quarters/look cabinif ((said("examine", "quarter") || said("examine", "cabin")))  {  [ if in captain's quarters  if (posn(ego, 60, 94, 96, 94))    {    print("The captain keeps his quarters very tidy.");    }  else    {    print("You can't do that from here!");    }  }  [ look wheelif (said("examine", "wheel"))  {  [ if in pilot house  if (posn(ego, 73, 52, 119, 52))    {    print("The captain steers the ship with this wheel.");    }  else    {    print("You can't do that from here!");    }  }  [ look in drawer/open drawer/open deskif ((said("examine", "drawer") ||     said("open", "drawer") ||     said("open", "desk")))  {  [ if in captain's quarters  if (posn(ego, 80, 94, 103, 94))    {    print("You find nothing of interest.");    }  else    {    print("You can't do that from here!");    }  }  [ jump overboardif ((said("jump") || said("jump", "overboard")))  {  print("You'll never get to California if you do that!");  }  [ turn wheelif (said("rotate", "wheel"))  {  print("It might be best to leave that up to the crew.  They know what they "        "are doing!");  }  [ go fishingif ((said("go", "fish") ||     said("go", "fishing") ||     said("fish")))  {  print("A good idea, but not necessary!");  }  [ take the wheelif (said("acquire", "wheel"))  {  print("You'll never make it if you do that!");  }  [ look deckif (said("examine", "deck"))  {  print("You find nothing of interest.");  }  Done:[ call main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is the bridge deck."#message 2 "You are at the top of the staircase that connects the bridge deck to the captain's deck."#message 3 "This is the section of the bridge deck that is the command center of the vessel."#message 4 "It is from here that the captain does his utmost to ensure a safe voyage for the passengers and cargo."#message 5 "This is the most aft portion of the bridge deck, and also of the ship."#message 6 "It is a favorite place for passengers to take in the view!"#message 7 "This is the aft section of the sun, rain, snow, hail and sleet deck."#message 8 "Today is a beautiful day!! \n      What a view!!"#message 9 "This is the staircase that connects the captain's deck to the bridge deck."#message 10 "The captain keeps his quarters very tidy."#message 11 "The bed is neatly made and his desk is organized."#message 13 "You are immediately outside of the captain's quarters, at the base of the staircase connecting the captain's deck to the bridge deck."#message 14 "This is the small set of stairs connecting the main deck to the captain's deck."#message 15 "This is the main deck of the ship."#message 16 "You are on the ladder that connects the main deck with the lower deck."#message 17 "This is the ship's lower deck.  It smells of sweat down here!"#message 30 "There is nothing that even resembles a %w2 here."#message 50 "The captain seems to manuever his vessel effortlessly through the high seas!"#message 51 "You are not close enough!"#message 52 "\"Welcome aboard the Sea Farer!  It is my sincere desire that you are enjoying the voyage!  Panama is not that far away!!\""#message 58 "You can't see outside from here!"#message 59 "The sea is deep blue and gently rolling."#message 60 "You see an island on the distant horizon!"#message 61 "There are no rocks in sight!"#message 63 "There are no icebergs in sight!"#message 64 "You can't see through the coal hold door!"#message 65 "You sure can't see any coal from here!"#message 67 "I sure don't see a %w2 around here!"#message 68 "You can't do that from here!"#message 69 "The mast looks very sturdy!"#message 77 "The door just won't open!"#message 78 "Just walk up to them!"#message 79 "The rigging whistles in the wind!"#message 80 "They are whale oil lamps!"#message 81 "Just a typical ladder!"#message 82 "This is the aft command center door!"#message 83 "This is the forward command center door!"#message 84 "This is the door to the captain's quarters!"#message 85 "You see nothing but blue sky and water!"#message 86 "These stairs provide quick access between the command center and the captain's quarters."#message 88 "The door keeps coal from falling out of the coal hold."#message 89 "Do it!"#message 90 "The captain steers the ship with this wheel."#message 91 "You find nothing of interest."#message 92 "You'll never get to California if you do that!"#message 93 "It might be best to leave that up to the crew.  They know what they are doing!"#message 110 "A good idea, but not necessary!"#message 111 "You'll never make it if you do that!"