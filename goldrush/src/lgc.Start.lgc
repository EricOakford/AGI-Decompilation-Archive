[***********************************************************[[ lgc.Start[[ This is the first room called when the game starts (after[ lgc.Initialize). It does a calculation to determine the[ approximate number of agi game cycles per second, which[ is used by the game to manage the overall 'game time'.[ After that calcuation, the game goes to the copy[ protection screen, or to the starting room (rm.Mainst) if[ a game is being restored.[ [***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define vToggle                    v221#define vPassCount                 v222[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ pause the game timer until game play is actually started  set(PauseGameTimer);  [ set animation interval to fastest possible value  [ (needed to do the timing check later on)  animationInterval = 0;  [ no player input or ego control during the test  prevent.input();  program.control();  [ turn off status line (only matters if a game is being   [ restarted)  status.line.off();    [ not used; unsure of what it might have been used for  v220 = 33;    [ to accurately count cycles that occur in one second,   [ need to make sure the count starts exactly when the   [ interpreter's second count changes; do this by  [ marking the current second counter, and then starting   [ the test as soon as the counter goes to the next   [ second  NextSecond = elapsedSeconds;  ++NextSecond;  }[ **************************************[ EVERY CYCLE[ **************************************[ as soon as the internal seconds counter rolls over to the[ next value, begin counting passesif (NextSecond == elapsedSeconds)  {  [ to make sure the result can fit within a byte value only  [ count every other pass    [ increment toggle  ++vToggle;  [ on second count of toggle  if (vToggle == 2)    {    [ reset the toggle    vToggle = 0;    [ if total pass count is less than 240    if (vPassCount < 240)      {      [ increment pass count      ++vPassCount;      }    }  }  [ when an entire second has been countedif (elapsedSeconds > NextSecond)  {  [ determine CPS for 'fastest' speed (when  [ animationInterval is set to value of 0); set to  [ vPassCount/3 which is actually totalcounts/6;   CPS_Fastest = vPassCount;  CPS_Fastest /= 3;    [ determine CPS for 'fast' speed (when animationInterval  [ is set to value of 1); set to vPassCount/4 which is  [ actually totalcounts/8; this cps value is also limited  [ to be no more than 20  CPS_Fast = vPassCount;  CPS_Fast /= 4;  if (CPS_Fast > 20)    {    CPS_Fast = 20;    }      [ reset game seconds to 0   GameSeconds = 0;    [ if restarting  if (isset(Restarting))    {    [ set default speed to 'normal'    animationInterval = 2;    new.room(rm.MainSt); [ ##LE001##    }  else    {    [ just starting - run the copy protection sequence    new.room(lgc.InitQuiz); [ ##LE002##    }  }return();[ **************************************[ MESSAGES[ **************************************#message 93 "ani.cycle.counter.2 = %v222"  [left over, unused#message 94 "fastest = %v167"              [left over, unused#message 95 "fast = %v165"                 [left over, unused