[***********************************************************[[ rm.SF_StableSouth[ [ In the south end of the stable, Jerrod can leave the lazy[ mule he bought at the corral and then leave with James'[ mule. There are six mules in the room, but trying to take[ any mule other than James' old mule will get Jerrod sent[ to the gallows.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oJamesMule                   o1#define oJerrodsMule                 o2#define oMule1                       o3#define oMule2                       o4#define oMule3                       o5#define oMule4                       o6#define vJamesMuleDist             v220#define vLazyMuleDist              v221#define vMule1Dist                 v222#define vMule2Dist                 v223#define vMule3Dist                 v224#define vMule4Dist                 v225#define vCloseMuleCount            v226[ v227 through v231 are not used#define vMuleX                     v232#define vMuleY                     v233#define vMuleOldX                  v234#define vMuleOldY                  v235[ no idea why they re-used this flag instead of using a[ different one#define fMuleMoved                  f32  [ override RushAnnounced#define fJamesMuleFollow           f220#define fLazyMuleFollow            f221#define fMule1Follow               f222#define fMule2Follow               f223#define fMule3Follow               f224#define fMule4Follow               f225[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load picture for current room  load.pic(currentRoom);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.Mule);    [ draw the current room picture  draw.pic(currentRoom);    [ there are six mules in the room    [ Jerrod's mule  animate.obj(oJerrodsMule);  set.view(oJerrodsMule, vw.Mule);  [ James' mule  animate.obj(oJamesMule);  set.view(oJamesMule, vw.Mule);  [ other mule #1  animate.obj(oMule1);  set.view(oMule1, vw.Mule);  [ other mule #2  animate.obj(oMule2);  set.view(oMule2, vw.Mule);  [ other mule #3  animate.obj(oMule3);  set.view(oMule3, vw.Mule);  [ other mule #4  animate.obj(oMule4);  set.view(oMule4, vw.Mule);    [ if Jerrod has his original lazy mule  if (has(LazyMule))    {    [ add it next to Jerrod at bottom of screen    position(oJerrodsMule, 42, 161);    draw(oJerrodsMule);    }  else    {    [ if Jerrod's mule hasn't run away    if (!isset(LazyMuleGone))      {      [ it has to be in the stable;       if (isset(LeftLazyMule))        {        [ add Jerrod's mule, wandering about randomly        random(27, 111, vMuleX);        random(67, 155, vMuleY);        position.v(oJerrodsMule, vMuleX, vMuleY);        draw(oJerrodsMule);        wander(oJerrodsMule);        }      else        {        [ there probably was some code here that got        [ commented out        }      }    else      {      [ there was probably some code here that got commented      [ out      }    }      [ if Jerrod has James' mule  if (has("James' ol' mule"))    {    [ add it next to Jerrod at bottom of screen    position(oJamesMule, 42, 161);    [ reset flag indicating Jerrod took James mule from this    [ room    reset(TookJamesMule);    draw(oJamesMule);    }  else    {    [ if Jerrod has NOT taken James' mule    if (!isset(TookJamesMule))      {      [ add James' mule, wandering about randomly      random(27, 111, vMuleX);      random(67, 155, vMuleY);      position.v(oJamesMule, vMuleX, vMuleY);      draw(oJamesMule);      wander(oJamesMule);      }    else      {      [ another empty code block      }    }    [ if Jerrod has other mule #1  if (OtherMuleNum == 1)    {    [ add it next to Jerrod at bottom of screen    position(oMule1, 42, 161);    draw(oMule1);    }  else    {    [ otherwise it roams about randomly    random(27, 111, vMuleX);    random(67, 155, vMuleY);    position.v(oMule1, vMuleX, vMuleY);    draw(oMule1);    wander(oMule1);    }      [ if Jerrod has other mule #2  if (OtherMuleNum == 2)    {    [ add it next to Jerrod at bottom of screen    position(oMule2, 42, 161);    draw(oMule2);    }  else    {    [ otherwise it roams about randomly    random(27, 111, vMuleX);    random(67, 155, vMuleY);    position.v(oMule2, vMuleX, vMuleY);    draw(oMule2);    wander(oMule2);    }      [ if Jerrod has other mule #3  if (OtherMuleNum == 3)    {    [ add it next to Jerrod at bottom of screen    position(oMule3, 42, 161);    draw(oMule3);    }  else    {    [ otherwise it roams about randomly    random(27, 111, vMuleX);    random(67, 155, vMuleY);    position.v(oMule3, vMuleX, vMuleY);    draw(oMule3);    wander(oMule3);    }      [ if Jerrod has other mule #4  if (OtherMuleNum == 4)    {    [ add it next to Jerrod at bottom of screen    position(oMule4, 42, 161);    draw(oMule4);    }  else    {    [ otherwise it roams about randomly    random(27, 111, vMuleX);    random(67, 155, vMuleY);    position.v(oMule4, vMuleX, vMuleY);    draw(oMule4);    wander(oMule4);    }      [ Jerrod, in normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ check each mule; if Jerrod has that mule, it will follow[ Jerrod around[ if Jerrod has James' muleif (has("James' ol' mule"))  {  [ get distance to Jerrod  distance(oJamesMule, ego, vJamesMuleDist);  [ if close enough  if (vJamesMuleDist < 15)    {    [ if James' mule is following Jerrod    if (isset(fJamesMuleFollow))      {      [ mule stops here      reset(fJamesMuleFollow);      stop.motion(oJamesMule);      }    }  [ if not close, but not too far  if (vJamesMuleDist > 14 && vJamesMuleDist < 31)    {    [ if not following,    if (!isset(fJamesMuleFollow))      {      [ the mule starts following Jerrod      set(fJamesMuleFollow);      follow.ego(oJamesMule, 6, fMuleMoved);      }    }  }[ if Jerrod has his own lazy muleif (has(LazyMule))  {  [ get distance to Jerrod  distance(oJerrodsMule, ego, vLazyMuleDist);  [ if close enough  if (vLazyMuleDist < 15)    {    [ if the lazy mule is following Jerrod    if (isset(fLazyMuleFollow))      {      [ mule stops here      reset(fLazyMuleFollow);      stop.motion(oJerrodsMule);      }    }  [ if not close, but not too far  if (vLazyMuleDist > 14 && vLazyMuleDist < 31)    {    [ if not following    if (!isset(fLazyMuleFollow))      {      [ the mule starts following Jerrod      set(fLazyMuleFollow);      follow.ego(oJerrodsMule, 6, fMuleMoved);      }    }  }  [ if Jerrod has mule #1if (OtherMuleNum == 1)  {  [ get distance to Jerrod  distance(oMule1, ego, vMule1Dist);  [ if close enough  if (vMule1Dist < 15)    {    [ if this mule is following Jerrod    if (isset(fMule1Follow))      {      [ mule stops here      reset(fMule1Follow);      stop.motion(oMule1);      }    }  [ if not close, but not too far  if (vMule1Dist > 14 && vMule1Dist < 31)    {    [ if not following    if (!isset(fMule1Follow))      {      [ the mule starts following Jerrod      set(fMule1Follow);      follow.ego(oMule1, 6, fMuleMoved);      }    }  }  [ if Jerrod has mule #2if (OtherMuleNum == 2)  {  [ get distance to Jerrod  distance(oMule2, ego, vMule2Dist);  [ if close enough  if (vMule2Dist < 15)    {    [ if this mule is following Jerrod    if (isset(fMule2Follow))      {      [ mule stops here      reset(fMule2Follow);      stop.motion(oMule2);      }    }  [ if not close, but not too far  if (vMule2Dist > 14 && vMule2Dist < 31)    {    [ if this mule is not following Jerrod    if (!isset(fMule2Follow))      {      [ the mule starts following Jerrod      set(fMule2Follow);      follow.ego(oMule2, 6, fMuleMoved);      }    }  }  [ if Jerrod has mule #3if (OtherMuleNum == 3)  {  [ get distance to Jerrod  distance(oMule3, ego, vMule3Dist);  [ if close enough  if (vMule3Dist < 15)    {    [ if this mule is following Jerrod    if (isset(fMule3Follow))      {      [ mule stops here      reset(fMule3Follow);      stop.motion(oMule3);      }    }  [ if not close, but not too far  if (vMule3Dist > 14 && vMule3Dist < 31)    {    [ if this mule is not following Jerrod    if (!isset(fMule3Follow))      {      [ the mule starts following Jerrod      set(fMule3Follow);      follow.ego(oMule3, 6, fMuleMoved);      }    }  }  [ if Jerrod has mule #4if (OtherMuleNum == 4)  {  [ get distance to Jerrod  distance(oMule4, ego, vMule4Dist);  [ if close enough  if (vMule4Dist < 15)    {    [ if this mule is following Jerrod    if (isset(fMule4Follow))      {      [ mule stops here      reset(fMule4Follow);      stop.motion(oMule4);      }    }  [ if not close, but not too far  if (vMule4Dist > 14 && vMule4Dist < 31)    {    [ if this mule is not following Jerrod    if (!isset(fMule4Follow))      {      [ the mule starts following Jerrod      set(fMule4Follow);      follow.ego(oMule4, 6, fMuleMoved);      }    }  }  [ get position of whichever mule Jerrod currently hasif (has(LazyMule))  {  get.posn(oJerrodsMule, vMuleX, vMuleY);  }if (has("James' ol' mule"))  {  get.posn(oJamesMule, vMuleX, vMuleY);  }if (OtherMuleNum > 0)  {  if (OtherMuleNum == 1)    {    get.posn(oMule1, vMuleX, vMuleY);    }  if (OtherMuleNum == 2)    {    get.posn(oMule2, vMuleX, vMuleY);    }  if (OtherMuleNum == 3)    {    get.posn(oMule3, vMuleX, vMuleY);    }  if (OtherMuleNum == 4)    {    get.posn(oMule4, vMuleX, vMuleY);    }  }  [ if position of mule that Jerrod currently has in[ possession has not changedif (vMuleOldX == vMuleX && vMuleOldY == vMuleY)  {  [ stop whichever mule Jerrod has in possession  if (has(LazyMule))    {    stop.cycling(oJerrodsMule);    }  if (has("James' ol' mule"))    {    stop.cycling(oJamesMule);    }  if (OtherMuleNum > 0)    {    if (OtherMuleNum == 1)      {      stop.cycling(oMule1);      }    if (OtherMuleNum == 2)      {      stop.cycling(oMule2);      }    if (OtherMuleNum == 3)      {      stop.cycling(oMule3);      }    if (OtherMuleNum == 4)      {      stop.cycling(oMule4);      }    }  }else  {  [ mule has moved; begin cycling whichever mule Jerrod has  [ in his possession  if (has(LazyMule))    {    start.cycling(oJerrodsMule);    }  if (has("James' ol' mule"))    {    start.cycling(oJamesMule);    }  if (OtherMuleNum > 0)    {    if (OtherMuleNum == 1)      {      start.cycling(oMule1);      }    if (OtherMuleNum == 2)      {      start.cycling(oMule2);      }    if (OtherMuleNum == 3)      {      start.cycling(oMule3);      }    if (OtherMuleNum == 4)      {      start.cycling(oMule4);      }    }  }  [ save the mule's positionvMuleOldX = vMuleX;vMuleOldY = vMuleY;[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ if Jerrod is at bottom edge of screenif (posn(ego, 0, 166, 159, 166))  {  [ verify that whichever mule Jerrod has is still close  [ enough to bring it to next room; if not, drop the mule    [ if Jerrod has James' mule  if (has("James' ol' mule"))    {    distance(ego, oJamesMule, vJamesMuleDist);    if (vJamesMuleDist > 30)      {      print("The mule that was following you is too far away. It will stay in "            "this part of the corral.");      drop("James' ol' mule");      }    }      [ if Jerrod has his original mule  if (has(LazyMule))    {    distance(ego, oJerrodsMule, vLazyMuleDist);    if (vLazyMuleDist > 30)      {      print("The mule that was following you is too far away. It will stay in "            "this part of the corral.");      drop(LazyMule);      }    }      [ if Jerrod has one of the other four mules  if (has(OtherMule))    {    if (OtherMuleNum == 1)      {      distance(ego, oMule1, vMule1Dist);      if (vMule1Dist > 30)        {        print("The mule that was following you is too far away. It will stay in "              "this part of the corral.");        drop(OtherMule);        }      }    if (OtherMuleNum == 2)      {      distance(ego, oMule2, vMule2Dist);      if (vMule2Dist > 30)        {        print("The mule that was following you is too far away. It will stay in "              "this part of the corral.");        drop(OtherMule);        }      }    if (OtherMuleNum == 3)      {      distance(ego, oMule3, vMule3Dist);      if (vMule3Dist > 30)        {        print("The mule that was following you is too far away. It will stay in "              "this part of the corral.");        drop(OtherMule);        }      }    if (OtherMuleNum == 4)      {      distance(ego, oMule4, vMule4Dist);      if (vMule4Dist > 30)        {        print("The mule that was following you is too far away. It will stay in "              "this part of the corral.");        drop(OtherMule);        }      }    }      [ if Jerrod still has James' mule  if (has("James' ol' mule"))    {    [ set flag showing Jerrod took James' mule    set(TookJamesMule);    }      [ if Jerrod still has his original mule  if (has(LazyMule))    {    [ clear flag showing Jerrod left his mule    reset(LeftLazyMule);    }      [ position Jerrod at bottom center of  [ north stable room  position(ego, 80, 161);  [ change direction and loop  egoDir = UP;  set.loop(ego, 3);  new.room(rm.StableNorth); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ leave muleif ((said("exit", "donkey") ||     said("discard", "donkey") ||     said("let", "go", "donkey") ||     said("release", "donkey") ||     said("exit", "rope") ||     said("discard", "rope") ||     said("let", "go", "rope") ||     said("release", "rope")))  {  [ if Jerrod has a mule  if ((has(LazyMule) ||       has("James' ol' mule") ||       OtherMuleNum > 0))    {    [ drop whichever mule Jerrod has, and let it wander        [ if dropping his own mule    if (has(LazyMule))      {      drop(LazyMule);      wander(oJerrodsMule);      start.cycling(oJerrodsMule);      [ set flag showing Jerrod left his mule here      set(LeftLazyMule);      print("Ya let go of that rope you've been holdin' onto and leave that "            "lazy ol' mule behind!");      }        [ if dropping James' mule    if (has("James' ol' mule"))      {      drop("James' ol' mule");      wander(oJamesMule);      start.cycling(oJamesMule);      print("What a relief to finally be rid of that spirited, zippy, and "            "robust mule!");      }          [ if dropping one of the other mules    if (OtherMuleNum == 1)      {      drop(OtherMule);      wander(oMule1);      start.cycling(oMule1);      OtherMuleNum = 0;      print("Ya let go of the mule and it wanders away!");      }    if (OtherMuleNum == 2)      {      drop(OtherMule);      wander(oMule2);      start.cycling(oMule2);      OtherMuleNum = 0;      print("Ya let go of the mule and it wanders away!");      }    if (OtherMuleNum == 3)      {      drop(OtherMule);      wander(oMule3);      start.cycling(oMule3);      OtherMuleNum = 0;      print("Ya let go of the mule and it wanders away!");      }    if (OtherMuleNum == 4)      {      drop(OtherMule);      wander(oMule4);      start.cycling(oMule4);      OtherMuleNum = 0;      print("Ya let go of the mule and it wanders away!");      }    }  else    {    print("Ya ain't got a mule to leave here!");    }  }  [ look muleif ((said("examine", "donkey") ||     said("examine", "animal") ||     said("examine", "horse")))  {  print("These mules look the same, but with yer frontier savvy you'll find a "        "way of telling 'em apart.");  }  [ look brandif (said("examine", "brand"))  {  [ get distance to each mule in the room  distance(ego, oJerrodsMule, vLazyMuleDist);  distance(ego, oJamesMule, vJamesMuleDist);  distance(ego, oMule1, vMule1Dist);  distance(ego, oMule2, vMule2Dist);  distance(ego, oMule3, vMule3Dist);  distance(ego, oMule4, vMule4Dist);    [ if at least one mule is close to Jerrod  if ((vLazyMuleDist < 15 ||       vJamesMuleDist < 15 ||       vMule1Dist < 15 ||       vMule2Dist < 15 ||       vMule3Dist < 15 ||       vMule4Dist < 15))    {    [ show the brand of first mule that is close enough    if (vLazyMuleDist < 15)      {      show.obj(vw.Inv.LazyMule);      }    if (vJamesMuleDist < 15)      {      show.obj(vw.Inv.JamesMule);      }    if (vMule1Dist < 15)      {      show.obj(vw.Inv.Mule1);      }    if (vMule2Dist < 15)      {      show.obj(vw.Inv.Mule2);      }    if (vMule3Dist < 15)      {      show.obj(vw.Inv.Mule3);      }    if (vMule4Dist < 15)      {      show.obj(vw.Inv.Mule1);      }    }  else    {    print("Yer just not close enough to get a good look at one of these brands!");    }  }[ get muleif (said("acquire", "donkey"))  {  [ if Jerrod already has a mule  if ((has(LazyMule) ||       has("James' ol' mule") ||       has(OtherMule)))    {    print("Ya already got a mule followin' ya around!");    }  else    {    [ get distance to all mules    distance(ego, oJerrodsMule, vLazyMuleDist);    distance(ego, oJamesMule, vJamesMuleDist);    distance(ego, oMule1, vMule1Dist);    distance(ego, oMule2, vMule2Dist);    distance(ego, oMule3, vMule3Dist);    distance(ego, oMule4, vMule4Dist);        [ if at least one mule is close enough    if ((vLazyMuleDist < 15 ||         vJamesMuleDist < 15 ||         vMule1Dist < 15 ||         vMule2Dist < 15 ||         vMule3Dist < 15 ||         vMule4Dist < 15))      {      [ reset count of mules close enough      vCloseMuleCount = 0;            [ for each mule close enough, increment counter      if (vLazyMuleDist < 15)        {        ++vCloseMuleCount;        }      if (vJamesMuleDist < 15)        {        ++vCloseMuleCount;        }      if (vMule1Dist < 15)        {        ++vCloseMuleCount;        }      if (vMule2Dist < 15)        {        ++vCloseMuleCount;        }      if (vMule3Dist < 15)        {        ++vCloseMuleCount;        }      if (vMule4Dist < 15)        {        ++vCloseMuleCount;        }              [ if more than one mule is close enough      if (vCloseMuleCount > 1)        {        [ can't catch a mule unless it's only        [ one nearby        print("Yer right next to a couple of mules.  Which one?");        [ skip to end        goto(Done);        }      else        {        [ there is only one mule - get it                [ check all mules; whichever one is closest, Jerrod        [ will take that one                [ Jerrod's original mule        if (vLazyMuleDist < 15)          {          get(LazyMule);          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }                  [ James' mule        if (vJamesMuleDist < 15)          {          get("James' ol' mule");          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }                  [ other mule #1        if (vMule1Dist < 15)          {          OtherMuleNum = 1;          get(OtherMule);          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }                  [ other mule #2        if (vMule2Dist < 15)          {          OtherMuleNum = 2;          get(OtherMule);          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }                  [ other mule #3        if (vMule3Dist < 15)          {          OtherMuleNum = 3;          get(OtherMule);          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }                  [ other mule #4        if (vMule4Dist < 15)          {          OtherMuleNum = 4;          get(OtherMule);          print("Ya grab the piece of rope hangin' around the mule's neck and "                "it begins to follow you!");          }        }      }    else      {      print("Yer gonna hafta get a tad bit closer to one of them smelly rascals "            "in order to get one!!");      }    }  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "corral") ||     said("examine")))  {  print("Yer in the Sutter's Fort corral and it's full of mules!");  }  [ look fenceif (said("examine", "fence"))  {  print("These here fences are fer keepin' the mules contained!");  }  [ look fort/look wallif ((said("examine", "fort") ||     said("examine", "wall")))  {  print("The walls keep the mules in the corral.");  }  [ look groundif (said("examine", "dirt"))  {  print("The ground is hoof-trodden.");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    print("Diggin' ain't allowed here!  Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }[ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  [ buy muleif (said("buy", "donkey"))  {  print("None of these mules are fer sale!");  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "Ya ain't got a mule to leave here!"#message 2 "Ya let go of that rope you've been holdin' onto and leave that lazy ol' mule behind!"#message 3 "What a relief to finally be rid of that spirited, zippy, and robust mule!"#message 4 "These mules look the same, but with yer frontier savvy you'll find a way of telling 'em apart."#message 5 "Yer just not close enough to get a good look at one of these brands!"#message 6 "Ya already got a mule followin' ya around!"#message 7 "Yer right next to a couple of mules.  Which one?"#message 8 "Ya grab the piece of rope hangin' around the mule's neck and it begins to follow you!"#message 9 "Yer gonna hafta get a tad bit closer to one of them smelly rascals in order to get one!!"#message 14 "Ya let go of the mule and it wanders away!"#message 15 "Yer in the Sutter's Fort corral and it's full of mules!"#message 16 "The mule that was following you is too far away. It will stay in this part of the corral."#message 29 "These here fences are fer keepin' the mules contained!"#message 30 "The walls keep the mules in the corral."#message 31 "The ground is hoof-trodden."#message 40 "Diggin' ain't allowed here!  Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"#message 43 "None of these mules are fer sale!"