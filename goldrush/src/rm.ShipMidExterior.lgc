[***********************************************************[[ rm.ShipMidExterior[[ Called at very beginning of ship trip, after the cut[ scenes showing it leaving New York. Jerrod only has a very[ short time here before the timing logic advances to next[ scene. The only interaction allowed in this room is for [ Jerrod to pull the smoke stack chain, which doesn't even[ blow the whistle.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWheel                       o1#define oWake1                       o2#define oWake2                       o3#define oSmoke                       o4#define oChain                       o5#define oDoor                        o6#define vSmokeStatus               v220#define vSmokeTimer                v221#define fDoorOpen                  f220#define fDoorClosed                f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load timing logic, depending on which trip is chosen  if (TicketChoice == TKT_CAPE)    {    load.logics(lgc.CapeTripTiming);    }  if (TicketChoice == TKT_PANAMA)    {    load.logics(lgc.PanamaTripTiming);    }    [ load picture for the current room  load.pic(currentRoom);    [ load views used by various objects in the room  load.view(vw.JerrodNY);  load.view(vw.MidShipArt);  load.view(vw.MidShipArt2);  load.view(vw.ShipArt2);    [ draw the current room  draw.pic(currentRoom);    [ if going via Cape Horn  if (TicketChoice == TKT_CAPE)    {    [ add passengers    add.to.pic(vw.ShipArt2, 2, 0, 45, 57, 7, 7);    add.to.pic(vw.ShipArt2, 3, 0, 32, 57, 7, 7);    }      [ cabin door   animate.obj(oDoor);  stop.cycling(oDoor);  set.view(oDoor, vw.MidShipArt2);  set.loop(oDoor, 1);  set.cel(oDoor, 0);  set.priority(oDoor, 8);  ignore.objs(oDoor);  ignore.blocks(oDoor);  position(oDoor, 17, 52);  set(fDoorClosed);  draw(oDoor);    [ ship's paddlewheel  animate.obj(oWheel);  set.view(oWheel, vw.MidShipArt);  set.loop(oWheel, 0);  set.cel(oWheel, 0);  set.priority(oWheel, 14);  position(oWheel, 107, 134);  draw(oWheel);  start.cycling(oWheel);    [ ship's wake (waves along side of ship)  animate.obj(oWake1);  set.view(oWake1, vw.MidShipArt);  set.loop(oWake1, 1);  set.cel(oWake1, 0);  set.priority(oWake1, 14);  position(oWake1, 60, 107);  draw(oWake1);  start.cycling(oWake1);  [ wake 2  animate.obj(oWake2);  set.view(oWake2, vw.MidShipArt);  set.loop(oWake2, 2);  set.cel(oWake2, 0);  set.priority(oWake2, 14);  ignore.objs(oWake2);  position(oWake2, 0, 107);  draw(oWake2);  start.cycling(oWake2);    [ smoke coming from stack  animate.obj(oSmoke);  set.view(oSmoke, vw.MidShipArt);  set.loop(oSmoke, 3);  set.priority(oSmoke, 9);  ignore.horizon(oSmoke);  position(oSmoke, 100, 20);    [ smoke stack pull chain  animate.obj(oChain);  set.view(oChain, vw.MidShipArt);  set.loop(oChain, 4);  set.cel(oChain, 0);  set.priority(oChain, 9);  ignore.horizon(oChain);  position(oChain, 99, 41);  draw(oChain);  stop.update(oChain);    [ Jerrod, still in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);  set.priority(ego, 10);  position(ego, 22, 57);  egoDir = STOPPED;  set.loop(ego, 0);  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is close to the door and door is closedif (posn(ego, 9, 52, 20, 57) && (isset(fDoorClosed)))  {  [ open the door  reset(fDoorClosed);  end.of.loop(oDoor, fDoorOpen);  }  [ if Jerrod is NOT by the door, and it's openif (!posn(ego, 9, 52, 20, 57) && (isset(fDoorOpen)))  {  reset(fDoorOpen);  reverse.loop(oDoor, fDoorClosed);  [ this is a slightly different way to manage door   [ opening/closing; in most other cases, a separate  [ 'doormoved' flag is used to track door movement and the  [ 'dooropen' flag is set true when door is open or  [ opening, and false when door is closed or closing  }  [ if Jerrod has moved from the deck into the cabinif (posn(ego, 14, 56, 16, 58) && isset(egoHitSpecial))  {  [ move him up, so he can continue to the right inside the  [ cabin  TmpX = -2; [ 254;  TmpY = -5; [ 251;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod has moved from cabin to the deck (through the[ door)if (posn(ego, 12, 51, 16, 53) && isset(egoHitSpecial))  {  [ bump him down to deck level  TmpX = 2;  TmpY = 5;  reposition(ego, TmpX, TmpY);  }  [ if Jerrod pulled the chainif (vSmokeStatus == 1)  {  [ add smoke  draw(oSmoke);  [ and start cycling it  start.cycling(oSmoke);  [ begin timer countdown  vSmokeStatus = 2;  [ seems odd that they didn't include a ship's whistle to  [ go along with the smoke release, but oh well...  }  [ if smoke is billowingif (vSmokeStatus == 2)  {  [ increment the timer  ++vSmokeTimer;  [ after fifteen cycles  if (vSmokeTimer == 15)    {    [ reset the the smoke variables    vSmokeTimer = 0;    vSmokeStatus = 0;    [ reset the chain    set.cel(oChain, 0);    force.update(oChain);    [ remove the smoke    erase(oSmoke);    }  }  [ these lines must be left over code that the programmers[ forgot to remove; there are no commands processed in these[ two 'if' statementsif (TicketChoice == TKT_CAPE)  {  if (TripCycles == 20)    {    [ WARNING: this block contains no commands    }  }if (TicketChoice == TKT_PANAMA)  {  [ WARNING: this block contains no commands  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckTimer);  }  [ pull the smoke stack chainif ((said("pull", "handle") || said("pull", "chain")))  {  if (posn(ego, 94, 57, 102, 106))    {    [ show the chain pulled down    set.cel(oChain, 1);    force.update(oChain);    [ set smoke status to start billowing smoke    vSmokeStatus = 1;    }  else    {    print("Get closer!");    }  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  print("You are aboard the mighty \"Sea Farer\" enroute to CALIFORNIA!!");  }  CheckTimer:[ run trip-specific timing logicif (TicketChoice == TKT_CAPE)  {  call(lgc.CapeTripTiming);  }if (TicketChoice == TKT_PANAMA)  {  call(lgc.PanamaTripTiming);  }return();[ **************************************[ MESSAGES[ **************************************#message 1 "Get closer!"#message 7 "You are aboard the mighty \"Sea Farer\" enroute to CALIFORNIA!!"