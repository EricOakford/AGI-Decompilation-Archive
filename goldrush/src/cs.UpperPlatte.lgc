[***********************************************************[[ cs.UpperPlatte[[ This logic manages the wagon trip cutscenes as Jerrod [ travels from Fort Kearny in central Nebraska to Fort [ Laramie in Wyoming, by way of the Platte River valley.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oCursor                      o1#define oMapExpander                 o2#define oSceneWindow                 o3#define oWagon                       o4#define oTracks                      o5#define oAshHollow                   o6#define oCourthouseRock              o7#define oChimneyRock                 o8#define oBlock1                      o9#define oBlock2                     o10#define oBlock3                     o11#define oBlock4                     o12#define oBlock5                     o13#define oBlock6                     o14#define oBlock7                     o15#define oBlock8                     o16#define oBlock9                     o17#define oBlock10                    o18[ o19 and o20 are not used#define oArrows                     o21#define vArrowTime                  v80 [ override StormTime#define vStolenMuleTime             v87 [ override BoilerTime#define vMapPic                    v220#define vOvlPic                    v221#define vMapStage                  v222#define vMapTimer                  v223#define vCursorStatus              v224#define vStarveStage               v225#define vTrackSpeed                v226#define vSlowWagonSpd              v227#define vFlashTimer                v228#define vSceneStage                v229#define vSceneTimer                v230#define vNormalSpeed               v231#define vNormalSpeed2              v232[ v233 is not used#define vMediumSpeed               v234#define vMuleStage                 v235#define vSlowSpeed                 v236#define vMediumSpeed2              v237#define vFeatureStage              v238#define vTmpY                      v239#define vMsgStatus                 v240#define vTimeStatus                v241#define vArrowStage                v242#define fCursorMoved               f220#define fFlashOn                   f221#define fSceneClosed               f222#define fSceneClosed2              f223#define fArrowsMoved               f224#define fSoundDone                 f225[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ pictures used in this scene are the main map of USA and  [ Missouri detail map  vMapPic = map.USA;  vOvlPic = map.UpperPlatteSm;    [ step time and step size commands use variables, so set  [ up some variables to hold various size and speed values  vNormalSpeed = 2;  vNormalSpeed2 = 2;  vSlowSpeed = 10;  vSlowWagonSpd = 2;  [ this variable is never used  v233 = 10;  vMediumSpeed = 4;  vMediumSpeed2 = 4;    [ load, draw and discard main map of USA  load.pic(vMapPic);  draw.pic(vMapPic);  discard.pic(vMapPic);    [ map stage begins at 1  vMapStage = 1;    [ load main timing logic  load.logics(lgc.WagonTripTiming);    [ load views needed in this cutscene  load.view(vw.JerrodCA);  load.view(vw.PlatteArt);  load.view(vw.MapTracks);  load.view(vw.MapArt);  load.view(vw.PlatteRiverMap);    [ load sound effects used in this room  load.sound(s.NativeDrums);    [ load the small pic of Platte River but don't add it yet  load.pic(vOvlPic);    [ add blocks to show previous portions of trail marker as  [ completed  add.to.pic(vw.MapTracks, 5, 0, 131, 53, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 120, 54, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 57, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 45, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 105, 43, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 103, 55, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 98, 67, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 96, 79, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 89, 91, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 86, 92, 5, 5);  [ section from Independence to Fort Kearney wasn't tracked  [ on this map, so add it as a separate trail line  add.to.pic(vw.MapTracks, 0, 0, 73, 86, 9, 9);  [ add Missouri map expander permanently to the scene,  [ centered in the screen  add.to.pic(vw.MapTracks, 2, 0, 73, 86, 9, 9);    [ blocks are used to show progress across Platte River  [ valley map    [ block 1  animate.obj(oBlock1);  set.view(oBlock1, vw.MapTracks);  set.loop(oBlock1, 5);  set.cel(oBlock1, 1);  ignore.horizon(oBlock1);  set.priority(oBlock1, 6);  [ block 2  animate.obj(oBlock2);  set.view(oBlock2, vw.MapTracks);  set.loop(oBlock2, 5);  set.cel(oBlock2, 1);  ignore.horizon(oBlock2);  set.priority(oBlock2, 6);  [ block 3  animate.obj(oBlock3);  set.view(oBlock3, vw.MapTracks);  set.loop(oBlock3, 5);  set.cel(oBlock3, 1);  ignore.horizon(oBlock3);  set.priority(oBlock3, 6);  [ block 4  animate.obj(oBlock4);  set.view(oBlock4, vw.MapTracks);  set.loop(oBlock4, 5);  set.cel(oBlock4, 1);  ignore.horizon(oBlock4);  set.priority(oBlock4, 6);  [ block 5  animate.obj(oBlock5);  set.view(oBlock5, vw.MapTracks);  set.loop(oBlock5, 5);  set.cel(oBlock5, 1);  ignore.horizon(oBlock5);  set.priority(oBlock5, 6);  [ block 6  animate.obj(oBlock6);  set.view(oBlock6, vw.MapTracks);  set.loop(oBlock6, 5);  set.cel(oBlock6, 1);  ignore.horizon(oBlock6);  set.priority(oBlock6, 6);  [ block 7  animate.obj(oBlock7);  set.view(oBlock7, vw.MapTracks);  set.loop(oBlock7, 5);  set.cel(oBlock7, 1);  ignore.horizon(oBlock7);  set.priority(oBlock7, 6);  [ block 8  animate.obj(oBlock8);  set.view(oBlock8, vw.MapTracks);  set.loop(oBlock8, 5);  set.cel(oBlock8, 1);  ignore.horizon(oBlock8);  set.priority(oBlock8, 6);  [ block 9  animate.obj(oBlock9);  set.view(oBlock9, vw.MapTracks);  set.loop(oBlock9, 5);  set.cel(oBlock9, 1);  ignore.horizon(oBlock9);  set.priority(oBlock9, 6);  [ block 10  animate.obj(oBlock10);  set.view(oBlock10, vw.MapTracks);  set.loop(oBlock10, 5);  set.cel(oBlock10, 1);  ignore.horizon(oBlock10);  set.priority(oBlock10, 6);    [ map cursor  animate.obj(oCursor);  set.view(oCursor, vw.MapTracks);  set.loop(oCursor, 3);  fix.loop(oCursor);  position(oCursor, 149, 131);  set.priority(oCursor, 7);  ignore.horizon(oCursor);  ignore.objs(oCursor);  [ use normal cursor speed (2)  step.time(oCursor, vNormalSpeed);    [ map expander for Platte River  animate.obj(oMapExpander);  set.view(oMapExpander, vw.MapTracks);  set.loop(oMapExpander, 2);  set.cel(oMapExpander, 1);  fix.loop(oMapExpander);  position(oMapExpander, 58, 73);  set.priority(oMapExpander, 9);  ignore.horizon(oMapExpander);  ignore.objs(oMapExpander);  stop.cycling(oMapExpander);    [ scenery window   animate.obj(oSceneWindow);  set.view(oSceneWindow, vw.MapArt);  set.loop(oSceneWindow, 0);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 9);  position(oSceneWindow, 6, 161);    [ wagon used in scenery window  animate.obj(oWagon);  set.view(oWagon, vw.MapArt);  set.loop(oWagon, 1);  set.priority(oWagon, 11);  position(oWagon, 12, 148);    [ animal tracks used in scenery window  animate.obj(oTracks);  set.view(oTracks, vw.MapArt);  set.loop(oTracks, 2);  set.priority(oTracks, 10);  position(oTracks, 9, 150);    [ if Jerrod is NOT set to be attacked by  [ natives yet  if (CurrentTripTime != vArrowTime)    {    [ Ash Hollow scene    animate.obj(oAshHollow);    set.view(oAshHollow, vw.PlatteArt);    set.loop(oAshHollow, 2);    set.priority(oAshHollow, 10);    position(oAshHollow, 6, 161);    stop.cycling(oAshHollow);        [ Courthouse Rock scene    animate.obj(oCourthouseRock);    set.view(oCourthouseRock, vw.PlatteArt);    set.loop(oCourthouseRock, 1);    set.priority(oCourthouseRock, 10);    position(oCourthouseRock, 6, 161);    stop.cycling(oCourthouseRock);        [ Chimney Rock scene    animate.obj(oChimneyRock);    set.view(oChimneyRock, vw.PlatteArt);    set.loop(oChimneyRock, 0);    set.priority(oChimneyRock, 10);    position(oChimneyRock, 6, 161);    stop.cycling(oChimneyRock);    }  [ set up arrows in case Jerrod gets shot by natives  animate.obj(oArrows);  set.view(oArrows, vw.MapArt);  set.loop(oArrows, 6);  set.cel(oArrows, 0);  position(oArrows, 9, 157);  set.priority(oArrows, 10);  ignore.objs(oArrows);  stop.cycling(oArrows);    [ ego object is only used in scene where Jerrod gets shot  [ by arrows  animate.obj(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ in first map stageif (vMapStage == 1)  {  [ increment main scene timer  ++vMapTimer;    [ flash timer controls speed that the red box flashes  [ between on and off  ++vFlashTimer;    [ create flashing red box by drawing/erasing the box every  [ four cycles (why not just use a view, with cycle time of  [ 4???)  if (vFlashTimer == 4)    {    [ reset the counter    vFlashTimer = 0;    [ toggle state of the frame    toggle(fFlashOn);    if (isset(fFlashOn))      {      draw(oMapExpander);      }    else      {      erase(oMapExpander);      }    }      [ after 80 cycles  if (vMapTimer == 80)    {    [ reset timer    vMapTimer = 0;    [ advance to stage 2    vMapStage = 2;    [ change expander object to the first cel showing    [ smallest image of the Platte River map    set.priority(oMapExpander, 9);    set.view(oMapExpander, vw.PlatteRiverMap);    set.loop(oMapExpander, 0);    fix.loop(oMapExpander);    set.cel(oMapExpander, 0);    position(oMapExpander, 44, 91);    [ show it on screen    draw(oMapExpander);    }  }  [ if in map stage 2if (vMapStage == 2)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset timer    vMapTimer = 0;    [ advance to stage 3    vMapStage = 3;    [ show midsize cel in expanding map sequence    set.cel(oMapExpander, 1);    }  }  [ if in map stage 3if (vMapStage == 3)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 4;    [ show largest cel in expanding map    set.cel(oMapExpander, 2);    }  }  [ if in map stage 4if (vMapStage == 4)  {  [ increment timer  ++vMapTimer;  [ after five cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 5;    [ add the Platte River overylay to the picture    overlay.pic(vOvlPic);    [ then discard the overlay    discard.pic(vOvlPic);    [ and remove the expanding map object    erase(oMapExpander);    [ force the picture to update to show the overlay    show.pic();    }  }[ if in map stage 5if (vMapStage == 5)  {  [ increment timer  ++vMapTimer;  [ after five cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ all done; set stage to next value    vMapStage = 6;    [ use the large Platte River map overlayed on USA map    [ for rest of activity in this room    load.pic(currentRoom);    overlay.pic(currentRoom);    discard.pic(currentRoom);    show.pic();        [ now draw the cursor on the map    draw(oCursor);    [ and begin moving it    move.obj(oCursor, 122, 131, 1, fCursorMoved);    vCursorStatus = 1;    [ main scene sequence begins    vSceneStage = 100;    }  }  [ when scene sequence begins (not sure why 100 is used as[ start)if (vSceneStage == 100)  {  [ increment timer  ++vSceneTimer;  [ after one cycle (meaning immediately after stage set to  [ 100)  if (vSceneTimer == 1)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 1;    [ set cursor step time to normal speed (using second    [ normal speed variable)    step.time(oCursor, vNormalSpeed2);    [ draw the scene detail window in lower left; with    [ smallest image    draw(oSceneWindow);    stop.cycling(oSceneWindow);    }  }  [ if in scene stage 1if (vSceneStage == 1)  {  [ increment timer  ++vSceneTimer;  [ after 10 cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next scene    vSceneStage = 2;    [ expand scene window to mid size    set.cel(oSceneWindow, 1);    }  }  [ if in scene stage 2if (vSceneStage == 2)  {  [ increment timer  ++vSceneTimer;  [ after 10 cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 3;    [ use largest scene window with blank background    set.cel(oSceneWindow, 2);    [ force it to draw (not sure why they couldn't wait    [ until normal update at end of cycle?)    force.update(oSceneWindow);        [ now draw the scene detail object (the wagon and    [ horses)    draw(oWagon);        [ add the horse's hoofprints object and show it on    [ detail scene    vTrackSpeed = 2;    cycle.time(oTracks, vTrackSpeed);    draw(oTracks);    }  }  [ when cursor gets to left edge of mapif (posn(oCursor, 2, 44, 2, 44) && vSceneStage == 3)  {  [ advance to next stage  vSceneStage = 4;  [ shrink scenery window to mid size  set.cel(oSceneWindow, 1);  [ erase wagon and tracks  erase(oWagon);  erase(oTracks);  [ use reverse loop to shrink scenery window to small  reverse.loop(oSceneWindow, fSceneClosed);  }  [ when scene closes at end of this map sequenceif (isset(fSceneClosed) && vSceneStage == 4)  {  [ all done   reset(fSceneClosed);  vSceneStage = 5;  [ erase the scene window  erase(oSceneWindow);  [ set flag so Jerrod can continue to next cutscene  set(ContinueJourney);  }  [ if Jerrod is NOT set to meet some other horrible fate and[ cursor is about halfway across the screenif (vStolenMuleTime != 4 &&     YoungOxDeathTime != 11 &&     CoalFireTime != 12 &&     posn(oCursor, 67, 110, 67, 110) &&     vArrowStage == 0)  {  [ random chance wagon train gets attacked by natives  random(1, 4, vArrowStage);  [ one in four chance  if (vArrowStage == 1)    {    vArrowTime = CurrentTripTime;    }  }  [ if time for wagon train to be attackedif (CurrentTripTime == vArrowTime)  {  if (posn(oCursor, 67, 110, 67, 110))    {    [ change scene stage so it skips normal sequence    vSceneStage = 40;    [ shrink the scenery window    set.cel(oSceneWindow, 1);    erase(oWagon);    erase(oTracks);    reverse.loop(oSceneWindow, fSceneClosed);    }      [ when scenery window is shrunk  if (isset(fSceneClosed) && vSceneStage == 40)    {    [ reset the flag    reset(fSceneClosed);    [ advance to next stage (values 41, 42 skipped)    vSceneStage = 43;    [ remove scenery window    erase(oSceneWindow);    [ cursor slows to medium speed    step.time(oCursor, vMediumSpeed);    [ draw scenery window at full size (erasing it, then    [ redrawing it like this is unnecessary - they could    [ have kept it drawn and just changed the loop/cel)    set.loop(oSceneWindow, 0);    set.cel(oSceneWindow, 2);    draw(oSceneWindow);    [ play drum sound    sound(s.NativeDrums, fSoundDone);    [ tracks move a bit faster here    vTrackSpeed = 1;    cycle.time(oTracks, vTrackSpeed);    draw(oTracks);    start.cycling(oTracks);    [ now add Jerrod, walking along the path (simulated by    [ cycling in place, and having footsteps pass by)    set.view(ego, vw.JerrodCA);    set.loop(ego, 1);    fix.loop(ego);    [ set step size to 0 so he doesn't move (prevents user    [ from using cursor keys)    vTrackSpeed = 0;    step.size(ego, vTrackSpeed);    [ add Jerrod to scene window    position(ego, 43, 148);    set.priority(ego, 10);    draw(ego);    [ and allow ego object to cycle at rest    set(CycleAtRest);    start.cycling(ego);    vTrackSpeed = 1;    cycle.time(ego, vTrackSpeed);    }      [ after Jerrod is shown on screen walking  if (vSceneStage == 43)    {    [ increment timer    ++vSceneTimer;    [ after 35 cycles    if (vSceneTimer == 35)      {      [ reset timer      vSceneTimer = 0;      [ advance to next stage      vSceneStage = 44;      [ add arrows to scene      draw(oArrows);      [ and launch them at Jerrod      end.of.loop(oArrows, fArrowsMoved);      [ cursor stops moving      vTrackSpeed = 0;      step.size(oCursor, vTrackSpeed);      }    }      [ after arrows reach Jerrod  if (isset(fArrowsMoved))    {    [ reset the flag    reset(fArrowsMoved);    [ change Jerrod's image to one with him full of arrows    set.view(ego, vw.MapArt);    set.loop(ego, 7);    [ adjust position so new image shows in correct location    vTrackSpeed = -3; [ 253;    vTmpY = 0;    reposition(ego, vTrackSpeed, vTmpY);    [ make sure to start on first cel    set.cel(ego, 0);    [ and run to end of loop to show Jerrod dying    end.of.loop(ego, fSceneClosed);    [ also erase the flying arrows    erase(oArrows);    }      [ if Jerrod is done dying  if (isset(fSceneClosed) && vSceneStage == 44)    {    [ it's all over    vSceneStage = 45;    [ set Jerrod's status to death by arrow attack    EgoHealthStatus = 38;    stop.cycling(oTracks);    print("These Indians came out of nowhere! There was nothing you could do.");    [ load and call logic to handle details of death    load.logics(lgc.DeathOnTrail);    call(lgc.DeathOnTrail);    }  }[ replay the drum sound over and overif (isset(fSoundDone))  {  sound(s.NativeDrums, fSoundDone);  }  [ if Jerrod chose mules instead of oxen, they will get[ stolen by the nativesif (CurrentTripTime == vStolenMuleTime)  {  [ if cursor is just past halfway, and natives haven't  [ attacked yet  if (posn(oCursor, 67, 110, 67, 110) && vMuleStage == 0)    {    [ change status to show mules stolen    vMuleStage = 1;    [ the normal.motion command is not necessary; also to    [ stop the cursor, either the stop.motion command or    [ changing step size to zero works; you don't need both!    normal.motion(oCursor);    [ stop the cursor from moving    stop.motion(oCursor);    [ set step time of cursor to zero    [ (which also stops it from moving)    vTrackSpeed = 0;    step.size(oCursor, vTrackSpeed);    [ play drum sound    sound(s.NativeDrums, fSoundDone);    print("Along your journey you have encountered a few Indians and they have "          "all been friendly, so far.");    print("But just like pale faces, there are good and bad Indians.");    print("You have just run into some of the bad!");    print("This is just too gruesome to watch!!");    erase(oTracks);    erase(oWagon);    erase(oSceneWindow);    print("These Indians saw the beautiful mules you selected back in "          "Independence and wanted them.");    print("And they got them, at no small price to you!");    print("Every member of your company paid the price.");    [ set Jerrod's status to 'death by stolen mules'    EgoHealthStatus = 40;    [ load and call logic to handle details of Jerrod's demise    load.logics(lgc.DeathOnTrail);    call(lgc.DeathOnTrail);    }  }  [ if wagon train left too early, animals will starve at this[ pointif (CurrentTripTime == AnimalStarveTime)  {  [ if cursor is just outside of Fort Kearney, and sequence  [ hasn't started yet  if (posn(oCursor, 138, 131, 138, 131) && vStarveStage == 0)    {    [ begin the starving animal sequence    vStarveStage = 1;    print("Your trip has only begun, and the animal team is getting weak.");    [ slow down cursor, wagon and tracks    step.time(oCursor, vSlowSpeed);    cycle.time(oWagon, vSlowWagonSpd);    vTrackSpeed = 4;    cycle.time(oTracks, vTrackSpeed);    }  [ if starving has begun  if (vStarveStage == 1)    {    [ increment timer    ++vSceneTimer;    [ after 50 cycles    if (vSceneTimer == 50)      {      [ reset timer      vSceneTimer = 0;      [ advance to next stage      vStarveStage = 2;      print("When you left Independence, there wasn't enough grass on the "            "plains for the animals to eat.");      print("They are too weak to pull the wagon.");      [ shrink scene window      set.cel(oSceneWindow, 1);      [ remove wagon and tracks      erase(oWagon);      erase(oTracks);      [ reverse loop to shrink scene window to smallest image      reverse.loop(oSceneWindow, fSceneClosed);      }    }  [ after scene window finishes shrinking  if (isset(fSceneClosed) && vStarveStage == 2)    {    [ advance to next stage    reset(fSceneClosed);    vStarveStage = 3;    [ remove scene window    erase(oSceneWindow);    [ stop cursor from moving    vTrackSpeed = 0;    step.size(oCursor, vTrackSpeed);    [ set Jerrod's status to 'death by starved animals'    EgoHealthStatus = 42;    [ load and call logic to handle details of Jerrod's    [ demise    load.logics(lgc.DeathOnTrail);    call(lgc.DeathOnTrail);    }  }  [ need to periodically adjust cursor's destination so it[ follows the correct path across the screenif (isset(fCursorMoved) && vCursorStatus == 1)  {  reset(fCursorMoved);  vCursorStatus = 2;  move.obj(oCursor, 122, 131, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 2)  {  reset(fCursorMoved);  vCursorStatus = 3;  move.obj(oCursor, 121, 129, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 3)  {  reset(fCursorMoved);  vCursorStatus = 4;  move.obj(oCursor, 113, 120, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 4)  {  reset(fCursorMoved);  vCursorStatus = 5;  move.obj(oCursor, 66, 110, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 5)  {  reset(fCursorMoved);  vCursorStatus = 6;  move.obj(oCursor, 65, 102, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 6)  {  reset(fCursorMoved);  vCursorStatus = 7;  move.obj(oCursor, 64, 100, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 7)  {  reset(fCursorMoved);  vCursorStatus = 8;  move.obj(oCursor, 59, 97, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 8)  {  reset(fCursorMoved);  vCursorStatus = 9;  move.obj(oCursor, 57, 93, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 9)  {  reset(fCursorMoved);  vCursorStatus = 10;  move.obj(oCursor, 53, 91, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 10)  {  reset(fCursorMoved);  vCursorStatus = 11;  move.obj(oCursor, 47, 84, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 11)  {  reset(fCursorMoved);  vCursorStatus = 12;  move.obj(oCursor, 44, 83, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 12)  {  reset(fCursorMoved);  vCursorStatus = 13;  move.obj(oCursor, 42, 80, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 13)  {  reset(fCursorMoved);  vCursorStatus = 14;  move.obj(oCursor, 36, 79, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 14)  {  reset(fCursorMoved);  vCursorStatus = 15;  move.obj(oCursor, 36, 76, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 15)  {  reset(fCursorMoved);  vCursorStatus = 16;  move.obj(oCursor, 33, 76, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 16)  {  reset(fCursorMoved);  vCursorStatus = 17;  move.obj(oCursor, 29, 71, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 17)  {  reset(fCursorMoved);  vCursorStatus = 18;  move.obj(oCursor, 26, 69, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 18)  {  reset(fCursorMoved);  vCursorStatus = 19;  move.obj(oCursor, 25, 62, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 19)  {  reset(fCursorMoved);  vCursorStatus = 20;  move.obj(oCursor, 18, 62, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 20)  {  reset(fCursorMoved);  vCursorStatus = 21;  move.obj(oCursor, 16, 59, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 21)  {  reset(fCursorMoved);  vCursorStatus = 22;  move.obj(oCursor, 7, 54, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 22)  {  reset(fCursorMoved);  vCursorStatus = 23;  move.obj(oCursor, 3, 46, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStatus == 23)  {  reset(fCursorMoved);  vCursorStatus = 24;  move.obj(oCursor, 2, 44, 1, fCursorMoved);  }[ at status point 24, cursor movment is doneif (isset(fCursorMoved) && vCursorStatus == 24)  {  [ looks like at one time they might have had something  [ else they wanted to do here, but later deleted it  }  [ as cursor moves across the screen, use blocks to keep[ previous portions of the track permanently visibleif (posn(oCursor, 140, 131, 140, 131))  {  position(oBlock1, 140, 131);  draw(oBlock1);  stop.update(oBlock1);  }if (posn(oCursor, 129, 131, 129, 131))  {  position(oBlock2, 129, 131);  ignore.objs(oBlock2);  draw(oBlock2);  stop.update(oBlock2);  }if (posn(oCursor, 118, 126, 118, 126))  {  position(oBlock3, 118, 126);  draw(oBlock3);  stop.update(oBlock3);  }if (posn(oCursor, 108, 115, 108, 115))  {  position(oBlock4, 108, 115);  draw(oBlock4);  stop.update(oBlock4);  }if (posn(oCursor, 97, 110, 97, 110))  {  position(oBlock5, 97, 110);  draw(oBlock5);  stop.update(oBlock5);  }if (posn(oCursor, 86, 110, 86, 110))  {  position(oBlock6, 86, 110);  ignore.objs(oBlock6);  draw(oBlock6);  stop.update(oBlock6);  }if (posn(oCursor, 75, 110, 75, 110))  {  position(oBlock7, 75, 110);  draw(oBlock7);  stop.update(oBlock7);  }if (posn(oCursor, 65, 104, 65, 104))  {  position(oBlock8, 65, 104);  draw(oBlock8);  stop.update(oBlock8);  }if (posn(oCursor, 65, 102, 65, 102))  {  position(oBlock9, 65, 102);  draw(oBlock9);  stop.update(oBlock9);  }if (posn(oCursor, 57, 93, 57, 93))  {  position(oBlock10, 57, 93);  draw(oBlock10);  stop.update(oBlock10);  }  [ and it looks like about half way across they gave up using[ screen objects, and decided to use add.to.pic command; not[ sure why they didn't use that in place of the blocks for[ the entire sceneif (posn(oCursor, 47, 84, 47, 84))  {  add.to.pic(vw.MapTracks, 5, 1, 47, 84, 6, 6);  }if (posn(oCursor, 36, 79, 36, 79))  {  add.to.pic(vw.MapTracks, 5, 1, 36, 79, 6, 6);  }if (posn(oCursor, 25, 67, 25, 67))  {  add.to.pic(vw.MapTracks, 5, 1, 25, 67, 6, 6);  }if (posn(oCursor, 14, 57, 14, 57))  {  add.to.pic(vw.MapTracks, 5, 1, 14, 57, 6, 6);  }if (posn(oCursor, 3, 50, 3, 50))  {  add.to.pic(vw.MapTracks, 5, 1, 3, 50, 6, 6);  }  [ at various points along the way, display an image of[ important features[ if Jerrod is NOT gonna get shot by the nativesif (CurrentTripTime != vArrowTime)  {  [ approaching Ash Hollow  if (posn(oCursor, 66, 110, 66, 110) && vFeatureStage == 0)    {    [ advance to next stage    vFeatureStage = 1;    [ shrink scene window, remove wagon and tracks    set.cel(oSceneWindow, 1);    erase(oWagon);    erase(oTracks);    reverse.loop(oSceneWindow, fSceneClosed2);    }  [ after scene window shrinks near Ash Hollow  if (isset(fSceneClosed2) && vFeatureStage == 1)    {    [ advance to next stage    reset(fSceneClosed2);    vFeatureStage = 3;    [ remove scene window from screen    erase(oSceneWindow);    [ add and expand Ash Hollow image    set.cel(oAshHollow, 0);    draw(oAshHollow);    end.of.loop(oAshHollow, fSceneClosed2);    [ set cursor speed to medium    step.time(oCursor, vMediumSpeed2);    [ show caption, if not hiding messages    if (!isset(HideTripMsgs))      {      set(leaveWindow);      print.at("Ash Hollow!", 15, 15, 0);      }    }  [ after image expands  if (isset(fSceneClosed2) && vFeatureStage == 3)    {    [ advance to next stage    reset(fSceneClosed2);    vFeatureStage = 4;    }  [ when cursor passes by Ash Hollow  if (posn(oCursor, 62, 98, 62, 98) && vFeatureStage == 4)    {    [ advance to next stage    vFeatureStage = 5;    [ shrink the image    reverse.loop(oAshHollow, fSceneClosed2);    }  [ when Ash Hollow image has shrunk  if (isset(fSceneClosed2) && vFeatureStage == 5)    {    [ advance to next stage    reset(fSceneClosed2);    vFeatureStage = 6;    [ remove the image    erase(oAshHollow);    [ remove the caption    close.window();    }  }  [ if approaching Courthouse Rockif (posn(oCursor, 50, 88, 50, 88) && vFeatureStage == 6)  {  [ advance to next stage  vFeatureStage = 7;  [ add and expand the Courthouse Rock image  set.cel(oCourthouseRock, 0);  draw(oCourthouseRock);  end.of.loop(oCourthouseRock, fSceneClosed2);  [ change cursor speed to medium  step.time(oCursor, vMediumSpeed2);  [ show caption, if not hiding messages  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Courthouse Rock!", 15, 15, 0);    }  }[ if Courthouse Rock scene is fully expandedif (isset(fSceneClosed2) && vFeatureStage == 7)  {  [ advance to next stage  reset(fSceneClosed2);  vFeatureStage = 8;  }[ if past Courthouse Rockif (posn(oCursor, 42, 80, 42, 80) && vFeatureStage == 8)  {  [ advance to next stage  vFeatureStage = 9;  [ shrink the image  reverse.loop(oCourthouseRock, fSceneClosed2);  }[ if Courthouse Rock image has shrunk back downif (isset(fSceneClosed2) && vFeatureStage == 9)  {  [ advance to next stage  reset(fSceneClosed2);  vFeatureStage = 10;  [ remove image  erase(oCourthouseRock);  [ remove caption  close.window();  }  [ if approaching Chimney Rockif (posn(oCursor, 40, 79, 40, 79) && vFeatureStage == 10)  {  [ advance to next stage  vFeatureStage = 11;  [ add, then expand Chimney Rock image  set.cel(oChimneyRock, 0);  draw(oChimneyRock);  end.of.loop(oChimneyRock, fSceneClosed2);  [ show caption, if not hiding messages  if (!isset(HideTripMsgs))    {    set(leaveWindow);    print.at("Chimney Rock!", 15, 15, 0);    }  }[ when image has fully expandedif (isset(fSceneClosed2) && vFeatureStage == 11)  {  [ advance to next stage  reset(fSceneClosed2);  vFeatureStage = 12;  }[ when past Chimney Rockif (posn(oCursor, 31, 74, 31, 74) && vFeatureStage == 12)  {  [ advance to next stage  vFeatureStage = 13;  [ shrink image  reverse.loop(oChimneyRock, fSceneClosed2);  }[ after image has shrunk back downif (isset(fSceneClosed2) && vFeatureStage == 13)  {  [ advance stage  reset(fSceneClosed2);  vFeatureStage = 14;  [ remove image  erase(oChimneyRock);  [ remove caption  close.window();  [ draw the scene window (it's already drawn, so this does  [ nothing)  draw(oSceneWindow);  [ expand scene window (it's already expanded, so this does  [ nothing)  end.of.loop(oSceneWindow, fSceneClosed2);  }[ after Chimney Rock image is goneif (isset(fSceneClosed2) && vFeatureStage == 14)  {  [ advance to next stage  reset(fSceneClosed2);  vFeatureStage = 15;  [ wagon and tracks were never erased for Courthouse Rock  [ and Chimney Rock images so drawing them again does  [ nothing  draw(oWagon);  draw(oTracks);  [ restore cursor to its normal speed  step.time(oCursor, vNormalSpeed2);  }  [ as the cursor moves across the screen, update the total[ game travel timeif (posn(oCursor, 134, 131, 134, 131) && vTimeStatus == 0)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 118, 126, 118, 126) && vTimeStatus == 1)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 103, 110, 103, 110) && vTimeStatus == 2)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 86, 110, 86, 110) && vTimeStatus == 3)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 66, 110, 66, 110) && vTimeStatus == 4)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 55, 91, 55, 91) && vTimeStatus == 5)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 40, 79, 40, 79) && vTimeStatus == 6)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 23, 62, 23, 62) && vTimeStatus == 7)  {  ++vTimeStatus;  GameDays  += 2;  }if (posn(oCursor, 3, 49, 3, 49) && vTimeStatus == 8)  {  ++vTimeStatus;  GameDays  += 2;  }  [ as cursor moves across the screen, display periodic [ messages to update player on the tripif (posn(oCursor, 129, 131, 129, 131) && vMsgStatus == 0)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("The trail is wide and easy to traverse. The Platte River provides an "          "ample supply of water. Between Ft. Kearny and Ft. Laramie the "          "company should average 17 miles per day.");    print("The upward slope is so gentle that the animals barely feel the "          "grade. Discarding those unnecessary items in Ft. Kearny really paid "          "off!");    print("The captain advises the rest of the company that this will be the "          "easiest part of your trip, so you had better enjoy it!!");    }  }if (posn(oCursor, 103, 110, 103, 110) && vMsgStatus == 1)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("Due to the lack of wood to burn for fires, the common fuel "          "substitute is buffalo chips.");    print("They burn well if they are dry. If they are damp, they smoke a lot. "          "If they are wet, they are next to fireproof!");    }  }if (posn(oCursor, 77, 110, 77, 110) && vMsgStatus == 2)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("One of the main obstacles between you and Ft. Laramie is the "          "crossing of the South Platte River. What makes this crossing so "          "difficult is that the river bed is like quicksand!!");    print("The trail ahead will take the company by the most prominent "          "landmarks of the trek and, also, of the West!");    }  }if (posn(oCursor, 23, 62, 23, 62) && vMsgStatus == 3)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("All along the way the wagons have been getting lighter. But climbing "          "the gentle slopes of the North Platte, your captain finds it "          "necessary to lighten the load even more!");    print("The captain also takes note of the need to increase the care given "          "to the animal teams. There is much tough terrain ahead!");    }  }if (posn(oCursor, 3, 49, 3, 49) && vMsgStatus == 4)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("Ft. Laramie is another military station along the way that weary "          "travelers long to reach.");    print("Once they arrive, many meet with great disappointment. They are "          "unable to acquire many of the articles they desperately need, such "          "as fresh animals to replace those that have died along the way or "          "those that will not last much longer.");    print("You could have all the money in the world and it would be useless. "          "They just aren't available!!");    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ (this boilerplate 'if' block isn't needed since no input[ is processed in this cutscene logic)  Done:[ call the main timing logiccall(lgc.WagonTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "The trail is wide and easy to traverse. The Platte River provides an ample supply of water. Between Ft. Kearny and Ft. Laramie the company should average 17 miles per day."#message 2 "The upward slope is so gentle that the animals barely feel the grade. Discarding those unnecessary items in Ft. Kearny really paid off!"#message 3 "The captain advises the rest of the company that this will be the easiest part of your trip, so you had better enjoy it!!"#message 5 "Due to the lack of wood to burn for fires, the common fuel substitute is buffalo chips."#message 6 "They burn well if they are dry. If they are damp, they smoke a lot. If they are wet, they are next to fireproof!"#message 10 "One of the main obstacles between you and Ft. Laramie is the crossing of the South Platte River. What makes this crossing so difficult is that the river bed is like quicksand!!"#message 15 "The trail ahead will take the company by the most prominent landmarks of the trek and, also, of the West!"#message 16 "Ash Hollow!"#message 17 "Courthouse Rock!"#message 18 "Chimney Rock!"#message 20 "Along your journey you have encountered a few Indians and they have all been friendly, so far."#message 21 "But just like pale faces, there are good and bad Indians."#message 22 "You have just run into some of the bad!"#message 23 "This is just too gruesome to watch!!"#message 24 "These Indians saw the beautiful mules you selected back in Independence and wanted them."#message 25 "And they got them, at no small price to you!"#message 26 "Every member of your company paid the price."#message 27 "Your trip has only begun, and the animal team is getting weak."#message 28 "When you left Independence, there wasn't enough grass on the plains for the animals to eat."#message 29 "They are too weak to pull the wagon."#message 30 "These Indians came out of nowhere! There was nothing you could do."#message 40 "All along the way the wagons have been getting lighter. But climbing the gentle slopes of the North Platte, your captain finds it necessary to lighten the load even more!"#message 41 "The captain also takes note of the need to increase the care given to the animal teams. There is much tough terrain ahead!"#message 45 "Ft. Laramie is another military station along the way that weary travelers long to reach."#message 46 "Once they arrive, many meet with great disappointment. They are unable to acquire many of the articles they desperately need, such as fresh animals to replace those that have died along the way or those that will not last much longer."#message 47 "You could have all the money in the world and it would be useless. They just aren't available!!"