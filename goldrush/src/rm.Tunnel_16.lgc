[***********************************************************[[ rm.Tunnel_16[[ The last tunnel location, where Jerrod finds Jake. The[ entrance to the final gold mine is here.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDark1                       o1#define oDark2                       o2#define oDark3                       o3#define oNugget1                     o4#define oNugget2                     o5#define oNugget3                     o6#define oNugget4                     o7#define oNugget5                     o8#define oJake                        o9#define oTunnelHole                 o10#define vFlicker                   v220[ v221 and v222 are not used#define vDigTimer                  v223#define vEgoLoop                   v224#define vEgoCel                    v225#define vSequence                  v226#define vSeqTimer                  v227#define fDrawDark                  f220#define fLight1                    f221#define fLight2                    f222#define fLight3                    f223#define fJerrodMoved               f224#define fJakeMoved                 f225#define fSoundDone                 f226#define fJamesIsHere               f227[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load the tunnel logic, that handles all the common  [ tunnel functions  load.logics(lgc.Tunnels);    [ load views needed by objects in the room  load.view(vw.WideJerrodCA);  load.view(vw.Darkness);  load.view(vw.TunnelDigging);  load.view(vw.TunnelArt);  load.view(vw.Jake2D);  load.view(vw.Tunnel16Art);    [ load sound used in the room  load.sound(m.FoundGold);  load.sound(m.FoundJake);    [ add lamps/lantern to the picture  add.to.pic(vw.Tunnel16Art, 0, 0, 116, 103, 10, 10);  add.to.pic(vw.Tunnel16Art, 0, 1, 49, 95, 10, 10);  add.to.pic(vw.Tunnel16Art, 0, 2, 77, 118, 12, 12);    [ add the darkness panels - these black out areas of the  [ tunnel that are beyond the range of Jerrod's light  [ (don't draw them yet, lgc.DarkenTunnel will do that)  animate.obj(oDark1);  set.view(oDark1, vw.Darkness);  set.loop(oDark1, 0);  set.cel(oDark1, 0);  set.priority(oDark1, 15);  ignore.objs(oDark1);  ignore.blocks(oDark1);  position(oDark1, 136, 167);  [ darkness panel 2  animate.obj(oDark2);  set.view(oDark2, vw.Darkness);  set.loop(oDark2, 0);  set.cel(oDark2, 0);  set.priority(oDark2, 15);  ignore.objs(oDark2);  ignore.blocks(oDark2);  position(oDark2, 144, 167);  [ darkness panel 3  animate.obj(oDark3);  set.view(oDark3, vw.Darkness);  set.loop(oDark3, 0);  set.cel(oDark3, 0);  set.priority(oDark3, 15);  ignore.objs(oDark3);  ignore.blocks(oDark3);  position(oDark3, 152, 167);  [ there are five gold nugget piles in this room    [ first visible pile of nuggets  animate.obj(oNugget1);  set.view(oNugget1, vw.TunnelArt);  set.loop(oNugget1, 0);  set.cel(oNugget1, 1);  ignore.objs(oNugget1);  ignore.blocks(oNugget1);  set.priority(oNugget1, 11);  position(oNugget1, 67, 114);  [ if not taken  if (!isset(Nugget16aTaken))    {    [ show them    draw(oNugget1);    stop.update(oNugget1);    }  [ second visible pile of nuggets  animate.obj(oNugget2);  set.view(oNugget2, vw.TunnelArt);  set.loop(oNugget2, 0);  set.cel(oNugget2, 2);  ignore.objs(oNugget2);  ignore.blocks(oNugget2);  set.priority(oNugget2, 11);  position(oNugget2, 57, 95);  [ if not taken  if (!isset(Nugget16bTaken))    {    [ show them    draw(oNugget2);    stop.update(oNugget2);    }  [ first hidden pile of nuggets  animate.obj(oNugget3);  set.view(oNugget3, vw.TunnelArt);  set.loop(oNugget3, 0);  set.cel(oNugget3, 3);  ignore.objs(oNugget3);  ignore.blocks(oNugget3);  set.priority(oNugget3, 11);  position(oNugget3, 63, 107);  [ if found but not taken  if (Nugget16aStatus == NUGGET_FOUND)    {    [ show them    draw(oNugget3);    stop.update(oNugget3);    }  [ second hidden pile of nuggets  animate.obj(oNugget4);  set.view(oNugget4, vw.TunnelArt);  set.loop(oNugget4, 0);  set.cel(oNugget4, 4);  ignore.objs(oNugget4);  ignore.blocks(oNugget4);  set.priority(oNugget4, 11);  position(oNugget4, 64, 105);  [ if found but not taken  if (Nugget16bStatus == NUGGET_FOUND)    {    [ show them    draw(oNugget4);    stop.update(oNugget4);    }  [ third hidden pile of nuggets  animate.obj(oNugget5);  set.view(oNugget5, vw.TunnelArt);  set.loop(oNugget5, 0);  set.cel(oNugget5, 5);  ignore.objs(oNugget5);  ignore.blocks(oNugget5);  set.priority(oNugget5, 11);  position(oNugget5, 62, 105);  [ if found but not taken  if (Nugget16cStatus == NUGGET_FOUND)    {    [ show them    draw(oNugget5);    stop.update(oNugget5);    }      [ if the hole leading to gold mine has has not been  [ started yet  if (HoleSize == 0)    {    [ add Jake    animate.obj(oJake);    [ Jake is digging in the wall with a pick    set.view(oJake, vw.Tunnel16Art);    set.loop(oJake, 2);    set.priority(oJake, 10);    ignore.objs(oJake);    ignore.blocks(oJake);    position(oJake, 26, 125);    draw(oJake);    set(fJamesIsHere);    }  else    {    [ if Jerrod is returning to this room AFTER digging the    [ hole, Jake is not here        [ make sure hole is full size    HoleSize = 4;    [ and take away five points (for delaying???)    currentScore -= 5;    }      [ animate the hole leading to the gold room  animate.obj(oTunnelHole);  set.view(oTunnelHole, vw.Tunnel16Art);  set.loop(oTunnelHole, 1);  [ use size of hole to determine which cel  set.cel.v(oTunnelHole, HoleSize);  set.priority(oTunnelHole, 10);  ignore.blocks(oTunnelHole);  ignore.objs(oTunnelHole);  position(oTunnelHole, 59, 119);  draw(oTunnelHole);  stop.cycling(oTunnelHole);  stop.update(oTunnelHole);    [ Jerrod  animate.obj(ego);  set.view(ego, vw.WideJerrodCA);  draw(ego);    [ the room starts out all darkened  call(lgc.DarkenTunnel);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ to simulate flickering of torch, use a random timer to[ redraw a black box over the area of tunnel that is[ darkened[ if flicker timer has counted downif (vFlicker == 0)  {  [ if Jerrod is stopped  if (egoDir == STOPPED)    {    [ if the redraw darkness flag is NOT set    if (!isset(fDrawDark))      {      [ draw a black box over the entire tunnel (when Jerrod      [ moves, the cleared areas will be uncovered)      clear.text.rect(12, 34, 21, 39, BLACK);      set(fDrawDark);      }    }  else    {    [ Jerrod is moving; clear the redraw darkness flag    reset(fDrawDark);    [ choose a random time between 2 and 4 cycles    random(2, 4, FlickerTime);    [ set flicker delay to the random vlaue    vFlicker = FlickerTime;    [ draw a black box over the entire tunnel    clear.text.rect(12, 34, 21, 39, BLACK);    }  }  [ decrement flicker counter--vFlicker;[ if Jerrod has a lit lantern or lit matchif ((isset(LanternLit) || isset(MatchLit)))  {  [ depending on position, remove the darkness panels so  [ Jerrod can see the area around him  if (posn(ego, 111, 100, 140, 167) && !isset(fLight1))    {    erase(oDark1);    set(fLight1);    }  if (posn(ego, 119, 100, 148, 167) && !isset(fLight2))    {    erase(oDark2);    set(fLight2);    }  if (posn(ego, 127, 100, 156, 167) && !isset(fLight3))    {    erase(oDark3);    set(fLight3);    }  }  [ if timer is activated (>0)  if (vDigTimer > 0)  {  [ increment timer each cycle  ++vDigTimer;  }  [ after 3 cyclesif (vDigTimer == 3)  {  [ get loop (needed to correctly place the gold nugget)  current.loop(ego, vEgoLoop);  }  [ when 25 or more cycles passif (vDigTimer > 25)  {  [ get Jerrod's current cel  current.cel(ego, vEgoCel);  [ gold is uncovered at cel 2 only  if (vEgoCel == 2)    {    [ which way Jerrod is facing determines how to make    [ nuggets appear    if (vEgoLoop == 0)      {      [ if near the nugget piles      if (posn(ego, 39, 124, 44, 125))        {        [ uncover the nuggets, one at a time                [ if nuggets 3 not found yet        if (Nugget16aStatus == NUGGET_HIDDEN)          {          [ uncover the nuggets          Nugget16aStatus = NUGGET_FOUND;          draw(oNugget3);          sound(m.FoundGold, DoneNoAction);          stop.update(oNugget3);          [ score a point          ++currentScore;          [ skip ahead to next timer check          goto(CheckTimer);          }        [ if nuggets 4 not found yet        if (Nugget16bStatus == NUGGET_HIDDEN)          {          [ uncover the nuggets          Nugget16bStatus = NUGGET_FOUND;          draw(oNugget4);          sound(m.FoundGold, DoneNoAction);          stop.update(oNugget4);          [ score a point          ++currentScore;          [ skip ahead to next timer check          goto(CheckTimer);          }        [ if nuggets 5 not found yet        if (Nugget16cStatus == NUGGET_HIDDEN)          {          [ uncover the nuggets          Nugget16cStatus = NUGGET_FOUND;          draw(oNugget5);          sound(m.FoundGold, DoneNoAction);          stop.update(oNugget5);          [ score a point          ++currentScore;          [ skip ahead to next timer check          goto(CheckTimer);          }                  [ if all three nuggets are taken        if (Nugget16aStatus == NUGGET_GONE &&             Nugget16bStatus == NUGGET_GONE &&             Nugget16cStatus == NUGGET_GONE)          {          [ if hole is not completely revealed          if (HoleSize < 4)            {            [ increase the hole size            ++HoleSize;            [ restore normal Jerrod view            set.view(ego, vw.WideJerrodCA);            [ no more cycling at rest            reset(CycleAtRest);            [ show the widened hole            set.cel.v(oTunnelHole, HoleSize);            sound(m.FoundGold, DoneNoAction);            [ force update to show widened hole            force.update(oTunnelHole);                        [ depending on hole size, print a message            if (HoleSize == 1)              {              print.at("\"Hey James! Look at this!\"", 4, 6, 0);              set.view(oJake, vw.Jake2D);              set.loop(oJake, 0);              force.update(oJake);              print.at("James says, \"Hmmm. That looks strange. I wonder what's "                       "going on here. Keep on going, Jerrod!\"", 3, 5, 0);              stop.cycling(oJake);              }            if (HoleSize == 2)              {              print.at("\"It's getting bigger James. Look!\"", 4, 6, 0);              set.view(oJake, vw.Jake2D);              set.loop(oJake, 0);              force.update(oJake);              print.at("\"I see it brother, keep on going!\"", 3, 5, 0);              stop.cycling(oJake);              }            if (HoleSize == 3)              {              print.at("\"Oh my, look at that!\"", 4, 6, 0);              set.view(oJake, vw.Jake2D);              set.loop(oJake, 0);              force.update(oJake);              print.at("\"Keep swinging that pick, Jerrod! It's almost big "                       "enough to get through!\"", 3, 5, 0);              stop.cycling(oJake);              }            if (HoleSize == 4)              {              print.at("\"My heart is pounding, James! What to you think is "                       "behind it?\"", 4, 6, 0);              set.view(oJake, vw.Jake2D);              set.loop(oJake, 0);              force.update(oJake);              print.at("\"I don't know, Jerrod, but my knees are getting "                       "weak!\"", 3, 5, 0);              stop.cycling(oJake);              }            goto(CheckTimer);            }          }        }      }        if (vEgoLoop == 1)      {      [ if near the nugget piles      if (posn(ego, 57, 124, 62, 125))        {        [ uncover the nuggets, one at a time                [ if nuggets 3 not found yet        if (Nugget16aStatus == NUGGET_HIDDEN)          {          [ uncover the nuggets          Nugget16aStatus = NUGGET_FOUND;          draw(oNugget3);          sound(m.FoundGold, DoneNoAction);          stop.update(oNugget3);          [ score a point          ++currentScore;          }        else          {          [ if nuggets 4 not found yet          if (Nugget16bStatus == NUGGET_HIDDEN)            {            [ uncover the nuggets            Nugget16bStatus = NUGGET_FOUND;            draw(oNugget4);            sound(m.FoundGold, DoneNoAction);            stop.update(oNugget4);            [ score a point            ++currentScore;            }          else            {            [ if nuggets 5 not found yet            if (Nugget16cStatus == NUGGET_HIDDEN)              {              [ uncover the nuggets              Nugget16cStatus = NUGGET_FOUND;              draw(oNugget5);              sound(m.FoundGold, DoneNoAction);              stop.update(oNugget5);              [ score a point              ++currentScore;              }            else              {              [ if all three nuggets are taken              if (Nugget16aStatus == NUGGET_GONE &&                   Nugget16bStatus == NUGGET_GONE &&                   Nugget16cStatus == NUGGET_GONE)                {                [ if hole is not completely revealed                if (HoleSize < 4)                  {                  [ increase the hole size                  ++HoleSize;                  [ restore normal Jerrod view                  set.view(ego, vw.WideJerrodCA);                  [ no more cycling at rest                  reset(CycleAtRest);                  [ show the widened hole                  set.cel.v(oTunnelHole, HoleSize);                  sound(m.FoundGold, DoneNoAction);                  [ force update to show widened hole                  force.update(oTunnelHole);                              [ depending on hole size, print a message                  if (HoleSize == 1)                    {                    print.at("\"Hey James! Look at this!\"", 4, 6, 0);                    set.view(oJake, vw.Jake2D);                    set.loop(oJake, 0);                    force.update(oJake);                    print.at("James says, \"Hmmm. That looks strange. I wonder "                             "what's going on here. Keep on going, Jerrod!\"", 3, 5, 0);                    stop.cycling(oJake);                    }                  if (HoleSize == 2)                    {                    print.at("\"It's getting bigger James. Look!\"", 4, 6, 0);                    set.view(oJake, vw.Jake2D);                    set.loop(oJake, 0);                    force.update(oJake);                    print.at("\"I see it brother, keep on going!\"", 3, 5, 0);                    stop.cycling(oJake);                    }                  if (HoleSize == 3)                    {                    print.at("\"Oh my, look at that!\"", 4, 6, 0);                    set.view(oJake, vw.Jake2D);                    set.loop(oJake, 0);                    force.update(oJake);                    print.at("\"Keep swinging that pick, Jerrod! It's almost "                             "big enough to get through!\"", 3, 5, 0);                    stop.cycling(oJake);                    }                  if (HoleSize == 4)                    {                    print.at("\"My heart is pounding, James! What to you think "                             "is behind it?\"", 4, 6, 0);                    set.view(oJake, vw.Jake2D);                    set.loop(oJake, 0);                    force.update(oJake);                    print.at("\"I don't know, Jerrod, but my knees are getting "                             "weak!\"", 3, 5, 0);                    stop.cycling(oJake);                    }                  }                else                  {                  }                }              }            }          }        }      }    }  }  [ continue timer checksCheckTimer:[ when 30 cycles passif (vDigTimer == 30)  {  [ Jerrod is done digging    [ Jerrod no longer cycles when not moving  reset(CycleAtRest);  start.motion(ego);  [ restore normal tunnel view  set.view(ego, vw.WideJerrodCA);  }  [ after 31 cyclesif (vDigTimer == 31)  {  [ reset the timer  vDigTimer = 0;    [ if Jerrod is facing right  if (vEgoLoop == 0)    {    [ if near the nuggets    if (posn(ego, 39, 124, 44, 125))      {      [ if gold has been uncovered      if ((Nugget16aStatus == NUGGET_FOUND ||           Nugget16bStatus == NUGGET_FOUND ||           Nugget16cStatus == NUGGET_FOUND))        {        print.at("You've struck GOLD, I say GOLD, young man!", 2, 5, 0);        goto(CheckCutSequence);        }      }    }  [ if Jerrod is facing left  if (vEgoLoop == 1)    {    [ if near the nuggets    if (posn(ego, 57, 124, 62, 125))      {      [ if gold has been uncovered      if ((Nugget16aStatus == NUGGET_FOUND ||           Nugget16bStatus == NUGGET_FOUND ||           Nugget16cStatus == NUGGET_FOUND))        {        print.at("You've struck GOLD, I say GOLD, young man!", 2, 5, 0);        goto(CheckCutSequence);        }      }    }      [ if digging the hole to gold room  if (HoleSize > 0)    {    [ skip the 'Nothin'!' message    goto(CheckCutSequence);    }  print.at("Nothin'!", 2, 16, 0);  }  [ check for cutscene actions when Jerrod first discovers the[ roomCheckCutSequence:[ if Jerrod has not found Jake yetif (!isset(FoundJake))  {  [ no player input while cut sequence plays out  prevent.input();  [ Jake has been found!  set(FoundJake);  [ advance sequence  ++vSequence;  [ move Jerrod into the room  move.obj(ego, 108, 145, 0, fJerrodMoved);  }  [ after Jerrod moves to first pointif (isset(fJerrodMoved) && vSequence == 1)  {  [ advance sequence  reset(fJerrodMoved);  ++vSequence;  stop.motion(ego);  [ show message  print.at("Your eyes, unaccustomed to the bright light of the lanterns, take a "           "moment to adjust.", 5, 5, 0);  }  [ during sequence 2if (vSequence == 2)  {  [ pause for 50 cycles  ++vSeqTimer;  if (vSeqTimer == 50)    {    [ after 50 cycles advance sequence    vSeqTimer = 0;    ++vSequence;    [ display more messages    print.at("Although you are still squinting, you see a man across the mine "             "shaft.", 5, 6, 0);    print.at("You have followed a trail of clues left by your brother, and they "             "have led you right here. It must be him!", 5, 5, 0);    print.at("You move closer to get a better look.", 5, 7, 0);    [ Jerrod moves closer to Jake    move.obj(ego, 75, 140, 0, fJerrodMoved);    }  }  [ after Jerrod moves closerif (isset(fJerrodMoved) && vSequence == 3)  {  [ start timer  ++vSeqTimer;  stop.motion(ego);  [ after 40 cycles  if (vSeqTimer == 40)    {    [ advance sequence    reset(fJerrodMoved);    ++vSequence;    vSeqTimer = 0;    [ display more messages    print.at("It has been eleven years, but there's no doubt about it. That is "             "your brother!", 5, 5, 0);    print.at("\"Jake!\" you shout across the mine shaft.", 5, 10, 0);    }  }  [ during sequence 4if (vSequence == 4)  {  [ increment timer each cycle  ++vSeqTimer;  [ after 40 cycles  if (vSeqTimer == 40)    {    vSeqTimer = 0;    [ Jerrod shouts at Jake again    print.at("You wait a moment and shout again, \"Jake, I mean James! Is that "             "you?\"", 5, 10, 0);    [ next sequence    ++vSequence;    }  }  [ during sequence 5if (vSequence == 5)  {  [ increment timer  ++vSeqTimer;  [ after 10 cycles  if (vSeqTimer == 10)    {    vSeqTimer = 0;    [ Jake turns to Jerrod    print.at("The man across the mine shaft stops picking and turns around.", 5, 5, 0);    set.view(oJake, vw.Jake2D);    set.loop(oJake, 0);    stop.cycling(oJake);    [ next sequence    ++vSequence;    }  }  [ during sequence 6if (vSequence == 6)  {  [ increment timer  ++vSeqTimer;  [ after 20 cycles  if (vSeqTimer == 20)    {    vSeqTimer = 0;    [ Jake looks at Jerrod    print.at("He looks you over from head to toe.", 5, 5, 0);    [ next sequence    ++vSequence;    }  }  [ during sequence 7if (vSequence == 7)  {  [ increment timer  ++vSeqTimer;  [ after 30 cycles  if (vSeqTimer == 30)    {    vSeqTimer = 0;    [ Jerrod calls out again    print.at("\"It's me, your brother Jerrod!\" you shout.", 5, 15, 24);    [ next sequence    ++vSequence;    }  }  [ during sequence 8if (vSequence == 8)  {  [ increment timer  ++vSeqTimer;  [ after 10 cycles  if (vSeqTimer == 10)    {    vSeqTimer = 0;    [ Jake and Jerrod converse    print.at("\"Is it really you, Jerrod?\"", 5, 3, 15);    print.at("\"It's me! Jerrod Wilson!\"", 5, 15, 24);    print.at("\"I can't believe it! It's really you! I just can't believe it!\"", 5, 3, 0);    [ Jerrod moves toward Jake    move.obj(ego, 53, 142, 1, fJerrodMoved);    [ Jake moves toward Jerrod    move.obj(oJake, 47, 141, 1, fJakeMoved);    start.cycling(oJake);    [ play sound    sound(m.FoundJake, fSoundDone);    [ next sequence    ++vSequence;    }  }  [ when Jake reaches end pointif (isset(fJakeMoved) && vSequence == 9)  {  [ he stops cycling  stop.cycling(oJake);  }  [ when both Jake and Jerrod stop movingif (vSequence == 9 &&     isset(fJerrodMoved) &&     isset(fJakeMoved))  {  [ they stop moving  reset(fJerrodMoved);  reset(fJakeMoved);  stop.motion(ego);  [ next sequence  ++vSequence;  [ change ego view to the Jerrod/Jake hugging loop  set.view(ego, vw.Tunnel16Art);  set.loop(ego, 3);  set.cel(ego, 0);  [ allow cycle when not moving  set(CycleAtRest);  [ then they hug  end.of.loop(ego, fJerrodMoved);  [ erase the Jake's object  erase(oJake);  }[ after they finish huggingif (isset(fJerrodMoved) && vSequence == 10)  {  [ next sequence  reset(fJerrodMoved);  ++vSequence;  stop.motion(ego);  }  [ during sequence 11if (vSequence == 11)  {  [ increment timer  ++vSeqTimer;  [ after a 10 cycle delay  if (vSeqTimer == 10)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ change loop to Jerrod/Jake clapping backs    set.loop(ego, 4);    start.cycling(ego);    }  }  [ during sequence 12if (vSequence == 12)  {  [ increment timer  ++vSeqTimer;  [ after 10 cycle delay  if (vSeqTimer == 10)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ change back to cel showing     [ Jake and Jerrod hugging    set.loop(ego, 3);    set.cel(ego, 2);    stop.cycling(ego);    }  }  [ during sequence 13if (vSequence == 13)  {  [ increment timer  ++vSeqTimer;  [ after 10 cycle delay  if (vSeqTimer == 10)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ they clap each others' backs again    set.loop(ego, 4);    start.cycling(ego);    }  }  [ during sequence 14if (vSequence == 14)  {  [ increment timer  ++vSeqTimer;  [ after 10 cycle delay  if (vSeqTimer == 10)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ change loop to show them stop hugging    set.loop(ego, 5);    set.cel(ego, 0);    end.of.loop(ego, fJerrodMoved);    }  }[ after they separateif (isset(fJerrodMoved) && vSequence == 15)  {  [ next sequence  reset(fJerrodMoved);  ++vSequence;  stop.motion(ego);  [ now they shake hands  set.loop(ego, 6);  start.cycling(ego);  }[ while shaking handsif (vSequence == 16)  {  [ increment timer  ++vSeqTimer;  [ after 25 cycles  if (vSeqTimer == 25)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    }  }  [ after done shaking handsif (vSequence == 17)  {  [ next sequence  ++vSequence;  [ change loop to Jake and Jerrod standing   set.loop(ego, 7);  force.update(ego);  print.at("\"Let me get a good look at you Jerrod. I still can't believe it's "           "really you!\"", 5, 3, 0);  }  [ during sequence 18if (vSequence == 18)  {  [ increment timer  ++vSeqTimer;  [ after 8 cycles  if (vSeqTimer == 8)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ continue their conversation    print.at("\"You are lookin' good, Jerrod!\"", 5, 3, 17);    print.at("\"Well, I'm looking okay. Considering everything I've been "             "through to get here!\"", 4, 15, 20);    print.at("\"But I'm wondering about you James. How are you doing and what "             "have you been doing for the last eleven years?\"", 4, 9, 0);    print.at("\"That's a long story. I'll tell you all about it sometime.\"", 5, 3, 25);    print.at("\"But right now, you and I have work to do!\"", 5, 3, 25);    print.at("\"I'm closing in on the finest and purest vein of gold in all of "             "California!\"", 5, 3, 0);    print.at("\"And the two of us are going to find it!\"", 5, 3, 25);    print.at("\"Well, then let's get to work James!\"", 5, 15, 20);    }  }  [ at sequence 19if (vSequence == 19)  {  [ just advance to next sequence (there probably used to be  [ something here that programmers deleted; otherwise this  [ sequence point makes no sense)  ++vSequence;  }  [ at sequence 20if (vSequence == 20)  {  [ increment timer  ++vSeqTimer;  [ after 3 cycles  if (vSeqTimer == 3)    {    [ next sequence    vSeqTimer = 0;    ++vSequence;    [ shift back to normal Jerrod view    set.view(ego, vw.WideJerrodCA);    set.loop(ego, 1);    start.motion(ego);        [ add Jake back to screen    draw(oJake);    [ move Jake back to where he     [ was digging    move.obj(oJake, 26, 125, 1, fJakeMoved);    start.cycling(oJake);    [ return control back to player    player.control();    [ reset cycle-at-rest    reset(CycleAtRest);    [ allow player input    accept.input();    }  }  [ after jake returns to his spotif (vSequence == 21 && isset(fJakeMoved))  {  [ next sequence  reset(fJakeMoved);  ++vSequence;  [ switch back to view of him digging  set.view(oJake, vw.Tunnel16Art);  set.loop(oJake, 2);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ right edgeif (posn(ego, 130, 20, 130, 167))  {  [ update all objects (not sure why they do this since the  [ new.room command comes next - I guess it's so there'a a  [ split second before the room change with the room  [ updated)  force.update(ego);  position(ego, 2, 143);  new.room(rm.Tunnel_15); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look mine/lookif ((said("examine", "mine") ||     said("examine", "around") ||     said("examine")))  {  print.at("This appears to be the end of James' mine. You continue to look for "           "signs of gold.", 2, 5, 0);  }  [ look goldif ((said("examine", "gold") ||     said("examine", "gold", "nugget") ||     said("examine", "nugget")))  {  [ if all gold has been picked up  if (isset(Nugget16aTaken) &&       isset(Nugget16bTaken) &&       Nugget16aStatus != 1 &&       Nugget16bStatus != 1 &&       Nugget16cStatus != 1)    {    [ if tunnel hole has been started    if (HoleSize > 1)      {      print.at("Through the hole in the mine wall you see the faint glimmer of "               "GOLD!", 2, 5, 0);      goto(Done);      }    print.at("There is no gold in sight right now.", 2, 5, 0);    }  else    {    print.at("Just look at that GOLD glitter on the wall!", 2, 5, 0);    }  }  [ get goldif ((said("acquire", "gold") ||     said("acquire", "gold", "nugget") ||     said("acquire", "nugget") ||     said("remove", "gold") ||     said("remove", "gold", "nugget") ||     said("remove", "nugget") ||     said("move", "gold") ||     said("move", "gold", "nugget") ||     said("move", "nugget")))  {  [if by the nugget piles  if (posn(ego, 39, 124, 57, 130))    {    [ if nugget pile 1 is not taken yet    if (!isset(Nugget16aTaken))      {      [ take them      print.at("You reach out and grasp the gold nuggets!", 2, 5, 0);      [ remove nuggets from screen      erase(oNugget1);      [ if gold amount is less than 110      if (GoldIndex < 110)        {        [ get two units of gold        GoldIndex  += 2;        }      else        {        [ otherwise get one unit of gold        GoldIndex  += 1;        }      [ set 'nugget taken' flag      set(Nugget16aTaken);      [ update inventory with correct amount of gold      call(lgc.AdjustGold);      goto(ContinueChecks);      }    [ if nugget 2 has not been taken yet    if (!isset(Nugget16bTaken))      {      [ take them      print.at("You reach out and grasp the gold nuggets!", 2, 5, 0);      [ remove nuggets from screen      erase(oNugget2);      [ if gold amount is less than 110      if (GoldIndex < 110)        {        [ get two units of gold        GoldIndex  += 2;        }      else        {        [ otherwise get one unit of gold        GoldIndex  += 1;        }      [ set 'nugget taken' flag      set(Nugget16bTaken);      [ update inventory with correct amount of gold      call(lgc.AdjustGold);      goto(ContinueChecks);      }    [ if nugget 3 has not been taken yet    if (Nugget16aStatus == NUGGET_FOUND)      {      [ take them      print.at("You reach out and grasp the gold nuggets!", 2, 5, 0);      [ remove nuggets from screen      erase(oNugget3);      [ if gold amount is less than 110      if (GoldIndex < 110)        {        [ get two units of gold        GoldIndex  += 2;        }      else        {        [ otherwise get one unit of gold        GoldIndex  += 1;        }      [ update status as 'gone'      Nugget16aStatus = NUGGET_GONE;      [ update inventory with correct amount of gold      call(lgc.AdjustGold);      goto(ContinueChecks);      }    [ if nugget 4 has not been taken yet    if (Nugget16bStatus == NUGGET_FOUND)      {      [ take them      print.at("You reach out and grasp the gold nuggets!", 2, 5, 0);      [ remove nuggets from screen      erase(oNugget4);      [ if gold amount is less than 110      if (GoldIndex < 110)        {        [ get two units of gold        GoldIndex  += 2;        }      else        {        [ otherwise get one unit of gold        GoldIndex  += 1;        }      [ update status as 'gone'      Nugget16bStatus = NUGGET_GONE;      [ update inventory with correct amount of gold      call(lgc.AdjustGold);      goto(ContinueChecks);      }    [ if nugget 5 has not been taken yet    if (Nugget16cStatus == NUGGET_FOUND)      {      [ take them      print.at("You reach out and grasp the gold nuggets!", 2, 5, 0);      [ remove nuggets from screen      erase(oNugget5);      [ if gold amount is less than 110      if (GoldIndex < 110)        {        [ get two units of gold        GoldIndex  += 2;        }      else        {        [ otherwise get one unit of gold        GoldIndex  += 1;        }      [ update status as 'gone'      Nugget16cStatus = NUGGET_GONE;      [ update inventory with correct amount of gold      call(lgc.AdjustGold);      goto(ContinueChecks);      }    [ if tunnel hole is opened    if (HoleSize > 1)      {      print.at("You can't reach the gold from here.", 2, 5, 0);      }    else      {      print.at("There is no gold in sight right now.", 2, 5, 0);      }    }  else    {    [ if all the gold has been taken    if (isset(Nugget16aTaken) &&         isset(Nugget16bTaken) &&         Nugget16aStatus != 1 &&         Nugget16bStatus != 1 &&         Nugget16cStatus != 1)      {      [ if tunnel hole is opened      if (HoleSize > 1)        {        print.at("You can't reach the gold from here.", 2, 5, 0);        }      else        {        print.at("There is no gold in sight right now.", 2, 5, 0);        }      }    else      {      print.at("You can't do that from here!", 2, 5, 0);      }    }  }  ContinueChecks:[ use pick/enlarge holeif ((said("pick") ||     said("pick", "gold") ||     said("use", "pick") ||     said("swing", "pick") ||     said("enlarge", "hole") ||     said("make", "hole")))  {  [ if Jerrod has the pick  if (has("Pick"))    {    [ if near the hole, and hole size is 4    if (posn(ego, 39, 124, 62, 125) &&         HoleSize == 4)      {      print.at("The hole is big enough.", 2, 5, 0);      goto(Done);      }    [ if near the hole, and all three nugget    [ piles have been found    if (posn(ego, 39, 124, 62, 125) &&         Nugget16aStatus > NUGGET_HIDDEN &&         Nugget16bStatus > NUGGET_HIDDEN &&         Nugget16cStatus > NUGGET_HIDDEN)      {      [ if any gold is still there      if ((Nugget16aStatus == NUGGET_FOUND ||           Nugget16bStatus == NUGGET_FOUND ||           Nugget16cStatus == NUGGET_FOUND))        {        print.at("Why not get some of that gold on the wall?", 2, 5, 0);        goto(CheckCutSequence);        }      }    [ if touching an alarm line    if (isset(egoHitSpecial))      {      [ this is an area where Jerrod can dig for gold      set.view(ego, vw.TunnelDigging);      [ start timer      vDigTimer = 1;      [ begin at first cel      set.cel(ego, 0);      stop.motion(ego);      [ allow ego object to cycle when not moving      set(CycleAtRest);      [ start digging      start.cycling(ego);      }    else      {      print.at("You're close to a likely spot. Try that nearby.", 2, 5, 0);      }    }  else    {    print.at("You need to get your own pick!", 2, 5, 0);    }  }  [ get pick/take Jame's pickif ((said("acquire", "pick") ||     said("acquire", "pick", "james") ||     said("acquire", "james", "pick") ||     said("use", "james", "pick") ||     said("use", "pick", "james")))  {  if (has("Pick"))    {    print.at("You already have a pick.", 2, 5, 0);    }  else    {    print.at("You can't take your brother's pick!", 2, 5, 0);    }  }  [ go through holeif ((said("go", "hole", "rol") ||     said("climb", "hole", "rol") ||     said("climb", "anyword", "hole") ||     said("crawl", "hole", "rol") ||     said("crawl", "anyword", "hole") ||     said("enter", "hole", "rol") ||     said("go", "cave", "rol") ||     said("climb", "cave", "rol") ||     said("climb", "anyword", "cave") ||     said("crawl", "cave", "rol") ||     said("crawl", "anyword", "cave") ||     said("enter", "cave", "rol")))  {  [ if hole not started  if (HoleSize == 0)    {    print.at("There's no hole right now.", 2, 5, 0);    }  else    {    [ if near the hole    if (posn(ego, 39, 124, 57, 125))      {      [ if size is less than 4      if (HoleSize < 4)        {        print.at("The hole isn't big enough!", 8, 5, 0);        }      else        {        [ crawl through the hole!        print.at("With great anticipation, you crawl through the hole into the "                 "underground cavern.", 2, 5, 0);        egoDir = STOPPED;        new.room(cs.GoldMine); [ ##LE002##        }      }    else      {      print.at("You can't do that from here!", 2, 5, 0);      }    }  }[ look wallif (said("examine", "wall"))  {  [ if tunnel hole not started yet  if (HoleSize == 0)    {    print.at("The walls of the mine are rough and rocky.", 2, 5, 0);    }  else    {    [ response depends on size of hole    if (HoleSize == 1)      {      print.at("There is a small hole in the wall of the mine.", 2, 5, 0);      }    if (HoleSize == 2)      {      print.at("The hole in the wall is getting bigger!", 2, 5, 0);      }    if (HoleSize == 3)      {      print.at("That hole is almost big enough to crawl through. Your heart "               "begins to pound!", 2, 5, 0);      }    if (HoleSize == 4)      {      print.at("The huge hole in the wall must lead to something!", 2, 5, 0);      }    }  }  [ look caveif (said("examine", "cave"))  {  [ if tunnel hole not started yet  if (HoleSize == 0)    {    print.at("You are in a mine.", 2, 5, 0);    }  else    {    [ response depends on size of hole    if (HoleSize == 1)      {      print.at("It's difficult to tell what is through the hole in the wall.", 2, 5, 0);      }    if (HoleSize == 2)      {      print.at("There's something on the other side of the mine wall, but you "               "can't tell what it is, yet.", 2, 5, 0);      }    if (HoleSize == 3)      {      print.at("You see part of a cavern through the hole in the mine wall.", 2, 5, 0);      }    if (HoleSize == 4)      {      print.at("There is a natural underground cavern on the other side of the "               "mine wall.", 2, 5, 0);      }    }  }  [ look in holeif ((said("examine", "hole") ||     said("examine", "hole", "wall") ||     said("examine", "hole", "in", "wall") ||     said("examine", "opening") ||     said("examine", "opening", "wall") ||     said("examine", "opening", "in", "wall") ||     said("examine", "in", "hole") ||     said("examine", "in", "hole", "wall") ||     said("examine", "in", "hole", "in", "wall") ||     said("examine", "in", "opening") ||     said("examine", "in", "opening", "wall") ||     said("examine", "in", "opening", "in", "wall")))  {  [ if hole not started yet  if (HoleSize == 0)    {    print.at("There's no hole right now.", 2, 5, 0);    }  else    {    [ if near the hole    if (posn(ego, 4, 124, 59, 133))      {      [ response depends on size of hole      if (HoleSize == 1)        {        print.at("The hole is very small and dark. You can't see what is "                 "through the hole.", 2, 5, 0);        }      if (HoleSize == 2)        {        print.at("The hole leads to some sort of cavern, but you just can't see "                 "what it is!", 2, 5, 0);        }      if (HoleSize == 3)        {        print.at("You can now see through the hole enough to know that it leads "                 "to a natural underground cavern! You think you see something "                 "glimmering in the light of the lanterns!!", 2, 5, 0);        }      if (HoleSize == 4)        {        print.at("It is now clear to see that in the underground cavern there "                 "is definitely something glimmering. Your heart begins to "                 "pound!!!", 2, 5, 0);        }      }    else      {      [ not near the hole; response depends on size of hole      if (HoleSize == 1)        {        print.at("You can barely detect a hole in the wall.", 2, 5, 0);        }      if (HoleSize == 2)        {        print.at("There's a hole in the wall of the mine", 2, 5, 0);        }      if (HoleSize == 3)        {        print.at("You can see through the hole in the wall of the mine into a "                 "natural underground cavern!!", 2, 5, 0);        }      if (HoleSize == 4)        {        print.at("Through the hole in the wall of the mine you think you see "                 "something glittering! It seems too good to be true. Could it "                 "be GOLD???!!!", 2, 5, 0);        }      }    }  }  [ talk to Jakeif ((said("speak", "jake") ||     said("examine", "jake")))  {  print.at("His name is James now!", 2, 5, 0);  }  [ look Jamesif ((said("examine", "james") ||     said("examine", "boy")))  {  if (isset(fJamesIsHere))    {    print.at("It's hard to believe that is your brother Jake, I mean James! "             "He's grown a beard, and put on a few pounds. Those biceps are "             "huge!", 2, 5, 0);    }  else    {    print.at("James is not here.", 2, 5, 0);    }  }  [ talk to Jamesif ((said("speak", "james") ||     said("speak", "boy") ||     said("speak")))  {  if (isset(fJamesIsHere))    {    print.at("\"We'll have time for small talk later, Jerrod. I can feel it. "             "We're getting close to something big!\" says James.", 2, 5, 0);    }  else    {    print.at("James is not here.", 2, 5, 0);    }  }  Done:[ call tunnel logic to run code common to all tunnelscall(lgc.Tunnels);return();[ **************************************[ MESSAGES[ **************************************#message 1 "This appears to be the end of James' mine. You continue to look for signs of gold."#message 14 "You're close to a likely spot. Try that nearby."#message 15 "You need to get your own pick!"#message 20 "Nothin'!"#message 24 "\"Hey James! Look at this!\""#message 25 "Just look at that GOLD glitter on the wall!"#message 26 "You've struck GOLD, I say GOLD, young man!"#message 27 "You can't do that from here!"#message 28 "There is no gold in sight right now."#message 29 "Through the hole in the mine wall you see the faint glimmer of GOLD!"#message 31 "You reach out and grasp the gold nuggets!"#message 32 "There's no hole right now."#message 33 "The hole isn't big enough!"#message 34 "With great anticipation, you crawl through the hole into the underground cavern."#message 35 "You can't reach the gold from here."#message 36 "James says, \"Hmmm. That looks strange. I wonder what's going on here. Keep on going, Jerrod!\""#message 37 "\"It's getting bigger James. Look!\""#message 38 "\"I see it brother, keep on going!\""#message 39 "\"Oh my, look at that!\""#message 40 "\"Keep swinging that pick, Jerrod! It's almost big enough to get through!\""#message 41 "\"My heart is pounding, James! What to you think is behind it?\""#message 42 "\"I don't know, Jerrod, but my knees are getting weak!\""#message 43 "It's difficult to tell what is through the hole in the wall."#message 44 "There's something on the other side of the mine wall, but you can't tell what it is, yet."#message 45 "You see part of a cavern through the hole in the mine wall."#message 46 "There is a natural underground cavern on the other side of the mine wall."#message 47 "You already have a pick."#message 48 "You can't take your brother's pick!"#message 49 "The hole is big enough."#message 50 "James is not here."#message 51 "Why not get some of that gold on the wall?"#message 61 "The hole is very small and dark. You can't see what is through the hole."#message 62 "The hole leads to some sort of cavern, but you just can't see what it is!"#message 63 "You can now see through the hole enough to know that it leads to a natural underground cavern! You think you see something glimmering in the light of the lanterns!!"#message 64 "It is now clear to see that in the underground cavern there is definitely something glimmering. Your heart begins to pound!!!"#message 65 "You can barely detect a hole in the wall."#message 66 "There's a hole in the wall of the mine"#message 67 "You can see through the hole in the wall of the mine into a natural underground cavern!!"#message 68 "Through the hole in the wall of the mine you think you see something glittering! It seems too good to be true. Could it be GOLD???!!!"#message 69 "His name is James now!"#message 70 "It's hard to believe that is your brother Jake, I mean James! He's grown a beard, and put on a few pounds. Those biceps are huge!"#message 71 "\"We'll have time for small talk later, Jerrod. I can feel it. We're getting close to something big!\" says James."#message 72 "The walls of the mine are rough and rocky."#message 73 "You are in a mine."#message 74 "There is a small hole in the wall of the mine."#message 75 "The hole in the wall is getting bigger!"#message 76 "That hole is almost big enough to crawl through. Your heart begins to pound!"#message 77 "The huge hole in the wall must lead to something!"#message 200 "Your eyes, unaccustomed to the bright light of the lanterns, take a moment to adjust."#message 201 "Although you are still squinting, you see a man across the mine shaft."#message 202 "You have followed a trail of clues left by your brother, and they have led you right here. It must be him!"#message 203 "You move closer to get a better look."#message 204 "It has been eleven years, but there's no doubt about it. That is your brother!"#message 205 "\"Jake!\" you shout across the mine shaft."#message 206 "You wait a moment and shout again, \"Jake, I mean James! Is that you?\""#message 207 "The man across the mine shaft stops picking and turns around."#message 208 "He looks you over from head to toe."#message 209 "\"It's me, your brother Jerrod!\" you shout."#message 210 "\"Is it really you, Jerrod?\""#message 211 "\"It's me! Jerrod Wilson!\""#message 212 "\"I can't believe it! It's really you! I just can't believe it!\""#message 213 "\"Let me get a good look at you Jerrod. I still can't believe it's really you!\""#message 214 "\"You are lookin' good, Jerrod!\""#message 215 "\"Well, I'm looking okay. Considering everything I've been through to get here!\""#message 216 "\"But I'm wondering about you James. How are you doing and what have you been doing for the last eleven years?\""#message 217 "\"That's a long story. I'll tell you all about it sometime.\""#message 218 "\"But right now, you and I have work to do!\""#message 219 "\"I'm closing in on the finest and purest vein of gold in all of California!\""#message 220 "\"And the two of us are going to find it!\""#message 221 "\"Well, then let's get to work James!\""