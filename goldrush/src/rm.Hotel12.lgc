[***********************************************************[[ rm.Hotel12[[ Room 12 in the Green Pastures hotel. This is Jake's room.[ There are a lot of clues and a few items that Jerrod will[ need when he gets to Jake's cabin later. There is a bird[ that flies in that has an aerogram that Jerrod needs[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oWindow                      o1#define oString                      o2#define oMagnet                      o3#define oCoin                        o4#define oNote                        o5#define oBird                        o6#define vTmpVar                    v220#define vRm11Count1                v221#define vBirdStatus                v222  #define NO_BIRD               0  [ bird not on screen  #define OUTSIDE               1  [ bird added, flying to center of window  #define WANDERING             2  [ bird flies around outside the window  #define FLY_INSIDE            3  [ window is open so bird flies inside  #define FLY_CAGE              4  [ bird is inside; he flies to the cage  #define IN_CAGE               5  [ bird is in the cage, resting  #define IN_CAGE_LV            6  [ bird is in cage, waiting for window to open  #define FLY_OUTSIDE           7  [ bird is at window, flying out (will come back with aerogram)  #define FLY_AWAY              8  [ bird is outside, flying away, to return later  #define WAITING               9  [ bird is away, waiting to come back with aerogram  #define FLY_OFF              20  [ bird is outside, flying away  #define LEAVING              21  [ bird is leaving, but will come back later  #define GONE                 25  [ bird is gone, aerogram was delivered#define vTimer                     v223#define vTmrCount                  v224#define vRm11Timer                 v225#define vRm11Count2                v226#define fWindowMoved               f220#define fBirdMoved                 f221#define fSoundDone                 f222#define fEffectDone                f223[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load picture for this room  load.pic(currentRoom);    [ load the views used in this room  load.view(vw.BigJerrodCA);  load.view(vw.HotelArt);    [ load sounds used in this room  load.sound(m.FoundGold);  load.sound(s.Effect2);  load.sound(s.Effect5);  load.sound(s.Window);    [ draw the room, and add furniture  draw.pic(currentRoom);  [ cannon on mantle  add.to.pic(vw.HotelArt, 3, 0, 39, 85, 12, 12);  [ bed  add.to.pic(vw.HotelArt, 3, 1, 82, 114, 0, 4);  [ birdcage  add.to.pic(vw.HotelArt, 3, 2, 58, 102, 8, 8);  [ table  add.to.pic(vw.HotelArt, 0, 9, 78, 137, 0, 4);  [ chair  add.to.pic(vw.HotelArt, 0, 11, 96, 100, 0, 4);    [ if Jerrod hasn't picked up the string yet  if (!has("String"))    {    [ add string    animate.obj(oString);    set.view(oString, vw.HotelArt);    set.loop(oString, 3);    set.cel(oString, 3);    set.priority(oString, 9);    ignore.blocks(oString);    ignore.objs(oString);    [ place string on floor    position(oString, 52, 163);    draw(oString);    stop.update(oString);    }      [ if Jerrod hasn't picked up the magnet yet  if (!has("Magnet"))    {    [ add magnet  put it on table    animate.obj(oMagnet);    set.view(oMagnet, vw.HotelArt);    set.loop(oMagnet, 3);    set.cel(oMagnet, 4);    set.priority(oMagnet, 12);    ignore.blocks(oMagnet);    ignore.objs(oMagnet);    [ put it on table    position(oMagnet, 91, 115);    draw(oMagnet);    stop.update(oMagnet);    }    [ if Jerrod doesn't have the coin yet (either from being  [ here previously, or better yet, he found it in the  [ Gazebo in NY)  if (!isset(FoundCoin))    {    [ add coin    animate.obj(oCoin);    set.view(oCoin, vw.HotelArt);    set.loop(oCoin, 3);    set.cel(oCoin, 5);    set.priority(oCoin, 12);    ignore.blocks(oCoin);    ignore.objs(oCoin);    [ put it on table    position(oCoin, 100, 113);    draw(oCoin);    stop.update(oCoin);    }      [ if Jerrod hasn't picked up Jake's note yet  if (!has("Note from Jake"))    {    [ add note    animate.obj(oNote);    set.view(oNote, vw.HotelArt);    set.loop(oNote, 3);    set.cel(oNote, 6);    set.priority(oNote, 12);    ignore.blocks(oNote);    ignore.objs(oNote);    [ put it on table    position(oNote, 83, 116);    draw(oNote);    stop.update(oNote);    }      [ animate the window  animate.obj(oWindow);  set.view(oWindow, vw.HotelArt);  [ if broken  if (isset(Window12Broken))    {    [ use broken loop    set.loop(oWindow, 4);    }  else    {    [ otherwise use unbroken loop    set.loop(oWindow, 2);    }  [ if open  if (isset(Window12Open))    {    [ show open cel    set.cel(oWindow, 4);    }  else    {    [ otherwise show closed cel    set.cel(oWindow, 0);    }  position(oWindow, 76, 77);  set.priority(oWindow, 8);  draw(oWindow);  stop.update(oWindow);    [ Jake's bird with the aerogram  animate.obj(oBird);  set.view(oBird, vw.HotelArt);  set.loop(oBird, 5);  ignore.objs(oBird);  [ if bird was in cage when last in the room  if (isset(BirdInCage))    {    reset(BirdInCage);    [ set status to bird in cage, ready to leave    vBirdStatus = IN_CAGE_LV;    set.loop(oBird, 3);    set.cel(oBird, 7);    set.priority(oBird, 8);    position(oBird, 58, 69);    draw(oBird);    stop.cycling(oBird);    }    [ Jerrod with large view of California attire  animate.obj(ego);  set.view(ego, vw.BigJerrodCA);  vTmpVar = 2;  step.size(ego, vTmpVar);  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if bird hasn't started its sequence yetif (vBirdStatus == NO_BIRD)  {  [ increment timer  ++vTimer;  [ after five cycles  if (vTimer == 5)    {    [ increment the counter    vTimer = 0;    ++vTmrCount;    }  }  [ after bird counter reaches 200 (1000 total cycles) and[ bird is not aroundif (vTmrCount == 200 && vBirdStatus == NO_BIRD)  {  [ reset timer and counter  vTimer = 0;  vTmrCount = 0;  [ add bird to screen, and it flies to first point  set.priority(oBird, 7);  position(oBird, 90, 51);  draw(oBird);  move.obj(oBird, 78, 63, 1, fBirdMoved);  [ bird starts outside  vBirdStatus = OUTSIDE;  }  [ when bird gets to first point (center of window)if (isset(fBirdMoved) && vBirdStatus == OUTSIDE)  {  [ rest flag and increment timer  reset(fBirdMoved);  ++vBirdStatus;  [ use a block to keep bird within view of window  block(74, 44, 82, 81);  wander(oBird);  }[ while bird is wandering aboutif (vBirdStatus == WANDERING)  {  [ increment timer  ++vTimer;  [ after 200 cycles  if (vTimer == 200)    {    [ the bird leaves    vTimer = 0;    vBirdStatus = FLY_OFF;    [ unblock, so the bird can fly away    unblock();    move.obj(oBird, 90, 51, 1, fBirdMoved);    }  [ if the window is open while bird is wandering  if (isset(Window12Open))    {    [ begin moving the bird inside    move.obj(oBird, 78, 76, 1, fBirdMoved);    ++vBirdStatus;    }  }  [ after bird moves to middle of window on its way insideif (isset(fBirdMoved) && vBirdStatus == FLY_INSIDE)  {  [ reset flag  reset(fBirdMoved);  [ advance to next stage (bird flies to cage)  ++vBirdStatus;  [ set priority so bird shows in front of the back wall  set.priority(oBird, 8);  [ remove block so bird can fly inside  unblock();  [ bird flies over to the cage  move.obj(oBird, 59, 70, 1, fBirdMoved);  }  [ after bird gets to the cageif (isset(fBirdMoved) && vBirdStatus == FLY_CAGE)  {  [ reset movement flag  reset(fBirdMoved);  [ advance to next stage (bird is perched in cage)  ++vBirdStatus;  set.loop(oBird, 3);  set.cel(oBird, 7);  [ stop cycling; bird is perched  stop.cycling(oBird);  }  [ while bird is in the cageif (vBirdStatus == IN_CAGE)  {  [ increment the timer  ++vTimer;  [ after 175 cycles  if (vTimer == 175)    {    [ increment the count    vTimer = 0;    ++vTmrCount;    [ after to counter cycles (350 total cycles)    if (vTmrCount == 2)      {      [ reset counter      vTmrCount = 0;      [ advance to next stage (bird is ready to leave cage)      ++vBirdStatus;      }    }  }  [ bird is in cage, ready to fly awayif (vBirdStatus == IN_CAGE_LV)  {  [ if window is open  if (isset(Window12Open))    {    [ if the capsule on bird's leg is unopened, has the    [ aerogram in it, or is empty    if ((CapsuleStatus == CAPSULE_UNOPENED ||         CapsuleStatus == CAPSULE_GRAM ||        CapsuleStatus == CAPSULE_EMPTY))      {      [ bird leaves (will come back later in same state)      vBirdStatus = LEAVING;      }    [ if the capsule has Jerrod's photo in it    if (CapsuleStatus == CAPSULE_PHOTO)      {      [ bird leaves to come back later with the aerogram      vBirdStatus = FLY_OUTSIDE;      }    [ bird flies to window    set.loop(oBird, 5);    move.obj(oBird, 78, 76, 1, fBirdMoved);    start.cycling(oBird);    }  }  [ after bird gets to window on its way outside with photoif (isset(fBirdMoved) && vBirdStatus == FLY_OUTSIDE)  {  [ reset flag  reset(fBirdMoved);  [ advance to next stage (bird flies away)  ++vBirdStatus;  set.priority(oBird, 7);  move.obj(oBird, 90, 51, 1, fBirdMoved);  }  [ if bird reaches destination while flying away with photoif (isset(fBirdMoved) && vBirdStatus == FLY_AWAY)  {  [ remove it from screen,  reset(fBirdMoved);  [ advance to next stage (bird is waiting to return)  ++vBirdStatus;  erase(oBird);  }  [ if bird is off screen waiting to come back with aerogramif (vBirdStatus == WAITING)  {  [ increment timer  ++vTimer;  if (vTimer == 6)    {    [ after every 6 cycles, increment the count    vTimer = 0;    ++vTmrCount;    }  }[ after count reaches 250 (1500 total cycles) while bird is[ waiting to returnif (vTmrCount == 250 && vBirdStatus == WAITING)  {  [ reset timer and counter  vTimer = 0;  vTmrCount = 0;  [ advance to next stage (which is actually undefined;  [ later in this if block it gets reset to OUTSIDE)  ++vBirdStatus;  [ bird returns with aerogram  CapsuleStatus = CAPSULE_GRAM;  set.priority(oBird, 7);  position(oBird, 90, 51);  draw(oBird);  move.obj(oBird, 78, 63, 1, fBirdMoved);  [ set status to OUTSIDE, flying to window  vBirdStatus = OUTSIDE;  }  [ if bird is leaving, without photoif (isset(fBirdMoved) && vBirdStatus == LEAVING)  {  [ reset movement flag  reset(fBirdMoved);  [ change stage to 'bird flying off without photo'  vBirdStatus = FLY_OFF;  set.priority(oBird, 7);  move.obj(oBird, 90, 51, 1, fBirdMoved);  }  [ if bird reaches exit point while flying off without photoif (isset(fBirdMoved) && vBirdStatus == FLY_OFF)  {  [ reset movement flag  reset(fBirdMoved);  [ change stage to 'bird gone from screen'  vBirdStatus = NO_BIRD;  [ if capsule is empty (meaning Jerrod took the aerogram)   if (CapsuleStatus == CAPSULE_EMPTY)    {    [ bird doesn't come back    vBirdStatus = GONE;    }  [ remove bird from screen  erase(oBird);  }  [ increment counter that tracks room 11  ++vRm11Timer;if (vRm11Timer == 2)  {  [ after two cycles, increment count1  vRm11Timer = 0;  ++vRm11Count1;  if (vRm11Count1 == 5)    {    [ after five counts (10 cycles total)    vRm11Count1 = 0;    [ increment count2    ++vRm11Count2;    if (vRm11Count2 == 250)      {      [ after 250 counts (2500 cycles total)      vRm11Count2 = 0;      [ the guest in room 11 leaves (if in the room)      [ or returns (if not in the room)      toggle(HotelRoomEmpty);      sound(s.Effect2, fEffectDone);      print("Ya hear the door in room eleven slam shut.");      }    }  }  [ if window finishes movingif (isset(fWindowMoved))  {  [ reset the flag, and stop updating  reset(fWindowMoved);  stop.update(oWindow);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "hotel", "around") ||     said("examine") ||     said("examine", "room 12") ||     said("examine", "around", "room 12")))  {  print("You are now in the elusive room 12! You see that a wall has been built "        "where the door used to be, creating a small closet. There is also a "        "table, a fireplace and bird cage.");  }  [ look fire place if (said("examine", "fireplace"))  {  [ if Jerrod is near the fireplace  if (posn(ego, 42, 117, 54, 139))    {    [ is secret panel raised?    if (isset(PanelRaised))      {      print("The back wall of the fireplace is about three feet above its "            "normal position.");      }    else      {      print("It's a brick fireplace with a decorative cannon on the mantle.");      }    }  else    {    print("It's a brick fireplace with a decorative cannon on the mantle.");    }  }[ look mantleif (said("examine", "mantle"))  {  print("It's a brick fireplace with a decorative cannon on the mantle.");  }  [ enter fireplace/go to room elevenif ((said("go", "fireplace") ||     said("go", "in", "fireplace") ||     said("climb", "fireplace") ||     said("climb", "in", "fireplace") ||     said("crawl", "fireplace") ||     said("crawl", "in", "fireplace") ||     said("enter", "fireplace") ||     said("go", "eleven") ||     said("go", "around", "eleven") ||     said("go", "in", "eleven") ||     said("go", "in", "around", "eleven") ||     said("climb", "eleven") ||     said("climb", "around", "eleven") ||     said("climb", "in", "eleven") ||     said("climb", "in", "around", "eleven") ||     said("crawl", "eleven") ||     said("crawl", "around", "eleven") ||     said("crawl", "in", "eleven") ||     said("crawl", "in", "around", "eleven") ||     said("enter", "eleven") ||     said("enter", "around", "eleven")))  {  [ if Jerrod is near the fireplace  if (posn(ego, 44, 125, 48, 135))    {    [ is secret panel raised?    if (isset(PanelRaised))      {      print("Ya might get covered with soot, but ya climb into the fireplace!");      position(ego, 101, 128);      set.loop(ego, 1);      [ if window is closed      if (!isset(Window12Open))        {        [ if bird is in cage        if ((vBirdStatus == FLY_CAGE ||             vBirdStatus == IN_CAGE ||             vBirdStatus == IN_CAGE_LV))          {          [ set flag so bird will be in the cage          [ when Jerrod returns          set(BirdInCage);          }        }      [ go to Room 11      new.room(rm.Hotel11); [ ##LE001##      }    else      {      print("If ya did that right now, you'd only get dirty!");      }    }  else    {    print("Yer not close enough.");    }  }  [ open fireplace  if (said("open", "fireplace"))  {  [ if Jerrod is near the fireplace  if (posn(ego, 44, 125, 48, 135))    {    [ if panel is already raised    if (isset(PanelRaised))      {      print("The back wall of the fireplace is already open.");      }    else      {      print("Dandy idea, but how?");      }    }  else    {    print("Yer not close enough.");    }  }[ close fireplaceif (said("close", "fireplace"))  {  [ if Jerrod is near the fireplace  if (posn(ego, 44, 125, 48, 135))    {    [ is panel raised?    if (isset(PanelRaised))      {      print("Dandy idea, but how?");      }    else      {      print("The back wall of the fireplace is already closed.");      }    }  else    {    print("Yer not close enough.");    }  }  [ look bedif (said("examine", "bed"))  {  print("It's just a normal, but dusty, bed.");  }  [ look chairif (said("examine", "chair"))  {  print("There's a chair in the corner of the room.");  }  [ look tableif (said("examine", "table"))  {  [ if Jerrod is near the table  if (posn(ego, 57, 116, 115, 144))    {    [ response depends on what's left on the table    if ((!has("Note from Jake") ||         !has("Magnet") ||         !isset(FoundCoin)))      {      print("There's something on the table in the middle of the room. It looks "            "like...");      if (!has("Note from Jake"))        {        print("a handwritten and slightly yellowed note...");        }      if (!has("Magnet"))        {        print("a magnet...");        }      if (!isset(FoundCoin))        {        print("a gold coin...");        }      print("...and that's about it!");      }    else      {      print("There's a table in the middle of the room.");      }    }  else    {    print("There's a table in the middle of the room.");    }  }  [ look note/look paperif ((said("examine", "note") ||     said("examine", "newspaper")))  {  [ if note is still on the table  if (!has("Note from Jake"))    {    [ if Jerrod is near the note    if (posn(ego, 70, 124, 102, 144))      {      print("There's a note on the table!");      }    else      {      print("What note?");      }    }  }  [ read noteif (said("read", "note"))  {  [ if note is still on table  if (!has("Note from Jake"))    {    print("To read the note, ya got to have the note!");    }  }  [ get noteif ((said("acquire", "note") ||     said("acquire", "newspaper")))  {  [ if Jerrod already has the note  if (has("Note from Jake"))    {    print("Ya already got the note!");    }  else    {    [ if Jerrod is near the note    if (posn(ego, 70, 124, 102, 144))      {      [ play score sound      sound(m.FoundGold, fSoundDone);      [ get the note      print("Ya grab the note eager to see what it might say!");      get("Note from Jake");      [ no need to update it, since erase is the next      [ command      start.update(oNote);      [ remove note from screen      erase(oNote);      [ score a point      ++currentScore;      }    else      {      print("Yer not close enough.");      }    }  }  [ look magnetif (said("examine", "magnet"))  {  [ if still on the table  if (!has("Magnet"))    {    [ if Jerrod is near the table    if (posn(ego, 75, 126, 97, 144))      {      print("There's a magnet, shaped a horseshoe, on the table.");      }    else      {      print("What magnet?");      }    }  }  [ get magnetif (said("acquire", "magnet"))  {  [ if Jerrod already has the magnet  if (has("Magnet"))    {    print("Ya already have the magnet.");    }  else    {    [ if Jerrod is near the table    if (posn(ego, 70, 124, 108, 144))      {      [ play score sound      sound(m.FoundGold, fSoundDone);      [ get the magnet      print("Ya get the horseshoe-shaped magnet off the table.");      get("Magnet");      [ no need to start update, since next command erases      [ the magnet from the screen      start.update(oMagnet);      erase(oMagnet);      [ score one point      ++currentScore;      }    else      {      print("Yer not close enough.");      }    }  }  [ look stringif (said("examine", "string"))  {  [ if string is still on the floor  if (!has("String"))    {    print("There's some string wadded up on the floor in the corner.");    }  }  [ take stringif (said("acquire", "string"))  {  [ if Jerrod has the string  if (has("String"))    {    print("Ya already have some string.");    }  else    {    [ if Jerrod is near the string    if (posn(ego, 45, 152, 55, 164))      {      [ play score sound      sound(m.FoundGold, fSoundDone);      [ take the string      print("Ya snatch the string off the dusty floor.");      get("String");      [ no need to update, since next command will erase the      [ string      start.update(oString);      erase(oString);      ++currentScore;      }    else      {      print("Yer not close enough.");      }    }  }[ look coinif ((said("examine", "gold", "coin") ||     said("examine", "gold") ||     said("examine", "coin")))  {  [ if the coin is still on the table  if (!isset(FoundCoin))    {    [ if Jerrod is near the coin    if (posn(ego, 77, 126, 111, 144))      {      print("There's a gold coin sitting on the table.");      }    else      {      print("From here you see no gold coin.");      }    }  }  [ get coinif ((said("acquire", "gold", "coin") ||     said("acquire", "gold") ||     said("acquire", "coin")))  {  [ if Jerrod already has the coin  if (isset(FoundCoin))    {    print("Ya see no gold coin.");    }  else    {    [ if Jerrod is near the table    if (posn(ego, 74, 124, 110, 144))      {      [ play score sound      sound(m.FoundGold, fSoundDone);      [ take the coin      print("Ya get the gold coin off the table.");      get("Gold coin");      [ set flag indicating Jerrod has found the coin      set(FoundCoin);      [ no need to start update, since next command will      [ erase the coin      start.update(oCoin);      erase(oCoin);      [ score a point      ++currentScore;      }    else      {      print("Yer not close enough.");      }    }  }[ look windowif ((said("examine", "glass") ||     said("examine", "anyword", "glass") ||     said("examine", "glass", "rol")))  {  print("There's a ledge outside of the window.");  }  [ unlatch windowif ((said("diconnect", "glass") ||     said("unlock", "glass") ||     said("open", "latch")))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    [ if window is open    if (isset(Window12Open))      {      print("The window's already open.");      }    else      {      [ if window is already unlatched      if (isset(Window12Unlatched))        {        print("The window's already unlatched.");        }      else        {        print("Ya unlatch the window.");        set(Window12Unlatched);        }      }    }  else    {    print("Yer not close enough.");    }  }  [ latch windowif ((said("latch", "glass") || said("lock", "glass")))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    [ if window is open    if (isset(Window12Open))      {      print("Ya cain't latch the window when the window's open.");      }    else      {      [ if window is unlatched      if (isset(Window12Unlatched))        {        print("Ya latch the window.");        reset(Window12Unlatched);        }      else        {        print("The window's already latched.");        }      }    }  else    {    print("Yer not close enough.");    }  }  [ open windowif (said("open", "glass"))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    [ if window is already open    if (isset(Window12Open))      {      print("The window's already open.");      }    else      {      [ if window is unlatched      if (isset(Window12Unlatched))        {        [ open it        print("Ya open the window.");        sound(s.Window, fEffectDone);        start.update(oWindow);        end.of.loop(oWindow, fWindowMoved);        set(Window12Open);        }      else        {        print("Ya cain't do that, the window's latched.");        }      }    }  else    {    print("Yer not close enough.");    }  }  [ close windowif (said("close", "glass"))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    if (isset(Window12Open))      {      [ is the bird flying through the window?      if ((vBirdStatus == FLY_CAGE ||           vBirdStatus == FLY_OUTSIDE ||           vBirdStatus == LEAVING))        {        print("Not right now, the bird is flyin' through the window!");        [ skip to end        goto(Done);        }      [ close the window      print("Ya close the window.");      sound(s.Window, fEffectDone);      start.update(oWindow);      reverse.loop(oWindow, fWindowMoved);      reset(Window12Open);      }    else      {      print("The window's already closed.");      }    }  else    {    print("Yer not close enough.");    }  }  [ break windowif (said("break", "glass"))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    [ if window is open    if (isset(Window12Open))      {      print("Why? The window's open!");      }    else      {      [ if window is already broken      if (isset(Window12Broken))        {        print("The window's already broken.");        }      else        {        [ can't break window from inside        print("Ya have no good reason to break the window.");        }      }    }  else    {    print("Yer not close enough.");    }  }  [ go out window/climb on ledgeif ((said("go", "glass") ||     said("go", "anyword", "glass") ||     said("go", "glass", "rol") ||     said("climb", "glass") ||     said("climb", "anyword", "glass") ||     said("climb", "glass", "rol") ||     said("crawl", "glass") ||     said("crawl", "anyword", "glass") ||     said("crawl", "glass", "rol") ||     said("go", "ledge") ||     said("go", "anyword", "ledge") ||     said("go", "ledge", "rol") ||     said("climb", "ledge") ||     said("climb", "anyword", "ledge") ||     said("climb", "ledge", "rol") ||     said("crawl", "ledge") ||     said("crawl", "anyword", "ledge") ||     said("crawl", "ledge", "rol") ||     said("enter", "glass")))  {  [ if Jerrod is near the window  if (posn(ego, 71, 96, 84, 101))    {    [ if window is open    if (isset(Window12Open))      {      [ go to new room, outside on the ledge      print("It's a tight fit, but ya manage to crawl thru the window.");      position(ego, 116, 95);      set.loop(ego, 0);      new.room(rm.LedgeLeft); [ ##LE002##      }    else      {      print("Ya cain't do that! The window's closed!");      }    }  else    {    print("Yer not close enough.");    }  }  [ look cannonif (said("examine", "cannon"))  {  [ if Jerrod is near the fireplace  if (posn(ego, 42, 117, 54, 139))    {    [ there is a clue when looking at the cannon    print("This cannon looks just like the one on the tombstone at Sutter's "          "Fort!");    print("However, the wheel on this cannon looks bigger than the one on the "          "tombstone.");    }  else    {    print("From here it looks like a decorative cannon.");    }  }  [ look cannon wheelif ((said("examine", "cannon", "wheel") ||     said("examine", "wheel", "cannon") ||     said("examine", "wheel")))  {  [ if Jerrod is near the fireplace  if (posn(ego, 42, 117, 54, 139))    {    [ there is a clue when looking at the cannon wheel    print("It seems that this cannon wheel is too big to be merely a part of a "          "decorative cannon.");    }  else    {    print("From here it looks like a wheel on a decorative cannon.");    }  }  [ take cannonif (said("acquire", "cannon"))  {  print("The cannon is very securely attached to the mantle.");  }  [ rotate the wheel if ((said("rotate", "wheel", "cannon") ||     said("rotate", "cannon", "wheel") ||     said("rotate", "wheel")))  {  [ if Jerrod is near the cannon  if (posn(ego, 44, 125, 48, 135))    {    [ if panel currently up    if (isset(PanelRaised))      {      [ play closed-sound      sound(s.Effect5, fEffectDone);      [ close the panel      print("Ya turn the wheel on the cannon and lower the back wall of the "            "fireplace!");      reset(PanelRaised);      }    else      {      [ panel is closed - if it has been previously opened      if (isset(ScoreSecretPanel))        {        [ just open it        sound(s.Effect5, fEffectDone);        print("Ya turn the wheel on the cannon and raise the back wall of the "              "fireplace!");        set(PanelRaised);        }      else        {        [ open it and score points        sound(m.FoundGold, fSoundDone);        print("The cannon wheel is difficult to turn.");        print("But as you continue to turn the wheel, you realize that an "              "ingeniously designed mechanism is raising the back wall in the "              "fireplace!");        set(PanelRaised);        set(ScoreSecretPanel);        [ score five points        currentScore  += 5;        }      }    }  else    {    print("Yer not close enough.");    }  }[ rotate cannonif ((said("rotate", "cannon") ||     said("rotate", "cannon", "around")))  {  [ if Jerrod is near the cannon  if (posn(ego, 44, 125, 48, 135))    {    print("The cannon is very securely attached to the mantle.");    }  else    {    print("Yer not close enough.");    }  }  [ look cageif ((said("examine", "cage") ||     said("examine", "bird", "cage")))  {  [ if Jerrod is near the bird cage  if (posn(ego, 47, 97, 79, 115))    {    [ is the bird in the cage?    if ((vBirdStatus == IN_CAGE ||         vBirdStatus == IN_CAGE_LV))      {      print("There's a bird cage in the corner of the room and there's a bird "            "in the cage!");      goto(Done);      }    print("There's a bird cage in the corner of the room.");    }  else    {    print("There's a bird cage in the corner of the room.");    }  }  [ look birdif (said("examine", "bird"))  {  [ response depends on bird status    [ if bird is not in the room or window  if ((vBirdStatus == NO_BIRD ||       vBirdStatus == WAITING ||       vBirdStatus == GONE))    {    print("There's no bird in sight.");    }  [ if the bird is outside  if ((vBirdStatus == OUTSIDE ||       vBirdStatus == WANDERING ||       vBirdStatus == FLY_INSIDE ||       vBirdStatus == FLY_AWAY ||       vBirdStatus == FLY_OFF))    {    print("The bird's flutterin' outside the window.");    }  [ if the bird is flying in, headed to cage  if (vBirdStatus == FLY_CAGE)    {    print("The bird's flyin' through the window to the cage!");    }  [ if bird is in the cage  if ((vBirdStatus == IN_CAGE || vBirdStatus == IN_CAGE_LV))    {    [ if Jerrod is near the bird cage    if (posn(ego, 47, 97, 79, 115))      {      [ Jerrod can see the capsule      print("The bird has a small capsule attached to its leg.");      }    else      {      print("The bird's quietly sittin' in the cage.");      }    }  [ if bird is flying out of the window  if ((vBirdStatus == FLY_OUTSIDE || vBirdStatus == LEAVING))    {    print("The bird's leavin' through the window.");    }  }  [ look capsule/read capsuleif ((said("examine", "capsule") || said("read", "capsule")))  {  [ if bird is not in the room or window  if ((vBirdStatus == NO_BIRD ||       vBirdStatus == WAITING ||       vBirdStatus == GONE))    {    print("What %w2?");    }  [ if bird is not in the cage  if ((vBirdStatus == OUTSIDE ||       vBirdStatus == WANDERING ||       vBirdStatus == FLY_INSIDE ||       vBirdStatus == FLY_CAGE ||       vBirdStatus == FLY_OUTSIDE ||       vBirdStatus == FLY_AWAY ||       vBirdStatus == FLY_OFF ||       vBirdStatus == LEAVING))    {    print("That ain't too easy when the bird's flyin' around!");    }  [ if bird is in the cage  if ((vBirdStatus == IN_CAGE ||       vBirdStatus == IN_CAGE_LV))    {    [ if Jerrod is near the bird cage    if (posn(ego, 54, 104, 64, 104))      {      [ answer depends on status of the capsule      if (CapsuleStatus == CAPSULE_UNOPENED)        {        print("In very small script ya see this engraved on the capsule: \"For "              "a clue to my exact location, insert proof of identification "              "here!\"");        }      if (CapsuleStatus == CAPSULE_PHOTO)        {        print("Yer family photo is carefully placed in the capsule!");        }      if (CapsuleStatus == CAPSULE_GRAM)        {        print("There's an aerogram in the capsule!");        }      if (CapsuleStatus == CAPSULE_EMPTY)        {        print("It's a blank, empty capsule.");        }      }    else      {      print("Ya need to be very close to the capsule to do that!");      }    }  }  [ get capsuleif (said("acquire", "capsule"))  {  [ if bird is not in the room or window  if ((vBirdStatus == NO_BIRD ||       vBirdStatus == WAITING ||       vBirdStatus == GONE))    {    print("What %w2?");    }  [ if bird is flying  if ((vBirdStatus == OUTSIDE ||       vBirdStatus == WANDERING ||       vBirdStatus == FLY_INSIDE ||       vBirdStatus == FLY_CAGE ||       vBirdStatus == FLY_OUTSIDE ||       vBirdStatus == FLY_AWAY ||       vBirdStatus == FLY_OFF ||       vBirdStatus == LEAVING))    {    print("That ain't too easy when the bird's flyin' around!");    }  [ if bird is in cage  if ((vBirdStatus == IN_CAGE || vBirdStatus == IN_CAGE_LV))    {    [ if Jerrod is near the bird cage    if (posn(ego, 54, 104, 64, 104))      {      print("Ya stick yer hand in the cage and the bird pecks the livin' "            "daylights out of it! It just ain't worth it!");      }    else      {      print("Ya need to be very close to the capsule to do that!");      }    }  }  [ get bird/catch birdif ((said("acquire", "bird") || said("catch", "bird")))  {    [ if bird is not in room or window    if ((vBirdStatus == NO_BIRD ||         vBirdStatus == WAITING ||         vBirdStatus == GONE))    {    print("There's no bird in sight.");    }    [ if bird is flying    if ((vBirdStatus == OUTSIDE ||         vBirdStatus == WANDERING ||         vBirdStatus == FLY_INSIDE ||         vBirdStatus == FLY_CAGE ||         vBirdStatus == FLY_OUTSIDE ||         vBirdStatus == FLY_AWAY ||         vBirdStatus == FLY_OFF ||         vBirdStatus == LEAVING))    {    print("That ain't too easy when the bird's flyin' around!");    }    [ if bird is in the cage    if ((vBirdStatus == IN_CAGE ||         vBirdStatus == IN_CAGE_LV))    {    [ if Jerrod is near the bird cage    if (posn(ego, 54, 104, 64, 104))      {      print("Ya stick yer hand in the cage and the bird pecks the livin' "            "daylights out of it! It just ain't worth it!");      }    else      {      print("Yer not close enough.");      }    }  }  [ look aerogramif (said("examine", "aerogram"))  {  [ if Jerrod doesn't have the aerogram  if (!has("Aerogram"))    {    [ if bird is not in the room    if ((vBirdStatus == NO_BIRD ||         vBirdStatus == WAITING ||         vBirdStatus == GONE))      {      print("There's no aerogram 'round here.");      }    [ if bird is flying around    if ((vBirdStatus == OUTSIDE ||         vBirdStatus == WANDERING ||         vBirdStatus == FLY_INSIDE ||         vBirdStatus == FLY_CAGE ||         vBirdStatus == FLY_OUTSIDE ||         vBirdStatus == FLY_AWAY ||         vBirdStatus == FLY_OFF ||         vBirdStatus == LEAVING))      {      [ unless Jerrod has looked at the capsule and seen the      [ aerogram, he wouldn't know it was there; they should      [ have used the capsule status to provide a different       [ response depending on whether Jerrod knows there is      [ an aerogram or not      print("That ain't too easy when the bird's flyin' around!");      }    [ if bird is in cage    if ((vBirdStatus == IN_CAGE ||         vBirdStatus == IN_CAGE_LV))      {      [ if Jerrod is near the bird cage      if (posn(ego, 54, 104, 64, 104))        {        if (CapsuleStatus == CAPSULE_UNOPENED)          {          print("There's no aerogram here, just an empty capsule.");          }        if (CapsuleStatus == CAPSULE_PHOTO)          {          print("This isn't an aerogram, it's yer family photo!");          }        if (CapsuleStatus == CAPSULE_GRAM)          {          print("There it is! An aerogram is in the capsule!");          }        if (CapsuleStatus == CAPSULE_EMPTY)          {          print("There's no aerogram in sight. This is just an empty capsule.");          }        }      else        {        print("Ya need to be very close to the capsule to do that!");        }      }    }  }  [ get aerogramif (said("acquire", "aerogram"))  {  [ is bird is not in the room or window  if ((vBirdStatus == NO_BIRD ||       vBirdStatus == WAITING ||       vBirdStatus == GONE))    {    print("There's no aerogram 'round here.");    }  [ if bird is flying  if ((vBirdStatus == OUTSIDE ||       vBirdStatus == WANDERING ||       vBirdStatus == FLY_INSIDE ||       vBirdStatus == FLY_CAGE ||       vBirdStatus == FLY_OUTSIDE ||       vBirdStatus == FLY_AWAY ||       vBirdStatus == FLY_OFF ||       vBirdStatus == LEAVING))    {    print("That ain't too easy when the bird's flyin' around!");    }  [ if bird is in cage  if ((vBirdStatus == IN_CAGE ||       vBirdStatus == IN_CAGE_LV))    {    [ if Jerrod is near the bird cage    if (posn(ego, 54, 104, 64, 104))      {      [ if aerogram is not in the capsule      if ((CapsuleStatus == CAPSULE_UNOPENED ||           CapsuleStatus == CAPSULE_PHOTO ||           CapsuleStatus == CAPSULE_EMPTY))        {        print("There's no aerogram 'round here.");        }      [ if aerogram IS in the capsule      if (CapsuleStatus == CAPSULE_GRAM)        {        [ play score sound        sound(m.FoundGold, fSoundDone);        [ get the aerogram        print("Without gettin' yer hand pecked up too badly, ya get the "              "aerogram out of the capsule!");        get("Aerogram");        [ score a point        ++currentScore;        [ change capsule status to empty        CapsuleStatus = CAPSULE_EMPTY;        }      }    else      {      print("Ya need to be very close to the capsule to do that!");      }    }  }  [ use photoif ((said("use", "family", "photo") ||     said("use", "photo")))  {  if (has("Family photo"))    {    print("Dandy idea, but how?");    }  else    {    print("Ya don't have a family photo!");    }  }  [ put photo in capsuleif ((said("place", "photo") ||     said("place", "photo", "capsule") ||     said("place", "in", "photo") ||     said("place", "photo", "in", "capsule") ||     said("place", "family", "photo") ||     said("place", "family", "photo", "capsule") ||     said("place", "in", "family", "photo") ||     said("place", "family", "photo", "in", "capsule") ||     said("insert", "photo") ||     said("insert", "photo", "capsule") ||     said("insert", "photo", "in", "capsule") ||     said("insert", "family", "photo", "in", "capsule") ||     said("insert", "family", "photo") ||     said("insert", "family", "photo", "capsule")))  {  [ if Jerrod has the family photo  if (has("Family photo"))    {    [ if bird is not in room or window    if ((vBirdStatus == NO_BIRD ||         vBirdStatus == WAITING ||         vBirdStatus == GONE))      {      print("The capsule's nowhere to be seen!");      }    [ if bird is flying around    if ((vBirdStatus == OUTSIDE ||         vBirdStatus == WANDERING ||         vBirdStatus == FLY_INSIDE ||         vBirdStatus == FLY_CAGE ||         vBirdStatus == FLY_OUTSIDE ||         vBirdStatus == FLY_AWAY ||         vBirdStatus == FLY_OFF ||         vBirdStatus == LEAVING))      {      print("That ain't too easy when the bird's flyin' around!");      }    [ if bird is in the cage    if ((vBirdStatus == IN_CAGE ||         vBirdStatus == IN_CAGE_LV))      {      [ if Jerrod is near the bird cage      if (posn(ego, 54, 104, 68, 112))        {        [ play score sound        sound(m.FoundGold, fSoundDone);        [ put photo into the capsule        print("Ya carefully roll up the family photo and put it in the capsule!");        drop("Family photo");        [ score three points        currentScore  += 3;        [ set capsule status to photo        CapsuleStatus = CAPSULE_PHOTO;        }      else        {        print("Ya need to be very close to the capsule to do that!");        }      }    }  else    {    print("Ya don't have a family photo!");    }  }  [ look wallif ((said("examine", "wall") ||     said("examine", "wall", "newspaper") ||     said("examine", "wallpaper")))  {  print("A wall has been built in this room where the door used to be, making "        "this room inaccessible to a normal man.");  }  [ look floorif ((said("examine", "deck") ||     said("examine", "dirt") ||     said("examine", "down")))  {  [ if Jerrod has picked up the string from the floor  if (has("String"))    {    print("It's just a hardwood floor.");    }  else    {    print("Ya notice some string lyin' on the hardwood floor.");    }  }  [ get {various room furnishings}if ((said("acquire", "chair") ||     said("acquire", "bed") ||     said("acquire", "table") ||     said("acquire", "cage") ||     said("acquire", "bird", "cage")))  {  print("Ya have no need fer that.");  }  [ look message/read messageif ((said("examine", "message") ||     said("read", "message")))  {  [ if Jerrod has the message for the man in room 11  if (has("Message for room 11"))    {    print("The message is written on a folded piece of paper with only one word "          "visible on the outside...");    print("\n CONFIDENTIAL!! \n \n");    }  else    {    print("Ya don't have a message.");    }  }  [ look doorif (said("examine", "door"))  {  print("There's no door to this room. A wall has been built where the door "        "once was.");  }  [ look closetif ((said("examine", "closet") ||     said("examine", "anyword", "closet") ||     said("examine", "closet", "rol")))  {  print("Walls have been built in room 12 to make it appear like a closet from "        "the hallway!");  }  [ look ledgeif (said("examine", "ledge"))  {  print("A narrow ledge is on the outside wall of the hotel.");  }  [ open doorif (said("open", "door"))  {  print("There is no door to this room.");  }  [ take a napif ((said("sleep") ||     said("sleep", "bed") ||     said("sleep", "in", "bed") ||     said("go", "sleep") ||     said("acquire", "sleep") ||     said("lay", "down") ||     said("lay", "down", "sleep") ||     said("lay", "down", "bed") ||     said("lay", "down", "in", "bed") ||     said("lay", "bed") ||     said("lay", "in", "bed") ||     said("use", "bed") ||     said("go", "bed") ||     said("enter", "bed") ||     said("nap") ||     said("acquire", "nap")))  {  print("You'll never strike it rich if you do that!");  }  [ read aerogramif (said("read", "aerogram"))  {  if (!has("Aerogram"))    {    print("Ya don't have an aerogram.");    }  }  Done:return();[ **************************************[ MESSAGES[ **************************************#message 1 "The window's already open."#message 2 "The window's already unlatched."#message 3 "Ya unlatch the window."#message 4 "Yer not close enough."#message 5 "Ya cain't latch the window when the window's open."#message 6 "Ya latch the window."#message 7 "The window's already latched."#message 8 "Ya open the window."#message 9 "Ya cain't do that, the window's latched."#message 10 "Ya close the window."#message 11 "The window's already closed."#message 12 "Why? The window's open!"#message 13 "Ya have no good reason to break the window."#message 14 "It's a tight fit, but ya manage to crawl thru the window."#message 15 "Ya cain't do that! The window's closed!"#message 16 "The window's already broken."#message 17 "This cannon looks just like the one on the tombstone at Sutter's Fort!"#message 18 "The cannon wheel is difficult to turn."#message 19 "But as you continue to turn the wheel, you realize that an ingeniously designed mechanism is raising the back wall in the fireplace!"#message 20 "Ya turn the wheel on the cannon and raise the back wall of the fireplace!"#message 21 "Ya turn the wheel on the cannon and lower the back wall of the fireplace!"#message 22 "The cannon is very securely attached to the mantle."#message 23 "The back wall of the fireplace is about three feet above its normal position."#message 24 "It's a brick fireplace with a decorative cannon on the mantle."#message 25 "If ya did that right now, you'd only get dirty!"#message 26 "Ya might get covered with soot, but ya climb into the fireplace!"#message 28 "There's a ledge outside of the window."#message 29 "There's a chair in the corner of the room."#message 30 "There's something on the table in the middle of the room. It looks like..."#message 31 "a handwritten and slightly yellowed note..."#message 32 "a magnet..."#message 33 "a gold coin..."#message 34 "...and that's about it!"#message 35 "There's a table in the middle of the room."#message 36 "There's a note on the table!"#message 37 "What note?"#message 38 "You are now in the elusive room 12! You see that a wall has been built where the door used to be, creating a small closet. There is also a table, a fireplace and bird cage."#message 39 "On the floor, close to the lower left corner, there's some string."#message 40 "Ya hear the door in room eleven slam shut."#message 41 "To read the note, ya got to have the note!"#message 42 "Ya already got the note!"#message 43 "Ya grab the note eager to see what it might say!"#message 44 "There's a magnet, shaped a horseshoe, on the table."#message 45 "What magnet?"#message 46 "There's some string wadded up on the floor in the corner."#message 47 "It's just a hardwood floor."#message 48 "There's a gold coin sitting on the table."#message 49 "From here you see no gold coin."#message 50 "Ya already have the magnet."#message 51 "Ya get the horseshoe-shaped magnet off the table."#message 52 "Ya already have some string."#message 53 "Ya snatch the string off the dusty floor."#message 54 "Ya see no gold coin."#message 55 "Ya get the gold coin off the table."#message 56 "There's a bird cage in the corner of the room."#message 57 "Not right now, the bird is flyin' through the window!"#message 58 "There's a bird cage in the corner of the room and there's a bird in the cage!"#message 59 "There's no bird in sight."#message 60 "The bird's flutterin' outside the window."#message 61 "The bird's flyin' through the window to the cage!"#message 62 "The bird's quietly sittin' in the cage."#message 63 "The bird's leavin' through the window."#message 64 "The bird has a small capsule attached to its leg."#message 65 "What %w2?"#message 66 "That ain't too easy when the bird's flyin' around!"#message 67 "In very small script ya see this engraved on the capsule: \"For a clue to my exact location, insert proof of identification here!\""#message 68 "Ya need to be very close to the capsule to do that!"#message 69 "Dandy idea, but how?"#message 70 "Ya carefully roll up the family photo and put it in the capsule!"#message 71 "Yer family photo is carefully placed in the capsule!"#message 72 "There's an aerogram in the capsule!"#message 73 "It's a blank, empty capsule."#message 74 "Ya don't have a family photo!"#message 75 "There's no aerogram in the capsule!"#message 76 "Without gettin' yer hand pecked up too badly, ya get the aerogram out of the capsule!"#message 77 "The capsule's nowhere to be seen!"#message 78 "There's no aerogram 'round here."#message 79 "Ya stick yer hand in the cage and the bird pecks the livin' daylights out of it! It just ain't worth it!"#message 80 "There's no aerogram here, just an empty capsule."#message 81 "This isn't an aerogram, it's yer family photo!"#message 82 "There it is! An aerogram is in the capsule!"#message 83 "There's no aerogram in sight. This is just an empty capsule."#message 85 "A wall has been built in this room where the door used to be, making this room inaccessible to a normal man."#message 86 "Ya notice some string lyin' on the hardwood floor."#message 87 "It's just a normal, but dusty, bed."#message 88 "Ya have no need fer that."#message 89 "The message is written on a folded piece of paper with only one word visible on the outside..."#message 90 "\n CONFIDENTIAL!! \n \n"#message 91 "Ya don't have a message."#message 92 "The back wall of the fireplace is already open."#message 93 "The back wall of the fireplace is already closed."#message 94 "There's no bird in sight."#message 95 "There's no door to this room. A wall has been built where the door once was."#message 96 "However, the wheel on this cannon looks bigger than the one on the tombstone."#message 97 "From here it looks like a decorative cannon."#message 98 "It seems that this cannon wheel is too big to be merely a part of a decorative cannon."#message 99 "From here it looks like a wheel on a decorative cannon."#message 100 "Walls have been built in room 12 to make it appear like a closet from the hallway!"#message 101 "A narrow ledge is on the outside wall of the hotel."#message 102 "There is no door to this room."#message 103 "You'll never strike it rich if you do that!"#message 104 "Ya don't have an aerogram."