[***********************************************************[ [ rm.LeonardsHouse[[ the house on this corner is where Leonard, the boat ticket[ salesman lives; also, the neighbor who rakes his yard, the[ real estate agent who wants to buy Jerrod's house, and[ Mr. Quail may walk by from time to time[ [ if Jerrod waits by Leonard's gate, Leonard will come out[ and offer a chance to buy a boat ticket[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSteamship                   o1#define oGate                        o2#define oLeonard                     o3#define oPedestrian                  o4#define vTmpShipY                  v220#define vLeonardStatus             v221  #define L_NO_LEONARD          0  [ Leonard is not visible  #define L_BEGIN               1  [ need to show Leonard  #define L_WALK_WND            2  [ Leonard is walking past window  #define L_WAVE1               3  [ Leonard is waving through window  #define L_WAVE2               4  [ second part of wave  #define L_LEAVE_WND           5  [ Leonard leaves window view  #define L_TO_FRONT            6  [ Leonard is out of sight, walking to front door  #define L_OUTSIDE             7  [ Leonard shows up outside  #define L_TO_GATE             8  [ Leonard moves to the gate  #define L_AT_GATE             9  [ Leonard reaches gate, and opens it  #define L_TALKING            11  [ Leonard talks to Jerrod  #define L_WND_NOT            30  [ Leonard is moving past window, but doesn't plan on coming out  #define L_CLOSE_GATE         40  [ Leonard is closing the gate  #define L_GO_BACK            41  [ Leonard is going back inside  #define L_LEAVING            42  [ Leonard is moving to last point before disappearing#define vRndNum                    v222#define vRndDir                    v223#define vTmpVal                    v224#define vTimer                     v225#define vConvStatus                v226  #define NO_CONVERSATION       0  [ 0: no conversation with Leonard in progress  #define START_CONV            1  [ 1: Leonard asks 'what can I do for you?'  #define OFFER_TICKET          2  [ 2: Leonard offered ticket, waiting for reply  #define CHOOSE_ROUTE          3  [ 3: waiting for choice of Panama or Cape Horn  #define OFFER_PANAMA          6  [ 6: Leonard offering Panama ticket, waiting for reply  #define OFFER_HORN            7  [ 7: Leonard offering Cape Horn ticket, waiting for reply  #define WANT_PANAMA           8  [ 8: Jerrod agrees to buy Panama ticket  #define WANT_HORN             9  [ 9: Jerrod agrees to buy Cape Horn ticket [ v227 is not used#define vPedDist                   v228#define vPedStatus                 v230#define vPedViewNum                v231#define vPedX                      v232#define vPedY                      v233#define fShipMoved                 f220#define fShowShip                  f221#define fNearHouse                 f222#define fLenMoved                  f223[ f224 is not used#define fTreePoster                f225#define fPedMoved                  f226[ f227 is not used#define fSndDone                   f228#define fGateOpen                  f229[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw, discard this room's picture  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ views for additions to the picture  load.view(vw.SkylineArt);  load.view(vw.CityArt);  load.view(vw.Posters);    [ add skyline art to background image  add.to.pic(vw.SkylineArt, 0, 6, 3, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 7, 23, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 8, 43, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 9, 63, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 10, 83, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 11, 103, 47, 4, 4);  add.to.pic(vw.SkylineArt, 0, 12, 123, 47, 4, 4);    [ add Leonard's office sign and house number  add.to.pic(vw.CityArt, 1, 0, 23, 130, 7, 7);  add.to.pic(vw.CityArt, 1, 1, 47, 103, 6, 6);    [ if the gold rush has been announced  if (isset(RushIsPublic))    {    [ add the tree poster    add.to.pic(vw.Posters, 0, 1, 48, 121, 6, 6);    set(fTreePoster);    }    [ horizon art not needed anymore (this also discards the  [ poster view)  discard.view(vw.SkylineArt);    [ load views used in the room  load.view(vw.JerrodNY);  load.view(vw.Gate);  load.view(vw.MrQuail);  load.view(vw.NeighborRake);  load.view(vw.Leonard);  load.view(vw.LeonardWindow);  load.view(vw.LeonardWindow2);  load.view(vw.Agent);  load.view(vw.StmshipMed);    [ load sounds for various effects in the room  load.sound(s.BadNews);  load.sound(s.AddToScore);  load.sound(s.UhOh);    [ add and position steamship, if it's visible  vTmpShipY = 49;  if (SteamshipXR > 0 && SteamshipXR < 107)    {    animate.obj(oSteamship);    set.view(oSteamship, vw.StmshipMed);    set.loop(oSteamship, 3);    fix.loop(oSteamship);    set.priority(oSteamship, 4);    position.v(oSteamship, SteamshipXR, vTmpShipY);    draw(oSteamship);    step.time(oSteamship, StmShipStep);    move.obj(oSteamship, 106, 49, 1, fShipMoved);    set(fShowShip);    }      [ pedestrian, can be one of three different people  animate.obj(oPedestrian);  [ set status to indicate no pedestrian visible  vPedStatus = 10;    [ add the gate in front of Leonard's house  animate.obj(oGate);  set.view(oGate, vw.Gate);  set.cel(oGate, 0);  ignore.blocks(oGate);  ignore.objs(oGate);  position(oGate, 8, 129);  draw(oGate);  stop.update(oGate);    [ Jerrod, in his normal Brooklyn attire  animate.obj(ego);  set.view(ego, vw.JerrodNY);    [ if coming from another screen, adjust postion to account  [ for change in perspective  if (posn(ego, 39, 35, 72, 40))    {    position(ego, 71, 73);    }  if (posn(ego, 73, 35, 100, 40))    {    position(ego, 84, 73);    }  if (posn(ego, 101, 35, 115, 40))    {    position(ego, 92, 73);    }  if (posn(ego, 0, 130, 5, 132))    {    position(ego, 1, 133);    }  [ draw Jerrod on screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if an offer is made while the rush is NOT public, but now[ the rush flag is setif (isset(BuyingLow) && isset(RushIsPublic))  {  [ temporarily turn OFF the rush flag; otherwise the  [ transaction would start with low prices, then conclude  [ with high prices  reset(RushIsPublic);  }  [ if pedestrian is not visible  if (vPedStatus > 9)  {  [ there is a random chance he might reappear  random(20, 100, vPedStatus);  [ a one in 80 chance  if (vPedStatus == 77)    {    [ choose one of three pedestrians to show    random(0, 2, vPedStatus);    if (vPedStatus == 0)      {      set.view(oPedestrian, vw.NeighborRake);      }    if (vPedStatus == 1)      {      set.view(oPedestrian, vw.MrQuail);      }    if (vPedStatus == 2)      {      set.view(oPedestrian, vw.Agent);      }    set.loop(oPedestrian, 0);    position(oPedestrian, 0, 154);    draw(oPedestrian);    if (!isset(SeenBoatTicketFlyer))      {      [ if Jerrod hasn't seen a sign about Leonard's ticket      [ sales, pedestrian move all the way to the right      move.obj(oPedestrian, 97, 154, 1, fPedMoved);      }    else      {      [ if Jerrod has seen the sign then the pedestrian only      [ moves to the corner of Leonard's fence      [       move.obj(oPedestrian, 46, 154, 1, fPedMoved);      }    [ set status to show pedestrian has just showed up    vPedStatus = 3;    }  }  [ after pedestrian has showed up and moved to target spotif (isset(fPedMoved) && vPedStatus == 3)  {  [ he moves back to left edge of screen  reset(fPedMoved);  move.obj(oPedestrian, 0, 154, 1, fPedMoved);  vPedStatus = 4;  }  [ when pedestrian returns to left edge of screen if (isset(fPedMoved) && vPedStatus == 4)  {  [ he leaves (erase him)  reset(fPedMoved);  vPedStatus = 10;  erase(oPedestrian);  }  [ if pedestrian is blocked for any reason he stops cycling[ until he starts moving again[ get current positionget.posn(oPedestrian, vPedX, vPedY);[ compare current position to previous position; if it has[ not changedif (OldObj1X == vPedX && OldObj1Y == vPedY)  {  [ stop cycling   stop.cycling(oPedestrian);  }else  {  [ otherwise, cycle pedestrian while he moves  start.cycling(oPedestrian);  }[ save pedestrian position for next cycleOldObj1X = vPedX;OldObj1Y = vPedY;[ if steamship needs be shown, but isn't yetif (SteamshipXR > 0 && SteamshipXR < 107 && !isset(fShowShip))  {  [ add the ship to the screen  animate.obj(oSteamship);  set.view(oSteamship, vw.StmshipMed);  set.loop(oSteamship, 3);  fix.loop(oSteamship);  set.priority(oSteamship, 4);  position.v(oSteamship, SteamshipXR, vTmpShipY);  draw(oSteamship);  step.time(oSteamship, StmShipStep);  move.obj(oSteamship, 106, 49, 1, fShipMoved);  set(fShowShip);  }  [ when ship reaches its destination,if (isset(fShipMoved))  {  [ remove it from the screen  reset(fShipMoved);  erase(oSteamship);  }  [ if Jerrod is by the steps leading up to the gate/path on[ right side of the streetif (posn(ego, 105, 83, 125, 111))  {  [ if Jerrod is on an alarm line  if (isset(egoHitSpecial))    {    [ if moving up-left or down-left    if ((egoDir == UP_LEFT || egoDir == DOWN_LEFT))      {      [ change to just LEFT      egoDir = LEFT;      }    [ if moving left    if (egoDir == LEFT)      {      [ bump Jerrod down one pixel      TmpX = 0;      TmpY = 1;      reposition(ego, TmpX, TmpY);      }    [ if moving up-right or down-right    if ((egoDir == UP_RIGHT || egoDir == DOWN_RIGHT))      {      [ change to just RIGHT      egoDir = RIGHT;      }    [ if moving right    if (egoDir == RIGHT)      {      [ bump Jerrod up one pixel      TmpX = 0;      TmpY = -1; [ 255;      reposition(ego, TmpX, TmpY);      }    }  }  [ if in front of Leonard's house but flag is not setif (posn(ego, 1, 90, 46, 167) && !isset(fNearHouse))  {  [ Jerrod is by Leonard's house  set(fNearHouse);  }[ if NOT in front of Leonard's house and flag is setif (!posn(ego, 1, 90, 46, 167) && isset(fNearHouse))  {  [ Jerrod is NOT by Leonard's house  reset(fNearHouse);  }  [ if Leonard is not visible: if (vLeonardStatus == L_NO_LEONARD)  {  random(0, 100, vRndNum);  [ one in 100 chance he shows up  if (vRndNum == 25)    {    vLeonardStatus = L_BEGIN;    }  }[ if Leonard is beginning his sequence, and Jerrod is near[ Leonard's house and has seen the flyerif (vLeonardStatus == L_BEGIN &&     isset(fNearHouse) &&     isset(SeenBoatTicketFlyer))  {  random(0, 1, vRndDir);  [ choose a random direction  if (vRndDir == 0)    {    position(oLeonard, 26, 65);    }  if (vRndDir == 1)    {    position(oLeonard, 2, 65);    }  [ animate Leonard and have him walk in front of window  animate.obj(oLeonard);  set.view(oLeonard, vw.LeonardWindow);  set.priority(oLeonard, 5);  draw(oLeonard);  move.obj(oLeonard, 15, 65, 1, fLenMoved);  start.cycling(oLeonard);  [ Leonard starts walking past window  vLeonardStatus = L_WALK_WND;  }[ if Leonard is beginning his sequence, and Jerrod is near[ Leonard's house, but Jerrod has NOT seen the flyerif (vLeonardStatus == L_BEGIN &&     isset(fNearHouse) &&     !isset(SeenBoatTicketFlyer))  {  [ change flag to indicate Jerrod is not near the house  [ (which will trigger next if statement)  reset(fNearHouse);  }[ if Leonard is beginning his sequence, and Jerrod is NOT[ near the houseif (vLeonardStatus == L_BEGIN && !isset(fNearHouse))  {  [ four start locations/directions:   [   - left/right in upper window, or  [   - left/right in lower window  random(1, 4, vTmpVal);  [ change status to indicate Leonard is moving without any  [ other follow on actions required  vLeonardStatus = L_WND_NOT;    [ animate Leonard and set correct priority  animate.obj(oLeonard);  set.priority(oLeonard, 5);    [ choose view, loation and direction based on the  chosen  [ random value  if (vTmpVal == 1)    {    [ upper window, moving right to left    set.view(oLeonard, vw.LeonardWindow);    position(oLeonard, 26, 65);    draw(oLeonard);    move.obj(oLeonard, 2, 65, 1, fLenMoved);    start.cycling(oLeonard);    }  if (vTmpVal == 2)    {    [ lower window, right to left    set.view(oLeonard, vw.LeonardWindow2);    position(oLeonard, 29, 93);    draw(oLeonard);    move.obj(oLeonard, 9, 93, 1, fLenMoved);    start.cycling(oLeonard);    }  if (vTmpVal == 3)    {    [ lower window, left to right    set.view(oLeonard, vw.LeonardWindow2);    position(oLeonard, 9, 93);    draw(oLeonard);    move.obj(oLeonard, 29, 93, 1, fLenMoved);    start.cycling(oLeonard);    }  if (vTmpVal == 4)    {    [ upper window, left to right    set.view(oLeonard, vw.LeonardWindow);    position(oLeonard, 2, 65);    draw(oLeonard);    move.obj(oLeonard, 26, 65, 1, fLenMoved);    start.cycling(oLeonard);    }  }[ once Leonard finishes moving to window spotif (vLeonardStatus == L_WALK_WND && isset(fLenMoved))  {  [ set status to waving  vLeonardStatus = L_WAVE1;  reset(fLenMoved);  [ show waving loop  set.loop(oLeonard, 2);  [ adjust position slightly  TmpX = -2; [ 254;  TmpY = 0;  reposition(oLeonard, TmpX, TmpY);  end.of.loop(oLeonard, fLenMoved);  }  [ whend done waving, have him wave again (by looping[ backwards)if (vLeonardStatus == L_WAVE1 && isset(fLenMoved))  {  vLeonardStatus = L_WAVE2;  reset(fLenMoved);  reverse.loop(oLeonard, fLenMoved);  }  [ once done waving, Leonard leaves window to left he's on[ his way outside to talk to Jerrodif (vLeonardStatus == L_WAVE2 && isset(fLenMoved))  {  vLeonardStatus = L_LEAVE_WND;  reset(fLenMoved);  move.obj(oLeonard, 2, 65, 1, fLenMoved);  start.cycling(oLeonard);  }  [ after leaving view of window, he disappears as he makes[ his way to front doorif (vLeonardStatus == L_LEAVE_WND && isset(fLenMoved))  {  vLeonardStatus = L_TO_FRONT;  reset(fLenMoved);  erase(oLeonard);  }  [ while walking to the front doorif (vLeonardStatus == L_TO_FRONT)  {  [ increment timer  ++vTimer;  [ after 45 cycles  if (vTimer == 45)    {    vTimer = 0;    [ now Leonard is outside    vLeonardStatus = L_OUTSIDE;    [ change to normal view of Leonard    set.view(oLeonard, vw.Leonard);    position(oLeonard, 2, 98);    release.priority(oLeonard);    draw(oLeonard);    move.obj(oLeonard, 14, 103, 1, fLenMoved);    start.cycling(oLeonard);    }  }  [ after reaching first point on way to gateif (vLeonardStatus == L_OUTSIDE && isset(fLenMoved))  {  [ adjust target location and keep moving  reset(fLenMoved);  vLeonardStatus = L_TO_GATE;  move.obj(oLeonard, 14, 113, 1, fLenMoved);  }  [ after reaching gateif (vLeonardStatus == L_TO_GATE && isset(fLenMoved))  {  [ Leonard stops and opens gate  vLeonardStatus = L_AT_GATE;  reset(fLenMoved);  stop.motion(ego);  start.motion(ego);  stop.cycling(oLeonard);  start.update(oGate);  end.of.loop(oGate, fLenMoved);  set(fGateOpen);  }  [ when gate finishes opening, Leonard greets Jerrodif (vLeonardStatus == L_AT_GATE && isset(fLenMoved))  {  vLeonardStatus = L_TALKING;  reset(fLenMoved);  stop.update(oGate);  stop.update(oLeonard);  print.at("Leonard says, \"I've been getting some business from my poster in "           "the warehouse, Jerrod, what can I help you with today?\"", 8, 15, 15);  [ begin conversation between Leonard and Jerrod  vConvStatus = START_CONV;  ignore.blocks(ego);  }  [ if talking to Jerrod, but Jerrod leaves areaif (vLeonardStatus == L_TALKING && !isset(fNearHouse))  {  [ Leonard closes the gate, and will then go back inside  vLeonardStatus = L_CLOSE_GATE;  [ close the gate  start.update(oGate);  reverse.loop(oGate, fLenMoved);  observe.blocks(ego);  [ close Leonard's dialog window  close.window();  [ make sure input character is restored  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  [ if Leonard is done walking past window with no intention[ of coming outif (vLeonardStatus == L_WND_NOT && isset(fLenMoved))  {  [ set his status to 'gone' and erase him  reset(fLenMoved);  vLeonardStatus = L_NO_LEONARD;  erase(oLeonard);  }  [ once gate closesif (vLeonardStatus == L_CLOSE_GATE && isset(fLenMoved))  {  [ Leonard begins moving back inside  vLeonardStatus = L_GO_BACK;  reset(fLenMoved);  reset(fGateOpen);  stop.update(oGate);  start.update(oLeonard);  move.obj(oLeonard, 14, 103, 1, fLenMoved);  start.cycling(oLeonard);  [ close the conversation  vConvStatus = NO_CONVERSATION;  }  [ after reaching first point on way backif (vLeonardStatus == L_GO_BACK && isset(fLenMoved))  {  [move to last point on edge of screen  vLeonardStatus = L_LEAVING;  reset(fLenMoved);  move.obj(oLeonard, 2, 98, 1, fLenMoved);  }  [ once back insideif (vLeonardStatus == L_LEAVING && isset(fLenMoved))  {  [ Leonard disappears  vLeonardStatus = L_NO_LEONARD;  reset(fLenMoved);  erase(oLeonard);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 68, 72, 92, 72))  {  [ (not necessary to do this; the new.room command will  [ just get rid of the object anyway)  release.loop(oSteamship);  [ headed 'north'; move up  new.room(rm.WaterSt_Right); [ ##LE001##  }  if (edgeEgoHit == LEFT_EDGE)  {  new.room(rm.JerrodsHouse); [ ##LE002##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ always reset prompt to normal after any text is inputset.string(inputPrompt, "%g69");accept.input();inputLength = 38;[ look boatif (said("examine", "boat"))  {  if (SteamshipXR > 0 && SteamshipXR < 17)    {    [ the ship is hidden by buildings    print("The ship is just out of sight.");    goto(Done);    }  if (SteamshipXR > 18 && SteamshipXR < 107)    {    print("There goes the ship to California!");    goto(Done);    }  print("The ship is not here.");  }  [ look houseif ((said("examine", "home") ||     said("examine", "leonard", "home")))  {  print("This house on the corner is Leonard's house.");  }  [ look treeif ((said("examine", "forest") ||     said("examine", "maple", "forest")))  {  print("These maple trees dot the Brooklyn landscape.");  }  [ look grassif (said("examine", "grass"))  {  print("Each house in the neighborhood has a fine yard.");  }[ look riverif ((said("examine", "creek") ||     said("examine", "water") ||     said("examine", "east river") ||     said("examine", "ocean")))  {  print("You see the East River.");  }  [ look New Yorkif (said("examine", "new york"))  {  print("Across the East River lies New York City.");  }  [ look roadif (said("examine", "path"))  {  [ response depends on Jerrod's current location  if (posn(ego, 50, 50, 115, 121))    {    [ on the north/south street    print("At this moment you are on Washington Street.");    }  if (posn(ego, 52, 122, 130, 167))    {    [ at the intersection    print("This is the intersection of Washington and Front Streets.");    }  if (posn(ego, 0, 120, 51, 167))    {    [ on the east/west street    print("Right now you're on Front Street which, like the other streets in "          "town, is made of cobblestones.");    }  }  [ look fenceif (said("examine", "fence"))  {  print("These wrought-iron fences add a touch of class to the neighborhood.");  }  [ look gateif (said("examine", "gate"))  {  print("There is nothing unusual about this gate.");  }  [ unlock gate/open gateif ((said("unlock", "gate") ||     said("use", "house key") ||     said("open", "gate")))  {  [ if the gate is open  if (isset(fGateOpen))    {    print("The gate is already open!");    }  else    {    [ if by Leonard's gate, or along the fences on the    [ north/south street    if ((posn(ego, 1, 90, 46, 167) ||         posn(ego, 76, 20, 150, 125)))      {      if (posn(ego, 1, 90, 46, 167))        {        [ Leonard's gate can be opened, but only by Leonard        print("Only the owner of this house can open this gate.");        }      else        {        [ none of the other gates can be opened        print("This gate cannot be opened.");        }      }    else      {      print("You can't do that from here!");      }    }  }  [ ticketif (said("ticket"))  {  [ just saying 'ticket' is not useful...  print("What about a ticket?");  }  [ get ticket to Californiaif ((said("go", "boat") ||     said("go", "calif") ||     said("go", "west") ||     said("ride", "boat") ||     said("ride", "calif") ||     said("ride", "boat", "calif") ||     said("acquire", "boat") ||     said("acquire", "boat", "calif") ||     said("want", "ticket") ||     said("want", "boat", "ticket") ||     said("apply", "boat") ||     said("apply", "passage") ||     said("apply", "boat", "passage") ||     said("apply", "passage", "boat") ||     said("apply", "passage", "calif") ||     said("looked at", "billboard") ||     said("looked at", "billboard", "warehouse") ||     said("looked at", "warehouse", "billboard") ||     said("ask", "ticket") ||     said("ask", "boat", "ticket") ||     said("ask", "ticket", "boat") ||     said("acquire", "ticket") ||     said("acquire", "ticket", "boat") ||     said("acquire", "boat", "ticket") ||     said("buy", "ticket") ||     said("buy", "ticket", "boat") ||     said("buy", "passage") ||     said("buy", "boat", "passage") ||     said("buy", "passage", "boat") ||     said("pay") ||     said("pay", "boy") ||     said("pay", "bucks") ||     said("pay", "bucks", "boy") ||     said("pay", "boy", "bucks") ||     said("pay", "ticket") ||     said("pay", "boy", "ticket") ||     said("contribute", "bucks") ||     said("contribute", "boy", "bucks") ||     said("contribute", "bucks", "boy")))  {  [ if Leonard is not around, or is inside by the window  if ((vLeonardStatus == L_NO_LEONARD ||       vLeonardStatus == L_BEGIN ||       vLeonardStatus == L_WALK_WND ||       vLeonardStatus == L_WAVE1 ||       vLeonardStatus == L_WAVE2 ||       vLeonardStatus == L_LEAVE_WND ||       vLeonardStatus == L_TO_FRONT ||       vLeonardStatus == L_WND_NOT))    {    print("There is no one around here listening to you.");    }        [ if Leonard is just getting outside, but not done opening  [ gate  if ((vLeonardStatus == L_OUTSIDE ||       vLeonardStatus == L_TO_GATE ||       vLeonardStatus == L_AT_GATE))    {    print("Give this poor man a chance to catch his breath. He looks exhausted!");    }      [ if Leonard is outside, talking with Jerrod  if (vLeonardStatus == L_TALKING)    {    [ has he started a conversation?    if (vConvStatus > NO_CONVERSATION && vConvStatus < WANT_PANAMA)      {      [ Leonard offers a ticket      vConvStatus = OFFER_TICKET;            [ cost depends on whether rush has been made public            [ if rush is public      if (isset(RushIsPublic))        {        [ ticket costs are quoted, but are too expensive;        [ Jerrod can't actually purchase one because the        [ maximum amount of cash Jerrod will ever have is        [ $1065        print.at("\"Everyone is doing that these days, Jerrod, so I've had to "                 "raise the cost of passage.\"", 8, 15, 24);        print.at("\"But in case you're interested, the routes to California "                 "are: around Cape Horn, or by way of Panama.\nThe prices "                 "are:\nPanama route $2300\nCape route $1800\nAre you "                 "interested in a ticket?\"", 8, 15, 24);        }      else        {        [ if gold rush is not announced, Jerrod CAN afford        [ a ticket on the ship;        [ to avoid having ticket price change in middle of        [ transaction set the 'buylow' flag; this prevents        [ the gold rush from being made public until after        [ the transaction is finished        set(BuyingLow);        print.at("\"You'll never find a cheaper time to travel, Jerrod! "                 "And...\"", 8, 15, 24);        print.at("\"...there is room on the ship! The routes to California are: "                 "around Cape Horn, or by way of Panama.\nThe prices "                 "are:\nPanama route $900\nCape route $650\nAre you interested "                 "in a ticket?\"", 8, 15, 24);        }      [ change prompt to get a 'yes' or 'no' from Jerrod      set.string(inputPrompt, "yes or no: %g69");      accept.input();      inputLength = 27;      }        [ if Jerrod wants a Panama ticket    if (vConvStatus == WANT_PANAMA)      {      [ costs are cheaper if rush is NOT public      if (!isset(RushIsPublic))        {        [ Jerrod needs a at least $900; cash level must be        [ 80 or 90        if (CurrentCash < 80)          {          print.at("\"I'm sorry, Jerrod, but there isn't enough money here to "                   "get passage on the ship.\"", 8, 15, 15);          sound(s.BadNews, fSndDone);          vConvStatus = NO_CONVERSATION;                    [ restore input prompt          set.string(inputPrompt, "%g69");          accept.input();          inputLength = 38;                    [ transaction has ended; reset this flag so gold rush can          [ happen when the time comes          reset(BuyingLow);          }                [ not sure why they didn't use an 'else' here; this        [ code works the same though                [ if Jerrod does have the cash        if (CurrentCash > 70)          {          [ if Jerrod hasn't bought a ticket yet,          if (TicketChoice == NO_TICKET)            {            print.at("\"Thanks, Jerrod. Here's your ticket. I hope you strike "                     "it rich!", 8, 15, 15);            TicketChoice = TKT_PANAMA;            get("Panama ticket");            [ adjust score            currentScore  += 9;            [ Panama route has a few more points that can be            [ earned            maxScore = 255;            [ adjust cash to account for spent money            call(lgc.AdjustCash);            sound(s.AddToScore, fSndDone);                        [ reset conversation status            vConvStatus = START_CONV;            [ restore input prompt            set.string(inputPrompt, "%g69");            accept.input();            inputLength = 38;            [ transaction has ended; reset this flag so gold            [ rush can happen when the time comes            reset(BuyingLow);            }          else            {            print.at("Leonard says, \"You already have a ticket, Jerrod. You "                     "don't need another one.\"", 8, 15, 15);            [ transaction has ended; reset this flag so gold            [ rush can happen when the time comes            reset(BuyingLow);            }          }        }      else        {        [ if rush is public, Jerrod can't afford either        [ ticket - programmers decided to use an 'if' test        [ here, but it's not really needed; cash level will        [ never be greater than 90        if (CurrentCash < 91)          {          print.at("\"I'm sorry, Jerrod, but there isn't enough money here to "                   "get passage on the ship.\"", 8, 15, 15);          sound(s.BadNews, fSndDone);                    [ reset conversation status          vConvStatus = START_CONV;          [ restore input prompt          set.string(inputPrompt, "%g69");          accept.input();          inputLength = 38;          }        }      }          [ if Jerrod wants a Cape Horn ticket    if (vConvStatus == WANT_HORN)      {      [ if rush is not public, costs are cheaper      if (!isset(RushIsPublic))        {        [ Jerrod needs at least $650, which corresponds to a         [ cash level of 50        if (CurrentCash < 50)          {          print.at("\"I'm sorry, Jerrod, but there isn't enough money here to "                   "get passage on the ship.\"", 8, 15, 15);          sound(s.BadNews, fSndDone);          vConvStatus = START_CONV;          set.string(inputPrompt, "%g69");          accept.input();          inputLength = 38;          [ transaction has ended; reset this flag so gold          [ rush can happen when the time comes          reset(BuyingLow);          }                  [ not sure why they didn't use an 'else' here; this        [ code works the same though                [ if Jerrod has enough cash,        if (CurrentCash > 40)          {          [ if Jerrod doesn't have a ticket yet,          if (TicketChoice == NO_TICKET)            {            print.at("\"Thanks, Jerrod. Here's your ticket. I hope you strike "                     "it rich!", 8, 15, 15);            TicketChoice = TKT_CAPE;            get("Cape Horn ticket");            [ adjust score            currentScore  += 9;            [ adjust cash to account for spent money            call(lgc.AdjustCash);            sound(s.AddToScore, fSndDone);            [ reset conversation status            vConvStatus = START_CONV;            [ restore input prompt            set.string(inputPrompt, "%g69");            accept.input();            inputLength = 38;            [ transaction has ended; reset this flag so gold            [ rush can happen when the time comes            reset(BuyingLow);            }          else            {            print.at("Leonard says, \"You already have a ticket, Jerrod. You "                     "don't need another one.\"", 8, 15, 15);            [ transaction has ended; reset this flag so gold            [ rush can happen when the time comes            reset(BuyingLow);            }          }        }      else        {        [ if rush is public, Jerrod can't afford either        [ ticket - programmers decided to use an 'if' test        [ here, but it's not really needed; cash level will        [ never be greater than 90        if (CurrentCash < 91)          {          print.at("\"I'm sorry, Jerrod, but there isn't enough money here to "                   "get passage on the ship.\"", 8, 15, 15);          sound(s.BadNews, fSndDone);          [ reset conversation status          vConvStatus = START_CONV;          [ restore input prompt          set.string(inputPrompt, "%g69");          accept.input();          inputLength = 38;          }        }      }    }      [ if Leonard is going back inside  if ((vLeonardStatus == L_CLOSE_GATE ||       vLeonardStatus == L_GO_BACK ||       vLeonardStatus == L_LEAVING))    {    print("Leonard is going back in his house.");    }  }  [ yesif (said("y"))  {  [ if responding to Leonard's initial offer  if (vConvStatus == OFFER_TICKET)    {    [ change status to waiting for route choice    vConvStatus = CHOOSE_ROUTE;    print.at("\"Which route are you interested in, Cape Horn or Panama?\"", 8, 15, 15);    [ change input prompt    set.string(inputPrompt, "Cape or panama %g69");    accept.input();    inputLength = 21;    }      [ if offering a Cape Horn ticket  if (vConvStatus == OFFER_HORN)    {    [ change status to agreed to buy Cape Horn ticket    vConvStatus = WANT_HORN;    if (!isset(RushIsPublic))      {      print.at("\"That will be $650, in cash, please.\"", 8, 15, 15);      }    else      {      print.at("\"That will be $1800, in cash, please.\"", 8, 15, 15);      }    }      [ if offering a Panama ticket  if (vConvStatus == OFFER_PANAMA)    {    [ change status to agreed to buy Panama ticket    vConvStatus = WANT_PANAMA;    if (!isset(RushIsPublic))      {      print.at("\"That will be $900, in cash, please.\"", 8, 15, 15);      }    else      {      print.at("\"That will be $2300, in cash, please.\"", 8, 15, 15);      }    }  }  [ noif (said("n"))  {  [ only makes sense if Jerrod is conversing with Leonard  if (vConvStatus == OFFER_TICKET)    {    [ change conversation status back to beginning    vConvStatus = START_CONV;    print.at("\"Okay Jerrod, I'll talk to you later!\"", 8, 15, 12);    [ restore input prompt    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    [ transaction has ended; reset this flag so gold rush    [ can happen when the time comes    reset(BuyingLow);    }      [ using an 'or' test here would have been more efficient  [ to cover both offer statuses    [ if offering horn ticket  if (vConvStatus == OFFER_HORN)    {    [ reset converation status    vConvStatus = START_CONV;    print.at("\"Okay Jerrod, I'll talk to you later!\"", 8, 15, 15);    [ restore input prompt    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    [ transaction has ended; reset this flag so gold rush    [ can happen when the time comes    reset(BuyingLow);    }      [ if offering panama ticket  if (vConvStatus == OFFER_PANAMA)    {    [ reset conversation status    vConvStatus = START_CONV;    print.at("\"Okay Jerrod, I'll talk to you later!\"", 8, 15, 15);    [ restore input prompt    set.string(inputPrompt, "%g69");    accept.input();    inputLength = 38;    [ transaction has ended; reset this flag so gold rush    [ can happen when the time comes    reset(BuyingLow);    }  }  [ cape/cape hornif (said("cape"))  {  [ if Leonard is waiting for choice of route  if (vConvStatus == CHOOSE_ROUTE)    {    [ offer Jerrod a Cape Horn route ticket    vConvStatus = OFFER_HORN;    if (!isset(RushIsPublic))      {      print.at("\"The cost of a trip to California by way of Cape Horn is $650. "               "Would you like to buy a ticket?\"", 8, 15, 15);      }    else      {      print.at("\"The cost of a trip to California via Cape Horn is $1800. "               "Would you like to buy a ticket?\"", 8, 15, 15);      }    [ change input prompt    set.string(inputPrompt, "yes or no: %g69");    accept.input();    inputLength = 27;    }  }  [ panamaif (said("isthmus"))  {  [ if Leonard is waiting for choice of route  if (vConvStatus == CHOOSE_ROUTE)    {    [ offer Jerrod a Panama route ticket    vConvStatus = OFFER_PANAMA;    if (!isset(RushIsPublic))      {      print.at("\"The cost of a trip to California by way of Panama is $900. "               "Would you like to buy a ticket?\"", 8, 15, 15);      }    else      {      print.at("\"The cost of a trip to California via Panama is $2300. Would "               "you like to buy a ticket?\"", 8, 15, 15);      }    [ change input prompt    set.string(inputPrompt, "yes or no: %g69");    accept.input();    inputLength = 27;    }  }  [ look postif ((said("examine", "post") || said("read", "post")))  {  print("This post marks the corner of Front and Washington Streets.");  [ it the poster is attached  if (isset(fTreePoster))    {    [ if Jerrod is by the post    if (posn(ego, 31, 133, 66, 154))      {      print("Fastest service to the \n   CALIFORNIA GOLD! \n   Inquire within!");      [ now Jerrod is aware of Leonard's ticket service      set(SeenBoatTicketFlyer);      }    }  }  [ look sign/read sign/read billboard/look billboardif ((said("examine", "sign") ||     said("examine", "billboard") ||     said("read", "sign") ||     said("read", "billboard") ||     said("read", "note")))  {  [ if poster is attached to sign post  if (isset(fTreePoster))    {    [ if Jerrod is by the post    if (posn(ego, 31, 133, 66, 154))      {      print("Fastest service to the \n   CALIFORNIA GOLD! \n   Inquire within!");      [ now Jerrod is aware of Leonard's ticket service      set(SeenBoatTicketFlyer);      }    else      {      print("You are unable to read the poster from here.");      }    }  else    {    print("There is no poster to read around here.");    }  }[ talk to manif ((said("speak", "boy") ||     said("speak")))  {  [ response depends on whether or not someone is close  [ enough to Jerrod to converse with    [ if Leonard is not around, or inside not intending to  [ come out  if ((vLeonardStatus == L_NO_LEONARD ||       vLeonardStatus == L_BEGIN ||       vLeonardStatus == L_WND_NOT))    {    [ get distance to the pedestrian    distance(ego, oPedestrian, vPedDist);    [ use view number to determine identity of pedestrian    current.view(oPedestrian, vPedViewNum);        [ if pedestrian is not on screen (distance of 255 means    [ object is not on screen)    if (vPedDist == 255)      {      print("There is no one around.");      }    [ if on screen, but too far away    if (vPedDist < 255 && vPedDist > 39)      {      print("There is someone to talk to, but he isn't quite close enough.");      }    [ if near enough    if (vPedDist < 40)      {      if (vPedViewNum == vw.NeighborRake)        {        print("The new homeowner says, \"If I hadn't bought that house, I'd "              "probably be on my way to California right now!\"");        }      if (vPedViewNum == vw.MrQuail)        {        print("You say to Mr. Quail, \"I've been missing Jake a lot lately and "              "hoping we get back together someday.\"");        print("Mr. Quail replies, \"So have I, Jerrod. I'm sure you'll meet him "              "again someday.\"");        }      if (vPedViewNum == vw.Agent)        {        print("This real estate man walks by without speaking. Just murmuring "              "and mumbling to himself about finances.");        }      }    }  else    {    [ otherwise, Leonard is around; if Leonard is making his    [ way outside    if ((vLeonardStatus == L_WALK_WND ||         vLeonardStatus == L_WAVE1 ||         vLeonardStatus == L_WAVE2 ||         vLeonardStatus == L_LEAVE_WND ||         vLeonardStatus == L_TO_FRONT))      {      print("Leonard will be outside soon.");      }    else      {      [ otherwise, Leonard is outside; talk to him      [ regardless of location of the pedestrian      print("Tell the man what's on your mind.");      }    }  }  [ talk to Leonardif (said("speak", "leonard"))  {  [ if Leonard is not around, or inside not intending to  [ come out  if ((vLeonardStatus == L_NO_LEONARD ||       vLeonardStatus == L_BEGIN ||       vLeonardStatus == L_WALK_WND))    {    print("Leonard can't hear you.");    }  else    {    [ if Leonard is on his way outside,    if ((vLeonardStatus == L_WALK_WND ||         vLeonardStatus == L_WAVE1 ||         vLeonardStatus == L_WAVE2 ||         vLeonardStatus == L_LEAVE_WND ||         vLeonardStatus == L_TO_FRONT))      {      print("Leonard will be outside soon.");      }    else      {      [ otherwise, he's here; talk to him      print("Tell the man what's on your mind.");      }    }  }  [ look manif (said("examine", "boy"))  {  [ if Leonard is not present, or is inside not intending to  [ come out  if ((vLeonardStatus == L_NO_LEONARD ||       vLeonardStatus == L_BEGIN ||       vLeonardStatus == L_WND_NOT))    {    [ get distance to pedestrian    distance(ego, oPedestrian, vPedDist);    [ use current view to determine identity of pedestrian    current.view(oPedestrian, vPedViewNum);        [ if pedestrian is not on screen (distance of 255 means    [ object is not on screen)    if (vPedDist == 255)      {      print("Leonard is pacing back and forth past the window.");      }    [ if pedestrian is present, but too far away    if (vPedDist < 255 && vPedDist > 59)      {      print("There is someone walking down the street, but you can't make out "            "the face from here.");      }    [ if close enough, describe the pedestrian    if (vPedDist < 60)      {      if (vPedViewNum == vw.NeighborRake)        {        print("That man thinks the only thing on earth of any worth is his "              "house!");        }      if (vPedViewNum == vw.MrQuail)        {        print("Mr. Quail has been like a father to you. He was there for you "              "when times were tough.");        }      if (vPedViewNum == vw.Agent)        {        print("Here comes that real estate man with money on his mind!");        }      }    }  else    {    [ otherwise, Leonared is on screen; if Leonard is on his    [ way outside    if ((vLeonardStatus == L_WALK_WND ||         vLeonardStatus == L_WAVE1 ||         vLeonardStatus == L_WAVE2 ||         vLeonardStatus == L_LEAVE_WND ||         vLeonardStatus == L_TO_FRONT))      {      print("Leonard will be outside soon.");      }    else      {      print("Leonard is outside for a breath of fresh air.");      }    }  }  [ look Leonardif ((said("examine", "leonard") ||     said("examine", "leonard", "glass") ||     said("examine", "leonard", "in", "glass") ||     said("examine", "leonard", "home") ||     said("examine", "leonard", "in", "home") ||     said("examine", "boy", "glass") ||     said("examine", "boy", "in", "glass") ||     said("examine", "boy", "home") ||     said("examine", "boy", "in", "home") ||     said("examine", "glass") ||     said("examine", "in", "glass") ||     said("examine", "in", "home")))  {  [ if Leonard is not present or is inside, not intending to  [ come out  if ((vLeonardStatus == L_NO_LEONARD ||       vLeonardStatus == L_BEGIN ||       vLeonardStatus == L_WND_NOT))    {    print("Leonard is pacing back and forth past the window.");    }  else    {    [ if Leonard is on his way outside    if ((vLeonardStatus == L_WALK_WND ||         vLeonardStatus == L_WAVE1 ||         vLeonardStatus == L_WAVE2 ||         vLeonardStatus == L_LEAVE_WND ||         vLeonardStatus == L_TO_FRONT))      {      print("Leonard will be outside soon.");      }    else      {      print("Leonard is outside for a breath of fresh air.");      }    }  }  [ look sidewalkif ((said("examine", "sidewalk") ||     said("examine", "boardwalk")))  {  print("The sidewalks are made of rock.");  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("Here is another fine house in the residential area.");  }  [ look number/look addressif ((said("examine", "number") ||     said("examine", "address")))  {  [ if near the post  if (posn(ego, 0, 49, 159, 167))    {    print("You can see the number twelve on the post in front of the house!");    }  else    {    print("You can't do that from here!");    }  }  [ thank youif ((said("thank", "you") ||     said("thank") ||     said("thank", "boy")))  {  [ always be polite  print("You're welcome!");  }  [ ring bellif (said("ring", "bell"))  {  print("There is no bell here!");  }  [ look streetlampif (said("examine", "lamp"))  {  print("Streetlights line Washington Street.");  }  Done:[ if player enters an unknown wordif (unknownWordNum > 0)  {  [ reset prompt to normal (this isn't necessary;   [ the prompt gets reset whenever ANY input is   [ entered by the player, so by the time this code  [ block is reached, it's already set to normal)  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "There goes the ship to California!"#message 2 "The ship is just out of sight."#message 3 "This house on the corner is Leonard's house."#message 4 "These maple trees dot the Brooklyn landscape."#message 5 "Each house in the neighborhood has a fine yard."#message 6 "You see the East River."#message 7 "Across the East River lies New York City."#message 8 "At this moment you are on Washington Street."#message 9 "This is the intersection of Washington and Front Streets."#message 10 "Right now you're on Front Street which, like the other streets in town, is made of cobblestones."#message 11 "These wrought-iron fences add a touch of class to the neighborhood."#message 14 "Leonard says, \"I've been getting some business from my poster in the warehouse, Jerrod, what can I help you with today?\""#message 15 "There is no one around here listening to you."#message 16 "Give this poor man a chance to catch his breath. He looks exhausted!"#message 17 "\"...there is room on the ship! The routes to California are: around Cape Horn, or by way of Panama.\nThe prices are:\nPanama route $900\nCape route $650\nAre you interested in a ticket?\""#message 18 "\"But in case you're interested, the routes to California are: around Cape Horn, or by way of Panama.\nThe prices are:\nPanama route $2300\nCape route $1800\nAre you interested in a ticket?\""#message 19 "Leonard is going back in his house."#message 20 "\"Which route are you interested in, Cape Horn or Panama?\""#message 21 "\"Okay Jerrod, I'll talk to you later!\""#message 22 "\"The cost of a trip to California by way of Cape Horn is $650. Would you like to buy a ticket?\""#message 23 "\"The cost of a trip to California via Cape Horn is $1800. Would you like to buy a ticket?\""#message 24 "\"The cost of a trip to California by way of Panama is $900. Would you like to buy a ticket?\""#message 25 "\"The cost of a trip to California via Panama is $2300. Would you like to buy a ticket?\""#message 26 "\"That will be $650, in cash, please.\""#message 27 "\"That will be $1800, in cash, please.\""#message 28 "\"That will be $900, in cash, please.\""#message 29 "\"That will be $2300, in cash, please.\""#message 30 "\"I'm sorry, Jerrod, but there isn't enough money here to get passage on the ship.\""#message 31 "\"Thanks, Jerrod. Here's your ticket. I hope you strike it rich!"#message 32 "Fastest service to the \n   CALIFORNIA GOLD! \n   Inquire within!"#message 33 "You are unable to read the poster from here."#message 34 "There is no poster to read around here."#message 36 "%g69"#message 37 "yes or no: %g69"#message 38 "Cape or panama %g69"#message 40 "If you aren't talking to a man, you will be shortly!"#message 41 "There is no one around."#message 42 "There is someone to talk to, but he isn't quite close enough."#message 43 "The new homeowner says, \"If I hadn't bought that house, I'd probably be on my way to California right now!\""#message 44 "You say, \"Thanks, but no thanks. My yard looks fine.\""#message 45 "You say to Mr. Quail, \"I've been missing Jake a lot lately and hoping we get back together someday.\""#message 46 "This real estate man walks by without speaking. Just murmuring and mumbling to himself about finances."#message 50 "That man thinks the only thing on earth of any worth is his house!"#message 51 "Here comes that real estate man with money on his mind!"#message 52 "There is someone walking down the street, but you can't make out the face from here."#message 53 "Mr. Quail has been like a father to you. He was there for you when times were tough."#message 58 "The sidewalks are made of rock."#message 59 "There is nothing unusual about this gate."#message 60 "The gate is already open!"#message 61 "You can't do that from here!"#message 62 "Here is another fine house in the residential area."#message 63 "You can see the number twelve on the post in front of the house!"#message 64 "You're welcome!"#message 66 "There is no bell here!"#message 67 "Streetlights line Washington Street."#message 68 "What about a ticket?"#message 70 "This post marks the corner of Front and Washington Streets."#message 71 "\"You'll never find a cheaper time to travel, Jerrod! And...\""#message 72 "\"Everyone is doing that these days, Jerrod, so I've had to raise the cost of passage.\""#message 73 "Leonard is pacing back and forth past the window."#message 74 "Leonard will be outside soon."#message 75 "Leonard is outside for a breath of fresh air."#message 76 "Tell the man what's on your mind."#message 77 "Leonard can't hear you."#message 78 "This gate cannot be opened."#message 79 "Only the owner of this house can open this gate."#message 80 "Mr. Quail replies, \"So have I, Jerrod. I'm sure you'll meet him again someday.\""#message 81 "Leonard says, \"You already have a ticket, Jerrod. You don't need another one.\""#message 82 "The ship is not here."