[***********************************************************[[ rm.StageOfficeInterior[[ This is where Jerrod can go to purchase a stagecoach [ ticket to Missouri as part of the overland trip to [ California [[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oTicketAgent                 o1#define vTmpVal                    v220#define vAgentStatus               v221  #define A_COUNTER             0  [ agent is at counter, ready to start moving  #define A_TO_STAIRS           1  [ agent is moving from start to bottom of stairs  #define A_GOING_UP            2  [ agent is going up the stairs  #define A_WAIT_STAIRS         3  [ agent is paused at top of stairs  #define A_GOING_DOWN          4  [ agent is coming down stairs  #define A_MOVING_RIGHT        5  [ agent is moving from start to random point to the right  #define A_WAIT_RIGHT          6  [ agent is paused at right of counter  #define A_GREETING           10  [ agent greets jerrod  #define A_RETURNING          11  [ agent is done helping, returning to start#define vRndNum                    v222#define vAgentTimer                v223#define vAgentY                    v224#define vAgentDist                 v225#define vConvStatus                v226  #define C_NONE                0  [ no conversation between agent and Jerrod  #define C_START               1  [ agent has greeted Jerrod, asking if he wants something  #define C_OFFER_TKT           2  [ agent has told Jerrod cost of ticket, asking for 'yes/no' confirmation  #define C_WANT_TKT            3  [ Jerrod has agreed (said 'yes'); still needs to pay  #define C_HAS_TKT             4  [ transaction complete; Jerrod has the ticket#define fAgentMoved                f220#define fSoundDone                 f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load picture for current room  load.pic(currentRoom);    [ load views used in this room  load.view(vw.BigJerrodNY);  load.view(vw.StageOfficeIntArt);  load.view(vw.TicketAgent);    [ load sounds used in the room  load.sound(s.BadNews);  load.sound(s.AddToScore);  [ this sound is loaded, but never used  load.sound(s.UhOh);    [ draw the room picture  draw.pic(currentRoom);  [ add detail art  add.to.pic(vw.StageOfficeIntArt, 0, 0, 106, 142, 13, 13);  add.to.pic(vw.StageOfficeIntArt, 0, 1, 115, 140, 13, 13);    [ ticket agent  animate.obj(oTicketAgent);  set.view(oTicketAgent, vw.TicketAgent);  [ agent starts at corner of counter near stairs  position(oTicketAgent, 36, 113);  draw(oTicketAgent);  [ set flag so agent will begin a new move sequence  set(fAgentMoved);    [ Jerrod uses the larger inside view  animate.obj(ego);  set.view(ego, vw.BigJerrodNY);  position(ego, 99, 153);  draw(ego);  [ large Jerrod takes bigger steps  vTmpVal = 2;  step.size(ego, vTmpVal);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if agent has made an offer to sell a ticket but is still[ waiting for a reply, and now the gold rushis publicif (isset(BuyingLow) && isset(RushIsPublic))  {  [ temporarily turn OFF the rush flag; otherwise the  [ transaction would start with low prices, then conclude  [ with high prices  reset(RushIsPublic);  }  [ if agent is as starting positionif (vAgentStatus == A_COUNTER && isset(fAgentMoved))  {  [ pick a random direction to move  random(0, 3, vRndNum);  if (vRndNum == 0)    {    [ one in four chance to move to bottom of stairs    vAgentStatus = A_TO_STAIRS;    move.obj(oTicketAgent, 36, 105, 2, fAgentMoved);    start.cycling(oTicketAgent);    }  else    {    [ three in four chance to move right a random amount    vAgentStatus = A_MOVING_RIGHT;    vAgentY = 113;    random(90, 104, vRndNum);    move.obj.v(oTicketAgent, vRndNum, vAgentY, vTmpVal, fAgentMoved);    start.cycling(oTicketAgent);    }  }  [ when agent reaches bottom of stairsif (vAgentStatus == A_TO_STAIRS && isset(fAgentMoved))  {  [ he goes up the stairs  reset(fAgentMoved);  vAgentStatus = A_GOING_UP;  move.obj(oTicketAgent, 90, 51, 2, fAgentMoved);  }[ when agent gets to top of stairsif (vAgentStatus == A_GOING_UP && isset(fAgentMoved))  {  [ he pauses for a short time  reset(fAgentMoved);  vAgentStatus = A_WAIT_STAIRS;  }  [ while waiting at top of stairsif (vAgentStatus == A_WAIT_STAIRS)  {  [ increment timer  ++vAgentTimer;  [ after 20 cycles  if (vAgentTimer == 20)    {    [ agent comes back downstairs    vAgentTimer = 0;    vAgentStatus = A_GOING_DOWN;    move.obj(oTicketAgent, 36, 105, 2, fAgentMoved);    }  }  [ after reaching bottom of stairs coming down,if (vAgentStatus == A_GOING_DOWN && isset(fAgentMoved))  {  [ agent goes back to starting location  reset(fAgentMoved);  vAgentStatus = A_COUNTER;  move.obj(oTicketAgent, 36, 113, 2, fAgentMoved);  }  [ if agent moves to right side of counterif (vAgentStatus == A_MOVING_RIGHT && isset(fAgentMoved))  {  [ agent pauses a moment  reset(fAgentMoved);  vAgentStatus = A_WAIT_RIGHT;  stop.cycling(oTicketAgent);  }  [ while waiting on right side of counterif (vAgentStatus == A_WAIT_RIGHT)  {  [ increment timer  ++vAgentTimer;  [ after 10 cycles  if (vAgentTimer == 10)    {    [ return to starting location    vAgentTimer = 0;    vAgentStatus = A_COUNTER;    move.obj(oTicketAgent, 36, 113, 2, fAgentMoved);    start.cycling(oTicketAgent);    }  }  [ if agent is either at right side of counter, or at start[ locationif ((vAgentStatus == A_MOVING_RIGHT ||     vAgentStatus == A_COUNTER))  {  [ get distance from Jerrod to the agent  distance(ego, oTicketAgent, vAgentDist);  [if Jerrod is close enough  if (vAgentDist == 19)    {    [ agent stops where he is and greets Jerrod    normal.motion(oTicketAgent);    vAgentStatus = A_GREETING;    stop.cycling(oTicketAgent);    [ make sure agent is facing forward    set.loop(oTicketAgent, 2);    force.update(oTicketAgent);    stop.update(oTicketAgent);    print.at("\"How may I help you, Jerrod?\"", 4, 10, 21);    [ start conversation with Jerrod    vConvStatus = C_START;    }  }  [ if offering to help, and Jerrod is away from the counterif (vAgentStatus == A_GREETING && !posn(ego, 50, 124, 90, 128))  {  [ the converation ends  vConvStatus = C_NONE;  [ agent moves back to start  vAgentStatus = A_RETURNING;  [ if a message window is open make sure it's closed (this  [ unnecessary because the leaveWindow flag is never set,   [ so there will never be a window open that needs closing)  close.window();  start.update(oTicketAgent);  move.obj(oTicketAgent, 36, 113, 2, fAgentMoved);  start.cycling(oTicketAgent);  [ make sure prompt is reset  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  [ if agent moved back to startif (vAgentStatus == A_RETURNING && isset(fAgentMoved))  {  [ agent begins his regular cycle of movement  vAgentStatus = A_COUNTER;  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (posn(ego, 105, 150, 105, 167))  {  new.room(rm.StageCoachOffice); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ always reset the input prompt as soon as any input is [ provided, no matter what player entersset.string(inputPrompt, "%g69");accept.input();inputLength = 38;[ buy ticket (there are a lot of ways to ask for a ticket)if ((said("go", "coach") ||     said("go", "west") ||     said("go", "calif") ||     said("go", "independence") ||     said("go", "journey") ||     said("passage", "calif") ||     said("acquire", "coach") ||     said("acquire", "journey") ||     said("ride", "coach") ||     said("ride", "coach", "calif") ||     said("ride", "calif") ||     said("ask", "ticket") ||     said("ask", "boy", "ticket") ||     said("ask", "ticket", "boy") ||     said("ask", "boy", "coach", "ticket") ||     said("ask", "boy", "ticket", "coach") ||     said("ask", "coach", "ticket", "boy") ||     said("buy", "journey") ||     said("buy", "ticket") ||     said("buy", "ticket", "boy") ||     said("buy", "coach", "ticket") ||     said("buy", "coach", "ticket", "boy") ||     said("buy", "ticket", "coach") ||     said("buy", "ticket", "calif") ||     said("want", "ticket") ||     said("want", "buy", "ticket") ||     said("want", "acquire", "ticket") ||     said("acquire", "ticket") ||     said("acquire", "ticket", "boy") ||     said("acquire", "coach", "ticket") ||     said("acquire", "ticket", "coach") ||     said("acquire", "ticket", "calif") ||     said("pay") ||     said("pay", "boy") ||     said("pay", "price") ||     said("pay", "ticket", "price") ||     said("pay", "price", "ticket") ||     said("pay", "bucks") ||     said("pay", "boy", "bucks") ||     said("pay", "bucks", "boy") ||     said("pay", "ticket") ||     said("pay", "boy", "ticket") ||     said("contribute", "bucks") ||     said("contribute", "bucks", "boy") ||     said("contribute", "boy", "bucks") ||     said("need", "ticket") ||     said("need", "coach", "ticket") ||     said("need", "ticket", "coach") ||     said("need", "ticket", "calif")))  {  [ if agent is waiting to help  if (vAgentStatus == A_GREETING)    {    [ if agent has started a conversation, or has offered    [ to sell Jerrod a ticket    if ((vConvStatus == C_START || vConvStatus == C_OFFER_TKT))      {      [ if the rush is public, it's going to cost a LOT more      if (isset(RushIsPublic))        {        print.at("\"You're going to be just like the rest of them, Jerrod.\"", 3, 10, 25);        print.at("\"You should have come to see me sooner. It seems that "                 "everyone is heading West to California!\"", 3, 10, 25);        print.at("\"Personally, I think you're all crazy to think there's gold "                 "for the taking there!\"", 3, 10, 25);        print.at("\"But I can see you've made up your mind. I can get you as "                 "far West as Independence, Missouri.\"", 3, 10, 25);        print.at("\"There you will join a wagon team heading West.\"", 3, 10, 25);        print.at("\"Just a short while ago a ticket to Independence was "                 "cheap.\"", 3, 10, 25);        print.at("\"But, ever since the discovery of gold in California, prices "                 "have gone sky high.\"", 3, 10, 25);        print.at("\"Now it will cost you $950. Are you interested in a "                 "ticket?\"", 3, 10, 25);        [ agent is now waiting for Jerrod to say 'yes' or 'no'        vConvStatus = C_OFFER_TKT;        set.string(inputPrompt, "yes or no: %g69");        accept.input();        inputLength = 27;        }      else        {        [ since gold rush is not public, cost is much cheaper        print.at("\"I knew it the instant you walked through the door, "                 "Jerrod.\"", 3, 10, 25);        print.at("\"You have decided to head West!\"", 3, 10, 20);        print.at("\"The furthest West I can get you is Independence, "                 "Missouri.\"", 3, 10, 25);        print.at("\"There you will join a wagon team heading West.\"", 3, 10, 25);        print.at("\"The cost of a ticket to Independence is $200. Are you "                 "interested in a ticket?\"", 3, 10, 25);        vConvStatus = C_OFFER_TKT;        set.string(inputPrompt, "yes or no: %g69");        accept.input();        inputLength = 27;        [ to avoid having ticket price change in middle of        [ transaction set the 'buylow' flag; this prevents        [ the gold rush from being made public until after        [ the transaction is finished        set(BuyingLow);        }      }        [ if Jerrod is confirming purchase    if (vConvStatus == C_WANT_TKT)      {      [ if gold rush is public       if (isset(RushIsPublic))        {        [ does Jerrod have enough money?        [ (notice that there is no check for already having a ticket;        [ it would be impossible to have enough money if Jerrod already        [ had one of the other tickets, so no need to check it)        if (CurrentCash > 70)          {          [ Jerrod has the ticket          vConvStatus = C_HAS_TKT;          print.at("\"This ticket will get you to Independence, Missouri, "                   "Jerrod.\"", 3, 10, 25);          print.at("\"Now, I'm about to give you some information you might "                   "find helpful later, so listen up!\"", 3, 10, 25);          print.at("\"I have enlisted you as a member of the Long Island Joint "                   "Mining and Stock Company. You should be able to locate the "                   "company once you arrive in Independence.\"", 3, 10, 25);          print.at("\"To get started, show this ticket to the man at the livery "                   "stable. Have a safe trip!\"", 3, 10, 25);          print.at("\"Good luck, Jerrod.\"", 3, 10, 15);          [ he's going to California by coach          TicketChoice = TKT_COACH;          [ he paid high price for the ticket          set(CoachTicketHigh);          [ adjust cash to pay for transaction          call(lgc.AdjustCash);          get("Stage coach ticket");          [ score 6 points          currentScore  += 6;          [ play 'bad news' sound because Jerrod had to pay          [ a high price          sound(s.BadNews, fSoundDone);          [ stagecoach trip is now ready to begin          StagecoachPhase = SC_WAIT_TICKET;          }        else          {          [ Jerrod doesn't have enough money - reset the conversation          vConvStatus = C_START;          print.at("\"I'm sorry, Jerrod. There is not enough money here.\"", 4, 10, 25);          sound(s.BadNews, fSoundDone);          [ resetting this flag is not necessary; since the          [ gold rush has already occurred, it's not          [ possible to buy low anymore, so this flag is not          [ used          reset(BuyingLow);          }        }      else        {        [ rush is not public; if Jerrod has at least $200        if (CurrentCash > 10)          {          [ if Jerrod doesn't have a ticket yet          if (TicketChoice == NO_TICKET)            {            [ get a stage coach ticket            vConvStatus = C_HAS_TKT;            [ make sure windows will not stay on screen             [ (it's not necessary to reset this flag; first            [ of all, it is never set, and secondly, even if            [ it were set, AGI automatically resets it after            [ every print or print.at command)            reset(leaveWindow);            print.at("\"This ticket will get you to Independence, Missouri, "                     "Jerrod.\"", 3, 10, 25);            print.at("\"Now, I'm about to give you some information you might "                     "find helpful later, so listen up!\"", 3, 10, 25);            print.at("\"I have enlisted you as a member of the Long Island "                     "Joint Mining and Stock Company. You should be able to "                     "locate the company once you arrive in Independence.\"", 3, 10, 25);            print.at("\"To get started, show this ticket to the man at the "                     "livery stable. Have a safe trip!\"", 3, 10, 25);            print.at("\"Good luck, Jerrod.\"", 3, 10, 15);            [ Jerrod is going to California by coach            TicketChoice = TKT_COACH;            [ pay for the ticket            call(lgc.AdjustCash);            get("Stage coach ticket");            [ score 9 points            currentScore  += 9;            sound(s.AddToScore, fSoundDone);            [ stagecoach is now ready to leave            StagecoachPhase = 1;            [ transaction has ended; reset this flag so gold rush can            [ happen when the time comes            reset(BuyingLow);            }          else            {            [ if Jerrod has a ticket, he can't get another            [ one            print.at("\"Jerrod, you already have a ticket. You don't need "                     "another.\"", 3, 5, 25);            [ transaction has ended; reset this flag so gold rush can            [ happen when the time comes            reset(BuyingLow);            }          }        else          {          [ if Jerrod doesn't have enough money- reset the          [ conversation          vConvStatus = C_START;          print.at("\"I'm sorry, Jerrod. There is not enough money here.\"", 4, 10, 25);          sound(s.BadNews, fSoundDone);          [ transaction has ended; reset this flag so gold rush can          [ happen when the time comes          reset(BuyingLow);          }        }      }    }  else    {    [ saying anything to the agent when he isn't ready gives    [ this generic message    print("Until now, you never realized how busy this man is!");    }  }  [ yesif (said("y"))  {  [ only relevant if agent is at counter waiting for Jerrod to speak  if (vAgentStatus == A_GREETING)    {    [ and if agent has made an offer    if (vConvStatus == C_OFFER_TKT)      {      [ if rush is known to public, cost is much higher      if (isset(RushIsPublic))        {        print.at("\"That will be $950, in cash, please.\"", 4, 10, 25);        vConvStatus = C_WANT_TKT;        }      else        {        print.at("\"That will be $200, in cash, please.\"", 4, 10, 25);        vConvStatus = C_WANT_TKT;        }      }    }  else    {    [ saying anything to the agent when he isn't ready gives    [ this generic message    print("Until now, you never realized how busy this man is!");    }  }  [ noif (said("n"))  {  [ only relevant if agent is at counter waiting for Jerrod to speak  if (vAgentStatus == A_GREETING)    {    [ and if agent has made an offer    if (vConvStatus == C_OFFER_TKT)      {      print.at("\"Thanks for dropping by. Come back anytime!\"", 4, 10, 25);      vConvStatus = C_START;      [ cancel the 'buying low' flag, so the gold rush can      [ be made public once the time comes      reset(BuyingLow);      }    }  else    {    [ saying anything to the agent when he isn't ready gives this     [ generic message    print("Until now, you never realized how busy this man is!");    }  }  [ just lookingif (said("just", "looking"))  {  [ if agent is at counter waiting for Jerrod to speak  if (vAgentStatus == A_GREETING)    {    [ if agent has made an offer    if (vConvStatus == C_OFFER_TKT)      {      print.at("\"I wish you would do that more often, Jerrod. Go right "               "ahead!\"", 4, 10, 25);      [ reset conversation status      vConvStatus = C_START;      }    }  else    {    [ saying anything to the agent when he isn't ready gives this     [ generic message    print("Until now, you never realized how busy this man is!");    }  }  [ talk manif ((said("speak", "boy") || said("speak")))  {  [ if agent hasn't started conversation,  if (vConvStatus == C_NONE)    {    print("If you want to talk to this man, walk up to the counter and wait. "          "He'll get to you when he gets time!");    }  else    {    [ agent stops moving, and addresses Jerrod    normal.motion(oTicketAgent);    vAgentStatus = A_GREETING;    stop.cycling(oTicketAgent);    [ make sure agent is facing Jerrod    set.loop(oTicketAgent, 2);    force.update(oTicketAgent);    stop.update(oTicketAgent);    print.at("\"How may I help you, Jerrod?\"", 4, 10, 25);    [ conversation begins    vConvStatus = C_START;    }  }  [ look manif (said("examine", "boy"))  {  [ if conversation hasn't started yet  if (vConvStatus == C_NONE)    {    print("Until now, you never realized how busy this man is!");    }  else    {    print("He has his business done and is ready to be of service to you.");    }  }  [ look/look aroundif ((said("examine") || said("examine", "around")))  {  print("The walls are covered with posters describing exciting places!");  }  [ look counterif (said("examine", "counter"))  {  print("There is sure a lot of activity behind that counter. And you thought "        "you were busy!");  }  [ look wallif (said("examine", "wall"))  {  print("Colorful posters cover the walls. Look at all those places to go!");  }  [ read billboard/look billboardif ((said("read", "billboard") ||     said("examine", "billboard") ||     said("examine", "sign") ||     said("read", "sign") ||     said("read", "wall")))  {  print("Looking at these posters makes you want to go somewhere! All you need "        "is a ticket!");  }  [ look floorif (said("examine", "deck"))  {  print("It looks like some knotty old pine.");  }  [ look doorif (said("examine", "door"))  {  print("There is nothing unusual about the door.");  }  [ look windowif (said("examine", "glass"))  {  print("This is some of the finest, smoothest glass you've seen. I guess the "        "glassmaking methods improve every day!");  }  [ look stairsif (said("examine", "stair"))  {  print("That man has sure put a few miles on those stairs! Those boards must "        "be getting thin!!");  }  [ ring bellif (said("ring", "bell"))  {  print("There is no bell here!");  }  [ be politeif ((said("thank", "you") ||     said("thank") ||     said("thank", "boy")))  {  print("You're welcome!!");  }  [ californiaif (said("calif"))  {  print("What about California?");  }  [ passageif (said("passage"))  {  print("To where?");  }  [ exit/leaveif (said("exit"))  {  print("You've got the right idea, but you need to be more specific!");  }  [ show ticketif ((said("show", "ticket") ||     said("show", "boy", "ticket") ||     said("show", "ticket", "boy") ||     said("contribute", "ticket") ||     said("contribute", "boy", "ticket") ||     said("contribute", "ticket", "boy")))  {  [ if Jerrod has a ticket  if ((has("Stage coach ticket") ||       has("Cape Horn ticket") ||       has("Panama ticket")))    {    [ this is not the place to use the ticket    print("\"I see your ticket, Jerrod. But there is nothing I can do with "          "it.\"");    }  else    {    print("You don't have a ticket!");    }  }  [ coach schedule/coach leaveif ((said("coach", "schedule") ||     said("time", "coach", "leaf") ||     said("time", "coach", "exit") ||     said("time", "schedule") ||     said("time", "table") ||     said("coach", "leaf") ||     said("coach", "exit")))  {  print("The stage schedule varies with the demand.");  }  [ get ferry ticketif ((said("ferry", "ticket") ||     said("acquire", "ferry", "ticket") ||     said("buy", "ferry", "ticket")))  {  print("This is a stage travel office!");  }  Done:[ in case Jerrod said something that wasn't able to be[ parsed make sure input prompt is restored to normal (this[ is unnecessary - the input prompt is already restored as[ soon as the player enters any text, so it doesn't matter[ if there was an unknown word or not)if (unknownWordNum > 0)  {  set.string(inputPrompt, "%g69");  accept.input();  inputLength = 38;  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "\"How may I help you, Jerrod?\""#message 2 "\"Now it will cost you $950. Are you interested in a ticket?\""#message 3 "\"The cost of a ticket to Independence is $200. Are you interested in a ticket?\""#message 4 "Until now, you never realized how busy this man is!"#message 5 "\"That will be $950, in cash, please.\""#message 6 "\"That will be $200, in cash, please.\""#message 7 "\"To get started, show this ticket to the man at the livery stable. Have a safe trip!\""#message 8 "\"Thanks for dropping by. Come back anytime!\""#message 9 "\"I'm sorry, Jerrod. There is not enough money here.\""#message 11 "%g69"#message 12 "yes or no: %g69"#message 16 "If you want to talk to this man, walk up to the counter and wait. He'll get to you when he gets time!"#message 19 "\"I wish you would do that more often, Jerrod. Go right ahead!\""#message 20 "\"Jerrod, you already have a ticket. You don't need another.\""#message 21 "The walls are covered with posters describing exciting places!"#message 24 "\"This ticket will get you to Independence, Missouri, Jerrod.\""#message 25 "\"Now, I'm about to give you some information you might find helpful later, so listen up!\""#message 26 "\"I have enlisted you as a member of the Long Island Joint Mining and Stock Company. You should be able to locate the company once you arrive in Independence.\""#message 27 "\"Good luck, Jerrod.\""#message 28 "There is sure a lot of activity behind that counter. And you thought you were busy!"#message 29 "Colorful posters cover the walls. Look at all those places to go!"#message 30 "Looking at these posters makes you want to go somewhere! All you need is a ticket!"#message 31 "It looks like some knotty old pine."#message 32 "There is nothing unusual about the door."#message 33 "He has his business done and is ready to be of service to you."#message 34 "This is some of the finest, smoothest glass you've seen. I guess the glassmaking methods improve every day!"#message 35 "That man has sure put a few miles on those stairs! Those boards must be getting thin!!"#message 37 "\"I knew it the instant you walked through the door, Jerrod.\""#message 38 "\"You have decided to head West!\""#message 39 "\"The furthest West I can get you is Independence, Missouri.\""#message 40 "\"There you will join a wagon team heading West.\""#message 42 "There is no bell here!"#message 43 "You're welcome!!"#message 44 "What about California?"#message 45 "To where?"#message 46 "You've got the right idea, but you need to be more specific!"#message 47 "\"I see your ticket, Jerrod. But there is nothing I can do with it.\""#message 48 "You don't have a ticket!"#message 49 "The stage schedule varies with the demand."#message 50 "This is a stage travel office!"#message 51 "\"You're going to be just like the rest of them, Jerrod.\""#message 52 "\"You should have come to see me sooner. It seems that everyone is heading West to California!\""#message 53 "\"Personally, I think you're all crazy to think there's gold for the taking there!\""#message 54 "\"But I can see you've made up your mind. I can get you as far West as Independence, Missouri.\""#message 55 "\"Just a short while ago a ticket to Independence was cheap.\""#message 56 "\"But, ever since the discovery of gold in California, prices have gone sky high.\""