[***********************************************************[[ cs.PanamaCity[[ A cutscene of Panama City from the ocean, that shows[ Jerrod leaving by sail ship on his way to California.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSailShip                    o1#define oBoat1                       o2#define oBoat2                       o3#define oBoat3                       o4#define oLocation                    o5#define vShipStatus                v220#define vBoat1Timer                v221#define vShipSpeed                 v222#define vBoat1Status               v223#define vBoat2Status               v224#define vBoat3Status               v225#define vBoat2Timer                v226#define vBoat3Timer                v227#define vLocationTimer             v228#define vMsgTimer                  v229#define vMsgStatus                 v230#define fShipMoved                 f220#define fBoat1Moved                f221#define fBoat2Moved                f222#define fBoat3Moved                f223[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load view that has room art  load.view(vw.PanamaCityArt);    [ load the main timing logic  load.logics(lgc.PanamaTripTiming);    [ load and draw picture for current room  load.pic(currentRoom);  draw.pic(currentRoom);    [ sailing ship that takes Jerrod to California   animate.obj(oSailShip);  set.view(oSailShip, vw.PanamaCityArt);  set.loop(oSailShip, 0);  fix.loop(oSailShip);  [ starts at bottom/left  position(oSailShip, 0, 167);  draw(oSailShip);  [ move to first point  move.obj(oSailShip, 12, 155, 1, fShipMoved);  vShipSpeed = 3;  step.time(oSailShip, vShipSpeed);  vShipStatus = 1;    [ three small boats all start at the dock  animate.obj(oBoat1);  set.view(oBoat1, vw.PanamaCityArt);  set.loop(oBoat1, 3);  fix.loop(oBoat1);  set.priority(oBoat1, 9);  position(oBoat1, 127, 109);  ignore.objs(oBoat1);  draw(oBoat1);  stop.cycling(oBoat1);  [ small boat #2  animate.obj(oBoat2);  set.view(oBoat2, vw.PanamaCityArt);  set.loop(oBoat2, 3);  fix.loop(oBoat2);  set.priority(oBoat2, 9);  position(oBoat2, 127, 109);  ignore.objs(oBoat2);  draw(oBoat2);  stop.cycling(oBoat2);  [ small boat #3  animate.obj(oBoat3);  set.view(oBoat3, vw.PanamaCityArt);  set.loop(oBoat3, 3);  fix.loop(oBoat3);  set.priority(oBoat3, 9);  position(oBoat3, 127, 109);  ignore.objs(oBoat3);  draw(oBoat3);  stop.cycling(oBoat3);    [ location banner  animate.obj(oLocation);  set.view(oLocation, vw.PanamaCityArt);  set.loop(oLocation, 6);  fix.loop(oLocation);  set.cel(oLocation, 0);  ignore.horizon(oLocation);  position(oLocation, 58, 25);  set.priority(oLocation, 15);  draw(oLocation);  stop.cycling(oLocation);    [ now show the picture  show.pic();    [ advance the total game travel time  GameDays  += 6;  }  [ **************************************[ EVERY CYCLE[ **************************************[ if timer is still activeif (vLocationTimer < 201)  {  [ increment timer  ++vLocationTimer;  [ at 50 cycles  if (vLocationTimer == 50)    {    [ show location banner partially faded    set.cel(oLocation, 1);    }  [ at 100 cycles  if (vLocationTimer == 100)    {    [ remove the banner    erase(oLocation);    [ show message    print.at("Once a traveler makes it to Panama City, his worries are really "             "just beginning!", 2, 5, 0);    }  [ at 200 cycles, start msg counter  if (vLocationTimer == 200)    {    ++vMsgTimer;    }  }  [ if msg timer is active at stage zeroif (vMsgTimer > 0 && vMsgStatus == 0)  {  [ increment timer  ++vMsgTimer;  [ after two cycles  if (vMsgTimer == 2)    {    print.at("The population of Panama City increases every day due to the "             "steady stream of fortune seekers coming across the isthmus.", 2, 5, 0);    }  [ after 100 cycles  if (vMsgTimer == 100)    {    print.at("Panama City is becoming extremely overcrowded and unsanitary, and "             "is an ideal place to contract a deadly jungle disease.", 2, 5, 0);    }  [ after 200 cycles  if (vMsgTimer == 200)    {    print.at("It is difficult to find food or a place to sleep.", 2, 5, 0);    [ reset timer     vMsgTimer = 1;    [ advance to next stage    ++vMsgStatus;    }  }  [ if timer is active at stage oneif (vMsgTimer > 0 && vMsgStatus == 1)  {  [ increment timer  ++vMsgTimer;  [ after 100 cycles  if (vMsgTimer == 100)    {    print.at("The overcrowded and unsanitary conditions basically stem from a "             "lack of ships on the west coast of Panama to take gold seekers to "             "California.", 2, 5, 0);    }  [ after 200 cycles  if (vMsgTimer == 200)    {    print.at("Those ships that do leave for California are overloaded to the "             "point of being unsafe.", 2, 5, 0);    [ reset timer    vMsgTimer = 1;    [ advance to next stage    ++vMsgStatus;    }  }  [ if timer is active at stage twoif (vMsgTimer > 0 && vMsgStatus == 2)  {  [ increment timer  ++vMsgTimer;  [ after 100 cycles  if (vMsgTimer == 100)    {    print.at("Gold seekers, trapped in Panama City, will do nearly anything to "             "be one of the fortunate souls to be on board when the next ship "             "sails!", 2, 5, 0);    }  [ after 200 cycles  if (vMsgTimer == 200)    {    print.at("Tickets are scalped for two or three times the price paid for "             "them!", 2, 5, 0);    [ reset timer    vMsgTimer = 1;    [ advance to next stage    ++vMsgStatus;    }  }  [ if timer is active and at stage threeif (vMsgTimer > 0 && vMsgStatus == 3)  {  [ increment timer  ++vMsgTimer;  [ after 100 cycles  if (vMsgTimer == 100)    {    print.at("Fights break out over who will get on the ship and who will be "             "left behind!", 2, 5, 0);    }  [ after 200 cycles  if (vMsgTimer == 200)    {    print.at("Those who are left behind are forced to retreat back into the "             "City and attempt to fend off the numerous jungle diseases.", 2, 5, 0);    [ reset timer    vMsgTimer = 1;    [ advance to next next stage    ++vMsgStatus;    }  }  [ if timer is active and at stage fourif (vMsgTimer > 0 && vMsgStatus == 4)  {  [ increment timer  ++vMsgTimer;  [ after 100 cycles  if (vMsgTimer == 100)    {    print.at("Delays of two weeks are usual, delays of two months are not "             "uncommon.", 2, 5, 0);    }  [ after 200 cycles  if (vMsgTimer == 200)    {    print.at("You are one of the lucky ones; you manage to get on a ship.  It "             "is incredibly crowded!!!", 2, 5, 0);    [ reset timer    vMsgTimer = 1;    [ advance to next stage    ++vMsgStatus;    }  }  [ if timer is active and at stage fiveif (vMsgTimer > 0 && vMsgStatus == 5)  {  [ increment timer  ++vMsgTimer;  [ after 100 cycles  if (vMsgTimer == 100)    {    [ close any open print windows (there aren't any in this    [ logic; this code block is unnecessary)    close.window();    }  }  [ if ship has reached first pointif (isset(fShipMoved) && vShipStatus == 1)  {  [ advance to next stage  reset(fShipMoved);  vShipStatus = 2;  [ show ship with sails furled  set.loop(oSailShip, 2);  start.cycling(oSailShip);  vBoat1Status = 1;  }  [ when ship is ready to sailif (vShipStatus == 3)  {  [ advance to next stage  vShipStatus = 4;  [ change to outbound loop  set.loop(oSailShip, 1);  [ move to left edge  move.obj(oSailShip, 0, 143, 1, fShipMoved);  }  [ if ship has reached left edgeif (isset(fShipMoved) && vShipStatus == 4)  {  [ done with this cutscene  set(ContinueJourney);  }  [ if first small boat is ready to begin its sequenceif (vBoat1Status == 1)  {  [ advance to next stage  vBoat1Status = 2;  [ move boat #1 to first point  move.obj(oBoat1, 138, 109, 1, fBoat1Moved);  vShipSpeed = 4;  step.time(oBoat1, vShipSpeed);  start.cycling(oBoat1);  }  [ when boat #1 reaches first pointif (isset(fBoat1Moved) && vBoat1Status == 2)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 3;  [ move to next point (right edge of screen)  move.obj(oBoat1, 155, 111, 1, fBoat1Moved);  }  [ when boat #1 reaches second pointif (isset(fBoat1Moved) && vBoat1Status == 3)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 4;  [ boat is off screen temporarily as it heads out to the  [ sailing ship; remove boat #1   erase(oBoat1);  }  [ while boat #1 is offscreenif (vBoat1Status == 4)  {  [ increment timer  ++vBoat1Timer;  [ after 20 cycles  if (vBoat1Timer == 20)    {    [ reset timer    vBoat1Timer = 0;    [ advance to next stage    vBoat1Status = 5;    [ boat reappears with larger image    set.loop(oBoat1, 4);    position(oBoat1, 153, 125);    draw(oBoat1);    [ move to next point    move.obj(oBoat1, 132, 131, 1, fBoat1Moved);    }  }  [ after boat #1 gets to point 5if (isset(fBoat1Moved) && vBoat1Status == 5)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 6;    [ start moving boat #2  vBoat2Status = 1;    [ move to next point  move.obj(oBoat1, 95, 136, 1, fBoat1Moved);  }  [ when boat #1 gets to point 6if (isset(fBoat1Moved) && vBoat1Status == 6)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 7;  [ move boat to the sailing ship  move.obj(oBoat1, 37, 143, 1, fBoat1Moved);  }  [ after boat #1 gets to the shipif (isset(fBoat1Moved) && vBoat1Status == 7)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 8;  [ boat stops here  stop.cycling(oBoat1);  }[ while boat is at the shipif (vBoat1Status == 8)  {  [ increment timer  ++vBoat1Timer;  [ after 40 cycles  if (vBoat1Timer == 40)    {    [ reset timer    vBoat1Timer = 0;    [ advance to next stage    vBoat1Status = 9;    [ show boat with no passengers (they are on the ship    [ now)    set.loop(oBoat1, 5);    [ boat begins trip back to the dock    move.obj(oBoat1, 95, 136, 1, fBoat1Moved);    start.cycling(oBoat1);    }  }  [ after boat #1 gets to point 9 on return tripif (isset(fBoat1Moved) && vBoat1Status == 9)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 10;  [ move closer to the dock  move.obj(oBoat1, 132, 131, 1, fBoat1Moved);  }  [ after boat #1 gets to point 10 on return tripif (isset(fBoat1Moved) && vBoat1Status == 10)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 11;  [ move to right edge  move.obj(oBoat1, 153, 125, 1, fBoat1Moved);  }  [ when boat #1 gets to point 11 on return tripif (isset(fBoat1Moved) && vBoat1Status == 11)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 12;  [ remove boat from screen temporarily  erase(oBoat1);  }  [ while boat #1 is off screenif (vBoat1Status == 12)  {  [ increment timer  ++vBoat1Timer;  [ after 20 cycles  if (vBoat1Timer == 20)    {    [ reset timer    vBoat1Timer = 0;    [ advance to next stage    vBoat1Status = 13;    [ show boat with tiny view    set.loop(oBoat1, 3);    position(oBoat1, 155, 111);    draw(oBoat1);    [ continue moving to dock    move.obj(oBoat1, 138, 111, 1, fBoat1Moved);    }  }  [ if boat #1 is at point 13 on return if (isset(fBoat1Moved) && vBoat1Status == 13)  {  [ advance to next stage  reset(fBoat1Moved);  vBoat1Status = 14;  [ last move to dock  move.obj(oBoat1, 127, 109, 1, fBoat1Moved);  }  [ when boat #1 reaches the dockif (isset(fBoat1Moved) && vBoat1Status == 14)  {  [ advance stage to end sequence  reset(fBoat1Moved);  vBoat1Status = 15;  [ remove boat #1  erase(oBoat1);  }  [ when boat #2 is ready to beginif (vBoat2Status == 1)  {  [ advance to next stage  vBoat2Status = 2;  [ move boat #2 to first point  move.obj(oBoat2, 138, 109, 1, fBoat2Moved);  vShipSpeed = 4;  step.time(oBoat2, vShipSpeed);  start.cycling(oBoat2);  }  [ when boat #2 reaches first pointif (isset(fBoat2Moved) && vBoat2Status == 2)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 3;  [ move to next point (right edge of screen)  move.obj(oBoat2, 155, 111, 1, fBoat2Moved);  }  [ when boat #2 reaches second pointif (isset(fBoat2Moved) && vBoat2Status == 3)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 4;  [ boat is off screen temporarily as it heads out to the  [ sailing ship; remove boat #2  erase(oBoat2);  }[ while boat #2 is offscreenif (vBoat2Status == 4)  {  [ increment timer  ++vBoat2Timer;  [ after 20 cycles  if (vBoat2Timer == 20)    {    [ reset timer    vBoat2Timer = 0;    [ advance to next stage    vBoat2Status = 5;    [ boat reappears with larger image    set.loop(oBoat2, 4);    position(oBoat2, 153, 125);    draw(oBoat2);    [ move to next point    move.obj(oBoat2, 132, 131, 1, fBoat2Moved);    }  }  [ when boat #2 gets to point 5if (isset(fBoat2Moved) && vBoat2Status == 5)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 6;    [ start boat #3  vBoat3Status = 1;    [ move boat #2 to next point  move.obj(oBoat2, 95, 136, 1, fBoat2Moved);  }  [ when boat #2 gets to point 6if (isset(fBoat2Moved) && vBoat2Status == 6)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 7;  [ move boat next to sailing ship  move.obj(oBoat2, 37, 143, 1, fBoat2Moved);  }  [ when boat #2 gets to the shipif (isset(fBoat2Moved) && vBoat2Status == 7)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 8;  [ boat stops here  stop.cycling(oBoat2);  }  [ while boat #2 is at the shipif (vBoat2Status == 8)  {  [ increment timer  ++vBoat2Timer;  [ after 40 cycles  if (vBoat2Timer == 40)    {    [ reset timer    vBoat2Timer = 0;    [ advance to next stage    vBoat2Status = 9;    [ show boat with no passengers (they are now on the    [ ship)    set.loop(oBoat2, 5);    [ boat begins trip back to the dock    move.obj(oBoat2, 95, 136, 1, fBoat2Moved);    start.cycling(oBoat2);    }  }  [ after boat #2 gets to point 9 on return tripif (isset(fBoat2Moved) && vBoat2Status == 9)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 10;  [ move to next point  move.obj(oBoat2, 132, 131, 1, fBoat2Moved);  }  [ after boat #2 gets to point 10 on return tripif (isset(fBoat2Moved) && vBoat2Status == 10)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 11;  [ move boat to right edge of screen  move.obj(oBoat2, 153, 125, 1, fBoat2Moved);  }  [ when boat #2 gets to right edgeif (isset(fBoat2Moved) && vBoat2Status == 11)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 12;  [ remove it temporarily  erase(oBoat2);  }  [ whiel boat is off screenif (vBoat2Status == 12)  {  [ increment timer  ++vBoat2Timer;  [ after 20 cycles  if (vBoat2Timer == 20)    {    [ reset timer    vBoat2Timer = 0;    [ advance to next stage    vBoat2Status = 13;    [ show boat with tiny view    set.loop(oBoat2, 3);    position(oBoat2, 155, 111);    draw(oBoat2);    [ it continues to move toward the dock    move.obj(oBoat2, 138, 111, 1, fBoat2Moved);    }  }  [ when boat #2 gets to point 13 on return tripif (isset(fBoat2Moved) && vBoat2Status == 13)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 14;  [ last move into the dock  move.obj(oBoat2, 127, 109, 1, fBoat2Moved);  }  [ when boat #2 reaches the dockif (isset(fBoat2Moved) && vBoat2Status == 14)  {  [ advance to next stage  reset(fBoat2Moved);  vBoat2Status = 15;  [ remove boat #2 from the screen  erase(oBoat2);  }[ when boat #3 is ready to beginif (vBoat3Status == 1)  {  [ advance to next stage  vBoat3Status = 2;  [ move boat #3 to first point  move.obj(oBoat3, 138, 109, 1, fBoat3Moved);  vShipSpeed = 4;  step.time(oBoat3, vShipSpeed);  start.cycling(oBoat3);  }  [ after boat #3 reaches first pointif (isset(fBoat3Moved) && vBoat3Status == 2)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 3;  [ move to next point (right edge of screen)  move.obj(oBoat3, 155, 111, 1, fBoat3Moved);  }[ after boat #3 reaches right edgeif (isset(fBoat3Moved) && vBoat3Status == 3)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 4;  [ boat #3 is off screen temporarily as it heads out to the  [ sailing ship; remove it from screen  erase(oBoat3);  }  [ while boat #3 is off screenif (vBoat3Status == 4)  {  [ increment timer  ++vBoat3Timer;  [ after 20 cycles  if (vBoat3Timer == 20)    {    [ reset timer    vBoat3Timer = 0;    [ advance to next stage    vBoat3Status = 5;    [ show boat with larger image    set.loop(oBoat3, 4);    position(oBoat3, 153, 125);    draw(oBoat3);    [ move to next point    move.obj(oBoat3, 132, 131, 1, fBoat3Moved);    }  }  [ after boat #3 gets to point 5if (isset(fBoat3Moved) && vBoat3Status == 5)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 6;  [ move to next point  move.obj(oBoat3, 95, 136, 1, fBoat3Moved);  }[ after boat #3 gets to point 6if (isset(fBoat3Moved) && vBoat3Status == 6)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 7;  [ move boat next to sailing ship  move.obj(oBoat3, 37, 143, 1, fBoat3Moved);  }  [ after boat #3 gets to sailing shipif (isset(fBoat3Moved) && vBoat3Status == 7)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 8;  [ boat stops here  stop.cycling(oBoat3);  }  [ while boat #3 is at the shipif (vBoat3Status == 8)  {  [ increment timer  ++vBoat3Timer;  [ after 40 cycles  if (vBoat3Timer == 40)    {    [ reset timer    vBoat3Timer = 0;    [ advance to next stage    vBoat3Status = 9;    [ show boat with no passengers (they are now now on the    [ ship)    set.loop(oBoat3, 5);    [ boat begins trip back to the dock    move.obj(oBoat3, 95, 136, 1, fBoat3Moved);    start.cycling(oBoat3);    }  }  [ after boat #3 gets to point 9 on return tripif (isset(fBoat3Moved) && vBoat3Status == 9)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 10;  [ move to next point  move.obj(oBoat3, 132, 131, 1, fBoat3Moved);  }  [ after boat #3 gets to point 10 on return tripif (isset(fBoat3Moved) && vBoat3Status == 10)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 11;  [ move to right edge of screen  move.obj(oBoat3, 153, 125, 1, fBoat3Moved);  }  [ when boat #3 gets to right edgeif (isset(fBoat3Moved) && vBoat3Status == 11)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 12;  [ temporarily remove it from screen  erase(oBoat3);  }  [ while boat #3 is off screenif (vBoat3Status == 12)  {  [ increment timer  ++vBoat3Timer;  [ after 20 cycles  if (vBoat3Timer == 20)    {    [ reset timer    vBoat3Timer = 0;    [ advance to next stage    vBoat3Status = 13;    [ show tiny boat view    set.loop(oBoat3, 3);    position(oBoat3, 155, 111);    draw(oBoat3);    [ it continues to move toward the dock    move.obj(oBoat3, 138, 111, 1, fBoat3Moved);        [ now sailing ship is ready to leave Panama City    vShipStatus = 3;    }  }  [ when boat #3 gets to point 13 on return tripif (isset(fBoat3Moved) && vBoat3Status == 13)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 14;  [ last move into the dock  move.obj(oBoat3, 127, 109, 1, fBoat3Moved);  }  [ when boat #3 reaches the dockif (isset(fBoat3Moved) && vBoat3Status == 14)  {  [ advance to next stage  reset(fBoat3Moved);  vBoat3Status = 15;  [ remove boat from screen  erase(oBoat3);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look ship/look boatif (said("examine", "boat"))  {  print("It is only a sailing ship, but it is the prettiest thing you have seen "        "since you arrived in Panama!  It is anchored about 2 miles offshore.");  }  [ look cityif ((said("examine", "city") ||     said("examine", "isthmus", "city") ||     said("examine", "isthmus")))  {  print("The old part of Panama City is within ancient walls.  The suburbs are "        "bigger by half than the walled city, and the houses are dilapidated.");  }  [ look hillsif (said("examine", "foot hill"))  {  print("The city is nestled at the foot of a considerable mountain.");  }  [ look rowboatif (said("examine", "rowboat"))  {  print("It is necessary to use rowboats since the water is too shallow to "        "bring ships into port.");  }  [ look oceanif ((said("examine", "water") ||     said("examine", "ocean")))  {  print("This port is more protected than the one at the mouth of Chagres.  The "        "water is much calmer.");  }  [ go swimmingif ((said("jump") ||     said("jump", "across") ||     said("jump", "across", "board") ||     said("jump", "overboard") ||     said("swim") ||     said("go", "swim")))  {  print("You've waited too long for this to bail out now!");  }  [ look man/look womanif ((said("examine", "boy") ||     said("examine", "girl")))  {  print("Everyone looks as expressionless as you do, but they are just as glad "        "to be underway.");  }  [ look wallif (said("examine", "wall"))  {  print("The white walls make the city within look beautiful.");  }  [ look buildingsif ((said("examine", "home") ||     said("examine", "building")))  {  print("Most prominent are the whitewashed ones with the red tile roofs.");  }  [ look jungleif ((said("examine", "jungle") ||     said("examine", "forest")))  {  print("It is a pleasure to leave that jungle behind!");  }  [ look flagif (said("examine", "flag"))  {  print("The flags are animating in the jungle breeze.");  }  [ look/look aroundif ((said("examine", "around") ||     said("examine")))  {  print("What a view of Panama City!");  }  Done:[ call main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 31 "Once a traveler makes it to Panama City, his worries are really just beginning!"#message 32 "The population of Panama City increases every day due to the steady stream of fortune seekers coming across the isthmus."#message 33 "Panama City is becoming extremely overcrowded and unsanitary, and is an ideal place to contract a deadly jungle disease."#message 34 "It is difficult to find food or a place to sleep."#message 35 "The overcrowded and unsanitary conditions basically stem from a lack of ships on the west coast of Panama to take gold seekers to California."#message 36 "Those ships that do leave for California are overloaded to the point of being unsafe."#message 37 "Gold seekers, trapped in Panama City, will do nearly anything to be one of the fortunate souls to be on board when the next ship sails!"#message 38 "Tickets are scalped for two or three times the price paid for them!"#message 39 "Fights break out over who will get on the ship and who will be left behind!"#message 40 "Those who are left behind are forced to retreat back into the City and attempt to fend off the numerous jungle diseases."#message 41 "Delays of two weeks are usual, delays of two months are not uncommon."#message 42 "You are one of the lucky ones; you manage to get on a ship.  It is incredibly crowded!!!"#message 43 "It is only a sailing ship, but it is the prettiest thing you have seen since you arrived in Panama!  It is anchored about 2 miles offshore."#message 44 "The old part of Panama City is within ancient walls.  The suburbs are bigger by half than the walled city, and the houses are dilapidated."#message 45 "The city is nestled at the foot of a considerable mountain."#message 46 "It is necessary to use rowboats since the water is too shallow to bring ships into port."#message 47 "This port is more protected than the one at the mouth of Chagres.  The water is much calmer."#message 48 "You've waited too long for this to bail out now!"#message 49 "Everyone looks as expressionless as you do, but they are just as glad to be underway."#message 50 "The white walls make the city within look beautiful."#message 51 "Most prominent are the whitewashed ones with the red tile roofs."#message 52 "It is a pleasure to leave that jungle behind!"#message 53 "The flags are animating in the jungle breeze."#message 54 "What a view of Panama City!"