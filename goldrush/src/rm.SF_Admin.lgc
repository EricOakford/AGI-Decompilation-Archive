[***********************************************************[[ rm.SF_Admin[ [ The fort administrative office is here, along with an[ infirmary and a dining room, on the second floor. On the[ groudn floor is a storage room. There is nothing for[ Jerrod to do here.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oDoor1                       o1#define oDoor2                       o2#define vDX                        v220#define vDY                        v221#define fForcePriority             f220#define fDoor1Moved                f221#define fDoor1Open                 f222#define fDoor2Moved                f223#define fDoor2Open                 f224[ f225 and f226 are not used#define fBehindWindow              f227[ f228 through f237 are not used#define fEffectDone                f238[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load mule logic  load.logics(lgc.Mule);    [ load picture for current room  load.pic(currentRoom);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.SF_Doors1);  load.view(vw.WindowJerrod);    [ this sound is loaded, but is never used  load.sound(m.LoseGold);    [ load sounds used in the room  load.sound(s.Effect1);  load.sound(s.Effect2);    [ draw current room picture  draw.pic(currentRoom);    [ door to admin offices  animate.obj(oDoor1);  set.view(oDoor1, vw.SF_Doors1);  set.loop(oDoor1, 7);  set.cel(oDoor1, 0);  ignore.objs(oDoor1);  ignore.blocks(oDoor1);  set.priority(oDoor1, 5);  position(oDoor1, 84, 62);  draw(oDoor1);  stop.update(oDoor1);    [ door to supply room  animate.obj(oDoor2);  set.view(oDoor2, vw.SF_Doors1);  set.loop(oDoor2, 7);  set.cel(oDoor2, 0);  ignore.objs(oDoor2);  ignore.blocks(oDoor2);  set.priority(oDoor2, 5);  position(oDoor2, 84, 106);  draw(oDoor2);  stop.update(oDoor2);    [ Jerrod, with normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  [ if coming from the south gate  if (previousRoom == rm.SF_SouthGate)    {    [ change direction and loop    egoDir = LEFT;    set.loop(ego, 1);    }  [ if coming from the bunkroom  if (previousRoom == rm.SF_Bunkroom)    {    [ change direction and loop    egoDir = UP;    set.loop(ego, 3);    }  [ if coming from the kitchen  if (previousRoom == rm.SF_Kitchen)    {    [ change direction and loop    egoDir = RIGHT;    set.loop(ego, 0);    }  ignore.blocks(ego);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do mule initialization    call(lgc.Mule);    }    [ now show the picture  show.pic();    [ flag f113 is not used anywhere else; this apprears to be  [ some left over code for a feature/function that was  [ later removed - this code block should also have been   [ removed  if (isset(f113))    {    ignore.objs(oDoor2);    }      [ not necessary to reset this flag; AGI resets it  [ automatically  reset(newRoom);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if Jerrod is on the second floor of buildingif (posn(ego, 0, 59, 159, 59))  {  [ if on alarm line, but not marked as behind window  if (isset(egoHitSpecial) && !isset(fBehindWindow))    {    [ Jerrod is behind a window    set(fBehindWindow);    [ change view    set.view(ego, vw.WindowJerrod);    }  [ if not on alarm line and marked as behind window  if (!isset(egoHitSpecial) && isset(fBehindWindow))    {    [ no longer behind window    reset(fBehindWindow);    [ restore     set.view(ego, vw.JerrodCA);    }  }  [ if in front of the stair case and priority not setif (posn(ego, 30, 115, 146, 119) && !isset(fForcePriority))  {  [ need to force priority so Jerrod appears in front of the  [ stairs  set(fForcePriority);  set.priority(ego, 11);  }  [ if not in front of the stairs and priority is forcedif (!posn(ego, 30, 115, 146, 119) && isset(fForcePriority))  {  [ restore automatic priority assignment  reset(fForcePriority);  release.priority(ego);  }  [ if on an alarm lineif (isset(egoHitSpecial))  {   [ if on left stairs  if (posn(ego, 36, 61, 79, 114))    {    [ if going right or up-right    if ((egoDir == RIGHT || egoDir == UP_RIGHT))      {      [ move Jerrod up one pixel and right one pixel      vDX = 1;      vDY = -1; [ 255;      reposition(ego, vDX, vDY);      }    [ if going left or down-left    if ((egoDir == LEFT || egoDir == DOWN_LEFT))      {      [ move Jerrod left one pixel and down one pixel      vDX = -1; [ 255;      vDY = 1;      reposition(ego, vDX, vDY);      }          [ the following two tests appear to be old code that    [ should be deleted; two of the tests (posn(69,66) and    [ posn(72,62) are not even possible; if ego object is on    [ those points then it also would not be on an alarm    [ line        [ at a couple spots on the stairs    if ((posn(ego, 69, 66, 69, 66) ||         posn(ego, 70, 62, 72, 65)))      {      [ if going right or up-right      if ((egoDir == RIGHT || egoDir == UP_RIGHT))        {        [ make another minor adjustment        vDX = 1;        vDY = -1; [ 255;        reposition(ego, vDX, vDY);        }      }    if (posn(ego, 72, 62, 72, 62))      {      [ right or up-right      if ((egoDir == RIGHT || egoDir == UP_RIGHT))        {        [ bump one pixel to right        vDX = 1;        vDY = 0;        reposition(ego, vDX, vDY);        }      }    }      [ if Jerrod is on the right stairs  if (posn(ego, 100, 61, 143, 114))    {    [ going right or down-right    if ((egoDir == RIGHT || egoDir == DOWN_RIGHT))      {      [ bump Jerrod one pixel down      vDX = 0;      vDY = 1;      reposition(ego, vDX, vDY);      }    [ going left or up-left    if ((egoDir == LEFT || egoDir == UP_LEFT))      {      [ bump Jerrod up one pixel      vDX = 0;      vDY = -1; [ 255;      reposition(ego, vDX, vDY);      }    }  }  [ if Jerrod is by admin office door and door is not openif (posn(ego, 13, 59, 152, 61) && !isset(fDoor1Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #1 to update  start.update(oDoor1);  [ temporarily halt Jerrod while door #1 opens  stop.update(ego);  [ open door #1  end.of.loop(oDoor1, fDoor1Moved);  set(fDoor1Open);  }  [ if Jerrod is not by admin office door and door is openif (!posn(ego, 13, 59, 152, 61) && isset(fDoor1Open))  {  [ allow door #1 to update  start.update(oDoor1);  [ close it  reverse.loop(oDoor1, fDoor1Moved);  reset(fDoor1Open);  }  [ if door #1 is done cyclingif (isset(fDoor1Moved))  {  [ stop updating door #1  stop.update(oDoor1);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoor1Moved);  [ if door #1 is now closed  if (!isset(fDoor1Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ if Jerrod is by supply room door and door is not openif (posn(ego, 66, 106, 107, 108) && !isset(fDoor2Open))  {  [ play door-open sound  sound(s.Effect1, fEffectDone);  [ allow door #2 to update  start.update(oDoor2);  [ temporarily halt Jerrod while door #2 opens  stop.update(ego);  [ open door #2  end.of.loop(oDoor2, fDoor2Moved);  set(fDoor2Open);  }  [ if Jerrod is not by door #2 and it is openif (!posn(ego, 66, 106, 107, 108) && isset(fDoor2Open))  {  [ allow door #2 to update  start.update(oDoor2);  [ close it  reverse.loop(oDoor2, fDoor2Moved);  reset(fDoor2Open);  }  [ if door #2 is done cyclingif (isset(fDoor2Moved))  {  [ stop updating door #2  stop.update(oDoor2);  [ allow Jerrod to continue moving  start.update(ego);  [ reset the movement flag  reset(fDoor2Moved);  [ if door #2 is now closed  if (!isset(fDoor2Open))    {    [ play door-closed sound    sound(s.Effect2, fEffectDone);    }  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ the kitchen is to the leftif (posn(ego, 1, 109, 1, 142))  {  [ adjust Jerrod's position for new room  position(ego, 146, 165);  new.room(rm.SF_Kitchen); [ ##LE001##  }[ if further down on the leftif (posn(ego, 1, 143, 1, 166))  {  [ still goes to kitchen, but Jerrod is placed closer to  [ center  position(ego, 94, 165);  new.room(rm.SF_Kitchen); [ ##LE002##  }  [ south gate is to the rightif (posn(ego, 152, 109, 152, 142))  {  [ adjust Jerrod's position for new room  position(ego, 32, 165);  new.room(rm.SF_SouthGate); [ ##LE003##  }[ if further down on the rightif (posn(ego, 152, 143, 152, 166))  {  [ still goes to south gate, but Jerrod is closer to the  [ center  position(ego, 94, 165);  new.room(rm.SF_SouthGate); [ ##LE004##  }  [ going down (along bottom) leads to bunkroomif (posn(ego, 1, 166, 152, 166))  {  [ put Jerrod in center, along bottom  position(ego, 76, 165);  new.room(rm.SF_BunkRoom); [ ##LE005##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look doorif (said("examine", "door"))  {  print("It's just a normal lookin' door.");  }  [ open doorif (said("open", "door"))  {  print("Just walk up to it.");  }  [ look around/lookif ((said("examine", "around") ||     said("examine")))  {  [ response depends on Jerrod's location  if ((posn(ego, 60, 106, 110, 107) ||       posn(ego, 70, 62, 103, 62) ||       posn(ego, 13, 59, 43, 59) ||       posn(ego, 44, 59, 130, 61) ||       posn(ego, 131, 59, 152, 59)))    {    if (posn(ego, 60, 106, 110, 107))      {      print("This is a room where supplies such as gunpowder, shot, and wine "            "are stored.");      print("You don't need anything here!");      }    if (posn(ego, 70, 62, 103, 62))      {      print("From here ya see the blacksmith shop and mule corral not far away.");      }    if (posn(ego, 13, 59, 43, 59))      {      print("This is the fort's infirmary. It is clean and sanitary.");      print("You don't need anything here!");      }    if (posn(ego, 44, 59, 130, 61))      {      print("This is the administration headquarters of Sutter's Fort. Things "            "must be runnin' smoothly because the office has been left "            "unattended.");      print("You don't need anything here!");      }    if (posn(ego, 131, 59, 152, 59))      {      print("This is the fort's dinin' room, but there's nothin' to eat here.");      print("You don't need anything here!");      }    }  else    {    print("You'd think there'd be a lot to look at here but there's nothin' of "          "interest.");    }  }  [ look antler/look horn/look upif ((said("examine", "antler") ||     said("examine", "horn") ||     said("examine", "up")))  {  [ if right below them, at top of stairs  if (posn(ego, 70, 62, 103, 62))    {    print("Ya ain't never seen a set of antlers like the one hangin' above this "          "door!");    }  else    {    print("There's a set of antlers above the upper door of the administration "          "building.");    }  }  [ get antlersif ((said("acquire", "antler") ||     said("acquire", "horn")))  {  print("Ya don't need the antlers; they're just decorations.");  }  [ look shot/look gunpowderif ((said("examine", "shot") ||     said("examine", "powder") ||     said("examine", "keg") ||     said("examine", "gun", "powder") ||     said("examine", "gunpowder")))  {  [ if in the supply room  if (posn(ego, 60, 106, 110, 107))    {    print("Stacked against the wall are boxes of shot and kegs of gunpowder.");    }  else    {    print("Ya cain't see that from here!");    }  }  [ look wineif ((said("examine", "wine") ||     said("examine", "wine", "bottle") ||     said("examine", "bottle")))  {  [ if in supply room  if (posn(ego, 60, 106, 110, 107))    {    print("In the supply room ya see countless bottles of vintage California "          "wine.");    }  else    {    print("Ya cain't see that from here!");    }  }  [ look ground/look grassif ((said("examine", "dirt") ||     said("examine", "grass")))  {  print("Animals eat the grass and keep it well-trimmed!");  }  [ look windowif (said("examine", "glass"))  {  print("There's lots of windows, but none of them are important.");  }  [ look fort/look wallsif ((said("examine", "fort") || said("examine", "wall")))  {  print("There's nothin' unusual 'bout these walls.");  }  [ look stairsif (said("examine", "stair"))  {  print("The stairs lead to the second story.");  }  [ climb stairsif ((said("climb", "stair") ||     said("go", "stair")))  {  print("Just walk up to it.");  }  [ use shovel/dig for goldif ((said("use", "shovel") ||     said("dig", "gold") ||     said("dig") ||     said("dig", "hole")))  {  [ if Jerrod has the shovel  if (has("Shovel"))    {    print("Diggin' ain't allowed here! Do that somewhere else!!");    }  else    {    print("No shovel, no diggin'!");    }  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan")))  {  print("Ya needs to be in the water!");  }  Done:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ call mule logic to handle mule related commands  call(lgc.Mule);  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "Ya don't need the antlers; they're just decorations."#message 3 "Ya cain't do that from here."#message 5 "It's just a normal lookin' door."#message 8 "Just walk up to it."#message 16 "You'd think there'd be a lot to look at here but there's nothin' of interest."#message 17 "This is a room where supplies such as gunpowder, shot, and wine are stored."#message 18 "From here ya see the blacksmith shop and mule corral not far away."#message 19 "This is the fort's infirmary. It is clean and sanitary."#message 20 "This is the administration headquarters of Sutter's Fort. Things must be runnin' smoothly because the office has been left unattended."#message 21 "This is the fort's dinin' room, but there's nothin' to eat here."#message 22 "Ya ain't never seen a set of antlers like the one hangin' above this door!"#message 23 "There's a set of antlers above the upper door of the administration building."#message 24 "In the supply room ya see countless bottles of vintage California wine."#message 25 "Stacked against the wall are boxes of shot and kegs of gunpowder."#message 26 "Ya cain't see that from here!"#message 27 "Animals eat the grass and keep it well-trimmed!"#message 28 "There's lots of windows, but none of them are important."#message 29 "There's nothin' unusual 'bout these walls."#message 30 "The stairs lead to the second story."#message 40 "Diggin' ain't allowed here! Do that somewhere else!!"#message 41 "No shovel, no diggin'!"#message 42 "Ya needs to be in the water!"#message 74 "You don't need anything here!"