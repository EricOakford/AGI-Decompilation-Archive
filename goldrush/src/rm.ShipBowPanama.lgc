[***********************************************************[[ rm.ShipBowPanama[[ An interior room of the steamship, that looks like it was[ intended for use in the Panama journey, but is never[ actually used in the game. But they never deleted the[ unused room.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oEngine                      o1#define oWake                        o2#define oWaves                       o3#define oDoor                        o4#define oLand                        o5#define oReadingMan                  o8#define vCholeraTime                v86  [ override CoalFireTime#define vOvlPic                    v220#define vTmpStep                   v221#define vLandStatus                v222#define vLandStep                  v223[ v224 through v227 are not used #define vRoomPic                   v228#define vFlipStatus                v229#define fOnLadder                  f220#define fDoorClosed                f221#define fDoorOpen                  f222#define fLandMoved                 f223[ f224 through f226 are not used#define fDoneDying                 f227#define fDoneFlipping              f228#define fSoundDone                 f229[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ if at trip point 2 (beginning of trip)  if (CurrentTripTime == 2)    {    [ hold is full    vOvlPic = ovl.FwdHold1;    }  [ at trip point 4 ( trip point four is never assigned)  if (CurrentTripTime == 4)    {    [ hold is half empty    vOvlPic = ovl.FwdHold2;    }      [ use the normal ship bow interior room  vRoomPic = pic.ShipBowInterior;    [ load the main timing logic  load.logics(lgc.PanamaTripTiming);    [ load the overlay picture and room picture  load.pic(vOvlPic);  load.pic(vRoomPic);    [ load views used in the room  load.view(vw.JerrodNY);  load.view(vw.ClimbingJerrodRight);  load.view(vw.SickJerrodNY);  load.view(vw.DyingJerrodNY);  load.view(vw.ShipBowArt);  load.view(vw.OceanItems);  load.view(vw.MidShipArt2);  load.view(vw.ShipSternArt);    [ load sound used in the room  load.sound(s.AddToScore);    [ draw picture, and overlay the forward hold  draw.pic(vRoomPic);  overlay.pic(vOvlPic);    [ add bunks to the image  add.to.pic(vw.ShipSternArt, 3, 0, 31, 106, 7, 7);  [ add personal gear to the image  add.to.pic(vw.ShipSternArt, 3, 1, 62, 68, 6, 6);    [ ship's engine  animate.obj(oEngine);  set.view(oEngine, vw.ShipBowArt);  set.loop(oEngine, 0);  set.priority(oEngine, 14);  position(oEngine, 0, 92);  draw(oEngine);  start.cycling(oEngine);    [ islands/land  animate.obj(oLand);  set.view(oLand, vw.OceanItems);  set.priority(oLand, 4);  [ land step size  vLandStep = 14;  ignore.objs(oLand);  ignore.blocks(oLand);    [ waves in front of ship  animate.obj(oWaves);  set.view(oWaves, vw.ShipBowArt);  set.loop(oWaves, 2);  set.cel(oWaves, 0);  set.priority(oWaves, 14);  position(oWaves, 101, 107);  draw(oWaves);  start.cycling(oWaves);    [ wake at bow of ship  animate.obj(oWake);  set.view(oWake, vw.ShipBowArt);  set.loop(oWake, 1);  set.cel(oWake, 0);  set.priority(oWake, 14);  position(oWake, 81, 108);  draw(oWake);  start.cycling(oWake);    [ door to bunkroom  animate.obj(oDoor);  stop.cycling(oDoor);  set.view(oDoor, vw.MidShipArt2);  set.loop(oDoor, 1);  set.cel(oDoor, 0);  set.priority(oDoor, 8);  ignore.objs(oDoor);  [ door is closed  set(fDoorClosed);  position(oDoor, 31, 106);  draw(oDoor);    [ man reading Bible  animate.obj(oReadingMan);  set.view(oReadingMan, vw.ShipBowArt);  [ if Jerrod has the Bible  if (has("Bible"))    {    [ use loop of man without Bible    set.loop(oReadingMan, 5);    }  else    {    [ use loop of man reading the Bible    set.loop(oReadingMan, 4);    }  set.cel(oReadingMan, 0);  set.priority(oReadingMan, 9);  position(oReadingMan, 53, 51);  draw(oReadingMan);  [ reader doesn't cycle until he needs to turn a page  stop.cycling(oReadingMan);    [ Jerrod  animate.obj(ego);  [ if NOT time for Jerrod to get Cholera  if (CurrentTripTime != vCholeraTime)    {    [ use normal view with NY attire    set.view(ego, vw.JerrodNY);    }  else    {    [ use sick view    set.view(ego, vw.SickJerrodNY);    }  [ this room is 2D, so set priority and leave it  set.priority(ego, 10);    [ position Jerrod, depending on previous room  [ coming from mid ship, upper deck  if (posn(ego, 0, 56, 5, 58))    {    position(ego, 19, 57);    }  [ coming from mid ship, main deck  if (posn(ego, 0, 105, 5, 107))    {    position(ego, 19, 106);    }      [ if not coming from midship interior (Panama)  if (previousRoom != rm.ShipMidPanama)    {    position(ego, 45, 57);    }  [ add Jerrod to screen  draw(ego);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if at top of ladderif (posn(ego, 20, 58, 22, 58))  {  [ bump position so climbing view will  [ be in correct spot  if (posn(ego, 20, 58, 20, 58))    {    TmpX = 0;    }  if (posn(ego, 21, 58, 21, 58))    {    TmpX = -1; [ 255;    }  [ Jerrod gets on the ladder  set(fOnLadder);  TmpY = 16;  [ set loop and fix it  set.view(ego, vw.ClimbingJerrodRight);  set.loop(ego, 0);  fix.loop(ego);  [ adjust step time on ladder to 2  vTmpStep = 2;  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder, and still on itif (posn(ego, 20, 106, 20, 106) && isset(fOnLadder))  {  [ Jerrod gets off the ladder  reset(fOnLadder);  [ bump position so view appears correctly  TmpX = 1;  TmpY = 0;  [ if Jerrod is not sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }  [ allow loop to cycle with direction  release.loop(ego);  [ restore step time to 1  vTmpStep = 1;  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [ if at bottom of ladder, but not on it yetif (posn(ego, 20, 105, 22, 105) && !isset(fOnLadder))  {  [ bump position so climbing view looks correct  if (posn(ego, 20, 105, 20, 105))    {    TmpX = 0;    }  if (posn(ego, 21, 105, 21, 105))    {    TmpX = -1; [ 255;    }  [ no check for 22; shouldn't it adjust position by -2?    [ Jerrod is now on the ladder  set(fOnLadder);  TmpY = -1; [ 255;  set.view(ego, vw.ClimbingJerrodRight);  [ set and fix the loop  set.loop(ego, 0);  fix.loop(ego);  [ adjust step time to 2  vTmpStep = 2;  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [ if at top of ladder and still on itif (posn(ego, 20, 72, 20, 72) && isset(fOnLadder))  {  [ Jerrod gets off the ladder  reset(fOnLadder);  [ bump position so normal view looks correct  TmpX = 1;  TmpY = -15; [ 241;  [ if not sick  if (CurrentTripTime != vCholeraTime)    {    [ use normal view    set.view(ego, vw.JerrodNY);    }  else    {    [ otherwise use sick view    set.view(ego, vw.SickJerrodNY);    }  [ allow loop to change with direction  release.loop(ego);  [ reset step time to 1  vTmpStep = 1;  step.size(ego, vTmpStep);  reposition(ego, TmpX, TmpY);  }  [if Jerrod is due to get choleraif (CurrentTripTime == vCholeraTime)  {  [ if currently healthy  if (EgoHealthStatus == 0)    {    [ if he's ready to die    if (isset(DyingAtSea))      {      [ can't die on a ladder (needs room to fall down)      if ((EgoY == 57 || EgoY == 106))        {        [ reset the flag        reset(DyingAtSea);        [ change view to Jerrod dying        set.view(ego, vw.DyingJerrodNY);        [ make sure to start with first cel        set.cel(ego, 0);        [ start cycling        end.of.loop(ego, fDoneDying);        [ allow ego object to cycle when not moving        set(CycleAtRest);        }      }    [ after Jerrod finishes dying    if (isset(fDoneDying))      {      [ reset the flag      reset(fDoneDying);      [ stop updating Jerrod      stop.update(ego);      [ set health status to death by cholera      EgoHealthStatus = 21;      [ load and call final death logic      load.logics(lgc.DeathCholera);      call(lgc.DeathCholera);      }    }  }  [ if no land currently in sightif (vLandStatus != 250)  {  random(210, 249, vLandStatus);  if (vLandStatus == 230)    {    [ if going up river, or boats landing (an obvious    [ cut/paste from Cape Horn logics; these two times make    [ sense there, but not on Panama trip)    if ((CurrentTripTime == 9 || CurrentTripTime == 11))      {      [ use lands with less vegetation      set.loop(oLand, 3);      }    else      {      [ further north, use lands with more vegetation      set.loop(oLand, 2);      }    [ fix loop (don't want it to change during movement)    fix.loop(oLand);    [ make sure first cel is selected    set.cel(oLand, 0);    [ set status to show land is visible    vLandStatus = 250;    [ position it on right edge of screen    position(oLand, 123, 107);    [ there's only one cel, so stop.cycling doesn't     [ actually do anything    draw(oLand);    stop.cycling(oLand);    [ move the land to left of screen (to simulate ship is    [ passing it)    move.obj(oLand, 48, 107, 1, fLandMoved);    step.time(oLand, vLandStep);    }  }  [ when land has passed byif (isset(fLandMoved))  {  [ remove it from screen  reset(fLandMoved);  erase(oLand);  [ increment status so randomizer can start again  ++vLandStatus;  [ releasing loop doesn't actually do anything in this case  release.loop(oLand);  }  [ if not going up river, or boats landing (an obvious[ cut/paste from Cape Horn logics; these two times make[ sense there, but not on Panama trip)if (CurrentTripTime != 9 && CurrentTripTime != 11)  {  [ reading man will randomly flip pages ( programmers  [ didn't bother to check if he still has the Bible; if he  [ doesn't, this code doesn't do anything, since the loop  [ assigned to oReadingMan only has one cel) programmers  [ also don't bother checking current value of vFlipStatus;  [ it doesn't affect the cycling of the loop, but it's not  [ good coding      [ random chance reading man flips page  random(1, 40, vFlipStatus);  [ one in 40 chance  if (vFlipStatus == 23)    {    [ cycle the view to flip a page    end.of.loop(oReadingMan, fDoneFlipping);    }  [ if done flipping  if (isset(fDoneFlipping))    {    [ reset back to first cel    reset(fDoneFlipping);    set.cel(oReadingMan, 0);    }  }  [ if Jerrod is near the bunkroom door and it is closedif (posn(ego, 23, 106, 35, 106) && (isset(fDoorClosed)))  {  [ open it  reset(fDoorClosed);  end.of.loop(oDoor, fDoorOpen);  }  [ if Jerrod is NOT by bunkroom door, and it's openif (!posn(ego, 23, 106, 35, 106) &&     (isset(fDoorOpen)))  {  [ close it  reset(fDoorOpen);  reverse.loop(oDoor, fDoorClosed);  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == LEFT_EDGE)  {  new.room(rm.ShipMidPanama); [ ##LE001##  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ if near the reading man  if (posn(ego, 47, 57, 67, 57))    {    print("This is a pleasant man to talk to.");    print("Quite a conversationalist!");    }  else    {    print("Get a little closer!");    }  }  [ look manif (said("examine", "boy"))  {  [ if near the reading man  if (posn(ego, 47, 57, 67, 57))    {    print("This man looks civilized enough.");    print("But he is a big man, with huge hands.");    print("He looks like he might be tough!");    }  else    {    print("Get a little closer!");    }  }  [ get Bibleif ((said("acquire", "bible") ||     said("acquire", "book") ||     said("ask", "bible") ||     said("ask", "book")))  {  [ if Jerrod already has the Bible  if (has("Bible"))    {    print("You already have the %w2!");    }  else    {    [ if by the reading man    if (posn(ego, 47, 57, 67, 57))      {      print("The %w2 is not yours.");      print("However, the man has just finished reading the %w2 and offers to "            "give it to you.");      print("You graciously receive it.");      [ play score sound      sound(s.AddToScore, fSoundDone);      print("Thank you!!");      print.at("You're welcome!", 2, 16, 17);      [ score seven points      currentScore  += 7;      [ take the Bible      get("Bible");      [ change reading man to loop without the Bible      set.loop(oReadingMan, 5);      }    else      {      print("What %w2?");      }    }  }  [ look around/lookif ((said("examine", "around") ||     said("examine", "boat") ||     said("examine")))  {  [ if on top deck  if (EgoY == 57)    {    print("This is the forward section of the sun, rain, snow, hail and sleet "          "deck.");    print("At this moment, the weather is nice and sunny.");    if (has("Bible"))      {      print("There is also a man relaxing on the deck.");      }    else      {      print("There is also a man relaxing with a good book.");      }    }  [ if on main deck  if (EgoY == 106)    {    [ response depends on X position    if (EgoX < 23)      {      print("You look around at the awesome, but noisy, machinery in amazement.");      }    if (EgoX > 22 && EgoX < 34)      {      print("You are in the doorway between the bunk room and the engine room.");      }    if (EgoX > 33)      {      print("This is the bunk room.  It is surprisingly neat considering the "            "number of people that occupy this room.");      }    }  }  [ go fishingif ((said("go", "fish") ||     said("go", "fishing") ||     said("fish")))  {  print("Fishing would be fun, and maybe helpful, but there is a better place!");  }  [ look Bibleif ((said("examine", "bible") ||     said("examine", "book")))  {  [ if Jerrod doesn't have the Bible  if (!has("Bible"))    {    [ if near the reading man    if (posn(ego, 47, 57, 67, 57))      {      print("It is a black bound book with pages edged with gold.");      print("It definitely resembles what some folks would call \"The Good "            "Book\", the Bible.");      }    else      {      print("Get a little closer!");      }    }  }  [ look bed/look bunkif (said("examine", "bed"))  {  [ if in bunk room  if (posn(ego, 34, 106, 159, 106))    {    [ this is actually the response for the galley - clearly    [ a bug    print("There is a stove, table and benches.");    }  else    {    print("Get a little closer!");    }  }  [ climb ladderif ((said("go", "ladder") ||     said("go", "up", "ladder") ||     said("go", "down", "ladder") ||     said("use", "ladder") ||     said("climb", "ladder")))  {  print("Go ahead and climb on!");  }  [ look riggingif ((said("examine", "rope") || said("examine", "rigging")))  {  print("The rigging on the Sea Farer isn't nearly as complicated as on some "        "clippers you've seen.");  }  [ look mastif (said("examine", "mast"))  {  print("Made of strong wood the mast goes through both decks to the keel, "        "making a sturdy structure.");  }  [ look wheelif ((said("examine", "wheel") ||     said("examine", "paddle", "wheel") ||     said("examine", "paddle")))  {  print("The paddles are turning, propelling the ship without the wind's aid.");  }  [ look ladderif (said("examine", "ladder"))  {  print("This ladder provides access between two decks of the ship.");  }  [ look doorif (said("examine", "door"))  {  [ if near the bunk room  if (posn(ego, 0, 88, 130, 106))    {    print("This is the door to the bunk room.");    }  else    {    print("You can't do that from here!");    }  }  [ look deckif (said("examine", "deck"))  {  print("There's nothing important right here!");  }  [ open doorif (said("open", "door"))  {  [ if the door is closed  if (isset(fDoorClosed))    {    print("Just walk up to it!");    }  else    {    print("The door is open!");    }  }  [ close doorif (said("close", "door"))  {  [ if door is open  if (isset(fDoorOpen))    {    print("Just walk away from it!");    }  else    {    print("The door is closed!");    }  }  [ look water/look oceanif ((said("examine", "water") || said("examine", "ocean")))  {  [ if on top deck  if (posn(ego, 0, 57, 130, 57))    {    print("The ocean stretches as far as the eye can see!");    }  else    {    print("You can't do that from here!");    }  }  [ look engineif (said("examine", "engine"))  {  [ if below deck  if (posn(ego, 0, 88, 35, 106))    {    print("That engine sure looks powerful!");    }  else    {    print("You can't do that from here!");    }  }  [ look islandif (said("examine", "island"))  {  [ if on top deck  if (posn(ego, 0, 57, 130, 57))    {    print("An occasional island passes by the ship.");    }  else    {    print("You can't do that from here!");    }  }  Done:[ call main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 10 "This man looks civilized enough."#message 11 "But he is a big man, with huge hands."#message 12 "He looks like he might be tough!"#message 13 "Get a little closer!"#message 14 "It is a black bound book with pages edged with gold."#message 15 "It definitely resembles what some folks would call \"The Good Book\", the Bible."#message 16 "This is a pleasant man to talk to."#message 17 "Quite a conversationalist!"#message 18 "What %w2?"#message 19 "You already have the %w2!"#message 22 "The %w2 is not yours."#message 23 "However, the man has just finished reading the %w2 and offers to give it to you."#message 24 "You graciously receive it."#message 25 "Thank you!!"#message 26 "You're welcome!"#message 27 "You look around at the awesome, but noisy, machinery in amazement."#message 28 "You are in the doorway between the bunk room and the engine room."#message 29 "This is the bunk room.  It is surprisingly neat considering the number of people that occupy this room."#message 36 "This is the forward section of the sun, rain, snow, hail and sleet deck."#message 37 "At this moment, the weather is nice and sunny."#message 38 "There is also a man relaxing with a good book."#message 41 "Fishing would be fun, and maybe helpful, but there is a better place!"#message 43 "There is a stove, table and benches."#message 50 "There is nothing that even resembles a %w2 here."#message 67 "I sure don't see a %w2 around here!"#message 75 "There is also a man relaxing on the deck."#message 90 "Go ahead and climb on!"#message 91 "The rigging on the Sea Farer isn't nearly as complicated as on some clippers you've seen."#message 92 "Made of strong wood the mast goes through both decks to the keel, making a sturdy structure."#message 93 "You can't do that from here!"#message 94 "This is the door to the bunk room."#message 95 "The paddles are turning, propelling the ship without the wind's aid."#message 96 "This ladder provides access between two decks of the ship."#message 97 "These men move when the captain bellows, \"Pour the coals on!\""#message 98 "Just walk up to it!"#message 99 "Just walk away from it!"#message 100 "The door is closed!"#message 101 "The ocean stretches as far as the eye can see!"#message 102 "That engine sure looks powerful!"#message 103 "The door is open!"#message 106 "Just walk away from it!"#message 107 "There's nothing important right here!"#message 110 "An occasional island passes by the ship."