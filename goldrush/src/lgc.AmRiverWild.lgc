[***********************************************************[[ lgc.AmRiverWild[[ This logic creates the random wilderness scenes along the [ American River, which acts as the northern border to the[ wilderness area. Jerrod can pan for gold in the river, or[ dig for gold along the shore.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oProspector                  o1#define vRandomPic                   v220#define vOverhangPic                 v221#define vFrontTree1Pic               v222#define vFrontTree2Pic               v223#define vFrontTreeCount              v224#define vMidTree1Pic                 v225#define vMidTree2Pic                 v226#define vMidTree3Pic                 v227#define vMidTree4Pic                 v228#define vArtPriority                 v229#define vArtMargin                   v230[ v231 and v232 are not used#define vMidTreeCount                v233#define vArtX                        v234#define vBushCount                   v235#define vGoldDensity                 v236#define vGoldFound                   v237#define vTimer                       v238#define vDigStatus                   v239#define vHolesDug                    v240#define vPanStatus                   v241#define vProspectorChance            v242#define vDistance                    v243#define fTreeAdded                   f220[ f221 is not used#define fBushAdded                   f222[ f223 and f224 are not used#define fWading                      f225[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ depending on location, set the 'gold density' i.e. the  [ more gold in a room, the higher the chance that Jerrod  [ will encounter another prosepector, or find gold while  [ digging/panning  if (WildernessX > 8 && WildernessX < 61)    {    if (WildernessX > 8 && WildernessX < 11)      {      vGoldDensity = 1;      }    if (WildernessX > 39 && WildernessX < 61)      {      vGoldDensity = 1;      }    if (WildernessX > 10 && WildernessX < 13)      {      vGoldDensity = 2;      }    if (WildernessX > 27 && WildernessX < 40)      {      vGoldDensity = 2;      }    if (WildernessX > 12 && WildernessX < 15)      {      vGoldDensity = 3;      }    if (WildernessX > 23 && WildernessX < 28)      {      vGoldDensity = 3;      }    if (WildernessX > 14 && WildernessX < 24)      {      vGoldDensity = 4;      }    }    ChooseBkgd:[ choose a random American River background  random(121, 126, vRandomPic);  [ if same picture was used in previous room  if (vRandomPic == PrevWildernessPic)    {    [ try again    goto(ChooseBkgd);    }  [ savet this background as previous  PrevWildernessPic = vRandomPic;    [ load the chosen background  load.pic(vRandomPic);  [ draw it  draw.pic(vRandomPic);    [ randomly decide how many middle trees to add  random(0, 8, vMidTreeCount);    [ divide chosen count by 2, rounded down ( this would be  [ much easier and simpler to just do vMidTreeCount /= 2;)  if ((vMidTreeCount == 0 || vMidTreeCount == 1))    {    vMidTreeCount = 0;    }  if ((vMidTreeCount == 2 || vMidTreeCount == 3))    {    vMidTreeCount = 1;    }  if ((vMidTreeCount == 4 || vMidTreeCount == 5))    {    vMidTreeCount = 2;    }  if ((vMidTreeCount == 6 || vMidTreeCount == 7))    {    vMidTreeCount = 3;    }  if (vMidTreeCount == 8)    {    vMidTreeCount = 4;    }      [ if only one  if (vMidTreeCount == 1)    {    [ choose a random tree image    random(167, 170, vMidTree1Pic);    [ set flag to show a tree was added    set(fTreeAdded);    [ load the picture    load.pic(vMidTree1Pic);    [ and overlay it    overlay.pic(vMidTree1Pic);    }      [ if exactly two trees  if (vMidTreeCount == 2)    {    [ choose a random tree #1    random(167, 170, vMidTree1Pic);    [ set flag to show tree added    set(fTreeAdded);    MidTreeTwo:    [ choose a random tree #2    random(167, 170, vMidTree2Pic);    [ if it matches tree #1    if (vMidTree2Pic == vMidTree1Pic)      {      [ try again      goto(MidTreeTwo);      }    [ load both pictures    load.pic(vMidTree1Pic);    load.pic(vMidTree2Pic);    [ but overlay them in numerical order    if (vMidTree1Pic < vMidTree2Pic)      {      overlay.pic(vMidTree1Pic);      overlay.pic(vMidTree2Pic);      }    else      {      overlay.pic(vMidTree2Pic);      overlay.pic(vMidTree1Pic);      }    }      [ if exactly three trees  if (vMidTreeCount == 3)    {    [ choose a random tree #1    random(167, 170, vMidTree1Pic);    [ set flag to show a tree was added    set(fTreeAdded);    MidTreeTwo_3:    [ choose a random tree #2    random(167, 170, vMidTree2Pic);    [ if it matches tree #1    if (vMidTree2Pic == vMidTree1Pic)      {      [ try again      goto(MidTreeTwo_3);      }      MidTreeThree:    [ choose a random tree #3    random(167, 170, vMidTree3Pic);    [ if it matches tree #1 or tree #2    if ((vMidTree3Pic == vMidTree1Pic ||         vMidTree3Pic == vMidTree2Pic))      {      [ try again      goto(MidTreeThree);      }          [ sort them from low to highTreeSort:    [ if tree 2 is lower than tree 1    if (vMidTree2Pic < vMidTree1Pic)      {      [ swap them      vMidTreeCount = vMidTree2Pic;      vMidTree1Pic = vMidTree2Pic;      vMidTree2Pic = vMidTreeCount;      }    [ if tree 3 is lower than tree2    if (vMidTree3Pic < vMidTree2Pic)      {      [ swap them      vMidTreeCount = vMidTree3Pic;      vMidTree3Pic = vMidTree2Pic;      vMidTree2Pic = vMidTreeCount;      [ and sort one more time      goto(TreeSort);      }    [ load all three pictures    load.pic(vMidTree1Pic);    load.pic(vMidTree2Pic);    load.pic(vMidTree3Pic);    [ and overlay them    overlay.pic(vMidTree1Pic);    overlay.pic(vMidTree2Pic);    overlay.pic(vMidTree3Pic);    }      [ if exactly four trees  if (vMidTreeCount == 4)    {    [ set flag to show tree added    set(fTreeAdded);    [ load all four mid tree overlays    vMidTree1Pic = ovl.Tree5;    vMidTree2Pic = ovl.Tree6;    vMidTree3Pic = ovl.Tree7;    vMidTree4Pic = ovl.Tree8;    load.pic(vMidTree1Pic);    load.pic(vMidTree2Pic);    load.pic(vMidTree3Pic);    load.pic(vMidTree4Pic);    [ and overlay them all    overlay.pic(vMidTree1Pic);    overlay.pic(vMidTree2Pic);    overlay.pic(vMidTree3Pic);    overlay.pic(vMidTree4Pic);    }      [ determine random number of front trees to add  random(0, 2, vFrontTreeCount);  [ if Jerrod is following his mule  if ((isset(MuleLeadingWay) || MuleFollowCounter > 0))    {    [ force count to zero    vFrontTreeCount = 0;    }      [ if not front trees  if (vFrontTreeCount == 0)    {    [ reset the previous values    OldFrontTree1 = 0;    OldFrontTree2 = 0;    }      [ if one or more front trees  if (vFrontTreeCount > 0)    {FrontTreeOne:    [ choose a random tree image    random(171, 174, vFrontTree1Pic);    [ if it matches trees used in previous room    if ((vFrontTree1Pic == OldFrontTree1 ||         vFrontTree1Pic == OldFrontTree2))      {      [ try again      goto(FrontTreeOne);      }    [ set flag to show a tree was added    set(fTreeAdded);    [ load the tree picture    load.pic(vFrontTree1Pic);    }      [ if two front trees  if (vFrontTreeCount == 2)    {FrontTreeTwo:    [ choose a random tree image    random(171, 174, vFrontTree2Pic);    [ if it matches trees used in previous room or tree #1    if ((vFrontTree2Pic == OldFrontTree2 ||         vFrontTree2Pic == OldFrontTree1 ||         vFrontTree2Pic == vFrontTree1Pic))      {      [ try again      goto(FrontTreeTwo);      }        [ set flag to show tree added (this was already done    [ when front tree #1 was added)    set(fTreeAdded);    [ load the tree picture    load.pic(vFrontTree2Pic);    }      [ save the trees as previous  OldFrontTree1 = vFrontTree1Pic;  OldFrontTree2 = vFrontTree2Pic;    [ if mule is NOT leading the way  if (!isset(MuleLeadingWay))    {    [ overlay them in numerical order (skipping any trees    [ with value of zero)    if (vFrontTree1Pic < vFrontTree2Pic)      {      if (vFrontTree1Pic != 0)        {        overlay.pic(vFrontTree1Pic);        }      if (vFrontTree2Pic != 0)        {        overlay.pic(vFrontTree2Pic);        }      }    else      {      if (vFrontTree2Pic != 0)        {        overlay.pic(vFrontTree2Pic);        }      if (vFrontTree1Pic != 0)        {        overlay.pic(vFrontTree1Pic);        }      }    }      [ random chance an overhang is added (use front tree  [ counter)  random(0, 6, vFrontTreeCount);    [ 6 out 7 chance  if (vFrontTreeCount > 0)    {ChooseOverhang:    [ choose a random overhang image    random(175, 180, vOverhangPic);    [ if it matches the overhang used in previous room    if (vOverhangPic == OldOverhang)      {      [ try again      goto(ChooseOverhang);      }    [ save this overhang as previous    OldOverhang = vOverhangPic;    [ load the picture    load.pic(vOverhangPic);    }      [ if an overhang was chosen  if (vOverhangPic != 0)    {    [ overlay it    overlay.pic(vOverhangPic);    }      [ discard the room picture (this also discards all the  [ overlays that were loaded after it!)  discard.pic(vRandomPic);    [ load mule logic  load.logics(lgc.Mule);    [ load views used in the room  load.view(vw.JerrodCA);  load.view(vw.WadingJerrodCA);  load.view(vw.WildernessArt);  load.view(vw.Panning);  load.view(vw.PanSuccess);  load.view(vw.JerrodDigging);  [ if the room has gold  if (vGoldDensity > 0)    {    [ load panners view    load.view(vw.Panners);    }      [ load sounds used in the room  load.sound(m.FoundGold);  load.sound(m.FollowMule);    [ add some random rocks and bushes; start with three  [ random rocks    [ since picture variables not needed anymore, some are  [ re-defined to use for the add.to.pic.v command  #define vArtView        v220  [ override vRandomPic  #define vArtLoop        v224  [ override vFrontTreeCount  #define vArtCel         v233  [ override vMidTreeCount  #define vArtY           v221  [ override vOverhangPic      [ rock #1 - use vw.WildernessArt  vArtView = vw.WildernessArt;    [ set priority to automatic  vArtPriority = 0;  [ include the control line box  vArtMargin = 0;    [ choose a random image  random(0, 8, vArtCel);    [ use loop variable to choose a random position  random(1, 3, vArtLoop);  if (vArtLoop == 1)    {    random(0, 139, vArtX);    vArtY = 109;    }  else    {    if (vArtLoop == 2)      {      random(100, 139, vArtX);      }    if (vArtLoop == 3)      {      random(0, 57, vArtX);      }    random(4, 7, vArtLoop);    if (vArtLoop == 4)      {      vArtY = 121;      }    if (vArtLoop == 5)      {      vArtY = 133;      }    if (vArtLoop == 6)      {      vArtY = 145;      }    if (vArtLoop == 7)      {      vArtY = 157;      }    }      [ use loop with rock images  vArtLoop = 0;  [ add it to picture  add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    [ rock #2 - choose a random image  random(0, 8, vArtCel);    [ use loop variable to choose a random position  random(1, 3, vArtLoop);  if (vArtLoop == 1)    {    random(0, 139, vArtX);    vArtY = 109;    }  else    {    if (vArtLoop == 2)      {      random(100, 139, vArtX);      }    if (vArtLoop == 3)      {      random(0, 57, vArtX);      }    random(4, 7, vArtLoop);    if (vArtLoop == 4)      {      vArtY = 121;      }    if (vArtLoop == 5)      {      vArtY = 133;      }    if (vArtLoop == 6)      {      vArtY = 145;      }    if (vArtLoop == 7)      {      vArtY = 157;      }    }      [ use loop with rock images  vArtLoop = 0;  [ add it to the picture  add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    [ rock #3 - choose a random image  random(0, 8, vArtCel);    [ use loop variable to choose a random position  random(1, 3, vArtLoop);  if (vArtLoop == 1)    {    random(0, 139, vArtX);    vArtY = 109;    }  else    {    if (vArtLoop == 2)      {      random(100, 139, vArtX);      }    if (vArtLoop == 3)      {      random(0, 57, vArtX);      }    random(4, 7, vArtLoop);    if (vArtLoop == 4)      {      vArtY = 121;      }    if (vArtLoop == 5)      {      vArtY = 133;      }    if (vArtLoop == 6)      {      vArtY = 145;      }    if (vArtLoop == 7)      {      vArtY = 157;      }    }      [ use loop with rock images  vArtLoop = 0;  [ add it to picture  add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    [ rock #4 - choose a random image  random(0, 8, vArtCel);    [ use loop variable to choose a random position  random(1, 3, vArtLoop);  if (vArtLoop == 1)    {    random(0, 139, vArtX);    vArtY = 109;    }  else    {    if (vArtLoop == 2)      {      random(100, 139, vArtX);      }    if (vArtLoop == 3)      {      random(0, 57, vArtX);      }    random(4, 7, vArtLoop);    if (vArtLoop == 4)      {      vArtY = 121;      }    if (vArtLoop == 5)      {      vArtY = 133;      }    if (vArtLoop == 6)      {      vArtY = 145;      }    if (vArtLoop == 7)      {      vArtY = 157;      }    }      [ use loop with rock images  vArtLoop = 0;  [ add it to picture  add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    [ choose a random number of bushes to add  random(0, 4, vBushCount);    [ if at least one bush is added  if (vBushCount > 0)    {    [ set flag to show a bush was added    set(fBushAdded);        [ use vw.WildernessArt view    vArtView = vw.WildernessArt;        [ use automatic priority    vArtPriority = 0;    [ include control line box    vArtMargin = 0;        [ choose a random image    random(0, 6, vArtCel);        [ use loop variable to choose a random position    random(1, 3, vArtLoop);    if (vArtLoop == 1)      {      random(0, 129, vArtX);      vArtY = 109;      }    else      {      if (vArtLoop == 2)        {        random(100, 129, vArtX);        }      if (vArtLoop == 3)        {        random(0, 47, vArtX);        }      random(4, 7, vArtLoop);      if (vArtLoop == 4)        {        vArtY = 121;        }      if (vArtLoop == 5)        {        vArtY = 133;        }      if (vArtLoop == 6)        {        vArtY = 145;        }      if (vArtLoop == 7)        {        vArtY = 157;        }      }        [ use loop with bush images    vArtLoop = 2;    [ add it to picture    add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    }      [ if at least two bushes added  if (vBushCount > 1)    {    [ choose random image    random(0, 6, vArtCel);        [ use loop variable to choose random position    random(1, 3, vArtLoop);    if (vArtLoop == 1)      {      random(0, 129, vArtX);      vArtY = 109;      }    else      {      if (vArtLoop == 2)        {        random(100, 129, vArtX);        }      if (vArtLoop == 3)        {        random(0, 47, vArtX);        }      random(4, 7, vArtLoop);      if (vArtLoop == 4)        {        vArtY = 121;        }      if (vArtLoop == 5)        {        vArtY = 133;        }      if (vArtLoop == 6)        {        vArtY = 145;        }      if (vArtLoop == 7)        {        vArtY = 157;        }      }          [ use loop that has bush images    vArtLoop = 2;    [ add it to picture    add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    }      [ if at least three bushes added  if (vBushCount > 2)    {    [ choose a random image    random(0, 6, vArtCel);        [ use loop variable to choose a random location    random(1, 3, vArtLoop);    if (vArtLoop == 1)      {      random(0, 129, vArtX);      vArtY = 109;      }    else      {      if (vArtLoop == 2)        {        random(100, 129, vArtX);        }      if (vArtLoop == 3)        {        random(0, 47, vArtX);        }      random(4, 7, vArtLoop);      if (vArtLoop == 4)        {        vArtY = 121;        }      if (vArtLoop == 5)        {        vArtY = 133;        }      if (vArtLoop == 6)        {        vArtY = 145;        }      if (vArtLoop == 7)        {        vArtY = 157;        }      }          [ use loop with bush images    vArtLoop = 2;    [ add it to picture    add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    }      [ if four bushes added  if (vBushCount > 3)    {    [ choose a random image    random(0, 6, vArtCel);        [ use loop variable to choose a random position    random(1, 3, vArtLoop);    if (vArtLoop == 1)      {      random(0, 129, vArtX);      vArtY = 109;      }    else      {      if (vArtLoop == 2)        {        random(100, 129, vArtX);        }      if (vArtLoop == 3)        {        random(0, 47, vArtX);        }      random(4, 7, vArtLoop);      if (vArtLoop == 4)        {        vArtY = 121;        }      if (vArtLoop == 5)        {        vArtY = 133;        }      if (vArtLoop == 6)        {        vArtY = 145;        }      if (vArtLoop == 7)        {        vArtY = 157;        }      }          [ use loop with bush images    vArtLoop = 2;    [ add it to picture    add.to.pic.v(vArtView, vArtLoop, vArtCel, vArtX, vArtY, vArtPriority, vArtMargin);    }      [ horizon is at 79 in the river rooms  set.horizon(79);    [ use gold 'density' to determine if a prospector is here  if (vGoldDensity == 1)    {    random(1, 6, vProspectorChance);    }  if (vGoldDensity == 2)    {    random(1, 5, vProspectorChance);    }  if (vGoldDensity == 3)    {    random(1, 3, vProspectorChance);    }  if (vGoldDensity == 4)    {    random(1, 2, vProspectorChance);    }      [ if prospector is due, and Jerrod doesn't have a mule  if (vProspectorChance == 1 &&       !has("James' ol' mule") &&       !has(LazyMule))    {    [ add a prospector, panning in the river    animate.obj(oProspector);    set.view(oProspector, vw.Panners);        [ choose a random loop    random(0, 7, vProspectorChance);    set.loop.v(oProspector, vProspectorChance);        [ use vFrontTreeCount and vProspectorChance variables    [ to choose a random position    random(0, 144, vFrontTreeCount);    if (vProspectorChance < 4)      {      random(92, 97, vProspectorChance);      }    else      {      random(81, 89, vProspectorChance);      }    position.v(oProspector, vFrontTreeCount, vProspectorChance);        [ draw the prospsector on screen    draw(oProspector);    }      [ add Jerrod, with normal California attire  animate.obj(ego);  set.view(ego, vw.JerrodCA);  [ ignore blocks in river room  ignore.blocks(ego);  draw(ego);    [ if Jerrod has a mule  if ((has(LazyMule) || has("James' ol' mule")))    {    [ do startup actions related to the mule    call(lgc.Mule);    }      [ show the picture  show.pic();    [ not necessary to reset this flaf; AGI resets this  [ automatically  reset(newRoom);    [ clear the custom status line  clear.lines(24, 24, BLACK);  [ and set flag to redraw it  set(UpdateStatus);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if custom status line needs updatingif (isset(UpdateStatus))  {  [ redraw the status line  display(24, 0, "Miles from Sutter's Fort: E: %v111 S: %v112");  }  [ if timer is activeif (vTimer > 0)  {  [ increment it  ++vTimer;  }  [ after 15 cycles of panningif (vTimer == 15 && vPanStatus == 1)  {  [ panning is done; reset timer and status  vTimer = 0;  vPanStatus = 0;    [ if Jerrod has max gold  if (PointsFromGold > 49)    {    print("Nothin'!");    }  else    {    [ if amount of gold found in this room is less than its    [ gold density    if (vGoldFound < vGoldDensity)      {      [ chance of finding gold depends on density      if (vGoldDensity == 4)        {        [ one in two chance when density == 4        random(1, 2, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show Jerrod with gold in his pan          set.view(ego, vw.PanSuccess);          force.update(ego);          [ display a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 3)        {        [ one in three chance when density == 3        random(1, 3, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ display a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 2)        {        [ one in five chance when density == 2        random(1, 5, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 1)        {        [ one in six chance when density == 1        random(1, 6, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ display a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }      }    else      {      print("Nothin'!");      }    }      [ after panning, restore Jerrod's wading view  set.view(ego, vw.WadingJerrodCA);  [ resume motion  start.motion(ego);  [ reset the cycle at rest flag  reset(CycleAtRest);  }  [ after 15 cycles digging in stage 1if (vTimer == 15 && vDigStatus == 1)  {  [ reset timer  vTimer = 1;  [ advance to next stage  vDigStatus = 2;  [ hole is a little deeper  set.loop(ego, 1);  }  [ after 15 cycles digging in stage 2if (vTimer == 15 && vDigStatus == 2)  {  [ reset timer  vTimer = 1;  [ advance to next stage  vDigStatus = 3;  [ hole is a little deeper  set.loop(ego, 2);  }  [ after 15 cycles digging in stage 3if (vTimer == 15 && vDigStatus == 3)  {  [ reset timer  vTimer = 1;  [ advance to next stage  vDigStatus = 4;  [ hole is even deeper  set.loop(ego, 3);  }  [ after 15 cycles digging in stage 4if (vTimer == 15 && vDigStatus == 4)  {  [ use timer as view number  vTimer = vw.JerrodDigging;  [ use status as loop number and margin value  vDigStatus = 4;  [ use room number as cel number and priority  vRandomPic = 0;  [ add the hole to the scene  add.to.pic.v(vTimer, vDigStatus, vRandomPic, EgoX, EgoY, vRandomPic, vDigStatus);    [ turn off timer  vTimer = 0;  [ advance to next stage  vDigStatus = 5;  }  [ when at stage 5 (done digging)if (vDigStatus == 5)  {  [ digging sequence is done; reset back to zero  vDigStatus = 0;  [ if already at max points from gold  if (PointsFromGold > 49)    {    print("Nothin'!");    }  else    {    [ if amount of gold found in this room is less than its    [ gold density    if (vGoldFound < vGoldDensity)      {      [ chance of finding gold depends on density      if (vGoldDensity == 4)        {        [ one in two chance when density == 4        random(1, 2, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 3)        {        [ one in three chance when density == 3        random(1, 3, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 2)        {        [ one in four chance when density == 2        random(1, 4, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }              if (vGoldDensity == 1)        {        [ one in five chance when density == 1        random(1, 5, vFrontTreeCount);        if (vFrontTreeCount == 2)          {          [ show a random success message          random(5, 10, vFrontTreeCount);          print.v(vFrontTreeCount);          [ increase count of gold found in this room          ++vGoldFound;          [ increase Jerrod's gold holdings          ++GoldIndex;          call(lgc.AdjustGold);          }        else          {          print("Nothin'!");          }        }      }    else      {      print("Nothin'!");      }    }      [ after resolving results of the dig, return ego back to  [ normal Jerrod view  set.view(ego, vw.JerrodCA);  set.loop(ego, 0);  [ restore motion  start.motion(ego);  [ reseet the cycle at rest flag  reset(CycleAtRest);  }  [ if Jerrod isn't wading, but is in the waterif (!isset(fWading) &&     (isset(onWater) ||     posn(ego, 0, 80, 159, 89)))  {  [ switch to wading view  set(fWading);  set.view(ego, vw.WadingJerrodCA);  }  [ if Jerrod isn't in the water and is wadingif (!isset(onWater) &&     !posn(ego, 0, 80, 159, 89) &&     isset(fWading))  {  [ switch back to normal view  reset(fWading);  set.view(ego, vw.JerrodCA);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(CheckExits);  }  [ get goldif (said("acquire", "gold"))  {  print("Downright bright thinkin'! But how ya gonna do it?");  }  [ use pan/pan for goldif ((said("use", "pan") ||     said("pan", "gold") ||     said("pan") ||     said("use", "gold", "pan") ||     said("go", "pan", "rol")))  {  [ if Jerrod has a pan  if (has("Gold pan"))    {    [ if on water (or at edge of river)    if ((isset(onWater) || posn(ego, 0, 80, 159, 89)))      {      [ get distance to nearest prospector      distance(ego, oProspector, vDistance);      [ if Jerrod is too close      if (vDistance < 60)        {        [ Jerrod gets hung for claim-jumping        print("The miner near by shouts, \"Hey man! Yer pannin' in my claim!! "              "You'll hang fer this!!!\"");        new.room(rm.Gallows); [ ##LE001##        }            [ if OK to pan, change view      set.view(ego, vw.Panning);      set.cel(ego, 0);      [ Jerrod stops moving while panning      stop.motion(ego);      [ activate timer      vTimer = 1;      [ and set status      vPanStatus = 1;      [ allow ego object to cycle at rest      set(CycleAtRest);      start.cycling(ego);      }    else      {      print("Ya can't be pannin' unless yer in the water!");      }    }  else    {    print("If yer gonna pan ya gotta get one.");    }  }  [ dig/use shovelif ((said("use", "shovel", "rol") || said("dig", "rol")))  {  [ if Jerrod has a shovel  if (has("Shovel"))    {    [ if Jerrod is in the water (or at edge of river)    if ((isset(onWater) || posn(ego, 0, 80, 159, 89)))      {      print("Diggin' is fer when yer on dry ground!!");      }    else      {      [ get distance to nearest prospector      distance(ego, oProspector, vDistance);      [ if Jerrod is too close      if (vDistance < 60)        {        [ Jerrod gets hung for claim-jumping        print("\"Yer crowdin' my claim, stranger! I ain't goin' to put up with "              "that!\" shouts the miner.");        new.room(rm.Gallows); [ ##LE002##        }            [ increment hole count      ++vHolesDug;      [ if at 20 holes      if (vHolesDug == 20)        {        [ it's too many - reset back to 19        --vHolesDug;        [ and give Jerrod a suggestion to look elsewhere        print("You've done enough diggin' right here. Move on!");        goto(CheckExits);        }              [ begin digging by changing view      set.view(ego, vw.JerrodDigging);      set.loop(ego, 0);      set.cel(ego, 0);      [ Jerrod stops moving while digging      stop.motion(ego);      [ allow ego object to cycle at rest      set(CycleAtRest);      start.cycling(ego);      [ start timer      vTimer = 1;      [ set status to begin digging      vDigStatus = 1;      }    }  else    {    print("No shovel, no diggin'!!");    }  }  [ look manif ((said("examine", "boy") ||     said("examine", "miner") ||     said("examine", "panner")))  {  [ get distance to prospector  distance(ego, oProspector, vDistance);  [ if no prospector on screen  if (vDistance == 255)    {    print("There ain't no %w2 to look at.");    }  else    {    [ response depends on how close the prospector is    if (vDistance < 60)      {      print("That man is doin' his best to find some GOLD!!");      }    else      {      print("There's a %w2 over by the river.");      }    }  }  [ talk to manif ((said("speak", "boy") ||     said("speak", "miner") ||     said("speak", "panner") ||     said("speak")))  {  [ get distance to prospector  distance(ego, oProspector, vDistance);  [ if no prospector is on screen  if (vDistance == 255)    {    print("There ain't no one to talk to!");    }  else    {    [ response depends on how close prospector is    if (vDistance < 60)      {      [ choose a random response from the prospector      random(18, 29, vDistance);      print.v(vDistance);      }    else      {      print("There's a %w2 over by the river.");      }    }  }  [ look treeif (said("examine", "forest"))  {  if (isset(fTreeAdded))    {    print("This is just another tree!");    }  else    {    print("What %w2?");    }  }  [ look bushif (said("examine", "bush"))  {  if (isset(fBushAdded))    {    print("This is just like every other bush you've seen.");    }  else    {    print("What %w2?");    }  }  [ look rockif (said("examine", "rock"))  {  print("If it ain't GOLD, ya ain't interested. That rock ain't GOLD!");  }  [ look/look aroundif ((said("examine", "around") ||     said("examine")))  {  [ if between Sutters Fort and Coloma  if (WildernessX < 20)    {    [ you can see the road    print("You are next to the American River. You notice a trace of a road.");    }  else    {    print("You are in the wilderness next to the American River.");    }  }  [ look roadif (said("examine", "path"))  {  [ if between Sutters Fort and Coloma  if (WildernessX < 20)    {    print("You notice a faint road. It must lead somewhere!");    }  else    {    print("The road leads to Coloma to the west.");    }  }  [ look beachif ((said("examine", "beach") ||     said("examine", "creek", "beach")))  {  print("This is the shore of the American River.");  }  [ look hillif (said("examine", "foot hill"))  {  print("The hills across the river are out of reach.");  }  [ look grassif (said("examine", "grass"))  {  print("This is just wild grass.");  }  [ look groundif (said("examine", "dirt"))  {  print("There may be gold galore right under you, but you can't tell just by "        "looking!");  }  [ cross riverif (said("cross", "creek"))  {  print("There's no need to cross the river.");  }  [ look across riverif ((said("examine", "across", "creek") ||     said("examine", "across", "water")))  {  print("You see more of the same terrain.");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "anyword", "creek") ||     said("examine", "water") ||     said("examine", "anyword", "water")))  {  print("This is the American River. With a little luck, ya might find some "        "gold in this river.");  }  [ go swimmingif ((said("swim", "rol") ||     said("anyword", "swim", "rol") ||     said("go", "water") ||     said("go", "anyword", "water") ||     said("jump", "water") ||     said("jump", "anyword", "water") ||     said("go", "creek") ||     said("go", "anyword", "creek") ||     said("jump", "creek") ||     said("jump", "anyword", "creek") ||     said("enter", "water") ||     said("enter", "creek")))  {  print("There's no time for that. Yer lookin' for gold!");  }  [ drink water/get waterif ((said("acquire", "water") ||     said("anyword", "drink", "rol") ||     said("drink", "rol")))  {  print("You don't need any water.");  }  [ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************[ (unlike most other logics, the check for exit condition[ happens LAST in this room)CheckExits:[ if Jerrod has a muleif ((has(LazyMule) || has("James' ol' mule")))  {  [ process mule related commands before checking exits  call(lgc.Mule);  }  [ if at west end of riverif (WildernessX == 1)  {  [ if Jerrod is at left edge of screen  if (posn(ego, 1, 40, 1, 167))    {    [ go back to Sutters Fort    --WildernessX;    clear.lines(24, 24, BLACK);    new.room(rm.SuttersFortArea); [ ##LE003##    }  }  [ if not at right edge of wildernessif (WildernessX != 255)  {  [ if going right (east)  if (edgeEgoHit == RIGHT_EDGE)    {    [ if next to the mill tailrace    if (WildernessX == 16)      {      [ move to the tailrace      ++WildernessX;      new.room(rm.MillTailrace); [ ##LE004##      }          [ otherwise move right to another American River room    ++WildernessX;    [ not sure why they reset this flag; it can't be set if    [ Jerrod is moving to an exit    reset(CycleAtRest);    new.room(lgc.AmRiverWild); [ ##LE005##    }  }  [ if Jerrod is at left edgeif (edgeEgoHit == LEFT_EDGE)  {  [ if next to Coloma NE entrance  if (WildernessX == 23)    {    [ move there    --WildernessX;    new.room(rm.ColomaNE); [ ##LE006##    }      [ otherwise move left to another American River room  --WildernessX;  [ not sure why they reset this flag; it can't be set if  [ Jerrod is movingto an exit  reset(CycleAtRest);  new.room(lgc.AmRiverWild); [ ##LE007##  }  [ if going down (south)if (edgeEgoHit == BOTTOM_EDGE)  {  [ move south into the wilderness  ++WildernessY;  new.room(lgc.Wilderness); [ ##LE008##  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "Miles from Sutter's Fort: E: %v111 S: %v112"#message 2 "Downright bright thinkin'! But how ya gonna do it?"#message 3 "Nothin'!"#message 4 "Ya can't be pannin' unless yer in the water!"#message 5 "\"My, Oh My!! Ain't that a beauty!!!\""#message 6 "\"Willikers!! This is wonderful!!!\""#message 7 "\"If this keeps up, I'll be rich in no time!!\""#message 8 "\"Suuuuuweeeee!! If only those Brooklynites could see me now!!!\""#message 9 "\"Oh baby! Ooooohhh baby!!!\""#message 10 "\"Jumpin' bullfrogs!! Look what I found!!\""#message 11 "No shovel, no diggin'!!"#message 12 "The miner near by shouts, \"Hey man! Yer pannin' in my claim!! You'll hang fer this!!!\""#message 13 "There's a %w2 over by the river."#message 14 "There ain't no %w2 to look at."#message 15 "Diggin' is fer when yer on dry ground!!"#message 16 "If yer gonna pan ya gotta get one."#message 17 "You've done enough diggin' right here. Move on!"#message 18 "\"The only luck I'm havin' today is lousy!\" says the miner."#message 19 "\"I was just over at Grub Gulch and man-oh-man was there a ton of GOLD over there!\" says the miner."#message 20 "\"I heard from some fella the other day that the hot spot 'round these parts is Fresno Flats!\" says the miner."#message 21 "The miner says, \"Ya ain't seen that gang of bandits have ya? I just heard the other day they were moving this way!\""#message 22 "\"Did ya hear 'bout the big holdup in Hangtown the other day? The bandits got away with over $70,000 in gold dust!\" the miner exclaims."#message 23 "\"Up at Downieville, those boys are takin' twenty ounces a day. I wish I could find GOLD like that!\" exclaims the miner."#message 24 "The miner says, \"I just moved here from Rough and Ready. There's nothin' over there!\""#message 25 "The miner says, \"I heard someone found a twenty-eight pound nugget up 'round Grass Valley.\""#message 26 "\"Some of the hottest territory is up 'round Columbia I heard!\" says the miner."#message 27 "The panner says, \"Somedays I'll get some gold in every pan and other days I'll get skunked!\""#message 28 "\"The pannin' here ain't nothin' like Moccasin Creek up north!\" says the panner."#message 29 "The miner says, \"Oh to be back at Rattlesnake Bar! This area ain't produced nothin' fer me!!\""#message 31 "That man is doin' his best to find some GOLD!!"#message 32 "\"Yer crowdin' my claim, stranger! I ain't goin' to put up with that!\" shouts the miner."#message 33 "There ain't no one to talk to!"#message 34 "This is just another tree!"#message 35 "What %w2?"#message 36 "This is the American River. With a little luck, ya might find some gold in this river."#message 37 "This is just like every other bush you've seen."#message 38 "If it ain't GOLD, ya ain't interested. That rock ain't GOLD!"#message 39 "You are next to the American River. You notice a trace of a road."#message 40 "You are in the wilderness next to the American River."#message 41 "You notice a faint road. It must lead somewhere!"#message 42 "The road leads to Coloma to the west."#message 43 "This is the shore of the American River."#message 44 "The hills across the river are out of reach."#message 45 "This is just wild grass."#message 46 "There may be gold galore right under you, but you can't tell just by looking!"#message 47 "There's no time for that. Yer lookin' for gold!"#message 48 "You see more of the same terrain."#message 49 "There's no need to cross the river."#message 50 "You don't need any water."