[***********************************************************[[ cs.Nevada[[ This logic manages the wagon trip cutscenes as Jerrod [ travels across Nevada. Nothing happens in the cutscene;[ it just provides informational messages.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oCursor                      o1#define oMapExpander                 o2#define oWagon                       o3#define oTracks                      o4#define oSceneWindow                 o5#define vMapPic                    v220#define vOvlPic                    v221#define vMapStage                  v222#define vMapTimer                  v223#define vCursorStage               v224[ v225 is not used#define vTrackSpeed                v226#define vTmpY                      v227#define vFlashTimer                v228#define vNormalSpeed               v229#define vSceneTimer                v230#define vSceneStage                v231#define vMsgStatus                 v232#define vTimeStatus                v233#define fCursorMoved               f220#define fFlashOn                   f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ the USA map and small Nevada map pictures are needed  vMapPic = map.USA;  vOvlPic = map.NevadaSmall;    [ normal cursor speed is two  vNormalSpeed = 2;    [ load the main timing logic  load.logics(lgc.WagonTripTiming);    [ load views used in the room  load.view(vw.MapZoom);  load.view(vw.MapTracks);  load.view(vw.MapArt);    [ load picture for current room (large Nevada) but don't  [ draw it yet  load.pic(currentRoom);    [ load the USA map and small Nevada overlay  load.pic(vOvlPic);  load.pic(vMapPic);    [ draw and discard the main USA map  draw.pic(vMapPic);  discard.pic(vMapPic);    [ begin with map stage 1  vMapStage = 1;    [ add blocks to the USA map to show track progress up to  [ this point  add.to.pic(vw.MapTracks, 5, 0, 131, 53, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 120, 54, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 57, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 109, 45, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 105, 43, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 103, 55, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 98, 67, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 96, 79, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 89, 91, 5, 5);  add.to.pic(vw.MapTracks, 5, 0, 86, 92, 5, 5);  add.to.pic(vw.MapTracks, 0, 0, 73, 86, 9, 9);  add.to.pic(vw.MapTracks, 2, 0, 73, 86, 9, 9);  add.to.pic(vw.MapTracks, 0, 1, 58, 73, 9, 9);  add.to.pic(vw.MapTracks, 2, 1, 58, 73, 9, 9);  add.to.pic(vw.MapTracks, 0, 2, 46, 63, 9, 9);  add.to.pic(vw.MapTracks, 2, 2, 46, 63, 9, 9);  add.to.pic(vw.MapTracks, 0, 3, 34, 61, 9, 9);  add.to.pic(vw.MapTracks, 2, 3, 34, 61, 9, 9);    [ scenery window, using mountain art  animate.obj(oSceneWindow);  set.view(oSceneWindow, vw.MapArt);  set.loop(oSceneWindow, 8);  set.cel(oSceneWindow, 0);  set.priority(oSceneWindow, 9);  position(oSceneWindow, 36, 81);    [ wagon used in scenery detail  animate.obj(oWagon);  set.view(oWagon, vw.MapArt);  set.loop(oWagon, 1);  set.priority(oWagon, 11);  position(oWagon, 42, 68);    [ animal tracks to go with wagon  animate.obj(oTracks);  set.view(oTracks, vw.MapArt);  set.loop(oTracks, 2);  set.priority(oTracks, 10);  position(oTracks, 39, 70);    [ flashing track cursor  animate.obj(oCursor);  set.view(oCursor, vw.MapTracks);  set.loop(oCursor, 4);  fix.loop(oCursor);  position(oCursor, 149, 28);  set.priority(oCursor, 7);  ignore.horizon(oCursor);  ignore.objs(oCursor);    [ map expander to show inset map growing out of main USA  [ map  animate.obj(oMapExpander);  set.view(oMapExpander, vw.MapTracks);  set.loop(oMapExpander, 2);  set.cel(oMapExpander, 4);  fix.loop(oMapExpander);  position(oMapExpander, 21, 66);  set.priority(oMapExpander, 9);  ignore.horizon(oMapExpander);  ignore.objs(oMapExpander);  stop.cycling(oMapExpander);    [ now show the picture  show.pic();  }[ **************************************[ EVERY CYCLE[ **************************************[ if cursor has just started movingif (posn(oCursor, 149, 29, 149, 29) && vSceneStage == 0)  {  [ advance to next stage  vSceneStage = 1;  [ set cursor step time to normal speed  step.time(oCursor, vNormalSpeed);  [ show the scenery window, with smallest image  draw(oSceneWindow);  stop.cycling(oSceneWindow);  }  [ if at scene stage 1if (vSceneStage == 1)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 2;    [ show mid size scene window    set.cel(oSceneWindow, 1);    }  }  [ if at scene stage 2if (vSceneStage == 2)  {  [ increment timer  ++vSceneTimer;  [ after ten cycles  if (vSceneTimer == 10)    {    [ reset timer    vSceneTimer = 0;    [ advance to next stage    vSceneStage = 3;    [ show scene window with full size image    set.cel(oSceneWindow, 2);    [ force it to update right now    force.update(oSceneWindow);    [ add the wagon    draw(oWagon);    [ set track speed to two    vTrackSpeed = 2;    cycle.time(oTracks, vTrackSpeed);    [ then show animal tracks    draw(oTracks);    }  }  [ in first map stageif (vMapStage == 1)  {  [ increment map timer  ++vMapTimer;    [ flash timer controls speed that the red box flashes  [ between on and off  ++vFlashTimer;    [ create flashing red box by drawing/erasing the box every  [ four cycles (why not just use a view, with a cycle time  [ of four?)  if (vFlashTimer == 4)    {    vFlashTimer = 0;    toggle(fFlashOn);    if (isset(fFlashOn))      {      draw(oMapExpander);      }    else      {      erase(oMapExpander);      }    }      [ after 80 cycles  if (vMapTimer == 80)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 2;    [ change expander object to show first cel of the Nevada    [ detail map    set.priority(oMapExpander, 9);    set.view(oMapExpander, vw.MapZoom);    set.loop(oMapExpander, 4);    fix.loop(oMapExpander);    set.cel(oMapExpander, 0);    position(oMapExpander, 14, 86);    [ show it on screen    draw(oMapExpander);    }  }  [ if in map stage 2if (vMapStage == 2)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 3;    [ show mid size image of Nevada detail map    set.cel(oMapExpander, 1);    }  }  [ if in map stage 3if (vMapStage == 3)  {  [ increment timer  ++vMapTimer;  [ after 15 cycles  if (vMapTimer == 15)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 4;    [ show largest cel in expanding map    set.cel(oMapExpander, 2);    }  }  [ if in map stage 4if (vMapStage == 4)  {  [ increment timer  ++vMapTimer;  [ after five cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ advance to next stage    vMapStage = 5;    [ add the small Nevada overlay    overlay.pic(vOvlPic);    discard.pic(vOvlPic);    [ remove the expanding map object    erase(oMapExpander);    [ show the picture to force it to update    show.pic();    }  }    [ if in map stage 5if (vMapStage == 5)  {  [ increment timer  ++vMapTimer;  [ after five cycles  if (vMapTimer == 5)    {    [ reset timer    vMapTimer = 0;    [ advance to end stage    vMapStage = 6;    [ add the large Nevada overlay    overlay.pic(currentRoom);    discard.pic(currentRoom);    [ show the picture to force update    show.pic();        [ now draw the cursor on the screen    draw(oCursor);    [ and begin moving it    move.obj(oCursor, 149, 29, 1, fCursorMoved);    vCursorStage = 1;    }  }  [ need to periodically adjust cursor's destination so it[ follows the correct path across the screenif (isset(fCursorMoved) && vCursorStage == 1)  {  reset(fCursorMoved);  vCursorStage = 2;  move.obj(oCursor, 143, 31, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 2)  {  reset(fCursorMoved);  vCursorStage = 3;  move.obj(oCursor, 140, 36, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 3)  {  reset(fCursorMoved);  vCursorStage = 4;  move.obj(oCursor, 138, 37, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 4)  {  reset(fCursorMoved);  vCursorStage = 5;  move.obj(oCursor, 132, 49, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 5)  {  reset(fCursorMoved);  vCursorStage = 6;  move.obj(oCursor, 130, 50, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 6)  {  reset(fCursorMoved);  vCursorStage = 7;  move.obj(oCursor, 122, 68, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 7)  {  reset(fCursorMoved);  vCursorStage = 8;  move.obj(oCursor, 114, 85, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 8)  {  reset(fCursorMoved);  vCursorStage = 9;  move.obj(oCursor, 105, 89, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 9)  {  reset(fCursorMoved);  vCursorStage = 10;  move.obj(oCursor, 103, 97, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 10)  {  reset(fCursorMoved);  vCursorStage = 11;  move.obj(oCursor, 95, 100, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 11)  {  reset(fCursorMoved);  vCursorStage = 12;  move.obj(oCursor, 91, 109, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 12)  {  reset(fCursorMoved);  vCursorStage = 13;  move.obj(oCursor, 84, 110, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 13)  {  reset(fCursorMoved);  vCursorStage = 14;  move.obj(oCursor, 79, 118, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 14)  {  reset(fCursorMoved);  vCursorStage = 15;  move.obj(oCursor, 76, 120, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 15)  {  reset(fCursorMoved);  vCursorStage = 16;  move.obj(oCursor, 75, 122, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 16)  {  reset(fCursorMoved);  vCursorStage = 17;  move.obj(oCursor, 71, 122, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 17)  {  reset(fCursorMoved);  vCursorStage = 18;  move.obj(oCursor, 69, 123, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 18)  {  reset(fCursorMoved);  vCursorStage = 19;  move.obj(oCursor, 65, 132, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 19)  {  reset(fCursorMoved);  vCursorStage = 20;  move.obj(oCursor, 62, 132, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 20)  {  [ need to make a minor adjustment to cursor shape and  [ position to account for the shape of the trail  reset(fCursorMoved);  vCursorStage = 21;  vTrackSpeed = -9; [ 247;  vTmpY = 10;  reposition(oCursor, vTrackSpeed, vTmpY);  set.loop(oCursor, 3);  move.obj(oCursor, 51, 135, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 21)  {  [ need to make a minor adjustment to cursor shape and  [ position to account for the shape of the trail  reset(fCursorMoved);  vCursorStage = 22;  vTrackSpeed = 9;  vTmpY = -9; [ 247;  reposition(oCursor, vTrackSpeed, vTmpY);  move.obj(oCursor, 48, 124, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 22)  {  [ need to make a minor adjustment to cursor shape and  [ position to account for the shape of the trail  reset(fCursorMoved);  [ looks like there was a last minute insert; it  [ temporarily skips outside the normal sequence  vCursorStage = 50;  vTrackSpeed = -11; [ 245;  vTmpY = 9;  reposition(oCursor, vTrackSpeed, vTmpY);  move.obj(oCursor, 37, 122, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 50)  {  reset(fCursorMoved);  [ now back to regular sequence  vCursorStage = 23;  move.obj(oCursor, 32, 105, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 23)  {  reset(fCursorMoved);  vCursorStage = 24;  move.obj(oCursor, 25, 104, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 24)  {  reset(fCursorMoved);  vCursorStage = 25;  move.obj(oCursor, 23, 101, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 25)  {  reset(fCursorMoved);  vCursorStage = 26;  move.obj(oCursor, 20, 101, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 26)  {  [ need to make a minor adjustment to cursor shape and  [ position to account for the shape of the trail  reset(fCursorMoved);  vCursorStage = 27;  vTrackSpeed = -5; [ 251;  vTmpY = -7; [ 249;  reposition(oCursor, vTrackSpeed, vTmpY);  set.loop(oCursor, 4);  move.obj(oCursor, 16, 98, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 27)  {  reset(fCursorMoved);  vCursorStage = 28;  move.obj(oCursor, 13, 99, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 28)  {  reset(fCursorMoved);  vCursorStage = 29;  move.obj(oCursor, 12, 101, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 29)  {  reset(fCursorMoved);  vCursorStage = 30;  move.obj(oCursor, 8, 103, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 30)  {  reset(fCursorMoved);  vCursorStage = 31;  move.obj(oCursor, 3, 117, 1, fCursorMoved);  }if (isset(fCursorMoved) && vCursorStage == 31)  {  reset(fCursorMoved);  vCursorStage = 32;  move.obj(oCursor, 2, 117, 1, fCursorMoved);  }[ when cursor gets to left edgeif (isset(fCursorMoved) && vCursorStage == 32)  {  [ continue on to next scene  set(ContinueJourney);  }  [ as cursor moves across the screen, add blocks to the[ picture to keep previous portions of the track[ permanently visibleif (posn(oCursor, 140, 36, 140, 36))  {  add.to.pic(vw.MapTracks, 5, 2, 140, 36, 6, 6);  }if (posn(oCursor, 132, 47, 132, 47))  {  add.to.pic(vw.MapTracks, 5, 2, 132, 47, 6, 6);  }if (posn(oCursor, 123, 57, 123, 57))  {  add.to.pic(vw.MapTracks, 5, 2, 123, 57, 6, 6);  }if (posn(oCursor, 121, 69, 121, 69))  {  add.to.pic(vw.MapTracks, 5, 2, 121, 69, 6, 6);  }if (posn(oCursor, 114, 81, 114, 81))  {  add.to.pic(vw.MapTracks, 5, 2, 114, 81, 6, 6);  }if (posn(oCursor, 106, 89, 106, 89))  {  add.to.pic(vw.MapTracks, 5, 2, 106, 89, 6, 6);  }if (posn(oCursor, 100, 100, 100, 100))  {  add.to.pic(vw.MapTracks, 5, 2, 100, 100, 6, 6);  }if (posn(oCursor, 91, 108, 91, 108))  {  add.to.pic(vw.MapTracks, 5, 2, 91, 108, 6, 6);  }if (posn(oCursor, 81, 113, 81, 113))  {  add.to.pic(vw.MapTracks, 5, 2, 81, 113, 6, 6);  }if (posn(oCursor, 73, 122, 73, 122))  {  add.to.pic(vw.MapTracks, 5, 2, 73, 122, 6, 6);  }if (posn(oCursor, 65, 132, 65, 132))  {  add.to.pic(vw.MapTracks, 5, 2, 65, 132, 8, 8);  }if (posn(oCursor, 62, 132, 62, 132))  {  add.to.pic(vw.MapTracks, 5, 2, 62, 132, 6, 6);  }if (posn(oCursor, 51, 135, 51, 135))  {  add.to.pic(vw.MapTracks, 5, 1, 51, 135, 8, 8);  }if (posn(oCursor, 53, 124, 53, 124))  {  add.to.pic(vw.MapTracks, 5, 1, 53, 124, 6, 6);  }if (posn(oCursor, 48, 124, 48, 124))  {  add.to.pic(vw.MapTracks, 5, 1, 48, 124, 6, 6);  }if (posn(oCursor, 37, 122, 37, 122))  {  add.to.pic(vw.MapTracks, 5, 1, 37, 122, 6, 6);  }if (posn(oCursor, 32, 110, 32, 110))  {  add.to.pic(vw.MapTracks, 5, 1, 32, 110, 6, 6);  }if (posn(oCursor, 25, 104, 25, 104))  {  add.to.pic(vw.MapTracks, 5, 1, 25, 104, 6, 6);  }if (posn(oCursor, 20, 101, 20, 101))  {  add.to.pic(vw.MapTracks, 5, 1, 20, 101, 6, 6);  }if (posn(oCursor, 9, 103, 9, 103))  {  add.to.pic(vw.MapTracks, 5, 2, 9, 103, 6, 6);  }if (posn(oCursor, 3, 114, 3, 114))  {  add.to.pic(vw.MapTracks, 5, 2, 3, 114, 6, 6);  }[ as the cursor moves across the screen, update the total[ game travel timeif (posn(oCursor, 127, 53, 127, 53) &&     vTimeStatus == 0)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 114, 79, 114, 79) &&     vTimeStatus == 1)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 96, 100, 96, 100) &&     vTimeStatus == 2)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 77, 120, 77, 120) &&     vTimeStatus == 3)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 53, 124, 53, 124) &&     vTimeStatus == 4)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 32, 112, 32, 112) &&     vTimeStatus == 5)  {  ++vTimeStatus;  GameDays  += 3;  }if (posn(oCursor, 8, 103, 8, 103) &&     vTimeStatus == 6)  {  ++vTimeStatus;  GameDays  += 4;  }  [ as cursor moves across the screen, display periodic[ messages to update player on the tripif (posn(oCursor, 133, 42, 133, 42) && vMsgStatus == 0)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("From Steeple Rocks your team continues westward.");    }  }if (posn(oCursor, 109, 89, 109, 89) && vMsgStatus == 1)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("About ninety miles west of Steeple Rocks, you encounter the Humboldt "          "River.");    print("The Humboldt River is a real lifesaver. It is more like a mud ditch "          "than a river, but it preserves life through 300 miles of arid, "          "hostile wasteland. Tombstones of unfortunate travelers and carcasses "          "lie everywhere along the trail.");    }  }if (posn(oCursor, 72, 122, 72, 122) && vMsgStatus == 2)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("Although the Humboldt River supplied water to people and animals "          "passing by, there are now other factors to challenge the company.");    print("Fatigue is taking its toll on people and animals who must walk day, "          "after day, after day, breathing dust and pulverized dung. The "          "continual complaining of company members is adding even more "          "tension.");    print("There were also \"Diggers,\" Indians of the Shoshone and Paiute "          "tribes. The Diggers steal and kill the precious oxen or mules "          "possessed by the traveling teams.");    print("Goldseekers who have lost their animals are also resorting to "          "stealing animals from other companies.");    }  }if (posn(oCursor, 8, 103, 8, 103) && vMsgStatus == 3)  {  ++vMsgStatus;  if (!isset(HideTripMsgs))    {    print("Here the trail forks again, requiring another decision on the part "          "of your captain. The choices are the Lassen Cut-off or the Truckee "          "Route.");    print("Captain Buddy decides to take the Truckee Route.");    }  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }[ (this boilerplate 'if' block isn't needed since no input[ is processed in this cutscene logic)  Done:[ call the main timing logiccall(lgc.WagonTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "From Steeple Rocks your team continues westward."#message 5 "About ninety miles west of Steeple Rocks, you encounter the Humboldt River."#message 6 "The Humboldt River is a real lifesaver. It is more like a mud ditch than a river, but it preserves life through 300 miles of arid, hostile wasteland. Tombstones of unfortunate travelers and carcasses lie everywhere along the trail."#message 10 "Although the Humboldt River supplied water to people and animals passing by, there are now other factors to challenge the company."#message 11 "Fatigue is taking its toll on people and animals who must walk day, after day, after day, breathing dust and pulverized dung. The continual complaining of company members is adding even more tension."#message 12 "There were also \"Diggers,\" Indians of the Shoshone and Paiute tribes. The Diggers steal and kill the precious oxen or mules possessed by the traveling teams."#message 13 "Goldseekers who have lost their animals are also resorting to stealing animals from other companies."#message 15 "Here the trail forks again, requiring another decision on the part of your captain. The choices are the Lassen Cut-off or the Truckee Route."#message 16 "Captain Buddy decides to take the Truckee Route."