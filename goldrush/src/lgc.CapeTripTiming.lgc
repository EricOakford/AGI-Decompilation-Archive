[***********************************************************[[ lgc.CapeTripTiming[[ This logic is called from each room when Jerrod is on the [ Cape Horn trip. It handles the main timing, including [ changing room as needed as the trip progresses.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oExplosion                  o17#define vExplosionStatus           v244#define vIcebergTime                v81  [ override TripPoint_20#define vRockTime                   v82  [ override TripPoint_21#define fShowMsgHelp               f241#define fExploded                  f242#define fLoseItemsStorm            f243[ in these rooms and cutscenes, there is no player[ interaction, so help messages about how to show/hide the[ trip messages is displayedif ((CurrentTripTime == TripPoint_3 ||     CurrentTripTime == TripPoint_5 ||     CurrentTripTime == TripPoint_6 ||     CurrentTripTime == TripPoint_7 ||     CurrentTripTime == TripPoint_8 ||     CurrentTripTime == TripPoint_10 ||     CurrentTripTime == TripPoint_12 ||     CurrentTripTime == TripPoint_13 ||     CurrentTripTime == TripPoint_14 ||     CurrentTripTime == TripPoint_16 ||     CurrentTripTime == TripPoint_17))  {  [ if the F8 message isn't shown yet  if (!isset(fShowMsgHelp))    {    [ show the appropriate message, depending on status of    [ main trip message flag    set(fShowMsgHelp);    if (isset(HideTripMsgs))      {      display(24, 0, "<F8> messages suppressed");      }    else      {      display(24, 0, "<F8> messages displayed ");      }    }      [ if player has toggled messages  if (controller(keyTrekMsgs))    {    [ toggle the flag    toggle(HideTripMsgs);        [ then show the correct help line    if (isset(HideTripMsgs))      {      display(24, 0, "<F8> messages suppressed");      }    else      {      display(24, 0, "<F8> messages displayed ");      }    }  }else  {  [ at these timing points  if ((CurrentTripTime == ScurvyTime ||       CurrentTripTime == vIcebergTime ||       CurrentTripTime == vRockTime ||       CurrentTripTime == CholeraTime ||       CurrentTripTime == 15))    {    [ in these rooms and cutscenes, the player has normal     [ interaction and control, so there are no trip     [ messages to see or skip; the help line is not needed        [ use the same flag to determine if help message needs    [ to be erased    if (!isset(fShowMsgHelp))      {      set(fShowMsgHelp);      display(24, 0, "                        ");      }    }  else    {    [ in all other rooms, the player can skip ahead; show     [ the help line if not already shown    if (!isset(fShowMsgHelp))      {      set(fShowMsgHelp);      display(24, 0, "Ctrl-n for next scene   ");      }        [ if the player wants to skip ahead    if (controller(keyNextScene))      {      [ set flag to continue with next scene      set(ContinueJourney);      }    }  }  [ some of the scenes advance automatically based on number[ of cycles passed[ if at first trip point (beginning of the journey)if (CurrentTripTime == TripPoint_1)  {  [ this is a short scene; after 50 cycles  if (TripCycles > 50)    {    [ set flag to advance to next point in journey    set(ContinueJourney);    }  }  [ during trip point 2 (Jerrod is on the ship at beginning of[ journey)if (CurrentTripTime == TripPoint_2)  {  [ a much longer scene  if (TripCycles2 == 30 && TripCycles == 150)    {    [ advance after ~5-10 minutes of playing time    set(ContinueJourney);    }  }  [ during trip point 4 (Jerrod is still on the ship, heading[ for Rio de Janeiro)if (CurrentTripTime == TripPoint_4)  {  [ another long scene  if (TripCycles2 == 30 && TripCycles == 250)    {    [ advance after ~5-10 minutes of playing time    set(ContinueJourney);    }  }  [ during trip point 9 (Jerrod is still on ship, rounding[ Cape Horn, and no storm and not being blown overboard)if (CurrentTripTime == TripPoint_9 &&     !isset(OnDeckInStorm) &&     !isset(FallingOvbd))  {  if (TripCycles2 == 30 && TripCycles == 150)    {    [ advance after ~5-10 minutes of playing time    set(ContinueJourney);    }  }  [ during trip point 11 (Jerrod is still on ship, going north[ along South American Coast, and no storm, and not being[ blown overboard)if (CurrentTripTime == TripPoint_11 &&     !isset(OnDeckInStorm) &&    !isset(FallingOvbd))  {  if (TripCycles2 == 30 &&       TripCycles == 150)    {    [ advance after ~5-10 minutes of playing time    set(ContinueJourney);    }  }[ if storm is occurring and the 'lose items' flag isn't set[ yetif (CurrentTripTime == StormTime && !isset(SetLoseItemsStorm))  {  [ set both the local, and the global flags indicating  [ things will get lost due to the storm  set(SetLoseItemsStorm);  set(fLoseItemsStorm);  [ the global flag is needed so the lose items flag doesn't  [ get set both times this room is visited  }else  {CheckTiming:  [ check for sickness/death timing, and also for need to  [ advance scene    [ if time point matches scurvy time  if (CurrentTripTime == ScurvyTime)    {    [ after 20 cycles    if (TripCycles == 20 && TripCycles2 == 0)      {      [ print warning      print("You're feeling a little strange and your gums are bleeding. You "            "don't know exactly what is wrong, but something isn't right!");      }    [ at 200 cycles, if dying flag isn't set yet    if (TripCycles2 == 0 && TripCycles == 200 &&         !isset(DyingAtSea))      {      [ set flag so death sequence will start      set(DyingAtSea);      }    }      [ if time point matches cholera time  if (CurrentTripTime == CholeraTime)    {    [ after 20 cycles    if (TripCycles == 20 && TripCycles2 == 0)      {      [  print warning      print("Lately you have been feeling a little nauseous, a few cramps here "            "and there and slightly dehydrated.");      }    [ after 200 cycles, if dying flag isn't set yet    if (TripCycles2 == 0 && TripCycles == 200 &&         !isset(DyingAtSea))      {      [ set flag so death sequence will start      set(DyingAtSea);      }    }      [ if timing point matches timing of boiler overpressure  if (CurrentTripTime == BoilerTime)    {    [ after 60 cycles    if (TripCycles2 == 0 && TripCycles == 60 &&         vExplosionStatus == 0)      {      [ boiler explodes      vExplosionStatus = 1;      [ if Jerrod is in the boiler room (in mid ship room)      if ((currentRoom == rm.ShipMidInterior ||           currentRoom == rm.ShipMidStorm))        {        [ animate the explosion of the boiler        animate.obj(oExplosion);        set.view(oExplosion, vw.Fire);        set.loop(oExplosion, 1);        set.cel(oExplosion, 0);        ignore.objs(oExplosion);        ignore.blocks(oExplosion);        set.priority(oExplosion, 15);        position(oExplosion, 92, 156);        draw(oExplosion);        end.of.loop(oExplosion, fExploded);        }      else        {        [ Jerrod isn't in the boiler room, so just set the         [ exploded flag        set(fExploded);        }      }    [ if boiler exploded    if (isset(fExploded))      {      reset(fExploded);      print("Bad news! The boiler on this steamer has just blown sky high! You "            "are on your way down!");      [ if explosion was due to Jerrod breaking the valve      if (isset(BrokeValve2))        {        [ set health value so death handler can respond        [ correctly        EgoHealthStatus = 24;        }      else        {        [ set health value so death handler can respond        [ correctly        EgoHealthStatus = 23;        }       [ change to sinking room, depending on whether storm      [ is happening      if (CurrentTripTime == StormTime)        {        new.room(cs.SinkingShipStorm); [ ##LE001##        }      else        {        new.room(cs.SinkingShipClear); [ ##LE002##        }      }    }      [ if ready to advance to next time point in journey  if (isset(ContinueJourney))    {    [ advance to next trip point    reset(ContinueJourney);    ++CurrentTripTime;    [ reset cycle counters    TripCycles = 0;    TripCycles2 = 0;    TripCycles3 = 0;        [ change room/cutscene depending on which trip scene is    [ current      [ if now at trip point 1 (not possible, since triptime    [ is set to 1 in rm.Overlook)    if (CurrentTripTime == TripPoint_1)      {      new.room(rm.ShipMidExterior); [ ##LE003##      }          [ at trip point 2    if (CurrentTripTime == TripPoint_2)      {      [ random chance that coal room will explode if opened      random(1, 5, TripCycles);      [ one in five chance      if (TripCycles == 1)        {        [ set this variable to 1, which will blow up the        [ ship if Jerrod opens the door        CoalFireTime = 1;        [ reset cycle count to zero        TripCycles = 0;        }      [ this scene begins in ship mid section       new.room(rm.ShipMidInterior); [ ##LE004##      }          [ at trip point 3    if (CurrentTripTime == TripPoint_3)      {      [ show marker tracing route from New York to South      [ America      new.room(cs.Atlantic); [ ##LE005##      }          [ at trip point 4    if (CurrentTripTime == TripPoint_4)      {      [ random chance that Jerrod gets sick      random(0, 3, CurrentTripTime);      [ one in four chance      if (CurrentTripTime == 0)        {        [ set         CholeraTime = TripPoint_4;        TripPoint_4 = 0;        }      [ while at sea in Atlantic at beginning of trip      CurrentTripTime = 4;      [ sequence begins in ship mid section      new.room(rm.ShipMidInterior); [ ##LE006##      }          [ at trip point 5    if (CurrentTripTime == TripPoint_5)      {      [ marker moves into Rio de Janeiro      new.room(cs.UpperSouthAm); [ ##LE007##      }          [ at trip point 6    if (CurrentTripTime == TripPoint_6)      {      [ show cutscene in Rio de Janeiro      new.room(cs.RioDeJaneiro); [ ##LE008##      }          [ at trip point 7    if (CurrentTripTime == TripPoint_7)      {      [ marker moves from Rio de Janeiro to southern South      [ America      new.room(cs.UpperSouthAm); [ ##LE009##      }          [ at trip point 8    if (CurrentTripTime == TripPoint_8)      {      [ marker moves down South America to the Cape      new.room(cs.LowerSouthAm); [ ##LE010##      }          [ if trip point time matches assigned storm time    if (CurrentTripTime == StormTime)      {      [ random chance for iceberg or rock disaster      random(0, 3, CurrentTripTime);      [ one in four chance      if (CurrentTripTime == 0)        {        [ iceberg will sink ship        vIcebergTime = StormTime;        }      else        {        [ random chance for rock disaster        random(0, 3, CurrentTripTime);        if (CurrentTripTime == 0)          {          [ rock will sink ship          vRockTime = StormTime;          }        }      [ make sure time point matches storm tim      CurrentTripTime = StormTime;            [ start sequence in bow      new.room(rm.ShipBowStorm); [ ##LE011##      }          [ at trip point 9    if (CurrentTripTime == TripPoint_9)      {      [ if not also storm time (this will always be true      [ because of the check just above)      if (CurrentTripTime != StormTime)        {        [ random chance of cholera        random(0, 3, CurrentTripTime);        [ one in four chance        if (CurrentTripTime == 0)          {          [ set cholera time to time point 9          CholeraTime = TripPoint_9;          TripPoint_9 = 0;          }        [ reset current time pointer        CurrentTripTime = 9;        }      [ this sequence starts in ship mid section      new.room(rm.ShipMidInterior); [ ##LE012##      }          [ at time point 10    if (CurrentTripTime == TripPoint_10)      {      [ marker moves up west coast of South America to      [ Valparaiso      new.room(cs.LowerSouthAm); [ ##LE013##      }          [ at time point 11    if (CurrentTripTime == TripPoint_11)      {      [ if not also storm time (this will always be true      [ because of the check just above)      if (CurrentTripTime != StormTime)        {        [ random chance of cholera        random(0, 3, CurrentTripTime);        [ one in four chance        if (CurrentTripTime == 0)          {          [ set cholera time to time point 11          CholeraTime = TripPoint_11;          CurrentTripTime = TripPoint_11;          TripPoint_11 = 0;          }        [ reset current time pointer        CurrentTripTime = 11;        }      [ this sequence starts in ship mid section      new.room(rm.ShipMidInterior); [ ##LE014##      }          [ at trip point 12    if (CurrentTripTime == TripPoint_12)      {      [ marker moves from Valparaiso to top of cutscene      new.room(cs.LowerSouthAm); [ ##LE015##      }          [ at trip point 13    if (CurrentTripTime == TripPoint_13)      {      [ marker moves from South America up to North America      new.room(cs.UpperSouthAm); [ ##LE016##      }        [ at trip point 14    if (CurrentTripTime == TripPoint_14)      {      [ marker moves halfway on map to California      new.room(cs.Pacific); [ ##LE017##      }          [ at trip point 15    if (CurrentTripTime == TripPoint_15)      {      [ this sequence starts in ship mid section      new.room(rm.ShipMidInterior); [ ##LE018##      }        [ at trip point 16    if (CurrentTripTime == TripPoint_16)      {      [ marker moves on final leg into California      new.room(cs.Pacific); [ ##LE019##      }          [ at trip point 17    if (CurrentTripTime == TripPoint_17)      {    [ marker moves into San Francisco bay up to Sacramento      new.room(cs.ArriveCalifornia); [ ##LE020##      }          [ at trip point 19    if (CurrentTripTime == TripPoint_19)      {      [ end of trip; arrive in Sacramento      new.room(rm.Sacramento); [ ##LE021##      }          [ if trip point matches scurvy time, go to start the    [ scene in middle of ship scurvy time takes the place of    [ time point 4    if (CurrentTripTime == ScurvyTime)      {      new.room(rm.ShipMidInterior); [ ##LE022##      }    }  }  [ if items haven't been lost in the storm yetif (isset(fLoseItemsStorm))  {  reset(fLoseItemsStorm);  print("You are in the midst of a terrible storm and the ship is taking on "        "water.");  print("Everything that wasn't absolutely essential to the continuation of the "        "voyage has just been thrown overboard.");  [ if Jerrod has any items to keep  if ((has("Gold coin") ||       JakesLetter == JL_DELIVERED ||       JakesLetter == JL_OPENED ||       has("Bible") ||       has("Family photo")))    {    if (has("Gold coin"))      {      print("Fortunately, the gold coin was in your pocket so you still have "            "that!");      }    if ((JakesLetter == JL_DELIVERED ||         JakesLetter == JL_OPENED))      {      if (isset(FoundGoldFlake))        {        print("Jake's letter, along with the gold flake under the stamp, was in "              "your hip pocket so that is still with you.");        }      else        {        print("Jake's letter was in your hip pocket so that is still with you.");        }      }    if (has("Family photo"))      {      print("Your family photo was in your pocket so you still have that.");      }    if (has("Bible"))      {      print("The Bible wasn't thrown overboard. Everyone agreed to keep that.");      }    print("Everything else now belongs to the raging sea.");    }  else    {    print("Everything you brought, except for the clothes on your back, is now "          "gone.");    }  [ drop everything else that Jerrod may have  if (has("Pipe"))    {    drop("Pipe");    }  if (has("House key"))    {    drop("House key");    }  if (has("Nails"))    {    drop("Nails");    }  if (has("Pure bull manure"))    {    drop("Pure bull manure");    }  if (has("Bank statement"))    {    drop("Bank statement");    }  if (has("Flowers"))    {    drop("Flowers");    }  [ if Jerrod has the metal scraps  if (MetalStatus == 1)    {    [ mark them as gone    MetalStatus = 2;    drop("Metal scraps");    }  if (has("Lumber"))    {    drop("Lumber");    }  if (has("Rope"))    {    drop("Rope");    }  if (has("Bucket"))    {    drop("Bucket");    }  if (has("Chain"))    {    drop("Chain");    }  if (has("Mosquito net"))    {    drop("Mosquito net");    }  if (has("Lantern"))    {    drop("Lantern");    }  if (has("Citrus fruit"))    {    drop("Citrus fruit");    }  if (has("Flour"))    {    drop("Flour");    }  if (has("Peas"))    {    drop("Peas");    }  if (has("Beans"))    {    drop("Beans");    }  if (has("Vegetables"))    {    drop("Vegetables");    }  if (has("Shovel"))    {    drop("Shovel");    }  if (has("Pick"))    {    drop("Pick");    }  [ all money is lost too  set(DropAllCash);  call(lgc.AdjustCash);  goto(CheckTiming);  }  [ always update the cycle counts++TripCycles;if (TripCycles == 255)  {  ++TripCycles2;  TripCycles = 0;  }if (TripCycles2 == 255)  {  ++TripCycles3;  TripCycles2 = 0;  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }if (said("eat", "citrus fruit"))  {  if (has("Citrus fruit"))    {    if (CurrentTripTime == CholeraTime)      {      print("Eating fruit won't help what you've got.");      }    else      {      print("From time to time during your voyage you eat the fruit you so "            "wisely brought along. It has kept you healthy so far!");      }    }  else    {    print("You don't have any fruit to eat.");    }  }[ Eric is a friend that Jerrod makes on board. Apparently [ he dies, and gets buried at sea.if (said("find", "eric"))  {  if (CurrentTripTime == 15)    {    print("Eric was buried at sea.");    }  else    {    [ reset haveMatch so a generic response can be given     reset(haveMatch);    }  }  Done:[ if the update flag is setif (isset(UpdateStatus))  {  [ reset it along with the show msg help flag  reset(UpdateStatus);  reset(fShowMsgHelp);  }  return();[ **************************************[ MESSAGES[ **************************************#message 1 "<F8> messages displayed "#message 2 "<F8> messages suppressed"#message 3 "Ctrl-n for next scene   "#message 4 "                        "#message 5 "Your family photo was in your pocket so you still have that."#message 6 "Bad news! The boiler on this steamer has just blown sky high! You are on your way down!"#message 11 "You're feeling a little strange and your gums are bleeding. You don't know exactly what is wrong, but something isn't right!"#message 12 "Lately you have been feeling a little nauseous, a few cramps here and there and slightly dehydrated."#message 24 "You are in the midst of a terrible storm and the ship is taking on water."#message 26 "Everything that wasn't absolutely essential to the continuation of the voyage has just been thrown overboard."#message 27 "Everything you brought, except for the clothes on your back, is now gone."#message 29 "Fortunately, the gold coin was in your pocket so you still have that!"#message 30 "Jake's letter, along with the gold flake under the stamp, was in your hip pocket so that is still with you."#message 31 "Jake's letter was in your hip pocket so that is still with you."#message 32 "The Bible wasn't thrown overboard. Everyone agreed to keep that."#message 33 "Everything else now belongs to the raging sea."#message 34 "From time to time during your voyage you eat the fruit you so wisely brought along. It has kept you healthy so far!"#message 35 "You don't have any fruit to eat."#message 36 "Eating fruit won't help what you've got."#message 135 "Eric was buried at sea."