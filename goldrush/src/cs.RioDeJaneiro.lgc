[***********************************************************[[ cs.RioDeJaneiro[[ The ship makes a stop in Rio de Janeiro. No player[ interaction, other than ability to look around. In this[ room, instead of using move.obj() commands, the[ programmers use an alarm line, and a timer to move the[ ship and rowboat while in the inner harbour.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oSteamShip                   o1#define oBoat                        o2#define oLocation                    o3#define vShip1Speed                v220#define vLocTimer                  v221#define vShipStatus                v222#define vShipTimer                 v223#define vShip2Speed                v224#define vShipTimer2                v225#define vMsgStatus                 v226#define fShipMoved                 f220#define fSndDone                   f221[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load main timing logic  load.logics(lgc.CapeTripTiming);    [ load current room picture  load.pic(currentRoom);    [ load art used in the room  load.view(vw.RioDeJaneiroArt);    [ load background theme music  load.sound(m.RioDJTheme);    [ draw the room picture  draw.pic(currentRoom);    [ animate the location tag that shows when room is first  [ loaded  animate.obj(oLocation);  set.view(oLocation, vw.RioDeJaneiroArt);  set.loop(oLocation, 5);  set.cel(oLocation, 0);  set.priority(oLocation, 15);  position(oLocation, 56, 138);  draw(oLocation);  stop.cycling(oLocation);  ignore.objs(oLocation);    [ animate small view of the steamship as it goes from/to  [ ocean inner to/from inner harbor  animate.obj(oSteamShip);  set.view(oSteamShip, vw.RioDeJaneiroArt);  set.loop(oSteamShip, 2);  fix.loop(oSteamShip);  position(oSteamShip, 144, 72);  set.priority(oSteamShip, 8);  draw(oSteamShip);  vShip1Speed = 2;  move.obj(oSteamShip, 91, 72, 1, fShipMoved);  step.time(oSteamShip, vShip1Speed);  vShipStatus = 1;    [ animate the small boat  animate.obj(oBoat);  set.view(oBoat, vw.RioDeJaneiroArt);  set.loop(oBoat, 4);  position(oBoat, 106, 138);  draw(oBoat);  stop.cycling(oBoat);  vShip2Speed = 5;  step.time(oBoat, vShip2Speed);    [ allow ego object to cycle at rest  set(CycleAtRest);  [ use ego object as the ship and the small boat when  [ moving in the inner harbor  animate.obj(ego);  set.view(ego, vw.RioDeJaneiroArt);  set.loop(ego, 0);  position(ego, 0, 111);  stop.motion(ego);    [ now show the picture  show.pic();    [ set sound done flag so theme music will begin playing  set(fSndDone);  }  [ **************************************[ EVERY CYCLE[ **************************************[ if location timer is still active  if (vLocTimer < 200)  {  [ increment timer  ++vLocTimer;  [ at 150 cycles  if (vLocTimer == 150)    {    [ partially fade the location    set.cel(oLocation, 1);    }  [ at 199 cycles  if (vLocTimer == 199)    {    [ remove the location    erase(oLocation);    }  }  [ if sound is done playingif (isset(fSndDone))  {  [ play it again  sound(m.RioDJTheme, fSndDone);  }[ when ship gets to first pointif (isset(fShipMoved) && vShipStatus == 1)  {  [ move to second point  reset(fShipMoved);  vShipStatus = 2;  move.obj(oSteamShip, 49, 84, 1, fShipMoved);  }  [ when ship gets to second pointif (isset(fShipMoved) && vShipStatus == 2)  {  [ move to third point  reset(fShipMoved);  vShipStatus = 3;  move.obj(oSteamShip, 0, 88, 1, fShipMoved);  } [ when ship gets to third pointif (isset(fShipMoved) && vShipStatus == 3)  {  [ remove the ship from the screen (the ego object will  [ take over showing the ship as it continues to dock)  reset(fShipMoved);  vShipStatus = 4;  erase(oSteamShip);  }  [ while ship is offscreenif (vShipStatus == 4)  {  [ increment timer  ++vShipTimer;  [ after 15 cycles  if (vShipTimer == 15)    {    [ advance to next stage    vShipStatus = 5;    vShipTimer = 0;    }  }  [ when ship is ready to reappear going outboundif (vShipStatus == 12)  {  [ advance to next stage  vShipStatus = 13;  [ show ship on screen again, outbound  set.loop(oSteamShip, 3);  fix.loop(oSteamShip);  position(oSteamShip, 0, 88);  set.priority(oSteamShip, 8);  draw(oSteamShip);  [ begin moving out of the harbor  move.obj(oSteamShip, 45, 88, 1, fShipMoved);  start.cycling(oSteamShip);  }  [ when ship gets to point 13if (isset(fShipMoved) && vShipStatus == 13)  {  [ move to next point  reset(fShipMoved);  vShipStatus = 14;  move.obj(oSteamShip, 79, 84, 1, fShipMoved);  }  [ when ship gets to point 14if (isset(fShipMoved) && vShipStatus == 14)  {  [ move to next point  reset(fShipMoved);  vShipStatus = 15;  move.obj(oSteamShip, 146, 72, 1, fShipMoved);  }  [ when ship gets to point 15if (isset(fShipMoved) && vShipStatus == 15)  {  [ all done with this cutscene; continue on to next time  [ point  reset(CycleAtRest);  set(ContinueJourney);  }  [ when ship reaches inner harbor and needs to change[ directionif (vShipStatus == 5)  {  [ advance to next stage  vShipStatus = 6;  [ draw the ego object, which shows the ship heading to the  [ right, toward the dock  draw(ego);  start.cycling(ego);  }  [ while at stage 6if (vShipStatus == 6)  {  [ increment timer (not sure why the programmers used two  [ different timers)  ++vShipTimer2;  [ after three cycles  if (vShipTimer2 == 3)    {    [ reset timer    vShipTimer2 = 0;        [ this portion of code moves the ego object (as the    [ steamship) to the dock, by following the alarm line        [if on alarm line    if (isset(egoHitSpecial))      {      [ don't bump y value      TmpY = 0;      }    else      {      [ bump down if NOT on alarm line      TmpY = 1;      }    [ always move one pixel to the right    TmpX = 1;    reposition(ego, TmpX, TmpY);    }  }  [ when ego object (as steamship) gets to middle of harborif (posn(ego, 67, 128, 67, 128) && vShipStatus == 6)  {  [ advance status  vShipStatus = 7;  [ show the small ship object here, to take the place of  [ ego object  set.loop(oSteamShip, 0);  stop.cycling(oSteamShip);  position(oSteamShip, 67, 128);  set.priority(oSteamShip, 12);  draw(oSteamShip);  [ erase ego object  erase(ego);  [ now redraw ego object, but this time as a small boat,  [ starting at the harbor dock and going out to the  [ steamship  set.loop(ego, 4);  fix.loop(ego);  set.priority(ego, 11);  position(ego, 106, 138);  draw(ego);  [ and now erase the boat (no idea why they are using ego  [ object for the ship and the small boat; there are  [ already screen objects for them)  erase(oBoat);  }  [ after the small boat returns to the dockif (vShipStatus == 10)  {  [ increment timer  ++vShipTimer2;  [ after three cycles  if (vShipTimer2 == 3)    {    [ reset timer    vShipTimer2 = 0;    [ if on an alarm line    if (isset(egoHitSpecial))      {      [ bump up one pixel      TmpY = -1; [ 255;      }    else      {      [ otherwise stay at same y level      TmpY = 0;      }    [ always move one pixel to left    TmpX = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ after ego (as steamship) gets to left edgeif (posn(ego, 0, 110, 0, 112) && vShipStatus == 10)  {  [ advance to next stage  vShipStatus = 11;  [ done with ego object  erase(ego);  }  [ while steamship is off screen (as it is changing direction[ to then head out of the harbor) if (vShipStatus == 11)  {  [ increment timer  ++vShipTimer;  [ after 15 cycles  if (vShipTimer == 15)    {    [ advance to next stage    vShipStatus = 12;    [ reset timer    vShipTimer = 0;    }  }  [ when the rowboat begins moving,if (vShipStatus == 7)  {  [ increment timer  ++vShipTimer2;  [ after three cycles  if (vShipTimer2 == 3)    {    [ reset timer    vShipTimer2 = 0;        [ this portion of code moves the ego object (as the    [ steamship) to the dock, by following the alarm line        [ if on the alarm line    if (isset(egoHitSpecial))      {      [ bump up one pixel      TmpY = -1; [ 255;      }    else      {      TmpY = 0;      }    [ always move one pixel to left    TmpX = -1; [ 255;    reposition(ego, TmpX, TmpY);    }  }  [ when small boat gets next to steamshipif (posn(ego, 78, 124, 78, 124) && vShipStatus == 7)  {  [ advance to next stage  vShipStatus = 8;  [ the rowers in small boat stop rowing  stop.cycling(ego);  }  [ while boat is next to steamshipif (vShipStatus == 8)  {  [ increment timer  ++vShipTimer;  [ after 15 cycles  if (vShipTimer == 15)    {    [ advance to next stage    vShipStatus = 9;    vShipTimer = 0;    [ start rowing again    start.cycling(ego);    [ show messages (unless player turned them off)    if (!isset(HideTripMsgs))      {      print("Every person on board is looking forward to going ashore! You have "            "been like a caged animal on this ship for nearly six weeks!!");      print("Ships of every kind - brigs, barques, brigantines, schooners, "            "clippers, steamers - from nearly every country come and go.");      print("Whaling, cargo, passenger and even slave ships come and go.");      print("The stay in Rio normally lasts about 10 days; could be more, could "            "be less, depending on the extent of the repairs.");      print("During this time supplies, including coal, wood, fresh water and "            "food, are replenished. Small repairs are made and the ship is "            "prepared for the next leg of the journey.");      [ if Jerrod brought along fruit      if (has("Citrus fruit"))        {        [ he gets some more        print("The fruit here is plentiful! You manage to secure more of the "              "fruit to which you attribute your good health.");        }      print("This is a fine well protected southern harbor, which makes it a "            "favorite stopping point for ships preparing to round the perilous "            "Cape Horn.");      }    }  }  [ if small boat is moving again,if (vShipStatus == 9)  {  [ increment timer  ++vShipTimer2;  [ after three cycles  if (vShipTimer2 == 3)    {    [ reset timer    vShipTimer2 = 0;    [ if on an alarm line    if (isset(egoHitSpecial))      {      [ no adjustment to y value      TmpY = 0;      }    else      {      [ otherwise, bump down one pixel      TmpY = 1;      }    [ always move one pixel right    TmpX = 1;    reposition(ego, TmpX, TmpY);    }  }  [ when boat gets back to dockif (posn(ego, 106, 138, 106, 138) && vShipStatus == 9)  {  [ advance to next stage  vShipStatus = 10;  [ redraw the boat object to take the place of the ego  [ object  draw(oBoat);  [ erase the ego object  erase(ego);  [ now redraw ego object as the steamship so it can go back  [ out the harbor  set.loop(ego, 1);  fix.loop(ego);  position(ego, 67, 128);  draw(ego);  [ erase the steamship  erase(oSteamShip);    [ advance game time by two weeks  GameWeeks  += 2;  }  [ when ship passes by the Sugar Loaf landmark (and not[ already announced)if (posn(oSteamShip, 95, 72, 95, 72) && vMsgStatus == 0)  {  [ announce the landmark (unless player chose to hide  [ messages)  if (!isset(HideTripMsgs))    {    vMsgStatus = 1;    print("The prominent landmark in this famous port is called \"Sugar Loaf\".");    }  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look islandif (said("examine", "island"))  {  print("These islands are picturesque.");  }  [ look rockif (said("examine", "rock"))  {  print("The prominent landmark in this famous port is called \"Sugar Loaf\".");  }  [ look cityif ((said("examine", "city") ||     said("examine", "home") ||     said("examine", "building") ||     said("examine", "rio")))  {  print("The town is built along the beach at the foot of the mountains.");  }[ look waterif ((said("examine", "water") ||     said("examine", "ocean") ||     said("examine", "bay")))  {  print("The water is beautifully clear and calm.");  }  [ look beachif (said("examine", "beach"))  {  print("It is a delightful, sandy beach.");  }  [ look rowboatif (said("examine", "rowboat"))  {  print("The people and supplies are transported to and from the ships in these "        "smaller boats.");  }  [ look dockif (said("examine", "dock"))  {  print("It is just a typical Rio dock!");  }  [ look streetsif (said("examine", "path"))  {  print("These are the streets of Rio de Janeiro!");  }  [ look treesif (said("examine", "forest"))  {  print("There are all kinds of indigenous trees!");  }  [ look bayif (said("examine", "bay"))  {  print("What a sight! The \"Sea Farer\" in the port of Rio!");  }  [ look boatif (said("examine", "boat"))  {  print("What a sight! The \"Sea Farer\" in the port of Rio!");  }  [ look man/womanif ((said("examine", "boy") ||     said("examine", "girl")))  {  print("People are scurrying here and there. Everyone seems to be in such a "        "hurry!");  }  [ look/look aroundif ((said("examine", "around") ||     said("examine")))  {  print("You are in the port of Rio!");  }Done:[ call the main timing logiccall(lgc.CapeTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 10 "The prominent landmark in this famous port is called \"Sugar Loaf\"."#message 20 "Every person on board is looking forward to going ashore! You have been like a caged animal on this ship for nearly six weeks!!"#message 21 "Ships of every kind - brigs, barques, brigantines, schooners, clippers, steamers - from nearly every country come and go."#message 22 "The stay in Rio normally lasts about 10 days; could be more, could be less, depending on the extent of the repairs."#message 23 "During this time supplies, including coal, wood, fresh water and food, are replenished. Small repairs are made and the ship is prepared for the next leg of the journey."#message 24 "The fruit here is plentiful! You manage to secure more of the fruit to which you attribute your good health."#message 25 "This is a fine well protected southern harbor, which makes it a favorite stopping point for ships preparing to round the perilous Cape Horn."#message 26 "Whaling, cargo, passenger and even slave ships come and go."#message 27 "The town is built along the beach at the foot of the mountains."#message 28 "The water is beautifully clear and calm."#message 29 "It is a delightful, sandy beach."#message 30 "The people and supplies are transported to and from the ships in these smaller boats."#message 31 "It is just a typical Rio dock!"#message 32 "These are the streets of Rio de Janeiro!"#message 33 "There are all kinds of indigenous trees!"#message 34 "What a sight! The \"Sea Farer\" in the port of Rio!"#message 35 "People are scurrying here and there. Everyone seems to be in such a hurry!"#message 36 "These islands are picturesque."#message 37 "You are in the port of Rio!"