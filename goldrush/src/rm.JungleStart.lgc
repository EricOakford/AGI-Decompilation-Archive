[***********************************************************[[ rm.JungleStart[[ In this scene, Jerrod and the other passengers disembark[ from the boat and begin walking across the jungle. No [ player control of ego in this scene, but player is [ allowed to input text for some interaction.[[***********************************************************[ **************************************[ LOCAL DEFINES[ **************************************#define oBoat                        o1#define oBoatman                     o2#define oMule1                       o3#define oMule2                       o4#define oGuide1                      o5#define oGuide2                      o6#define oJerrod                      o7#define oTraveler1                   o8#define oTraveler2                   o9#define oTraveler3                  o10#define oSnake                      o11#define vBoatSpeed                 v220#define vBoatStatus                v221#define vGuide1Status              v222#define vGuide2Status              v223#define vJerrodStatus              v224#define vMule1Status               v225#define vMule2Status               v226#define vTraveler1Status           v227#define vTraveler2Status           v228#define vTraveler3Status           v229#define vTimer                     v230#define vTimer2                    v231#define vSnakeStatus               v232#define vSnakeSpeed                v233#define vTmpY                      v234#define fBoatMoved                 f220#define fBoatmanMoved              f221#define fGuide1Moved               f222#define fGuide2Moved               f223#define fJerrodMoved               f224#define fMule1Moved                f225#define fMule2Moved                f226#define fTraveler1Moved            f227#define fTraveler2Moved            f228#define fTraveler3Moved            f229#define fSnakeAttacks              f230#define fSnakeMoved                f231#define fAttackStarted             f232[ **************************************[ FIRST CYCLE ONLY[ **************************************if (isset(newRoom))  {  [ load, draw and discard picture for current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ load main timing logic  load.logics(lgc.PanamaTripTiming);    [ load all the views needed in this scene  load.view(vw.Traveler2);  load.view(vw.JerrodNY);  load.view(vw.JungleArt_1);  load.view(vw.JungleArt_2);  load.view(vw.JungleMule);  load.view(vw.JungleGuide);  load.view(vw.Traveler1);  load.view(vw.Traveler3);  load.view(vw.Snake);    [ load the sound used in this room  load.sound(m.Death);    [ boat carrying Jerrod and other passengers  animate.obj(oBoat);  set.view(oBoat, vw.JungleArt_1);  set.loop(oBoat, 0);  fix.loop(oBoat);  set.priority(oBoat, 9);  [ starts on left edge  position(oBoat, 0, 127);  draw(oBoat);  [ move to first point  move.obj(oBoat, 6, 127, 1, fBoatMoved);  vBoatStatus = 1;  vBoatSpeed = 2;  step.time(oBoat, vBoatSpeed);    [ boatman  animate.obj(oBoatman);  set.view(oBoatman, vw.JungleArt_1);  set.loop(oBoatman, 1);  fix.loop(oBoatman);  set.priority(oBoatman, 10);  [ starts at front of boat  position(oBoatman, 22, 128);  draw(oBoatman);  [ move him in synch with the boat  move.obj(oBoatman, 28, 128, 1, fBoatmanMoved);  step.time(oBoatman, vBoatSpeed);  cycle.time(oBoatman, vBoatSpeed);    [ first mule, waiting on shore  animate.obj(oMule1);  set.view(oMule1, vw.JungleArt_1);  set.loop(oMule1, 7);  fix.loop(oMule1);  position(oMule1, 114, 79);  draw(oMule1);  stop.cycling(oMule1);  [ second mule, waiting on shore  animate.obj(oMule2);  set.view(oMule2, vw.JungleArt_1);  set.loop(oMule2, 7);  fix.loop(oMule2);  position(oMule2, 93, 78);  draw(oMule2);  stop.cycling(oMule2);    [ native guide #1, standing by the huts  animate.obj(oGuide1);  set.view(oGuide1, vw.JungleArt_1);  set.loop(oGuide1, 2);  fix.loop(oGuide1);  position(oGuide1, 109, 80);  draw(oGuide1);  [ this native is not moving  stop.cycling(oGuide1);    [ native guide #2, starts by river walking to the right  animate.obj(oGuide2);  set.view(oGuide2, vw.JungleArt_1);  set.loop(oGuide2, 2);  fix.loop(oGuide2);  position(oGuide2, 73, 75);  draw(oGuide2);  [ move to the right  move.obj(oGuide2, 138, 75, 1, fGuide2Moved);  vGuide2Status = 1;    [ Jerrod, small view (don't draw yet)  animate.obj(oJerrod);  set.view(oJerrod, vw.JungleArt_1);  set.loop(oJerrod, 3);  fix.loop(oJerrod);  position(oJerrod, 72, 79);    [ traveller 1, small view (don't draw yet)  animate.obj(oTraveler1);  set.view(oTraveler1, vw.JungleArt_1);  set.loop(oTraveler1, 4);  fix.loop(oTraveler1);  position(oTraveler1, 88, 77);    [ traveller  2, small view (don't draw yet)  animate.obj(oTraveler2);  set.view(oTraveler2, vw.JungleArt_1);  set.loop(oTraveler2, 5);  fix.loop(oTraveler2);  position(oTraveler2, 82, 79);    [ traveller 3, small view (don't draw yet)  animate.obj(oTraveler3);  set.view(oTraveler3, vw.JungleArt_1);  set.loop(oTraveler3, 6);  fix.loop(oTraveler3);  position(oTraveler3, 77, 77);    [ Jerrod, normal size(don't draw yet)  animate.obj(ego);  set.view(ego, vw.JerrodNY);  position(ego, 152, 153);  set.priority(ego, 14);  observe.blocks(ego);    [ add snake to tree in right foreground  animate.obj(oSnake);  set.view(oSnake, vw.Snake);  set.loop(oSnake, 0);  fix.loop(oSnake);  ignore.horizon(oSnake);  ignore.objs(oSnake);  set.priority(oSnake, 14);  position(oSnake, 113, 26);  draw(oSnake);  vSnakeSpeed = 3;  cycle.time(oSnake, vSnakeSpeed);    [ now show the picture  show.pic();  }  [ **************************************[ EVERY CYCLE[ **************************************[ if boat has reached first pointif (isset(fBoatMoved) && vBoatStatus == 1)  {  [ advance to next stage  reset(fBoatMoved);  vBoatStatus = 2;  [ move boat and boatman to next point  move.obj(oBoat, 32, 116, 1, fBoatMoved);  move.obj(oBoatman, 54, 117, 1, fBoatmanMoved);  }  [ if boat has reached second pointif (isset(fBoatMoved) && vBoatStatus == 2)  {  [ advance to next stage  reset(fBoatMoved);  vBoatStatus = 3;  [ move boat and boatman to next point  move.obj(oBoat, 51, 104, 1, fBoatMoved);  move.obj(oBoatman, 73, 105, 1, fBoatmanMoved);  }  [ if boat has reached third pointif (isset(fBoatMoved) && vBoatStatus == 3)  {  [ advance to next stage  reset(fBoatMoved);  vBoatStatus = 4;  [ move boat and boatman to last point  move.obj(oBoat, 88, 91, 1, fBoatMoved);  move.obj(oBoatman, 110, 92, 1, fBoatmanMoved);  }  [ when boat reaches final destinationif (isset(fBoatMoved) && vBoatStatus == 4)  {  [ advance to next stage  reset(fBoatMoved);  vBoatStatus = 5;    [ show boat with no passengers  set.view(oBoat, vw.JungleArt_2);  set.loop(oBoat, 3);  [ draw it right now  force.update(oBoat);  [ then stop updating  stop.update(oBoat);    [ boatman no longer needed  erase(oBoatman);    [ these two lines shouldn't be here; the guide is removed  [ from the screen at this point; positioning and moving  [ without drawing will have no effect; when guide status  [ is set to '4', the code below that handles the guide   [ will correctly position him, draw him, and start him  [ moving  position(oGuide2, 128, 81);  move.obj(oGuide2, 138, 75, 1, fGuide2Moved);    [ advance guide status to next stage    vGuide2Status = 4;    [ the mules and guide #1 start moving  move.obj(oMule1, 138, 79, 1, fMule1Moved);  start.cycling(oMule1);  vMule1Status = 1;  [ now guide #1  move.obj(oGuide1, 138, 80, 1, fGuide1Moved);  start.cycling(oGuide1);  vGuide1Status = 1;  [ and then mule #2  move.obj(oMule2, 138, 78, 1, fMule2Moved);  start.cycling(oMule2);  vMule2Status = 1;    [ add the travelers (with small views)  draw(oTraveler1);  move.obj(oTraveler1, 138, 77, 1, fTraveler1Moved);  vTraveler1Status = 1;  [ traveller #2  draw(oTraveler2);  move.obj(oTraveler2, 138, 79, 1, fTraveler2Moved);  vTraveler2Status = 1;  [ traveller #3  draw(oTraveler3);  move.obj(oTraveler3, 138, 77, 1, fTraveler3Moved);  vTraveler3Status = 1;  [ Jerrod  draw(oJerrod);  move.obj(oJerrod, 138, 78, 1, fJerrodMoved);  vJerrodStatus = 1;  }    [ when guide gets to first pointif (isset(fGuide2Moved) && vGuide2Status == 1)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 2;  [ move to next point, behind bushes on right  move.obj(oGuide2, 153, 90, 1, fGuide2Moved);  }  [ when guide gets to bushesif (isset(fGuide2Moved) && vGuide2Status == 2)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 3;  [ remove him (he's hidden behind the bushes)  erase(oGuide2);  }  [ when boat lands, guide status gets setif (vGuide2Status == 4)  {  [ advance to next status  vGuide2Status = 5;  [ guide starts in front of center hut  position(oGuide2, 128, 81);  draw(oGuide2);  [ move to right edge  move.obj(oGuide2, 153, 90, 1, fGuide2Moved);  }  [ when guide gets to point 5if (isset(fGuide2Moved) && vGuide2Status == 5)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 6;  [ erase him (he's hidden behind bushes)  erase(oGuide2);  }  [ when guide is ready to reappearif (vGuide2Status == 7)  {  [ advance to next stage  vGuide2Status = 8;  [ switch to larger view  set.view(oGuide2, vw.JungleGuide);  [ guide is now visible on right, on front path  position(oGuide2, 153, 153);  set.loop(oGuide2, 1);  set.priority(oGuide2, 14);  draw(oGuide2);  [ move him toward center   move.obj(oGuide2, 85, 153, 1, fGuide2Moved);  }  [ when guide gets to center of pathif (isset(fGuide2Moved) && vGuide2Status == 8)  {  [ advance to next stage  reset(fGuide2Moved);  vGuide2Status = 9;  [ move guide to left edge  move.obj(oGuide2, 0, 160, 1, fGuide2Moved);  }  [ when guide gets to left edgeif (isset(fGuide2Moved) && vGuide2Status == 9)  {  [ remove him from screen  reset(fGuide2Moved);  vGuide2Status = 10;  erase(oGuide2);  }  [ when mule #1 gets to first pointif (isset(fMule1Moved) && vMule1Status == 1)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 2;  [ move to next point (behind bushes on right)  move.obj(oMule1, 153, 90, 1, fMule1Moved);  }[ when mule #1 goes behind bushesif (isset(fMule1Moved) && vMule1Status == 2)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 3;  [ remove mule from screen  erase(oMule1);  }  [ when mule is ready to reappearif (vMule1Status == 4)  {  [ advance to next stage  vMule1Status = 5;  [ show mule with larger view  set.view(oMule1, vw.JungleMule);  [ start on right of screen, on front path  position(oMule1, 140, 153);  set.loop(oMule1, 1);  set.priority(oMule1, 14);  draw(oMule1);  [ move to center of screen on path  move.obj(oMule1, 85, 153, 1, fMule1Moved);  }[ when mule #1 gets to center screenif (isset(fMule1Moved) && vMule1Status == 5)  {  [ advance to next stage  reset(fMule1Moved);  vMule1Status = 6;  [ move to left edge  move.obj(oMule1, 0, 160, 1, fMule1Moved);  }  [ when mule #1 gets to left edgeif (isset(fMule1Moved) && vMule1Status == 6)  {  [ remove mule from screen  reset(fMule1Moved);  vMule1Status = 7;  erase(oMule1);  }  [ when guide #1 starts movingif (isset(fGuide1Moved) && vGuide1Status == 1)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 2;  [ move to right edge, behind bushes  move.obj(oGuide1, 153, 90, 1, fGuide1Moved);  }  [ when guide #1 gets behind bushesif (isset(fGuide1Moved) && vGuide1Status == 2)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 3;  [ remove him from screen  erase(oGuide1);  }  [ when guide #1 is ready to reappearif (vGuide1Status == 4)  {  [ advance to next stage  vGuide1Status = 5;  [ show him with larger view  set.view(oGuide1, vw.JungleGuide);  [ on right side, on front trail  position(oGuide1, 153, 153);  set.loop(oGuide1, 1);  set.priority(oGuide1, 14);  draw(oGuide1);  [ move him to center of screen on trail  move.obj(oGuide1, 85, 153, 1, fGuide1Moved);  }  [ when guide #1 gets to center of trailif (isset(fGuide1Moved) && vGuide1Status == 5)  {  [ advance to next stage  reset(fGuide1Moved);  vGuide1Status = 6;  [ move him to left edge  move.obj(oGuide1, 0, 160, 1, fGuide1Moved);  }  [ when guide #1 gets to left edgeif (isset(fGuide1Moved) && vGuide1Status == 6)  {  [ remove him from screen  reset(fGuide1Moved);  vGuide1Status = 7;  erase(oGuide1);  }  [ when mule #2 is ready to moveif (isset(fMule2Moved) && vMule2Status == 1)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 2;  [ move to right (behind bushes)  move.obj(oMule2, 153, 90, 1, fMule2Moved);  }  [ when mule #2 gets behind bushesif (isset(fMule2Moved) && vMule2Status == 2)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 3;  [ remove it from screen  erase(oMule2);  }  [ when mule #2 is ready to reappearif (vMule2Status == 4)  {  [ advance to next stage  vMule2Status = 5;  [ show mule with larger view  set.view(oMule2, vw.JungleMule);  [ on right side, on front path  position(oMule2, 140, 153);  set.loop(oMule2, 1);  set.priority(oMule2, 14);  draw(oMule2);  [ move mule to center of screen on path  move.obj(oMule2, 85, 153, 1, fMule2Moved);  }  [ when mule #2 gets to center of pathif (isset(fMule2Moved) && vMule2Status == 5)  {  [ advance to next stage  reset(fMule2Moved);  vMule2Status = 6;  [ move to left edge  move.obj(oMule2, 0, 160, 1, fMule2Moved);  }  [ when mule #2 reaches left edgeif (isset(fMule2Moved) && vMule2Status == 6)  {  [ remove it from screen  reset(fMule2Moved);  vMule2Status = 7;  erase(oMule2);  }  [ when traveller #1 is ready to moveif (isset(fTraveler1Moved) && vTraveler1Status == 1)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 2;  [ move to right edge, behind bushes  move.obj(oTraveler1, 153, 90, 1, fTraveler1Moved);  }  [ when traveller #1 is behind bushesif (isset(fTraveler1Moved) && vTraveler1Status == 2)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 3;  [ remove him from screen  erase(oTraveler1);  }  [ when traveller #1 is ready to reappearif (vTraveler1Status == 4)  {  [ advance to next stage  vTraveler1Status = 5;  [ show him with large view  set.view(oTraveler1, vw.Traveler1);  [ on right side, on front path  position(oTraveler1, 152, 153);  set.loop(oTraveler1, 1);  set.priority(oTraveler1, 14);  draw(oTraveler1);  [ move him to center of screen on path  move.obj(oTraveler1, 85, 153, 1, fTraveler1Moved);  }  [ when traveller #1 gets to center of front pathif (isset(fTraveler1Moved) && vTraveler1Status == 5)  {  [ advance to next stage  reset(fTraveler1Moved);  vTraveler1Status = 6;  [ move him to left edge  move.obj(oTraveler1, 0, 160, 1, fTraveler1Moved);  }  [ when traveller #1 gets to left edgeif (isset(fTraveler1Moved) && vTraveler1Status == 6)  {  [ remove him from screen  reset(fTraveler1Moved);  vTraveler1Status = 7;  erase(oTraveler1);  }  [ if traveller #2 is ready to moveif (isset(fTraveler2Moved) && vTraveler2Status == 1)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 2;  [ move to right edge, behind bushes  move.obj(oTraveler2, 153, 90, 1, fTraveler2Moved);  }  [ when traveller #2 is behind bushesif (isset(fTraveler2Moved) && vTraveler2Status == 2)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 3;  [ remove him from screen  erase(oTraveler2);  }  [ when traveller #2 is ready to reappearif (vTraveler2Status == 4)  {  [ advance to next stage  vTraveler2Status = 5;  [ show him with larger view  set.view(oTraveler2, vw.Traveler2);  [ on right side, on front path  position(oTraveler2, 152, 153);  set.loop(oTraveler2, 1);  set.priority(oTraveler2, 14);  draw(oTraveler2);  [ move him to center of screen on path  move.obj(oTraveler2, 85, 153, 1, fTraveler2Moved);  }  [ when traveller #2 gets to center of front pathif (isset(fTraveler2Moved) && vTraveler2Status == 5)  {  [ advance to next stage  reset(fTraveler2Moved);  vTraveler2Status = 6;  [ move him to left edge  move.obj(oTraveler2, 0, 160, 1, fTraveler2Moved);  }  [ when traveller #3 gets to left edgeif (isset(fTraveler2Moved) && vTraveler2Status == 6)  {  [ remove him from screen  reset(fTraveler2Moved);  vTraveler2Status = 7;  erase(oTraveler2);  }  [ if traveller #3 is ready to moveif (isset(fTraveler3Moved) && vTraveler3Status == 1)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 2;  [ move him to right (behind bushes)  move.obj(oTraveler3, 153, 90, 1, fTraveler3Moved);  }  [ when traveller #3 gets behind bushesif (isset(fTraveler3Moved) && vTraveler3Status == 2)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 3;  [ remove him from screen  erase(oTraveler3);  }  [ when traveller #3 is ready to reappearif (vTraveler3Status == 4)  {  [ advance to next stage  vTraveler3Status = 5;  [ show him with larger view  set.view(oTraveler3, vw.Traveler3);  [ on right side, on front path  position(oTraveler3, 152, 153);  set.loop(oTraveler3, 1);  set.priority(oTraveler3, 14);  draw(oTraveler3);  [ move him to center of front path  move.obj(oTraveler3, 85, 153, 1, fTraveler3Moved);  }  [ when traveller #3 gets to center of front pathif (isset(fTraveler3Moved) && vTraveler3Status == 5)  {  [ advance to next stage  reset(fTraveler3Moved);  vTraveler3Status = 6;  [ move him to left edge  move.obj(oTraveler3, 0, 160, 1, fTraveler3Moved);  }  [ when traveller #3 gets to left edgeif (isset(fTraveler3Moved) && vTraveler3Status == 6)  {  [ remove him from screen  reset(fTraveler3Moved);  vTraveler3Status = 7;  erase(oTraveler3);  }  [ when Jerrod is ready to start movingif (isset(fJerrodMoved) && vJerrodStatus == 1)  {  [ advance to next stage  reset(fJerrodMoved);  vJerrodStatus = 2;  [ move him to right, behind bushes  move.obj(oJerrod, 153, 90, 1, fJerrodMoved);  }  [ when Jerrod is behind the bushesif (isset(fJerrodMoved) && vJerrodStatus == 2)  {  [ advance to next stage  reset(fJerrodMoved);  vJerrodStatus = 3;  [ remove him from screen  erase(oJerrod);  }  [ when Jerrod is ready to move againif (vJerrodStatus == 5)  {  [ advance to next stage  vJerrodStatus = 6;  [ use ego object for Jerrod, with normal size view  set.loop(ego, 1);  draw(ego);  [ move him to center of front path  move.obj(ego, 85, 153, 1, fJerrodMoved);  }  [ when Jerrod reaches center of front pathif (isset(fJerrodMoved) && vJerrodStatus == 6)  {  [ advance to next stage  reset(fJerrodMoved);  vJerrodStatus = 7;  [ move him to left edge  move.obj(ego, 0, 160, 1, fJerrodMoved);  }  [ when Jerrod gets to left edgeif (isset(fJerrodMoved) && vJerrodStatus == 7)  {  [ done with this cutscene; ready to continue  reset(fJerrodMoved);  vJerrodStatus = 8;  set(ContinueJourney);  }  [ when Jerrod first disappears from the screen behind the[ bushesif (vJerrodStatus == 3)  {  [ increment timer  ++vTimer;  [ after 20 cycles  if (vTimer == 20)    {    [ reset timer    vTimer = 0;    [ advance Jerrod and guide #1 to next status    vJerrodStatus = 4;    vGuide1Status = 4;    }  }  [ the rest of the caravan appears at intervals[ when guide2 is moving and timer2 is <200if (vGuide1Status > 4 && vTimer2 < 200)  {  [ increment timer  ++vTimer2;  if (vTimer2 == 18)    {    [ first mule reappears    vMule1Status = 4;    }  if (vTimer2 == 28)    {    [ guide reappears    vGuide2Status = 7;    }  if (vTimer2 == 46)    {    [ second mule reappears    vMule2Status = 4;    }  if (vTimer2 == 57)    {    [ first traveller reappears    vTraveler1Status = 4;    }  if (vTimer2 == 68)    {    [ second traveller reappears    vTraveler2Status = 4;    }  if (vTimer2 == 79)    {    [ third traveller reappears    vTraveler3Status = 4;    }  if (vTimer2 == 90)    {    [ Jerrod reappears    vJerrodStatus = 5;    }  }  [ none of this snake code will do anything; since ego object[ is under program control, moving from right to left, flag[ fSnakeAttacks gets set too late; it will never be set when[ ego object's x value is 118[ if at xPos=117, and snake isn't attackingif (EgoX == 117 && !isset(fSnakeAttacks))  {  [ it will now  set(fSnakeAttacks);  }[ if at xPos=118, and snake IS attackingif (isset(fSnakeAttacks) && EgoX == 118)  {  [ stop ego object  egoDir = STOPPED;  [ if attack hasn't started yet  if (!isset(fAttackStarted))    {    [ it happens    set(fAttackStarted);    [ snake slithers down from the tree    set.loop(oSnake, 1);    set.cel(oSnake, 1);    vSnakeSpeed = 1;    cycle.time(oSnake, vSnakeSpeed);    end.of.loop(oSnake, fSnakeMoved);    vSnakeStatus = 1;    }  }  [ when snake moves out of the treeif (isset(fSnakeMoved) && vSnakeStatus == 1)  {  [ advance to next stage  reset(fSnakeMoved);  vSnakeStatus = 2;  set.loop(oSnake, 2);  ignore.blocks(oSnake);  vSnakeSpeed = 3;  cycle.time(oSnake, vSnakeSpeed);  [ snake moves to Jerrod  move.obj(oSnake, 113, 141, 7, fSnakeMoved);  start.cycling(oSnake);  }  [ when snake gets to Jerrodif (isset(fSnakeMoved) && vSnakeStatus == 2)  {  [ advance to next stage  reset(fSnakeMoved);  vSnakeStatus = 3;  [ change ego object view to show snake   [ constricting Jerrod  set.view(ego, vw.Snake);  set.loop(ego, 3);  fix.loop(ego);  set.cel(ego, 0);  [ adjust position so it displays correctly  vSnakeSpeed = -3; [ 253;  vTmpY = 0;  reposition(ego, vSnakeSpeed, vTmpY);  [ snake object not needed  erase(oSnake);  [ allow ego object to cycle at rest  set(CycleAtRest);  vSnakeSpeed = 4;  cycle.time(ego, vSnakeSpeed);  [ now squeeze Jerrod  end.of.loop(ego, fSnakeMoved);  }  [ after snake kills Jerrodif (isset(fSnakeMoved) && vSnakeStatus == 3)  {  [ done with snake sequence  reset(fSnakeMoved);  vSnakeStatus = 4;  [ Jerrod has been killed by a snake  EgoHealthStatus = 30;  [ call death handler  call(lgc.DeathSnakeSqueeze);  }  [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input no need to do said testsif (!isset(haveInput))  {  goto(Done);  }  [ look aroundif ((said("examine", "around") ||     said("examine", "jungle") ||     said("examine")))  {  print("Here your boat ride ends and you begin walking through the jungle on "        "the ancient Spanish road!");  }  [ look plantsif ((said("examine", "plant") ||     said("examine", "bush")))  {  print("You have never seen plants like this before, and you hope you never "        "will again!");  }  [ look riverif ((said("examine", "creek") ||     said("examine", "water")))  {  print("This is the Chagres River. Who knows what lurks below the surface of "        "the murky, muddy water!");  }  [ climb treesif (said("climb", "forest"))  {  print("Give it a try, but it won't do any good.");  }  [ look treesif (said("examine", "forest"))  {  print("There are jungle trees of every species.");  }  [ look groundif (said("examine", "dirt"))  {  print("This is just typical jungle ground.");  }  [ look upif ((said("examine", "up") ||     said("examine", "sky")))  {  print("You see the blue Panamanian sky.");  }  [ look downif (said("examine", "down"))  {  print("There's nothing interesting down here.");  }  [ look rocksif (said("examine", "rock"))  {  print("Here and there you see a few jungle rocks.");  }  [ look vinesif (said("examine", "vine"))  {  print("It wouldn't be a jungle if there weren't vines!");  }  [ look swampif (said("examine", "swamp"))  {  print("It looks swampy at the river's edge.");  }  [ go swimmingif ((said("swim", "rol") ||     said("anyword", "swim", "rol") ||     said("go", "water") ||     said("go", "anyword", "water") ||     said("jump") ||     said("jump", "across") ||     said("jump", "across", "board") ||     said("jump", "overboard") ||     said("jump", "water") ||     said("jump", "anyword", "water") ||     said("go", "creek") ||     said("go", "anyword", "creek") ||     said("jump", "creek") ||     said("jump", "anyword", "creek") ||     said("enter", "water") ||     said("enter", "creek")))  {  print("Why do that? Who knows what dangers lie beneath the surface of the "        "river!");  }  [ look boatif (said("examine", "boat"))  {  print("That small boat made it after all!");  }  [ look manif (said("examine", "boy"))  {  [ if last traveller has already left the screen  if (vTraveler3Status == 7)    {    print("There is no man close enough.");    }  else    {    print("These other people are also on their way to California!");    }  }  [ talk to manif ((said("speak", "boy") || said("speak")))  {  [ if last traveller has already left the screen  if (vTraveler3Status == 7)    {    print("There is no man close enough.");    }  else    {    print("The axious travelers say, \"Let's get going! We have to get to "          "California as soon as possible!\"");    }  }  [ look hutif ((said("examine", "hut") ||     said("examine", "hay", "hut") ||     said("examine", "home") ||     said("examine", "city") ||     said("examine", "building")))  {  print("A few straw huts make up the city of Cruces.");  }  [ look muleif (said("examine", "donkey"))  {  [ if last mule has already left the screen  if (vMule2Status == 7)    {    print("There isn't a mule to look at now.");    }  else    {    print("These mules will carry the provisions.");    }  }  [ look snakeif (said("examine", "boa"))  {  print("It is difficult to see snakes in the jungle. You could be looking "        "right at one and not see it!");  }  [ look path/look roadif ((said("examine", "path") ||     said("examine", "anyword", "path")))  {  print("This is where the ancient Spanish road meets the Chagres River.");  }  [ it's not a horse!if ((said("horse") || said("anyword", "horse")))  {  print("Those animals are mules!");  }[ look guideif (said("examine", "guide"))  {  print("Your guide is completely at home in the jungle.");  }  [ drink waterif ((said("acquire", "water") ||     said("anyword", "drink", "rol") ||     said("drink", "rol")))  {  print("You don't need any water.");  }  Done:[ call the main timing logiccall(lgc.PanamaTripTiming);return();[ **************************************[ MESSAGES[ **************************************#message 1 "Here your boat ride ends and you begin walking through the jungle on the ancient Spanish road!"#message 2 "You have never seen plants like this before, and you hope you never will again!"#message 3 "This is the Chagres River. Who knows what lurks below the surface of the murky, muddy water!"#message 4 "Give it a try, but it won't do any good."#message 5 "There are jungle trees of every species."#message 6 "This is just typical jungle ground."#message 7 "You see the blue Panamanian sky."#message 8 "There's nothing interesting down here."#message 9 "Here and there you see a few jungle rocks."#message 10 "It wouldn't be a jungle if there weren't vines!"#message 11 "It looks swampy at the river's edge."#message 13 "Why do that? Who knows what dangers lie beneath the surface of the river!"#message 14 "That small boat made it after all!"#message 16 "These other people are also on their way to California!"#message 17 "The axious travelers say, \"Let's get going! We have to get to California as soon as possible!\""#message 18 "A few straw huts make up the city of Cruces."#message 19 "These mules will carry the provisions."#message 20 "There isn't a mule to look at now."#message 21 "There is no man close enough."#message 22 "It is difficult to see snakes in the jungle. You could be looking right at one and not see it!"#message 23 "This is where the ancient Spanish road meets the Chagres River."#message 24 "Those animals are mules!"#message 38 "Your guide is completely at home in the jungle."#message 50 "You don't need any water."