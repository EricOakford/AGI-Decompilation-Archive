[***********************************************************[ [ txt.Help1[[ The main Gold Rush help screen - it's displayed on the[ text screen.[[***********************************************************text.screen();lastChar = 0;reset(haveMatch);display(2, 1, "              GOLD RUSH!");display(3, 1, "            Lend me a hand");if ((machineType == ATARI || machineType == AMIGA))  {  display(6, 1, "    F1 or HELP displays this screen.");  }else  {  display(6, 1, "    F1 displays HELP screen.");  }display(7, 1, "    F2 turns the sound off and on.");display(8, 1, "    F3 retypes the last line typed.");display(9, 1, "    F4 toggles status line off and on.");display(10, 1, "    F5 saves your current game.");display(11, 1, "    F6 shows elapsed time.");display(12, 1, "    F7 restores a saved game.");display(13, 1, "    F8 toggles trek messages.");display(14, 1, "    F9 restarts the game.");display(15, 1, "   F10 pauses the game.");[ Atari and Amiga also show status by using joystick or[ mouseif ((machineType == ATARI || machineType == AMIGA))  {  display(16, 1, "   TAB shows status screen. (see below)");  }else  {  display(16, 1, "   TAB shows the status screen.");  }    display(17, 1, "   ESC displays menus.");display(18, 1, "Ctrl-C Cancels last line typed.");display(19, 1, "Ctrl-J sets up your joystick.");display(20, 1, "Ctrl-N go to next trek scene.");[ on PCs only, RGB monitor mode can be toggledif (machineType == PC)  {  display(21, 1, "Ctrl-R toggles RGB monitor modes.");  }[ Atari and Amiga also show status by using joystick or[ mouseif ((machineType == ATARI || machineType == AMIGA))  {  display(22, 1, "Double clicking joystick button or\n right mouse button also "          "shows status\n screen.");  }  display(23, 1, " Alt-Z Quit");[ wait for a keypress before continuingLoop1:if (!have.key())  {  goto(Loop1);  }  [ use of two returns is unusual - [ I believe it's because Sierra's compiler might have[ automatically added a return command to end of every[ logic; so if the logic already ended in a return(),the[ compiler just added another onereturn();return();[ **************************************[ MESSAGES[ **************************************#message 1 "              GOLD RUSH!"#message 2 "            Lend me a hand"#message 3 "    F1 displays HELP screen."#message 4 "    F2 turns the sound off and on."#message 5 "    F3 retypes the last line typed."#message 6 "    F4 toggles status line off and on."#message 7 "    F5 saves your current game."#message 9 "    F7 restores a saved game."#message 11 "    F9 restarts the game."#message 12 "   F10 pauses the game."#message 13 "   TAB shows the status screen."#message 14 "   ESC displays menus."#message 15 "Ctrl-J sets up your joystick."#message 16 "Ctrl-R toggles RGB monitor modes."#message 17 "    F1 or HELP displays this screen."#message 18 "   TAB shows status screen. (see below)"#message 19 "Double clicking joystick button or\n right mouse button also shows status\n screen."#message 20 "    F6 shows elapsed time."#message 21 "Ctrl-C Cancels last line typed."#message 22 " Alt-Z Quit"#message 23 "    F8 toggles trek messages."#message 24 "Ctrl-N go to next trek scene."