if (errorNumber > 0)  {  call(lgc.error);  }if (!currentRoom)  {  set.game.id("KQ1");  script.size(100);  maxScore = 158;  game.speed = 2;  animationInterval = game.speed;  if (gameRestarted)    {    new.room(Logic1);    }  else    {    set.menu("Info");    set.menu.item("About KQ", c.about);    set.menu.item("Help    ", c.help);    set.menu("File");    set.menu.item("Save Game      <F5>", c.save);    set.menu.item("Restore Game   <F7>", c.restore);    set.menu.item("-------------------", c.dummy);    set.menu.item("Restart Game   <F9>", c.restart);    set.menu.item("-------------------", c.dummy);    set.menu.item("Quit        <Alt Z>", c.quit);    set.menu("Game");    set.menu.item("See Object     <F4>", c.show.obj);    set.menu.item("Inventory     <Tab>", c.status);    set.menu("Action ");    set.menu.item("Swim  =", c.swim);    set.menu.item("Jump  0", c.jump);    set.menu.item("Duck  -", c.duck);    set.menu("Special");    set.menu.item("Sound On/Off       <F2>", c.sound.toggle);    if (machineType != AMIGA)      {      if (machineType == ATARI)        {        set.menu.item("Joystick/Mouse <Ctrl J>", c.init.joy);        }      else        {        if (machineType == PC &&             monitorType != EGA &&             monitorType != MONO)          {          set.menu.item("Graphics Mode  <Ctrl R>", c.toggle.monitor);          }        set.menu.item("Reset Joystick <Ctrl J>", c.init.joy);        }      }    set.menu.item("Pause             <Esc>", c.pause);    set.menu("Speed");    set.menu.item("Normal", c.speed.normal);    set.menu.item("Fast  ", c.speed.fast);    set.menu.item("Slow  ", c.speed.slow);    submit.menu();    new.room(rm.title);    }  }if (currentRoom == 52)  {  set(onWater);  }if ((newRoom || gameRestored))  {  if (currentRoom != 83)    {    set(enableDblClick);    disable.item(c.dummy);    set(enableMenu);    dblClickDelay = 3;    }  }if (newRoom)  {  animate.obj(ego);  load.view(View0);  if (currentRoom == 52)    {    currentEgoView = 0;    }  if (currentRoom == 65 &&       previousRoom == 80)    {    currentEgoView = 105;    }  if ((ego.ducking || ego.jumping))    {    reset(ego.ducking);    reset(ego.jumping);    reset(keep.cycling);    currentEgoView = 0;    }  if (previousRoom == 10 &&       currentRoom != 11)    {    if (goat.following)      {      currentEgoView = 0;      }    }  if (previousRoom == 11 &&       currentRoom != 10)    {    if (goat.following)      {      currentEgoView = 0;      }    }  load.view.v(currentEgoView);  set.view.v(ego, currentEgoView);  load.logics(lgc.pragma.fail);  if (have.fiddle)    {    load.sound(Sound8);    }  if (currentRoom != 53 &&       currentRoom != 58 &&       currentRoom != 49 &&       currentRoom != 51 &&       currentRoom != 52 &&       currentRoom != 12 &&       currentRoom != 10 &&       currentRoom != 11)    {    load.view(View75);    load.view(View87);    }  load.view(View110);  if (currentRoom != 83)    {    configure.screen(1, 22, 0);    }  if ((have.mushroom || ego.shrunk))    {    load.view(View60);    }  if ((goat.following || dead.goat.room > 0))    {    load.view(View62);    }  reset(debugging);  observe.objs(ego);  observe.blocks(ego);  reset(in.swim.room);  reset(deadly.water);  reset(done);  reset(sound.done);  reset(fall.sound.done);  reset(ego.fell);  reset(menace.caught.ego);  reset(f145);  work = 0;  work.2 = 0;  work.3 = 0;  clear.work = 20;flagLooper:  reset.v(clear.work);  ++clear.work;  if (clear.work < 45)    {    goto(flagLooper);    }  clear.work = 30;varLooper:  *clear.work = 0;  ++clear.work;  if (clear.work < 45)    {    goto(varLooper);    }  set.string(inputPrompt, ">");  set.cursor.char("_");  }get.posn(ego, ego.x, ego.y);if (controller(c.menu) &&     currentRoom != 83)  {  menu.input();  }if (controller(c.debug))  {  load.logics(lgc.debug);  set(debugging);  print("VERSION 2.0F");  version();  }if ((said("fast") ||     controller(c.speed.fast)))  {  game.speed = 0;  animationInterval = game.speed;  }if ((said("normal") ||     controller(c.speed.normal)))  {  game.speed = 2;  animationInterval = game.speed;  }if ((said("slow") ||     controller(c.speed.slow)))  {  game.speed = 4;  animationInterval = game.speed;  }if ((said("quit") ||     controller(c.quit)))  {  stop.sound();  quit(0);  }if ((said("restore", "game") ||     controller(c.restore)))  {  restore.game();  }if ((said("restart", "game") ||     controller(c.restart)))  {  restart.game();  }if (controller(c.status))  {  status();  }if (controller(c.show.obj))  {  set(enableItemSelect);  status();  if (selectedItem > 0 &&       selectedItem != 255)    {    work = selectedItem;    work  += 116;    if (work == 125 &&         bowl.state == 1)      {      ++work;      }    if ((work == 127 ||         work == 142) &&         have.water &&         !onWater)      {      work = 128;      }    show.obj.v(work);    }  reset(enableItemSelect);  }if (controller(c.about))  {  print("King's Quest was designed by Roberta Williams.");  }if (controller(c.help))  {  call(lgc.help);  }if (controller(c.sound.toggle))  {  toggle(soundOn);  }if (controller(c.toggle.monitor))  {  toggle.monitor();  }if (controller(c.init.joy))  {  init.joy();  }if (controller(c.cancel.line))  {  cancel.line();  }if (certain.death)  {  if (!ego.dead)    {    load.logics(lgc.death);    load.sound(m.death);    cycles.before.death = 40;    set(ego.dead);    }  program.control();  stop.motion(ego);  disable.item(c.save);  disable.item(c.pause);  disable.item(c.swim);  disable.item(c.jump);  disable.item(c.duck);  call(lgc.death);  return();  }if ((currentRoom > 52 ||     currentRoom == 3 ||     currentRoom == 6 ||     currentRoom == 9 ||     currentRoom == 10 ||     currentRoom == 11 ||     currentRoom == 12 ||     currentRoom == 13 ||     currentRoom == 14 ||     currentRoom == 15 ||     currentRoom == 16 ||     currentRoom == 19 ||     currentRoom == 21 ||     currentRoom == 22 ||     currentRoom == 24 ||     currentRoom == 27 ||     currentRoom == 28 ||     currentRoom == 29 ||     currentRoom == 30 ||     currentRoom == 31 ||     currentRoom == 35 ||     currentRoom == 36 ||     currentRoom == 38 ||     currentRoom == 44 ||     currentRoom == 45 ||     currentRoom == 46 ||     currentRoom == 48 ||     currentRoom == 50 ||     currentRoom == 51))  {  if ((said("swim") ||       said("enter", "swim") ||       said("swim", "anyword") ||       controller(c.swim)))    {    print("You need to be in water to swim.");    }  }if (egoDir == STOPPED)  {  if (keep.cycling)    {    start.cycling(ego);    }  else    {    stop.cycling(ego);    }  }else  {  if (!isset(fFlag95) && !ego.ducking)    {    if (egoDir == old.ego.dir &&         ego.x == old.ego.x &&         ego.y == old.ego.y)      {      stop.cycling(ego);      }    else      {      start.cycling(ego);      }    }  }if ((said("save", "game") ||     controller(c.save)))  {  save.game();  }if (controller(c.echo.line))  {  echo.line();  }if (controller(c.pause))  {  pause();  }if (currentRoom == 21)  {  goto(Label3);  }if ((said("jump") ||     controller(c.jump)))  {  if (!ego.jumping &&       !climbing.beanstalk &&       !falling.from.sky &&       !ego.invisible &&       !ego.shrunk &&       currentRoom != 79 &&       !onWater &&       !isset(f145) &&       !ego.ducking &&       drown.swim <= 0 &&       currentRoom != 29 &&       currentRoom != 13 &&       currentRoom != 53 &&       currentRoom != 58 &&       currentRoom != 49 &&       currentRoom != 52 &&       currentRoom != 63 &&       currentRoom != 80 &&       currentRoom != 48 &&       currentRoom != 73 &&       currentRoom != 65 &&       currentRoom != 12 &&       currentRoom != 14 &&       currentRoom != 10 &&       currentRoom != 11 &&       currentRoom != 51)    {    set(ego.jumping);    stop.motion(ego);    set.cel(ego, 0);    jump.cycle.time = 2;    cycle.time(ego, jump.cycle.time);    set.view(ego, View75);    set(keep.cycling);    end.of.loop(ego, jump.done);    }  else    {    print("There is no reason to do that now.");    }  }if (jump.done)  {  reset(ego.jumping);  reset(jump.done);  reset(keep.cycling);  walk.cycle.time = 1;  cycle.time(ego, walk.cycle.time);  start.motion(ego);  set.view(ego, View0);  }Label3:if ((said("duck") ||     controller(c.duck)))  {  if (!ego.ducking &&       !climbing.beanstalk &&       !falling.from.sky &&       !ego.invisible &&       !ego.shrunk &&       !onWater &&       !isset(f145) &&       drown.swim <= 0 &&       !ego.jumping &&       !isset(f146) &&       currentRoom != 29 &&       currentRoom != 12 &&       currentRoom != 53 &&       currentRoom != 58 &&       currentRoom != 49 &&       currentRoom != 52 &&       currentRoom != 63 &&       currentRoom != 80 &&       currentRoom != 48 &&       currentRoom != 73 &&       currentRoom != 65 &&       currentRoom != 79 &&       currentRoom != 14 &&       currentRoom != 10 &&       currentRoom != 11 &&       currentRoom != 13 &&       currentRoom != 51 &&       !witch.catch.ego)    {    set(ego.ducking);    set.view(ego, View87);    set(keep.cycling);    start.cycling(ego);    end.of.loop(ego, ducking.done);    }  else    {    if (!ducking.jumping)      {      print("There is no reason to do that now.");      }    }  }if (ducking.done)  {  stop.cycling(ego);  stop.motion(ego);  set(ducking.jumping);  reset(ducking.done);  reset(keep.cycling);  }if (ducking.jumping)  {  if ((said("stand") ||       controller(c.duck) ||       said("jump") ||       controller(c.jump)))    {    reset(ego.ducking);    reset(ducking.jumping);    start.motion(ego);    set.view(ego, View0);    start.cycling(ego);    }  }if (said("thank", "anyword"))  {  print("You're welcome!");  }if (have.dagger)  {  if (said("check", "dagger"))    {    show.obj(View117);    }  if (said("acquire", "dagger"))    {    print("You already have it.");    }  if (said("cast", "dagger"))    {    if (currentRoom != 18 &&         currentRoom != 25 &&         currentRoom != 29 &&         currentRoom != 39 &&         currentRoom != 41 &&         currentRoom != 46 &&         currentRoom != 51 &&         currentRoom != 58)      {      print("There is no reason to throw the dagger.");      }    else      {      reset(haveMatch);      }    }  }if (lost.dagger &&     dead.goat.room != currentRoom)  {  if (said("anyword", "dagger"))    {    print("You had the dagger and lost it.  Sorry.");    }  }if (lost.dagger &&     dead.goat.room == currentRoom)  {  if (said("anyword", "dagger"))    {    print("You don't want the dagger anymore.");    }  }if (ate.carrot &&     said("consume", "carrot"))  {  print("You already ate the carrot.");  }if (have.carrot)  {  if (said("consume", "carrot"))    {    if (!goat.following)      {      print("Mmmm!  There's nothing like a crisp, fresh carrot.");      drop("carrot");      reset(have.carrot);      reset(carrot.points);      currentScore -= 2;      set(ate.carrot);      }    if (goat.following)      {      print("Seeing how much the goat likes that carrot, eating it may be "            "hazardous to your health.");      }    }  if (said("check", "carrot"))    {    show.obj(View119);    }  if (said("acquire", "carrot"))    {    print("You already have a carrot.");    }  if (goat.following)    {    if (currentRoom != 10 &&         currentRoom != 11)      {      if ((said("feed", "carrot") ||           said("feed", "goat", "carrot") ||           said("feed", "carrot", "goat") ||           said("give", "carrot") ||           said("give", "goat", "carrot") ||           said("give", "carrot", "goat")))        {        print("The goat quickly eats the carrot and disappears.");        drop("carrot");        reset(have.carrot);        reset(carrot.points);        currentScore -= 2;        erase(aGoat);        set(goat.gone);        reset(goat.following);        }      }    if ((currentRoom == 10 ||         currentRoom == 11))      {      if ((said("feed", "carrot") ||           said("feed", "goat", "carrot") ||           said("feed", "carrot", "goat") ||           said("give", "carrot") ||           said("give", "goat", "carrot") ||           said("give", "carrot", "goat")))        {        print("There is no reason to do that now.");        }      }    if ((said("show", "carrot") ||         said("show", "carrot", "goat") ||         said("show", "goat", "carrot")))      {      print("It is not nice to tease the goat.");      }    }  }if (have.opened.walnut)  {  if ((said("open", "gold nut") ||       said("crack", "gold nut")))    {    print("You have already opened the walnut.");    }  if (said("consume", "gold nut"))    {    print("Don't do that!  This walnut is not edible since it is pure gold.");    }  if (said("check", "gold nut"))    {    show.obj(View120);    }  }if (have.unopened.walnut)  {  if (said("consume", "gold nut"))    {    print("Ouch!  It would be much easier if you opened the walnut first.");    }  if (said("check", "gold nut"))    {    show.obj(View139);    }  if ((said("open", "gold nut") ||       said("crack", "gold nut")))    {    if (currentRoom == 30)      {      sound(Sound14, done);      }    print("When you open the walnut, you discover the nut inside is pure gold!");    reset(have.unopened.walnut);    set(have.opened.walnut);    drop("walnut");    get("gold walnut");    currentScore  += 3;    }  }if (currentRoom != 49 &&     said("dive", "anyword"))  {  if (drown.swim > 0)    {    print("The water is very deep here. Without aid, it is impossible to swim "          "under the water for any length of time.");    }  else    {    print("You need to be in the water to try that.");    }  }if (protected.timer.1 == 0 &&     protected.timer.2 == 0 &&     protected.spell)  {  print("\"Ye best be careful, young Graham.  The mystic protective spell of "        "mine has weakened and departed.\"");  reset(protected.spell);  }else  {  --protected.timer.2;  if (protected.timer.2 == 0)    {    --protected.timer.1;    if (protected.timer.1 != 0)      {      protected.timer.2 = 250;      }    }  }if (have.bucket && have.water &&     said("check", "bucket"))  {  show.obj(View128);  }if (have.bucket && have.water && !onWater)  {  if ((said("acquire", "bucket") ||       said("acquire", "water")))    {    print("You already have it.");    }  if (said("check", "water"))    {    show.obj(View128);    }  if ((said("drink", "water") ||       said("acquire", "drink")))    {    set(drank.water);    print("You drain the bucket of water to quench your thirst.");    reset(have.water);    drop("water");    currentScore -= 2;    reset(points.water);    }  }if (onWater &&     (said("drink", "water") ||     said("acquire", "drink")))  {  print("You open your mouth while swimming and quench your thirst.");  }if (have.bucket && !have.water)  {  if (onWater)    {    if ((said("acquire", "water") ||         said("fill", "bucket")))      {      reset(drank.water);      print("With difficulty, you fill the bucket while swimming.");      get("water");      set(have.water);      if (!points.water)        {        currentScore  += 2;        }      set(points.water);      }    }  if (said("check", "bucket"))    {    show.obj(View127);    }  }if (have.mushroom)  {  if (said("acquire", "mushroom"))    {    print("You already have it.");    }  if (said("check", "mushroom"))    {    show.obj(View140);    }  if (said("consume", "mushroom"))    {    if (ego.invisible)      {      print("You try, but being invisible makes it impossible.");      }    if (!climbing.beanstalk &&         !falling.from.sky &&         !ego.invisible &&         !climbing.rope &&         !ego.in.bucket &&         !isset(f175) &&         currentRoom != 21 &&         currentRoom != 22 &&         currentRoom != 80 &&         currentRoom != 65 &&         currentRoom != 14 &&         currentRoom != 63 &&         drown.swim <= 0 &&         currentRoom != 12 &&         currentRoom != 73 &&         currentRoom != 74 &&         currentRoom != 75)      {      print("As soon as you swallow the first bite, you have this strange "            "shrinking feeling...  It's true!  You are now no bigger than a "            "mouse!");      set.view(ego, View60);      shrink.timer = 200;      drop("mushroom");      reset(have.mushroom);      set(ate.mushroom);      set(ego.shrunk);      currentScore -= 1;      if (currentRoom == 78)        {        currentScore  += 3;        }      }    else      {      print("Now is not a good time to try and eat the mushroom.");      }    }  }if (ego.shrunk && shrink.timer > 0)  {  --shrink.timer;  if (shrink.timer == 1 &&       currentRoom != 36 &&       currentRoom != 78)    {    set.view(ego, View0);    print("You feel a stretching sensation... Oh, you're back to your original "          "size.");    reset(ego.shrunk);    }  }if (have.ring)  {  if (said("check", "ring"))    {    show.obj(View123);    }  if (said("acquire", "ring"))    {    print("You already have it.");    }  if ((said("put on", "ring") ||       said("acquire", "ring", "pocket") ||       said("acquire", "ring", "pocket")))    {    if (wearing.ring)      {      print("The ring is already on your finger.");      }    if (!wearing.ring)      {      set(wearing.ring);      print("You slip the beautiful ring on one of your fingers.");      }    }  if (said("remove", "ring"))    {    if (!wearing.ring)      {      print("You are not wearing the ring.");      }    if (wearing.ring && !ego.invisible)      {      drop("magic ring");      currentScore -= 3;      print("I don't know why, but you drop the magic ring.");      reset(have.ring);      reset(wearing.ring);      set(lost.ring);      }    if (wearing.ring && ego.invisible)      {      drop("magic ring");      currentScore -= 3;      print("When the ring disappears, you reappear!");      set.view(ego, View0);      reset(have.ring);      reset(ego.invisible);      reset(wearing.ring);      set(lost.ring);      invisible.timer.1 = 0;      invisible.timer.2 = 0;      }    }  if (said("rub", "ring"))    {    if (!wearing.ring)      {      print("The magic ring is still in your pocket.  You can't rub it there.");      }    if (wearing.ring && goat.following)      {      print("You rub the magic ring but the goat seems to have a strange effect "            "on it.");      }    if (wearing.ring && ego.invisible)      {      print("There is no need to rub the ring as you are already invisible.");      }    if (wearing.ring && !goat.following && !ego.invisible)      {      if (currentRoom != 65 &&           !climbing.beanstalk &&           !falling.from.sky &&           drown.swim <= 0 &&           currentRoom != 63 &&           currentRoom != 80 &&           currentRoom != 49 &&           currentRoom != 51 &&           currentRoom != 52 &&           currentRoom != 12 &&           currentRoom != 79 &&           !isset(bird.carrying.ego) &&           !witch.catch.ego &&           !ego.shrunk)        {        set.view(ego, View110);        print("When you rub the magic ring, you mysteriously disappear, except "              "for your footprints.");        set(ego.invisible);        invisible.timer.1 = 250;        invisible.timer.2 = 10;        }      if ((currentRoom == 65 ||           climbing.beanstalk ||           falling.from.sky ||           drown.swim > 0 ||           currentRoom == 63 ||           currentRoom == 80 ||           currentRoom == 49 ||           currentRoom == 51 ||           currentRoom == 52 ||           currentRoom == 12 ||           currentRoom == 79 ||           isset(bird.carrying.ego) ||           witch.catch.ego ||           ego.shrunk))        {        print("You're too busy right now to rub the ring.");        }      }    }  }if (ego.invisible)  {  --invisible.timer.1;  if (invisible.timer.1 == 0)    {    if (invisible.timer.2 > 0)      {      --invisible.timer.2;      invisible.timer.1 = 250;      }    }  }if (invisible.timer.1 == 1 &&     invisible.timer.2 == 0)  {  invisible.timer.1 = 0;  set.view(ego, View0);  reset(have.ring);  drop("magic ring");  reset(wearing.ring);  set(lost.ring);  reset(ego.invisible);  print("The spell to make you invisible has expired and you are once again "        "visible to dangerous creatures, but, the ring has now disappeared.");  currentScore -= 3;  }if (have.beans)  {  if (said("check", "bean"))    {    show.obj(View141);    }  if (said("consume", "bean"))    {    print("You're going to be sorry!!  These were magic beans!");    currentScore -= 5;    drop("beans");    reset(have.beans);    }  if (said("bury", "bean"))    {    if (currentRoom != 6 &&         currentRoom != 22 &&         currentRoom != 31 &&         currentRoom != 35 &&         currentRoom != 38)      {      print("That is not a bad idea, but this is not a very suitable place to "            "plant these beans.  Why don't you try it elsewhere?");      }    else      {      reset(haveMatch);      }    }  }if (have.bowl)  {  if (bowl.state == 1)    {    if (said("consume", "stew"))      {      if (currentRoom == 79)        {        print("It is very inconsiderate to eat in front of these poor, starving "              "people.  The pains of guilt set in on you.");        }      else        {        print("You eat every bite of the delicious stew.");        }      bowl.state = 0;      reset(points.stew);      currentScore -= 2;      goto(Label4);      }    if (said("taste", "stew"))      {      print("Even a small portion of the stew is very appetizing.");      }    if (said("check", "stew"))      {      print("The stew is chock full of vegetables and meat.");      }    if ((said("check", "bowl") ||         said("look in", "bowl")))      {      show.obj(View126);      }    if ((said("fill") ||         said("acquire", "stew") ||         said("say", "fill")))      {      print("You already have a full bowl of stew.");      }    }  if (bowl.state == 0)    {    if ((said("check", "bowl") ||         said("look in", "bowl")))      {      show.obj(View125);      }    if ((said("read", "bowl") ||         said("read", "word") ||         said("check", "word") ||         said("read", "bottom", "bowl") ||         said("check", "bottom", "bowl")))      {      print("The word on the bottom of the bowl says \"fill\".");      if (!points.stew)        {        set(points.stew);        currentScore  += 1;        }      }    if ((said("fill") ||         said("say", "fill")))      {      if (currentRoom == 79)        {        print("The bowl fills with the delicious stew, but the woodcutters are "              "unaware of it.");        }      else        {        print("After uttering that strange word, the bowl starts quivering and "              "immediately fills up with a delicious, hot stew.");        }      bowl.state = 1;      if (!points.stew)        {        set(points.stew);        currentScore  += 2;        }      }    if ((said("consume", "stew") ||         said("taste", "stew") ||         said("check", "stew")))      {      print("You do not have any stew.");      }    }  }Label4:if (have.pebbles)  {  if (said("check", "pebbles"))    {    show.obj(View129);    }  if (said("cast", "pebbles"))    {    print("You throw one of your pebbles.");    }  if (said("acquire", "pebbles"))    {    print("You already have it.");    }  }if (have.chest)  {  if (said("acquire", "chest"))    {    print("You already have it.");    }  if ((said("check", "chest") ||       said("look in", "chest")))    {    show.obj(View118);    }  if (said("open", "chest"))    {    print("You are dazzled by the countless supply of gold coins spilling from "          "the magic chest.  You quickly close the chest.");    }  if (said("acquire", "coin"))    {    print("You are already carrying an endless supply of gold coins in the "          "magic chest.");    }  if (said("check", "coin"))    {    print("You open the chest and admire the gold coins for a moment. You then "          "close the chest.");    }  }if (!goat.following)  {  if (dead.goat.room <= 0 &&       currentRoom != 10 &&       currentRoom != 11)    {    if (said("anyword", "goat"))      {      print("There is no goat here.");      }    }  if (dead.goat.room > 0 &&       currentRoom != 10 &&       currentRoom != 11)    {    if (said("anyword", "goat"))      {      print("You've already killed the goat.");      }    }  }if (goat.following)  {  if (!have.dagger &&       said("kill", "goat"))    {    print("You don't have any way to kill the old goat.");    }  if (have.dagger &&       said("kill", "goat"))    {    if (currentRoom != 25 &&         currentRoom != 39 &&         currentRoom != 41)      {      if ((currentRoom == 10 ||           currentRoom == 11))        {        get.posn(ego, temp.x, temp.y);        print("You hurl the dagger at the old goat... he tries to avoid the "              "flying dagger, but your aim is true... as the dagger strikes, he "              "slumps to the ground... dead.");        set.view(ego, View0);        set.view(aGoat, View62);        position.v(aGoat, temp.x, temp.y);        draw(aGoat);        dead.goat.room = currentRoom;        goat.step.size = 0;        step.size(aGoat, goat.step.size);        drop("dagger");        currentScore -= 5;        reset(have.dagger);        reset(goat.following);        set(lost.dagger);        }      else        {        print("You hurl the dagger at the old goat... he tries to avoid the "              "flying dagger, but your aim is true... as the dagger strikes, he "              "slumps to the ground... dead.");        erase(aGoat);        set.view(aGoat, View62);        draw(aGoat);        dead.goat.room = currentRoom;        goat.step.size = 0;        step.size(aGoat, goat.step.size);        drop("dagger");        currentScore -= 5;        reset(have.dagger);        reset(goat.following);        set(lost.dagger);        }      }    }  if (said("check", "goat"))    {    print("The old goat, trotting briskly, seems happy to be with you.");    }  if (said("speak", "goat"))    {    print("The goat is not much for conversation.");    }  }if (have.gold.key)  {  if (said("check", "gold key"))    {    show.obj(View121);    }  if (said("acquire", "gold key"))    {    print("You already have it.");    }  }if (have.note)  {  if (said("check", "note"))    {    show.obj(View122);    }  if ((said("read", "note") ||       said("read", "message") ||       said("read", "message", "note")))    {    print("The note reads, \"Sometimes it is wise to think backwards.\"");    if (!read.note)      {      set(read.note);      currentScore  += 1;      }    }  if (said("acquire", "note"))    {    print("You already have it.");    }  }if (have.cheese)  {  if (said("acquire", "cheese"))    {    print("You already have it.");    }  if (said("check", "cheese"))    {    show.obj(View134);    }  if (said("consume", "cheese"))    {    print("Mmmm!  That Swiss cheese was as delicious as it looked.");    drop("cheese");    reset(have.cheese);    currentScore -= 2;    }  }if (have.clover)  {  if (said("check", "clover"))    {    show.obj(View124);    }  if (said("acquire", "clover"))    {    print("You already have it.");    }  }if (have.sling)  {  if (said("acquire", "sling"))    {    print("You already have it.");    }  if (said("check", "sling"))    {    show.obj(View130);    }  }if (have.shield)  {  if (said("acquire", "shield"))    {    print("You already have it.");    }  if (said("check", "shield"))    {    show.obj(View137);    }  }if (have.sceptre)  {  if (said("acquire", "sceptre"))    {    print("You already have it.");    }  if (said("check", "sceptre"))    {    show.obj(View133);    }  }if (have.diamonds)  {  if (said("acquire", "diamond"))    {    print("You already have it.");    }  if ((said("check", "diamond") ||       said("check", "bag")))    {    show.obj(View131);    }  if (said("open", "bag"))    {    print("You have already opened the pouch.");    }  }if (have.pouch)  {  if (said("acquire", "bag"))    {    print("You already have it.");    }  if (said("check", "bag"))    {    show.obj(View132);    }  if (!have.diamonds)    {    if ((said("open", "bag") ||         said("look in", "bag")))      {      print("Cautiously, you open the pouch and see many sparkling and flashing "            "diamonds!  Quickly, you close it again so as not to lose any.");      get("pouch of diamonds");      drop("pouch");      currentScore  += 3;      set(have.diamonds);      reset(have.pouch);      }    }  }if (have.egg)  {  if (said("acquire", "egg"))    {    print("You already have it.");    }  if (said("check", "egg"))    {    show.obj(View136);    }  if (said("consume", "egg"))    {    print("This egg will be tough to crack.");    }  }if (have.fiddle)  {  if (said("acquire", "fiddle"))    {    print("You already have it.");    }  if (said("check", "fiddle"))    {    show.obj(View138);    }  if (currentRoom != 76 &&       currentRoom != 77 &&       currentRoom != 53 &&       currentRoom != 65 &&       currentRoom != 80 &&       currentRoom != 49 &&       currentRoom != 52 &&       currentRoom != 12 &&       drown.swim != 1 &&       drown.swim != 2 &&       !isset(bird.carrying.ego) &&       !witch.catch.ego &&       !climbing.beanstalk &&       !isset(climbing.rope) &&       !falling.from.sky &&       !isset(f175) &&       !playing.fiddle)    {    if (said("play", "fiddle"))      {      set(playing.fiddle);      print("You play a lively, toe-tapping tune on the fiddle.");      sound(Sound8, fiddle.music.done);      }    }  }if (fiddle.music.done)  {  reset(fiddle.music.done);  reset(playing.fiddle);  }if (have.mirror)  {  if (said("acquire", "mirror"))    {    print("You already have it.");    }  if ((said("check", "mirror") ||       said("look in", "mirror")))    {    show.obj(View135);    }  }if (num.treasures == 3)  {  reset(castle.locked);  }if (debugging)  {  call(lgc.debug);  }call.v(currentRoom);call(lgc.pragma.fail);get.posn(ego, old.ego.x, old.ego.y);old.ego.dir = egoDir;return();[ Messages#message 1 "You splash around in the water for a while but seem  to have forgotten how to swim. Unfortunately, you drown."#message 2 "Where do you think it could be?"#message 3 "The goat is not much for conversation."#message 4 "\"Ye best be careful, young Graham.  The mystic protective spell of mine has weakened and departed.\""#message 5 "KQ1"#message 6 "You feel a stretching sensation... Oh, you're back to your original size."#message 7 "You're too busy right now to rub the ring."#message 8 "There is no reason to do that now."#message 9 "You had the dagger and lost it.  Sorry."#message 10 "You already have it."#message 11 "As soon as you swallow the first bite, you have this strange shrinking feeling...  It's true!  You are now no bigger than a mouse!"#message 12 "You need to be closer to the water if you want to swim."#message 13 "You drain the bucket of water to quench your thirst."#message 14 "You open your mouth while swimming and quench your thirst."#message 15 "With difficulty, you fill the bucket while swimming."#message 16 "Mmmm!  There's nothing like a crisp, fresh carrot."#message 17 "VERSION 2.0F"#message 18 "You already have a carrot."#message 19 "You already ate the carrot."#message 20 "The goat quickly eats the carrot and disappears."#message 21 "Now is not a good time to try and eat the mushroom."#message 22 "You do not have a bowl."#message 23 "It is not nice to tease the goat."#message 24 "You are not carrying it."#message 25 "There is no reason to drop it."#message 26 "You are already swimming."#message 27 "The water is very deep here. Without aid, it is impossible to swim under the water for any length of time."#message 28 "You need to be in the water to try that."#message 29 "You need to be in water to swim."#message 30 ">"#message 32 "You do not have any stew."#message 33 "The stew is chock full of vegetables and meat."#message 34 "You already have a full bowl of stew."#message 35 "The bowl fills with the delicious stew, but the woodcutters are unaware of it."#message 36 "After uttering that strange word, the bowl starts quivering and immediately fills up with a delicious, hot stew."#message 37 "It is very inconsiderate to eat in front of these poor, starving people.  The pains of guilt set in on you."#message 38 "You eat every bite of the delicious stew."#message 39 "OK."#message 40 "You're welcome!"#message 42 "You are dazzled by the countless supply of gold coins spilling from the magic chest.  You quickly close the chest."#message 43 "You are already carrying an endless supply of gold coins in the magic chest."#message 44 "You open the chest and admire the gold coins for a moment. You then close the chest."#message 45 "There is no reason to throw the dagger."#message 46 "You don't want the dagger anymore."#message 47 "You hurl the dagger at the old goat... he tries to avoid the flying dagger, but your aim is true... as the dagger strikes, he slumps to the ground... dead."#message 48 "You don't have any way to kill the old goat."#message 49 "There is no goat here."#message 50 "You've already killed the goat."#message 51 "The old goat, trotting briskly, seems happy to be with you."#message 52 "Seeing how much the goat likes that carrot, eating it may be hazardous to your health."#message 53 "You have already opened the walnut."#message 54 "When you open the walnut, you discover the nut inside is pure gold!"#message 55 "Ouch!  It would be much easier if you opened the walnut first."#message 56 "Don't do that!  This walnut is not edible since it is pure gold."#message 60 "The note reads, \"Sometimes it is wise to think backwards.\""#message 63 "Mmmm!  That Swiss cheese was as delicious as it looked."#message 65 "The word on the bottom of the bowl says \"fill\"."#message 66 "Even a small portion of the stew is very appetizing."#message 68 "You throw one of your pebbles."#message 73 "This egg will be tough to crack."#message 75 "You play a lively, toe-tapping tune on the fiddle."#message 78 "You have already opened the pouch."#message 79 "Cautiously, you open the pouch and see many sparkling and flashing diamonds!  Quickly, you close it again so as not to lose any."#message 81 "You try, but being invisible makes it impossible."#message 84 "You're going to be sorry!!  These were magic beans!"#message 85 "That is not a bad idea, but this is not a very suitable place to plant these beans.  Why don't you try it elsewhere?"#message 88 "The ring is already on your finger."#message 89 "You slip the beautiful ring on one of your fingers."#message 90 "I don't know why, but you drop the magic ring."#message 91 "Nothing happens."#message 92 "When the ring disappears, you reappear!"#message 93 "When you rub the magic ring, you mysteriously disappear, except for your footprints."#message 94 "You rub the magic ring but the goat seems to have a strange effect on it."#message 95 "With disappointment, you see that nothing happens."#message 96 "The magic ring is still in your pocket.  You can't rub it there."#message 97 "The spell to make you invisible has expired and you are once again visible to dangerous creatures, but, the ring has now disappeared."#message 98 "You will have to find it before you can get it."#message 99 "You do not have it."#message 100 "_"#message 101 "You are not wearing the ring."#message 102 "There is no need to rub the ring as you are already invisible."#message 150 "Info"#message 151 "Help    "#message 152 "About KQ"#message 153 "File"#message 154 "Save Game      <F5>"#message 155 "Restore Game   <F7>"#message 156 "-------------------"#message 157 "Restart Game   <F9>"#message 158 "Pause             <Esc>"#message 159 "Quit        <Alt Z>"#message 160 "Game"#message 161 "Inventory     <Tab>"#message 162 "See Object     <F4>"#message 163 "Sound On/Off       <F2>"#message 164 "Action "#message 165 "Swim  ="#message 166 "Special"#message 167 "Graphics Mode  <Ctrl R>"#message 168 "Reset Joystick <Ctrl J>"#message 169 "Speed"#message 170 "Normal"#message 171 "Fast  "#message 172 "Slow  "#message 173 "King's Quest was designed by Roberta Williams."#message 174 "Jump  0"#message 175 "Duck  -"#message 176 "Joystick/Mouse <Ctrl J>"