#define a.bird  o1#define bird.will.come  f20#define bird.in.room    f21#define bird.leaves     f22#define fall.sound.done         f24#define hitched.a.ride  f25#define survivable.fall f26#define stun.done   f27#define deadly.fall f28#define hit.ground f29#define beanstalk.sound.done    f30#define stunned.time    v30#define bird.step  v31#define bird.x  v32#define bird.y  v33if (newRoom)  {  timer.1 = 0;  timer.2 = 0;  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  load.sound(Sound4);  load.sound(s.ego.fall);  set.horizon(41);  if (goat.following)    {    load.logics(lgc.goat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 18, 140, 0, 0);    }  if ((have.beans || beanstalk.room == 22))    {    beanstalk.overlay = 84;    set(can.plant.beanstalk);    load.pic(beanstalk.overlay);    load.view(View114);    load.view(View103);    load.view(View104);    load.view(View74);    load.view(View105);    load.logics(lgc.beanstalk);    load.sound(Sound12);    }  if (previousRoom == 70 && climbing.beanstalk)    {    set.view(ego, View74);    position(ego, 64, 41);    move.obj(ego, 64, 41, 0, done);    set.priority(ego, 8);    }  if (previousRoom == 70 && falling.from.sky)    {    program.control();    ignore.horizon(ego);    set.priority(ego, 15);    set.view(ego, View105);    get.posn(ego, temp.x, temp.y);    if (temp.x > 75)      {      position(ego, 80, 29);      }    else      {      position(ego, 65, 29);      }    get.posn(ego, temp.x, temp.y);    temp.y = 106;    temp.step = 2;    move.obj.v(ego, temp.x, temp.y, temp.step, deadly.fall);    }  random(0, 250, work);  if (work < 125 &&       !got.ride.from.bird)    {    bird.step = 4;    step.size(a.bird, bird.step);    set(bird.will.come);    load.view(View8);    load.view(View89);    animate.obj(a.bird);    set.view(a.bird, View8);    set.priority(a.bird, 15);    }  if (bird.will.come)    {Label1:    random(0, 250, work.2);    if (work.2 > 90)      {      goto(Label1);      }    }  if (previousRoom == 50)    {    position(ego, 142, 83);    }  if (beanstalk.room == 22)    {    overlay.pic(beanstalk.overlay);    }  draw(ego);  if (previousRoom == 21)    {    get.posn(ego, ego.x, ego.y);    if (ego.y > 78 &&         ego.y < 96)      {      ego.y = 96;      }    else      {      if (ego.y > 61 &&           ego.y < 79)        {        ego.y = 61;        }      }    position.v(ego, ego.x, ego.y);    }  show.pic();  }if (said("check", "room"))  {  print("A large cave is at the edge of this meadow.");  }if (falling.from.sky && !hit.ground)  {  set(hit.ground);  set(ego.stunned);  sound(s.ego.fall, fall.sound.done);  }if (deadly.fall)  {  stop.sound();  set(hit.ground);  reset(falling.from.sky);  reset(ego.stunned);  set.view(ego, View114);  shake.screen(2);  set(certain.death);  }if ((posn(ego, 141, 71, 159, 89) ||     isset(bird.carrying.ego) ||     climbing.beanstalk || falling.from.sky || ego.invisible))  {  set(f145);  }else  {  reset(f145);  }--work.2;if (work.2 == 1 &&     !falling.from.sky && !climbing.beanstalk)  {  set(bird.in.room);  position(a.bird, 7, 35);  timer.1 = 250;  timer.2 = 3;  draw(a.bird);  if (!isset(goat.following))    {    print("High up in the sky you see a very large, friendly bird.");    wander(a.bird);    }  if (goat.following)    {    print("High up in the sky you see a very large, friendly bird, but it is "          "afraid to come near you because of the goat.");    wander(a.bird);    set(bird.leaves);    }  }--timer.1;if (timer.1 == 0 &&     timer.2 > 0)  {  --timer.2;  timer.1 = 250;  }if (timer.1 == 1 &&     timer.2 == 0)  {  wander(a.bird);  set(bird.leaves);  }if (!bird.leaves && bird.in.room)  {  get.posn(a.bird, v104, v105);  if (v105 > 115)    {    v106 = 1;    set.dir(a.bird, v106);    wander(a.bird);    }  }if (bird.leaves &&     edgeObjHit != NOT_HIT)  {  reset(bird.leaves);  reset(bird.in.room);  erase(a.bird);  }distance(ego, a.bird, work.3);get.posn(ego, ego.x, ego.y);get.posn(a.bird, bird.x, bird.y);bird.y  += 20;if (work.3 > 20 &&     work.3 < 35 &&     ego.y > bird.y &&     ego.jumping && !bird.leaves)  {  reset(ego.jumping);  set(f145);  program.control();  erase(a.bird);  set.view(ego, View89);  set(bird.carrying.ego);  ignore.horizon(ego);  get.posn(ego, temp.x, temp.y);  if (temp.y > 80)    {    temp.y -= 70;    }  temp.x = 135;  set.priority(ego, 15);  move.obj.v(ego, temp.x, temp.y, bird.step, hitched.a.ride);  set(keep.cycling);  if (!got.ride.from.bird)    {    set(got.ride.from.bird);    currentScore  += 3;    }  }if (!bird.in.room &&     said("anyword", "big bird"))  {  print("There is no bird.");  }if (said("check", "cave"))  {  if (posn(ego, 125, 72, 150, 87))    {    print("The opening to the cave is dark and ominous.");    }  else    {    print("You vaguely see the outline of a cave entrance.");    }  }if (bird.in.room)  {  if (said("check", "big bird"))    {    print("This is a big condor.  Its graceful flight appears effortless.");    }  if (said("kill", "big bird"))    {    print("The bird is too high to kill.  Besides, it looks like a nice bird.");    }  if ((said("acquire", "big bird") ||       said("capture", "big bird")))    {    print("How?");    }  if ((said("speak", "big bird") ||       said("hello") ||       said("say", "hello")))    {    print("This bird doesn't talk much.");    }  }if (have.beans && can.plant.beanstalk)  {  if (said("bury", "bean"))    {    reset(have.beans);    beanstalk.room = 22;    set(planted.beans);    drop("beans");    currentScore  += 2;    print("The beans immediately sprout roots that reach deep into the fertile "          "soil... leaves unfold themselves to the warm, loving sun... a "          "rumbling is felt... and a mighty beanstalk now stretches up into the "          "sky!");    sound(Sound12, beanstalk.sound.done);    overlay.pic(beanstalk.overlay);    show.pic();    }  }if (beanstalk.room == 22 &&     !ego.invisible)  {  if (said("climb", "beanstalk") &&       !climbing.beanstalk)    {    if (posn(ego, 52, 76, 103, 97))      {      erase(ego);      set.view(ego, View74);      set(climbing.beanstalk);      position(ego, 71, 77);      set.priority(ego, 8);      draw(ego);      move.obj(ego, 71, 77, 0, done);      }    else      {      print("You can't reach the beanstalk from here.");      }    }  }if (beanstalk.room != 22)  {  if (said("climb", "beanstalk"))    {    print("There is no beanstalk here to climb.");    }  }if (climbing.beanstalk)  {  if (egoHitSpecial &&       posn(ego, 60, 78, 93, 80))    {    erase(ego);    set.view(ego, View0);    reset(climbing.beanstalk);    position(ego, 70, 106);    release.priority(ego);    draw(ego);    }  if (egoHitSpecial &&       !posn(ego, 60, 78, 93, 80))    {    program.control();    set.priority(ego, 15);    get.posn(ego, temp.x, temp.y);    erase(ego);    set.view(ego, View105);    reset(climbing.beanstalk);    position.v(ego, temp.x, temp.y);    draw(ego);    temp.y = 106;    temp.step = 2;    move.obj.v(ego, temp.x, temp.y, temp.step, survivable.fall);    set(ego.stunned);    sound(s.ego.fall, fall.sound.done);    }  }--stunned.time;if (survivable.fall)  {  stop.sound();  reset(survivable.fall);  observe.blocks(ego);  release.priority(ego);  stop.motion(ego);  set.view(ego, View103);  stunned.time = 20;  set(keep.cycling);  shake.screen(2);  print("Ouch!");  set(ego.stunned);  sound(Sound4, sound.done);  }if (sound.done)  {  if (stunned.time > 0)    {    reset(sound.done);    sound(Sound4, sound.done);    }  }if (stunned.time == 1)  {  set.view(ego, View104);  end.of.loop(ego, stun.done);  }if (stun.done)  {  reset(stun.done);  reset(keep.cycling);  start.motion(ego);  set.view(ego, View0);  release.priority(ego);  player.control();  }if (edgeEgoHit != NOT_HIT)  {  reset(can.plant.beanstalk);  }if (hitched.a.ride)  {  print("Where could this giant bird be taking you?");  new.room(rm.sky);  reset(can.plant.beanstalk);  }if (edgeEgoHit == TOP_EDGE &&     climbing.beanstalk)  {  new.room(Logic70);  }if (edgeEgoHit == TOP_EDGE &&     !climbing.beanstalk)  {  new.room(Logic27);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic21);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic23);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic11);  }if (posn(ego, 148, 71, 149, 88))  {  new.room(Logic50);  }if (goat.following)  {  call(lgc.goat);  }if (beanstalk.room == 22)  {  call(lgc.beanstalk);  }return();[ Messages#message 1 "High up in the sky you see a very large, friendly bird."#message 2 "The opening to the cave is dark and ominous."#message 3 "You vaguely see the outline of a cave entrance."#message 4 "This is a big condor.  Its graceful flight appears effortless."#message 5 "There is no bird."#message 6 "The bird is too high to kill.  Besides, it looks like a nice bird."#message 7 "How?"#message 8 "You would hit your head on the top of the cave if you jumped now!"#message 9 "High up in the sky you see a very large, friendly bird, but it is afraid to come near you because of the goat."#message 10 "Where could this giant bird be taking you?"#message 11 "The beans immediately sprout roots that reach deep into the fertile soil... leaves unfold themselves to the warm, loving sun... a rumbling is felt... and a mighty beanstalk now stretches up into the sky!"#message 12 "You can't reach the beanstalk from here."#message 13 "There is no beanstalk here to climb."#message 14 "Ouch!"#message 15 "This bird doesn't talk much."#message 16 "A large cave is at the edge of this meadow."