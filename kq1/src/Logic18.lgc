#define a.elf   o1#define elf.in.room f20#define attacked.elf    f21#define elf.will.come   f22if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  set.horizon(46);  if (goat.following)    {    load.logics(lgc.goat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 26, 138, 0, 0);    }  load.logics(lgc.swim);  call(lgc.swim);  random(0, 250, work);  if (work < 85 &&       !elf.gave.ring)    {    load.view(View7);    animate.obj(a.elf);    set.view(a.elf, View7);    position(a.elf, 26, 60);    observe.blocks(a.elf);    object.on.land(a.elf);    set(elf.will.come);    }  if (elf.will.come)    {Label1:    random(0, 250, v71);    if (v71 > 90)      {      goto(Label1);      }    }  if (previousRoom == 15)    {    get.posn(ego, temp.x, temp.y);    if (temp.x > 100)      {      position(ego, 100, 165);      }    }  if (previousRoom == 17 && onWater)    {    get.posn(ego, temp.x, temp.y);    if (temp.y < 111)      {      position(ego, 142, 122);      }    }  draw(ego);  show.pic();  }if (goat.wanders.off)  {  reset(goat.wanders.off);  print("It seems the old goat has wandered off by himself and is no longer "        "following you.");  }--v71;if (v71 == 1)  {  reset(elf.will.come);  draw(a.elf);  set(elf.in.room);  wander(a.elf);  print("Wandering on the banks of the lake, you see a cute little elf.");  }if (said("check", "lake"))  {  print("This is a clear mountain lake with some steep cliffs surrounding it.");  }if (!elf.in.room)  {  if (said("anyword", "elf"))    {    if (attacked.elf &&         said("speak", "elf"))      {      print("The elf has left since you were not very cordial to him.");      }    else      {      print("There's no elf here.");      }    }  if (said("check", "room"))    {    print("There is a clear mountain lake and some trees here.");    }  if (attacked.elf &&       said("speak", "elf"))    {    print("The elf has left since you were not very cordial to him.");    }  }if (elf.in.room)  {  distance(ego, a.elf, dist.to.obj);  if (said("check", "room"))    {    print("There is a very pretty lake nearby with a small little elf running "          "along its shore.");    }  if (said("check", "elf"))    {    print("This is a small elf.  He looks very friendly.");    }  if ((said("kiss", "elf") ||       said("hug", "elf")))    {    print("Silly!  You can't get close enough to do that.");    }  if ((said("kill", "elf") ||       said("capture", "elf")))    {    set(attacked.elf);    erase(a.elf);    reset(elf.in.room);    print("I'm surprised at you!  That is very impolite!");    }  if (have.dagger)    {    if ((said("cast", "dagger") ||         said("cast", "dagger", "elf")))      {      set(attacked.elf);      erase(a.elf);      reset(elf.in.room);      print("I'm surprised at you!  That is very impolite!");      }    }  if (!attacked.elf &&       (said("speak", "elf") ||       said("hello") ||       said("say", "hello")))    {    if (dist.to.obj < 40)      {      print("The elf, impressed by your friendliness, gives you a magic ring.  "            "\"Kind person, know that once, only once, this ring will make you "            "invisible,\" he says and then disappears.");      get("magic ring");      set(have.ring);      currentScore  += 3;      erase(a.elf);      reset(elf.in.room);      set(elf.gave.ring);      }    else      {      print("You are too far away.");      }    }  }if (!onWater)  {  ignore.blocks(ego);  }else  {  observe.blocks(ego);  }block(100, 95, 139, 100);if (!onWater)  {  if ((posn(ego, 129, 95, 159, 105) ||       posn(ego, 133, 80, 145, 94)))    {    set(onWater);    set(override.splash.loc);    }  }if (drown.swim <= 0 &&     egoHitSpecial)  {  set(onWater);  delta.x = 255;  if (posn(ego, 128, 64, 159, 85))    {    delta.x = 139;    delta.y = 84;    }  if (posn(ego, 97, 88, 118, 95))    {    delta.x = 97;    delta.y = 104;    }  if (delta.x == 255)    {    delta.x = 0;    }  else    {    get.posn(ego, temp.x, temp.y);    delta.x -= temp.x;    delta.y -= temp.y;    set(override.splash.loc);    }  }if (drown.swim <= 0 &&     onWater)  {  delta.x = 255;  if (posn(ego, 119, 86, 146, 95))    {    delta.x = 120;    delta.y = 104;    }  if (delta.x == 255)    {    delta.x = 0;    }  else    {    get.posn(ego, temp.x, temp.y);    delta.x -= temp.x;    delta.y -= temp.y;    set(override.splash.loc);    }  }if (!have.water && !onWater && !drank.water)  {  if ((said("drink", "water") ||       said("acquire", "drink")))    {    if (posn(ego, 81, 87, 159, 167))      {      print("There is nothing to compare with that refreshing taste.");      }    else      {      print("You are not close enough to the water.");      }    }  }if (!have.water && have.bucket && !onWater &&     said("acquire", "water"))  {  if (posn(ego, 81, 87, 159, 167))    {    reset(drank.water);    print("The cold water gushes into the old bucket.");    get("water");    set(have.water);    if (!points.water)      {      currentScore  += 2;      }    set(points.water);    }  else    {    print("You are not close enough to the water.");    }  }if (edgeEgoHit != NOT_HIT)  {  if (goat.leaving)    {    reset(goat.leaving);    reset(goat.following);    set(goat.gone);    set(goat.wanders.off);    }  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic31);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic17);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic19);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic15);  }if (goat.following)  {  call(lgc.goat);  }call(lgc.swim);return();[ Messages#message 1 "Wandering on the banks of the lake, you see a cute little elf."#message 2 "The cold water gushes into the old bucket."#message 3 "There is nothing to compare with that refreshing taste."#message 4 "You are not close enough to the water."#message 5 "There is a very pretty lake nearby with a small little elf running along its shore."#message 6 "This is a small elf.  He looks very friendly."#message 7 "There's no elf here."#message 8 "The elf, impressed by your friendliness, gives you a magic ring.  \"Kind person, know that once, only once, this ring will make you invisible,\" he says and then disappears."#message 10 "The elf has left since you were not very cordial to him."#message 11 "I'm surprised at you!  That is very impolite!"#message 12 "Nothing happens."#message 13 "You have no container for water."#message 14 "This is a clear mountain lake with some steep cliffs surrounding it."#message 15 "There is a clear mountain lake and some trees here."#message 16 "Silly!  You can't get close enough to do that."#message 17 "You are too far away."#message 18 "It seems the old goat has wandered off by himself and is no longer following you."