#define a.crank     o1#define a.bucket    o2#define a.rope      o3#define bucket.goes.down    f21#define bucket.goes.up      f22#define rope.goes.up        f23#define rope.goes.down      f24#define bucket.ego.goes.down    f25#define climbing.walls  f26#define jumping.into.well f27#define crank.sound f30if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  set.horizon(46);  load.sound(s.ego.fall);  load.sound(Sound20);  if (goat.following)    {    load.logics(lgc.goat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 107, 81, 0, 0);    }  load.view(View74);  load.view(View143);  load.view(v.crank);  animate.obj(a.crank);  set.view(a.crank, v.crank);  position(a.crank, 66, 96);  ignore.objs(a.crank);  set.priority(a.crank, 11);  set.cel(a.crank, 4);  if (!cut.bucket)    {    load.view(v.ego.in.bucket);    load.view(v.bucket);    animate.obj(a.bucket);    set.view(a.bucket, v.bucket);    ignore.blocks(a.bucket);    position(a.bucket, 37, 120);    set.priority(a.bucket, 11);    if (!bucket.lowered)      {      set.cel(a.bucket, 0);      }    if (bucket.lowered)      {      set.cel(a.bucket, 7);      }    }  if (!cut.lowered.rope)    {    load.view(View17);    animate.obj(a.rope);    set.view(a.rope, View17);    ignore.blocks(a.rope);    ignore.objs(a.rope);    position(a.rope, 43, 147);    set.priority(a.rope, 11);    if (!rope.lowered)      {      set.cel(a.rope, 0);      }    if (rope.lowered)      {      set.cel(a.rope, 2);      }    }  if (previousRoom == 49)    {    if (cut.bucket)      {      set.view(ego, View143);      }    else      {      set.view(ego, View74);      }    set(climbing.rope);    position(ego, 38, 140);    set.priority(ego, 11);    ignore.blocks(ego);    move.obj(ego, 38, 140, 0, done);    }  if (previousRoom == 5)    {    if (onWater)      {      set.view(ego, View0);      reset(keep.cycling);      drown.swim = 0;      }    }  draw(a.crank);  stop.update(a.crank);  if (!cut.bucket)    {    draw(a.bucket);    stop.update(a.bucket);    }  if (cut.bucket && !cut.lowered.rope)    {    draw(a.rope);    stop.cycling(a.rope);    }  draw(ego);  show.pic();  }if (said("check", "blossom"))  {  print("They raise their colorful faces to the sun.");  }if (!have.bucket)  {  if (said("acquire", "water"))    {    print("All the water is at the bottom of the well.");    }  }if (have.bucket && !have.water)  {  if (said("acquire", "water"))    {    print("Somebody has cut the rope;  there's no way for you to get the bucket "          "to the well's bottom.");    }  }if (!goat.following && !ego.invisible)  {  if (posn(ego, 10, 100, 75, 150))    {    if ((bucket.lowered || rope.lowered))      {      if ((said("climb", "rope") ||           said("climb", "well") ||           said("enter", "well") ||           said("go down", "well") ||           said("slide", "rope")))        {        erase(ego);        if (cut.bucket)          {          set.view(ego, View143);          }        else          {          set.view(ego, View74);          }        egoDir = STOPPED;        position(ego, 39, 131);        draw(ego);        set(climbing.rope);        set.priority(ego, 11);        ignore.blocks(ego);        move.obj(ego, 39, 132, 0, done);        }      }    if (!bucket.lowered && !rope.lowered)      {      if (said("climb", "well"))        {        print("The sides of this well are too slippery to climb down.");        }      if ((said("climb", "rope") ||           said("slide", "rope")))        {        print("The rope does not go down the well very far.");        }      }    if (!cut.bucket && !bucket.lowered)      {      if ((said("climb", "bucket") ||           said("enter", "bucket") ||           said("enter", "well") ||           said("go down", "well") ||           said("get in", "bucket")))        {        erase(ego);        set.view(a.bucket, v.ego.in.bucket);        position(a.bucket, 38, 145);        set.priority(a.bucket, 11);        ignore.blocks(a.bucket);        set.cel(a.bucket, 0);        start.update(a.bucket);        erase(a.bucket);        stop.cycling(a.bucket);        draw(a.bucket);        set(ego.in.bucket);        sound(Sound20, crank.sound);        end.of.loop(a.bucket, bucket.ego.goes.down);        start.update(a.crank);        start.cycling(a.crank);        print("After you are in the old bucket, your weight causes it to slowly "              "descend.");        }      }    if (bucket.lowered && !cut.bucket)      {      if ((said("climb", "bucket") ||           said("enter", "bucket") ||           said("get in", "bucket")))        {        print("The old bucket is at the bottom of the well.");        }      }    if (cut.bucket)      {      if ((said("climb", "bucket") ||           said("enter", "bucket") ||           said("get in", "bucket")))        {        print("There is no bucket here.");        }      }    if (cut.bucket && !rope.lowered)      {      if ((said("enter", "well") ||           said("go down", "well")))        {        set(climbing.walls);        set(lf8);        }      }    if (said("jump", "well"))      {      set(jumping.into.well);      set(lf8);      }    if (said("untie", "rope"))      {      print("The knots on the rope are too tight to untie.");      }    }  }if (!posn(ego, 10, 100, 75, 150))  {  if ((said("climb", "rope") ||       said("enter", "well") ||       said("go down", "well") ||       said("jump", "well") ||       said("slide", "rope") ||       said("enter", "bucket") ||       said("get in", "bucket")))    {    print("You need to be closer to do that.");    }  }if (goat.following && !ego.invisible)  {  if (posn(ego, 10, 100, 75, 150))    {    if (said("climb", "rope"))      {      print("The goat sure doesn't want to climb the rope.");      }    if (said("climb", "well"))      {      print("The goat sure doesn`t want to climb down the well with you.");      }    if (said("climb", "bucket"))      {      print("The goat refuses to do down the well.");      }    if ((said("enter", "bucket") ||         said("get in", "bucket")))      {      print("That bucket isn't big enough for you and that big goat!");      }    if (said("enter", "well"))      {      print("The goat refuses to enter the dark well.");      }    if (said("go down", "well"))      {      print("The goat refuses to go down into the dark well.");      }    if (said("slide", "rope"))      {      print("The goat doesn`t want to slide down the rope.");      }    if (said("jump", "well"))      {      print("The goat is afraid of heights and refuses to jump down the well.");      }    }  }if (ego.invisible)  {  if (posn(ego, 10, 100, 75, 150))    {    if ((said("climb", "rope") ||         said("enter", "bucket") ||         said("enter", "well") ||         said("go down", "well") ||         said("slide", "rope") ||         said("jump", "well") ||         said("get in", "bucket")))      {      print("You can't do that when you are invisible!");      }    }  }if (climbing.rope)  {  get.posn(ego, temp.x, temp.y);  if (temp.y < 131)    {    erase(ego);    set.view(ego, View0);    position(ego, 48, 111);    draw(ego);    release.priority(ego);    observe.blocks(ego);    reset(climbing.rope);    }  if (temp.y > 145)    {    new.room(Logic49);    }  if ((temp.x < 35 ||       temp.x > 44))    {    get.posn(ego, temp.x, temp.y);    temp.y = 145;    temp.step = 3;    move.obj.v(ego, temp.x, temp.y, temp.step, lf9);    print("You should be more careful the next time you try  climbing ropes.");    set(ego.stunned);    sound(s.ego.fall, sound.done);    reset(climbing.rope);    }  }if ((isset(lf9) ||     isset(lf0)))  {  reset(lf9);  reset(lf0);  erase(ego);  set(falling.into.well);  new.room(Logic49);  }if (isset(lf8))  {  reset(lf8);  erase(ego);  position(ego, 38, 125);  set.priority(ego, 11);  ignore.blocks(ego);  draw(ego);  move.obj(ego, 38, 145, 3, lf0);  if (climbing.walls)    {    print("Carefully... Oh no!  The sides were too slippery... you've fallen "          "into the well!");    }  if (jumping.into.well)    {    print("What a mistake you made!  This well is too deep to jump into.");    }  set(ego.stunned);  sound(s.ego.fall, sound.done);  }if ((cut.bucket || bucket.lowered))  {  if (!have.bucket &&       (said("acquire", "bucket") ||       said("check", "bucket")))    {    print("There is no bucket here.");    }  }if (cut.bucket)  {  if ((said("lower", "bucket") ||       said("raise", "bucket")))    {    print("The bucket is not here.");    }  }if (!cut.bucket && !bucket.lowered)  {  if (!have.bucket &&       (said("acquire", "bucket") ||       said("untie", "bucket")))    {    if (posn(ego, 10, 109, 71, 153))      {      print("The old bucket is securely fastened to a strong rope.");      }    else      {      print("You need to be closer to do that.");      }    }  if (!have.bucket &&       said("check", "bucket"))    {    if (posn(ego, 10, 109, 71, 153))      {      if (bucket.filled)        {        print("The old bucket holds a full load of water.");        }      else        {        print("It is large, old and weathered.  It has served the kingdom for "              "many years.");        }      }    else      {      print("From this distance it is difficult to see.");      }    }  }if (!cut.bucket && bucket.lowered)  {  if ((said("lower", "bucket") ||       said("lower", "bucket", "well")))    {    if (posn(ego, 10, 109, 71, 153))      {      print("The old bucket is already at the bottom of the well.");      }    else      {      print("You will find that very difficult to do from here.");      }    }  }if (!cut.bucket && !bucket.lowered)  {  if ((said("raise", "bucket") ||       said("raise", "rope")))    {    if (posn(ego, 10, 109, 71, 153))      {      print("The bucket is already at the top of the well.");      }    else      {      print("You will find that very difficult to do from here.");      }    }  }if (bucket.goes.down)  {  reset(bucket.goes.down);  stop.update(a.bucket);  stop.update(a.crank);  }if (bucket.goes.up)  {  reset(bucket.goes.up);  stop.update(a.bucket);  stop.update(a.crank);  }if (!cut.bucket && !bucket.lowered)  {  if ((said("lower", "bucket") ||       said("lower", "rope") ||       said("lower", "bucket", "well") ||       said("lower", "rope", "well")))    {    if (posn(ego, 60, 108, 77, 140))      {      print("The old bucket disappears into the darkness.");      start.update(a.bucket);      start.update(a.crank);      end.of.loop(a.bucket, bucket.goes.down);      sound(Sound20, crank.sound);      start.cycling(a.crank);      set(bucket.lowered);      }    else      {      print("You will find that very difficult to do from here.");      }    }  }if (!cut.bucket && bucket.lowered && climbing.rope)  {  if (said("raise", "bucket"))    {    print("You will find that very difficult to do from here.");    }  }if (!cut.bucket && bucket.lowered && !climbing.rope)  {  if ((said("raise", "bucket") ||       said("raise", "rope")))    {    if (posn(ego, 60, 108, 77, 140))      {      print("The old bucket emerges from the depths of the well.");      start.update(a.bucket);      start.update(a.crank);      random(0, 250, work);      if (work < 30)        {        set(bucket.filled);        }      reverse.loop(a.bucket, bucket.goes.up);      start.cycling(a.crank);      sound(Sound20, crank.sound);      reset(bucket.lowered);      }    else      {      print("You will find that very difficult to do from here.");      }    }  }if (posn(ego, 10, 109, 71, 153))  {  if ((said("check", "well") ||       said("look in", "well")))    {    print("The well is deep and dark. But you can see the sky's reflection on "          "the water.");    }  }if (!posn(ego, 10, 109, 71, 153))  {  if (said("check", "well"))    {    print("This well is one of the most ancient sites in the entire kingdom.  "          "History and mystery seem to echo from its  every stone.");    }  }if (!cut.lowered.rope)  {  if (said("check", "rope"))    {    if (posn(ego, 10, 109, 71, 153))      {      print("It is thick and firmly attached.  It could easily carry heavy "            "weights.");      }    else      {      print("From this distance it is difficult to see.");      }    }  }if (said("acquire", "rope") && !cut.lowered.rope)  {  if (posn(ego, 10, 109, 71, 153))    {    print("The rope is securely fastened to the well.");    }  else    {    print("You are not close enough to even try.");    }  }if (said("acquire", "rope") && cut.lowered.rope)  {  print("There is no useful rope to get.");  }if ((said("cut", "rope") ||     said("cut", "rope", "dagger")))  {  if (!have.dagger)    {    print("You have no way to cut the rope.");    }  if (have.dagger &&       !posn(ego, 10, 109, 71, 153))    {    print("You will need longer arms to cut that rope from here.");    }  if (have.dagger &&       posn(ego, 10, 109, 71, 153))    {    if (cut.bucket && !rope.lowered)      {      print("You cut a piece of rope and it falls into the well.");      }    if (isset(cut.lowered.rope))      {      print("There is no useful rope left to cut.");      }    if (isset(cut.bucket) &&         isset(rope.lowered))      {      erase(a.rope);      print("The long piece of rope falls to the bottom of the well.");      set(cut.lowered.rope);      reset(rope.lowered);      }    if (!cut.bucket && !bucket.lowered)      {      start.update(a.bucket);      erase(a.bucket);      draw(a.rope);      stop.cycling(a.rope);      set(have.bucket);      if (bucket.filled)        {        get("water");        set(have.water);        if (!points.water)          {          currentScore  += 2;          set(points.water);          }        }      set(cut.bucket);      get("water bucket");      print("With the rope cut, you are able to take the bucket.");      currentScore  += 2;      }    if (!cut.bucket && bucket.lowered)      {      start.update(a.bucket);      erase(a.bucket);      reset(bucket.lowered);      set(cut.bucket);      set(cut.lowered.rope);      print("The bucket and rope are now at the bottom of the well.");      }    }  }if (cut.lowered.rope)  {  if ((said("lower", "rope") ||       said("lower", "bucket") ||       said("lower", "rope", "well") ||       said("lower", "bucket", "well")))    {    print("There is not enough rope left to lower.");    }  }if (cut.bucket && rope.lowered)  {  if ((said("lower", "rope") ||       said("lower", "rope", "well")))    {    if (posn(ego, 60, 108, 77, 129))      {      print("The rope has already been lowered.");      }    else      {      print("You are not close enough to do that.");      }    }  }if (cut.bucket && !rope.lowered)  {  if ((said("lower", "rope") ||       said("lower", "rope", "well")))    {    if (posn(ego, 60, 108, 77, 129))      {      start.cycling(a.rope);      start.update(a.crank);      print("The rope descends into the darkness.");      sound(Sound20, crank.sound);      end.of.loop(a.rope, rope.goes.down);      start.cycling(a.crank);      set(rope.lowered);      }    else      {      print("You are not close enough to do that.");      }    }  }if (rope.goes.down)  {  reset(rope.goes.down);  stop.update(a.crank);  stop.cycling(a.rope);  }if (cut.bucket && !rope.lowered)  {  if (said("raise", "rope"))    {    if (posn(ego, 10, 109, 71, 153))      {      print("The rope is already at the top of the well.");      }    else      {      print("You are not close enough to do that.");      }    }  }if (cut.bucket && rope.lowered && !climbing.rope)  {  if (said("raise", "rope"))    {    if (posn(ego, 10, 109, 71, 153))      {      start.cycling(a.rope);      start.update(a.crank);      print("The rope emerges from the well.");      reverse.loop(a.rope, rope.goes.up);      sound(Sound20, crank.sound);      start.cycling(a.crank);      reset(rope.lowered);      }    else      {      print("You are not close enough to do that.");      }    }  }if (rope.goes.up)  {  reset(rope.goes.up);  stop.update(a.crank);  stop.cycling(a.rope);  }if (cut.bucket && rope.lowered && climbing.rope)  {  if (said("raise", "rope"))    {    print("You can't raise the rope from here!");    }  }if (bucket.ego.goes.down)  {  reset(bucket.ego.goes.down);  set(bucket.lowered);  new.room(Logic49);  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic21);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic13);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic11);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic5);  }if (goat.following)  {  call(lgc.goat);  }return();[ Messages#message 1 "The rope is securely fastened to the well."#message 2 "You cut a piece of rope and it falls into the well."#message 3 "With the rope cut, you are able to take the bucket."#message 4 "The bucket and rope are now at the bottom of the well."#message 5 "You have no way to cut the rope."#message 6 "You are not close enough to even try."#message 7 "You will need longer arms to cut that rope from here."#message 8 "The old bucket is securely fastened to a strong rope."#message 9 "There is no bucket here."#message 10 "The bucket is already gone."#message 11 "The well is deep and dark. But you can see the sky's reflection on the water."#message 12 "It is large, old and weathered.  It has served the kingdom for many years."#message 13 "The old bucket holds a full load of water."#message 14 "It is thick and firmly attached.  It could easily carry heavy weights."#message 15 "You need to be closer to do that."#message 16 "This well is one of the most ancient sites in the entire kingdom.  History and mystery seem to echo from its  every stone."#message 17 "From this distance it is difficult to see."#message 18 "The old bucket is already at the bottom of the well."#message 19 "The old bucket disappears into the darkness."#message 20 "The bucket is not here."#message 21 "The bucket is already at the top of the well."#message 22 "The old bucket emerges from the depths of the well."#message 23 "You will find that very difficult to do from here."#message 24 "The rope has already been lowered."#message 25 "The rope descends into the darkness."#message 26 "The old bucket vanishes into the depths of the well."#message 27 "The rope is already at the top of the well."#message 28 "The old bucket is already at the top of the well."#message 29 "The rope emerges from the well."#message 30 "You can't raise the rope from here!"#message 31 "The old bucket is lifted from the well."#message 32 "You are not close enough to do that."#message 33 "The sides of this well are too slippery to climb down."#message 34 "The rope does not go down the well very far."#message 35 "The old bucket is at the bottom of the well."#message 36 "What a mistake you made!  This well is too deep to jump into."#message 37 "The knots on the rope are too tight to untie."#message 38 "The goat sure doesn't want to climb the rope."#message 39 "The goat sure doesn`t want to climb down the well with you."#message 40 "The goat refuses to do down the well."#message 41 "That bucket isn't big enough for you and that big goat!"#message 42 "The goat refuses to enter the dark well."#message 43 "The goat refuses to go down into the dark well."#message 44 "The goat doesn`t want to slide down the rope."#message 45 "The goat is afraid of heights and refuses to jump down the well."#message 46 "You can't do that when you are invisible!"#message 47 "Carefully... Oh no!  The sides were too slippery... you've fallen into the well!"#message 48 "They raise their colorful faces to the sun."#message 49 "Somebody has cut the rope;  there's no way for you to get the bucket to the well's bottom."#message 50 "All the water is at the bottom of the well."#message 51 "Sorry, all the water is at the bottom of the well."#message 52 "After you are in the old bucket, your weight causes it to slowly descend."#message 53 "The long piece of rope falls to the bottom of the well."#message 54 "There is no useful rope left to cut."#message 55 "There is no useful rope to get."#message 56 "You should be more careful the next time you try  climbing ropes."#message 57 "There is not enough rope left to lower."