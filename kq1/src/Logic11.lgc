#define a.gate  o1#define gate.opened   f20#define goat.in.room f21#define goat.bleated    f23#define bleat.done  f24if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  set.horizon(41);  load.view(View15);  animate.obj(a.gate);  set.view(a.gate, View15);  ignore.blocks(a.gate);  load.view(View62);  load.view(View67);  if (!goat.following &&       dead.goat.room <= 0 &&       !goat.gone &&       goat.in.pen.room != 10)    {    goat.in.pen.room = 11;    load.sound(s.goat);    load.view(View14);    set(goat.in.room);    animate.obj(aGoat);    set.view(aGoat, View14);    observe.blocks(aGoat);    position(aGoat, 43, 97);    draw(aGoat);    wander(aGoat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 56, 122, 9, 0);    }  if (!goat.gate.open)    {    position(a.gate, 17, 156);    draw(a.gate);    set(gate.opened);    }  if (goat.gate.open)    {    position(a.gate, 43, 156);    draw(a.gate);    stop.update(a.gate);    }  if (goat.following)    {    set.view(ego, View67);    }  if (previousRoom == 6)    {    get.posn(ego, temp.x, temp.y);    if (temp.x < 46)      {      position(ego, 46, 166);      }    }  draw(ego);  show.pic();  }if (goat.in.room && !goat.following)  {  if (!goat.bleated)    {    set(goat.bleated);    sound(s.goat, bleat.done);    }  if (bleat.done)    {    reset(goat.bleated);    reset(bleat.done);    }  }if (posn(ego, 16, 153, 44, 155))  {  set(in.goat.pen);  }if (posn(ego, 16, 156, 44, 158))  {  reset(in.goat.pen);  }if (posn(aGoat, 16, 153, 44, 155))  {  reset(lf5);  }if (posn(aGoat, 16, 156, 44, 158))  {  set(lf5);  }if (said("check", "gate"))  {  if (goat.gate.open)    {    print("The gate is open.");    }  else    {    print("The gate is closed.");    }  }if (said("open", "gate"))  {  if (gate.opened)    {    if (posn(ego, 6, 139, 55, 167))      {      move.obj(a.gate, 43, 156, 0, goat.gate.open);      reset(gate.opened);      print("The gate is rather heavy, but you manage to open it.");      }    else      {      print("You cannot reach the gate from here.");      }    }  if (goat.gate.open)    {    print("The gate is already open.");    }  }if (said("close", "gate"))  {  if (goat.gate.open && !goat.following)    {    if (posn(ego, 33, 139, 75, 167))      {      get.posn(ego, temp.x, temp.y);      if (temp.y == 156)        {        print("You will have to move out of the way so the gate can close all "              "the way.");        }      else        {        print("You find the gate is much easier to close than it was to open.");        }      start.update(a.gate);      move.obj(a.gate, 17, 156, 0, gate.opened);      reset(goat.gate.open);      }    else      {      print("You cannot reach the gate from here.");      }    }  if (goat.gate.open && goat.following)    {    print("There is no need to close the gate now.");    }  if (gate.opened)    {    print("The gate is already closed.");    }  }if (!goat.in.room)  {  if (said("anyword", "goat"))    {    print("There is no goat here.");    }  }if (goat.in.room && !goat.following)  {  if ((said("hello") ||       said("hello", "goat") ||       said("say", "hello") ||       said("say", "hello", "goat")))    {    print("You get no response from the goat.");    }  if (said("check", "goat"))    {    print("The goat is pacing to and fro.");    }  if (said("speak", "goat"))    {    print("The goat refuses to listen to your words.");    }  if (said("call", "goat"))    {    print("The old goat refuses to listen to you.");    }  if (said("acquire", "goat"))    {    if (in.goat.pen)      {      print("It would be rather difficult to carry this goat.");      }    else      {      print("The old goat's on the other side of the fence!");      }    }  if (said("feed", "goat"))    {    print("What do you want to feed the old goat?");    set(haveMatch);    }  if (!have.dagger)    {    if (said("kill", "goat"))      {      print("You have no way to accomplish this terrible deed.");      }    }  if (have.dagger)    {    if (said("kill", "goat"))      {      if (!in.goat.pen)        {        print("From here it will be very difficult to do such a  terrible "              "thing.");        }      else        {        erase(aGoat);        set.view(aGoat, View62);        draw(aGoat);        goat.step.size = 0;        step.size(aGoat, goat.step.size);        print("You hurl the dagger at the old goat... he tries to avoid the "              "flying dagger, but your aim is true... as the dagger strikes, he "              "slumps to the ground... dead.");        drop("dagger");        currentScore -= 5;        reset(have.dagger);        set(lost.dagger);        dead.goat.room = currentRoom;        }      }    }  if (said("pet", "goat"))    {    print("You can try, but be careful.");    }  if (said("get on", "goat"))    {    if (in.goat.pen)      {      print("Are you kidding?  The goat would never let you!");      }    else      {      print("The old goat's on the other side of the fence!");      }    }  if (said("capture", "goat"))    {    if (in.goat.pen)      {      print("The goat will not let you catch him.");      }    else      {      print("You cannot do that from outside the fence.");      }    }  if (edgeObjHit == LEFT_EDGE &&       !isset(lf5))    {    erase(aGoat);    reset(goat.in.room);    goat.in.pen.room = 10;    }  }if (dead.goat.room == currentRoom)  {  if (said("check", "goat"))    {    print("Lying lifeless on the ground you see a dead goat.");    }  if (said("acquire", "goat"))    {    print("You do not want to carry around a dead goat.");    }  }if (said("check", "fence"))  {  print("It is high enough to keep animals inside.");  }if (said("look in", "fence"))  {  if (goat.in.room)    {    print("You see a grey billy goat inside the pen.");    }  else    {    print("This looks like an area in which to keep animals.");    }  }if (said("jump", "fence"))  {  print("The fence is too high for you to jump over.");  }distance(ego, aGoat, work.2);if (in.goat.pen && goat.in.room)  {  if ((said("feed", "carrot") ||       said("feed", "goat", "carrot") ||       said("feed", "carrot", "goat") ||       said("give", "carrot") ||       said("give", "goat", "carrot") ||       said("give", "carrot", "goat")))    {    if (have.carrot)      {      if (work.2 < 25)        {        print("Goats love carrots!  The goat quickly devours yours.");        currentScore -= 2;        drop("carrot");        reset(have.carrot);        reset(carrot.points);        }      else        {        print("You are too far away.");        }      }    else      {      print("You do not have a carrot.");      set(haveMatch);      }    }  }if (in.goat.pen && goat.in.room)  {  if (have.carrot && !goat.following && !ego.invisible)    {    if ((said("show", "carrot") ||         said("show", "carrot", "goat") ||         said("show", "goat", "carrot")))      {      if (work.2 < 50)        {        if (!troll.paid)          {          print("When you tempt the old goat with the carrot, he starts to "                "follow you.");          set(goat.following);          erase(aGoat);          set.view(ego, View67);          currentScore  += 5;          }        if (troll.paid)          {          print("The goat shows some interest in the carrot.");          }        }      else        {        print("You are too far away.");        }      }    }  }if (!in.goat.pen && goat.in.room)  {  if (!have.carrot)    {    if (said("anyword", "carrot"))      {      print("You do not have a carrot.");      }    }  if (have.carrot && !ego.invisible)    {    if ((said("feed", "carrot") ||         said("feed", "goat", "carrot") ||         said("feed", "carrot", "goat") ||         said("give", "carrot") ||         said("give", "goat", "carrot") ||         said("give", "carrot", "goat")))      {      if (work.2 < 25)        {        print("Goats love carrots!  The goat quickly devours yours.");        currentScore -= 2;        drop("carrot");        reset(have.carrot);        reset(carrot.points);        }      else        {        print("You are too far away.");        }      }    if ((said("show", "carrot") ||         said("show", "goat", "carrot") ||         said("show", "carrot", "goat")))      {      if (work.2 < 50)        {        print("The goat shows some interest in the carrot.");        }      else        {        print("You are too far away.");        }      }    }  }if (ego.invisible)  {  if (have.carrot &&       said("anyword", "carrot"))    {    print("Since you are invisible, everything you own is invisible.  The goat "          "cannot see the carrot.");    }  }if (isset(lf5))  {  if ((edgeObjHit == RIGHT_EDGE ||       edgeObjHit == BOTTOM_EDGE ||       edgeObjHit == LEFT_EDGE))    {    if (!goat.following)      {      erase(aGoat);      reset(goat.in.room);      set(goat.gone);      print("It seems the old goat has wandered off.");      goat.in.pen.room = 0;      }    }  }if (edgeEgoHit != NOT_HIT)  {  if (goat.gate.open && !goat.following &&       dead.goat.room <= 0 &&       !goat.gone && !in.goat.pen)    {    set(goat.gone);    goat.in.pen.room = 0;    }  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic22);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic12);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic10);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic6);  }return();[ Messages#message 1 "There is no reason to jump or duck here."#message 2 "It's not nice to tease the goat.  You're not leaving without him."#message 3 "The gate is already open."#message 4 "The gate is already closed."#message 5 "The gate is rather heavy, but you manage to open it."#message 6 "You find the gate is much easier to close than it was to open."#message 7 "You cannot reach the gate from here."#message 8 "The gate is closed."#message 9 "The gate is open."#message 10 "The goat is pacing to and fro."#message 11 "There is no goat here."#message 12 "It is high enough to keep animals inside."#message 13 "It would be rather difficult to carry this goat."#message 14 "The old goat is already following you."#message 15 "What do you want to feed the old goat?"#message 16 "You have nothing the old goat wants to eat."#message 17 "You do not have a carrot."#message 18 "Goats love carrots!  The goat quickly devours yours."#message 19 "From here it will be very difficult to do such a  terrible thing."#message 20 "You have no way to accomplish this terrible deed."#message 21 "You hurl the dagger at the old goat... he tries to avoid the flying dagger, but your aim is true... as the dagger strikes, he slumps to the ground... dead."#message 22 "When you tempt the old goat with the carrot, he starts to follow you."#message 23 "Since you are invisible, everything you own is invisible.  The goat cannot see the carrot."#message 24 "The old goat's on the other side of the fence!"#message 25 "The goat is following you already."#message 26 "The goat will not let you catch him."#message 27 "You cannot do that from outside the fence."#message 28 "The fence is too high for you to jump over."#message 29 "Why would you want to do that?  There is a gate."#message 30 "Are you kidding?  The goat would never let you!"#message 31 "The old goat refuses to listen to you."#message 32 "You can try, but be careful."#message 33 "The goat refuses to listen to your words."#message 34 "Lying lifeless on the ground you see a dead goat."#message 35 "You do not want to carry around a dead goat."#message 36 "You are too far away."#message 37 "The goat shows some interest in the carrot."#message 38 "You get no response from the goat."#message 39 "It seems the old goat has wandered off."#message 40 "You see a grey billy goat inside the pen."#message 41 "This looks like an area in which to keep animals."#message 42 "You will have to move out of the way so the gate can close all the way."#message 43 "There is no need to close the gate now."