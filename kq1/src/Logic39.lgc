#define a.troll o1#define troll.will.come   f20#define troll.in.room       f21#define troll.moved    f22#define goat.to.troll   f23#define goat.hit.troll  f24#define troll.blocks    f25#define paid.up         f27#define troll.leaves    f28#define drown.msg       f29#define goodbye.goat    f30#define troll.stomps    f31#define stomp.sound.done f32#define troll.step v30if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  set.horizon(41);  if (goat.following)    {    load.logics(lgc.goat);    }  load.logics(lgc.swim);  call(lgc.swim);  set(deadly.water);  if (!troll.dead && !troll.paid)    {    load.view(View64);    animate.obj(a.troll);    set.view(a.troll, View64);    position(a.troll, 21, 69);    observe.blocks(a.troll);    set(troll.will.come);    load.sound(m.badguy);    load.sound(Sound10);    }  draw(ego);  show.pic();  }if (troll.in.room && sound.done)  {  if (!troll.stomps)    {    set(troll.stomps);    sound(Sound10, stomp.sound.done);    }  if (stomp.sound.done)    {    reset(troll.stomps);    reset(stomp.sound.done);    }  }if (troll.in.room)  {  if (posn(ego, 52, 59, 57, 79))    {    observe.blocks(ego);    }  else    {    ignore.blocks(ego);    }  }if (!troll.in.room)  {  ignore.blocks(ego);  }if (troll.in.room && !troll.blocks)  {  set(troll.blocks);  follow.ego(a.troll, 1, troll.moved);  }if (!troll.in.room)  {  if (said("anyword", "troll"))    {    print("I don't see a troll.");    }  if ((said("cast", "dagger") ||       said("kill", "goat")))    {    if (have.dagger)      {      print("You throw the dagger and it lands in the stream, lost forever.");      drop("dagger");      reset(have.dagger);      set(lost.dagger);      currentScore -= 5;      }    }  if (said("use", "dagger") &&       have.dagger)    {    print("How?");    }  if (said("give", "treasure"))    {    print("To what?");    }  if (have.diamonds)    {    if (said("give", "diamond"))      {      print("To what?");      }    }  if (have.egg)    {    if (said("give", "egg"))      {      print("To what?");      }    }  if ((have.unopened.walnut || have.opened.walnut))    {    if (said("give", "gold nut"))      {      print("To what?");      }    }  }if (troll.will.come && egoHitSpecial)  {  reset(troll.will.come);  set(troll.in.room);  troll.step = 2;  step.size(a.troll, troll.step);  sound(m.badguy, sound.done);  draw(a.troll);  if (ego.invisible)    {    print("As you start to cross the bridge, a wretched troll appears.  Even "          "though you are invisible, he will not let you cross his bridge.");    }  else    {    print("As you approach the bridge, a mean, ugly troll appears and refuses "          "to let you cross his bridge.");    }  }if (troll.in.room && goat.following && !lf6)  {  distance(ego, aGoat, lv1);  if (lv1 > 25)    {    reposition.to(aGoat, 85, 71);    }  print("It is a well known fact that goats hate trolls intensely.   You should "        "move aside and let the goat take care of this nasty troll.");  set(lf6);  set(f76);  move.obj(aGoat, 80, 71, 0, goat.to.troll);  }if (goat.to.troll)  {  ignore.objs(aGoat);  reset(goat.to.troll);  normal.motion(a.troll);  stop.motion(a.troll);  get.posn(a.troll, temp.x, temp.y);  temp.step = 2;  move.obj.v(aGoat, temp.x, temp.y, temp.step, goat.hit.troll);  }distance(a.troll, aGoat, work);if (work < 17 &&     !troll.dead)  {  print("The goat butts the troll right off the bridge, never to be seen in "        "these parts again.");  set(troll.dead);  reset(troll.in.room);  reset(goat.following);  erase(a.troll);  set(goat.gone);  get.posn(aGoat, temp.x, temp.y);  temp.x = 140;  if (temp.y < 71)    {    temp.y  += 5;    }  move.obj.v(aGoat, temp.x, temp.y, temp.step, goodbye.goat);  currentScore  += 4;  }if (goodbye.goat)  {  reset(goodbye.goat);  erase(aGoat);  }if (troll.in.room && !goat.following)  {  if (said("check", "troll"))    {    if (posn(ego, 1, 40, 100, 90))      {      print("This is the ugliest, meanest troll I have ever seen.");      }    else      {      print("There may be something trollish around, but you're not close "            "enough to do anything about it.");      }    }  if (said("kill", "troll"))    {    if (posn(ego, 1, 40, 100, 90) &&         have.dagger)      {      print("Do you really think you can do that?");      }    if (posn(ego, 1, 40, 100, 90) &&         !have.dagger)      {      print("Fortunately for you, you have no way to do that.");      }    if (!posn(ego, 1, 40, 100, 90))      {      print("There may be something trollish around, but you're not close "            "enough to do anything about it.");      }    }  if ((said("speak", "troll") ||       said("hello") ||       said("say", "hello")))    {    if (posn(ego, 1, 40, 100, 90))      {      print("The troll demands a treasure for passage across his bridge.");      }    else      {      print("There may be something trollish around, but you're not close "            "enough to do anything about it.");      }    }  if (said("cast", "dagger") &&       have.dagger)    {    if (posn(ego, 1, 40, 100, 90))      {      print("You throw the dagger and the quick old troll catches it.");      drop("dagger");      reset(have.dagger);      set(lost.dagger);      currentScore -= 5;      }    else      {      print("You throw the dagger and it lands in the stream, lost forever.");      drop("dagger");      reset(have.dagger);      set(lost.dagger);      currentScore -= 5;      }    }  if (said("use", "dagger") &&       have.dagger)    {    print("How?");    }  if (said("move", "troll"))    {    if (posn(ego, 1, 40, 100, 90))      {      print("You push the troll as hard as you can; he won't budge.");      }    else      {      print("There may be something trollish around, but you're not close "            "enough to do anything about it.");      }    }  if (said("beg", "troll"))    {    print("Trools have no sympathy.");  [ "Trools"? Looks like a typo.    }  if (said("attack", "troll"))    {    print("You could never win a fight with a troll.");    }  if ((said("give", "treasure") ||       said("give", "troll", "treasure") ||       said("give", "treasure", "troll")))    {    print("What precious treasure would you like to give to the  old troll?");    }  if (have.diamonds)    {    if ((said("give", "diamond") ||         said("give", "troll", "diamond") ||         said("give", "diamond", "troll")))      {      if (posn(ego, 1, 40, 100, 90))        {        print("The troll grabs the treasure and vanishes.");        drop("pouch of diamonds");        reset(have.diamonds);        set(troll.paid);        set(lost.diamonds);        currentScore -= 6;        set(paid.up);        }      else        {        print("There may be something trollish around, but you're not close "              "enough to do anything about it.");        }      }    }  if (have.sceptre)    {    if ((said("give", "sceptre") ||         said("give", "troll", "sceptre") ||         said("give", "sceptre", "troll")))      {      if (posn(ego, 1, 40, 100, 90))        {        print("The troll grabs the treasure and vanishes.");        drop("sceptre");        reset(have.sceptre);        set(troll.paid);        set(lost.sceptre);        currentScore -= 6;        set(paid.up);        }      else        {        print("There may be something trollish around, but you're not close "              "enough to do anything about it.");        }      }    }  if (have.egg)    {    if ((said("give", "egg") ||         said("give", "troll", "egg") ||         said("give", "egg", "troll")))      {      if (posn(ego, 1, 40, 100, 90))        {        print("The troll grabs the treasure and vanishes.");        drop("gold egg");        reset(have.egg);        set(troll.paid);        set(lost.egg);        currentScore -= 6;        set(paid.up);        }      else        {        print("There may be something trollish around, but you're not close "              "enough to do anything about it.");        }      }    }  if (have.unopened.walnut)    {    if ((said("give", "gold nut") ||         said("give", "troll", "gold nut") ||         said("give", "gold nut", "troll")))      {      print("The troll doesn't want just a plain walnut.");      }    }  if (have.opened.walnut)    {    if ((said("give", "gold nut") ||         said("give", "troll", "gold nut") ||         said("give", "gold nut", "troll")))      {      if (posn(ego, 1, 40, 100, 90))        {        print("The troll grabs the treasure and vanishes.");        drop("gold walnut");        reset(have.opened.walnut);        set(troll.paid);        set(lost.walnut);        currentScore -= 6;        set(paid.up);        }      else        {        print("There may be something trollish around, but you're not close "              "enough to do anything about it.");        }      }    }  }if (paid.up)  {  reset(paid.up);  move.obj(a.troll, 20, 72, 0, troll.leaves);  }if (troll.leaves)  {  reset(troll.leaves);  erase(a.troll);  reset(troll.in.room);  }if (!onWater)  {  if ((posn(ego, 24, 44, 68, 58) ||       posn(ego, 72, 84, 72, 87)))    {    set(onWater);    set(override.splash.loc);    }  }if (drown.swim <= 0 && onWater)  {  delta.x = 255;  if (posn(ego, 0, 83, 94, 167))    {    delta.x = 34;    delta.y = 151;    }  if (posn(ego, 20, 40, 72, 60))    {    delta.x = 43;    delta.y = 55;    }  if (delta.x == 255)    {    delta.x = 0;    }  else    {    get.posn(ego, temp.x, temp.y);    delta.x -= temp.x;    delta.y -= temp.y;    set(override.splash.loc);    }  }if (onWater && !drown.msg)  {  set(drown.msg);  print("It seems to me that by now you would have learned to be more careful.  "        "You are stuck in the mud at the bottom of this river and sinking fast.");  }if (!have.water && !onWater && !drank.water)  {  if ((said("drink", "water") ||       said("acquire", "drink")))    {    if (posn(ego, 15, 40, 90, 166))      {      print("Caution and steep banks advise against getting water here.");      }    else      {      print("You are too far from the river.");      }    }  }if (!have.water && have.bucket && !onWater &&     said("acquire", "water"))  {  if (posn(ego, 15, 40, 90, 166))    {    print("Caution and steep banks advise against getting water here.");    }  else    {    print("You are too far from the river.");    }  }if (said("check", "bridge"))  {  print("The wooden bridge is old and weather beaten.");  }if (said("look under", "bridge"))  {  print("You glance under the old bridge, but see nothing unusual.");  }if (said("check", "river"))  {  print("The stream may not be safe to cross.");  }if (edgeEgoHit != NOT_HIT)  {  observe.blocks(ego);  reset(deadly.water);  if (troll.in.room && goat.following)    {    reset(goat.following);    set(troll.dead);    set(goat.gone);    }  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic42);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic38);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic40);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic26);  }if (goat.following)  {  call(lgc.goat);  }call(lgc.swim);return();[ Messages#message 1 "As you approach the bridge, a mean, ugly troll appears and refuses to let you cross his bridge."#message 2 "It is a well known fact that goats hate trolls intensely.   You should move aside and let the goat take care of this nasty troll."#message 3 "Caution and steep banks advise against getting water here."#message 4 "You are too far from the river."#message 5 "The wooden bridge is old and weather beaten."#message 6 "The stream may not be safe to cross."#message 7 "Do you really think you can do that?"#message 8 "Fortunately for you, you have no way to do that."#message 9 "The troll demands a treasure for passage across his bridge."#message 10 "You throw the dagger and the quick old troll catches it."#message 11 "How?"#message 12 "You push the troll as hard as you can; he won't budge."#message 13 "Trools have no sympathy."#message 14 "There may be something trollish around, but you're not close enough to do anything about it."#message 15 "You throw the dagger and it lands in the stream, lost forever."#message 16 "I don't see a troll."#message 17 "Is there a troll?"#message 18 "To what?"#message 19 "What precious treasure would you like to give to the  old troll?"#message 20 "If you don't have it, how can you give it to the troll?"#message 21 "The troll doesn't want just a plain walnut."#message 22 "The troll grabs the treasure and vanishes."#message 23 "It seems to me that by now you would have learned to be more careful.  You are stuck in the mud at the bottom of this river and sinking fast."#message 24 "This is the ugliest, meanest troll I have ever seen."#message 25 "The goat butts the troll right off the bridge, never to be seen in these parts again."#message 26 "You could never win a fight with a troll."#message 27 "You glance under the old bridge, but see nothing unusual."#message 28 "As you start to cross the bridge, a wretched troll appears.  Even though you are invisible, he will not let you cross his bridge."