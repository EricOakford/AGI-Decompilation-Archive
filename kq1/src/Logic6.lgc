#define survivable.fall f20#define deadly.fall f21#define stun.done   f22#define hit.ground f23#define fall.sound.done         f24#define beanstalk.sound.done    f25#define stunned.time    v30if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  load.sound(Sound4);  load.sound(s.ego.fall);  set.horizon(40);  if (goat.following)    {    load.logics(lgc.goat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 54, 67, 0, 0);    }  if ((have.beans || beanstalk.room == 6))    {    beanstalk.overlay = 84;    set(can.plant.beanstalk);    load.pic(beanstalk.overlay);    load.view(View114);    load.view(View103);    load.view(View104);    load.view(View74);    load.view(View105);    load.logics(lgc.beanstalk);    load.sound(Sound12);    }  if (previousRoom == 70 && climbing.beanstalk)    {    set.view(ego, View74);    position(ego, 64, 41);    move.obj(ego, 64, 41, 0, done);    set.priority(ego, 8);    }  if (previousRoom == 70 && falling.from.sky)    {    program.control();    ignore.horizon(ego);    set.priority(ego, 15);    set.view(ego, View105);    get.posn(ego, temp.x, temp.y);    if (temp.x > 75)      {      position(ego, 80, 29);      }    else      {      position(ego, 65, 29);      }    get.posn(ego, temp.x, temp.y);    temp.y = 106;    temp.step = 2;    move.obj.v(ego, temp.x, temp.y, temp.step, deadly.fall);    }  if (previousRoom == 43 && onWater)    {    reset(keep.cycling);    set.view(ego, View0);    drown.swim = 0;    }  if (beanstalk.room == 6)    {    overlay.pic(beanstalk.overlay);    }  draw(ego);  show.pic();  }if (said("check", "room"))  {  print("You are in the forest.  You can see a stump and a hollow log here.");  }if (falling.from.sky && !hit.ground)  {  set(hit.ground);  set(ego.stunned);  sound(s.ego.fall, fall.sound.done);  }if (deadly.fall)  {  stop.sound();  set(hit.ground);  reset(falling.from.sky);  reset(ego.stunned);  set.view(ego, View114);  shake.screen(2);  set(certain.death);  }if ((said("check", "branch") ||     said("look in", "branch")))  {  if (posn(ego, 0, 92, 102, 167))    {    print("It is only a rotted log.");    }  else    {    if ((posn(ego, 22, 135, 36, 167) ||         posn(ego, 75, 135, 91, 167)))      {      print("There is nothing in the old log.");      }    else      {      print("I suggest you move closer to try that.");      }    }  }if (said("check", "stump"))  {  if (posn(ego, 0, 81, 102, 167))    {    print("From here you can see the stump is very old and nearly petrified.");    }  else    {    print("You can vaguely see the stump in the distance.");    }  }if (said("acquire", "branch"))  {  print("There is no reason to take this old log with you.");  }if (said("look in", "stump"))  {  if (posn(ego, 0, 103, 35, 146))    {    if (!took.pouch)      {      print("Inside the old, rotted stump you notice a small, canvas pouch.");      if (!points.find.pouch)        {        set(points.find.pouch);        currentScore  += 1;        }      }    else      {      print("Inside the decaying tree stump, you see nothing interesting.");      }    }  else    {    print("I suggest you move closer to try that.");    }  }if (said("acquire", "bag") &&     !have.pouch)  {  if (posn(ego, 0, 103, 35, 146))    {    if (!took.pouch)      {      print("You notice the pouch feels aged and tattered.");      get("pouch");      set(took.pouch);      set(have.pouch);      currentScore  += 3;      }    else      {      print("There's no pouch here.");      }    }  if (!posn(ego, 0, 103, 35, 146))    {    print("You have to find it first.");    }  }if (have.beans && can.plant.beanstalk)  {  if (said("bury", "bean"))    {    reset(have.beans);    beanstalk.room = 6;    set(planted.beans);    drop("beans");    currentScore  += 2;    print("The beans immediately sprout roots that reach deep into the fertile "          "soil... leaves unfold themselves to the warm, loving sun... a "          "rumbling is felt... and a mighty beanstalk now stretches up into the "          "sky!");    sound(Sound12, beanstalk.sound.done);    overlay.pic(beanstalk.overlay);    show.pic();    }  }if (beanstalk.room == 6 &&     !ego.invisible)  {  if (said("climb", "beanstalk") &&       !climbing.beanstalk)    {    if (posn(ego, 52, 76, 103, 97))      {      erase(ego);      set.view(ego, View74);      set(climbing.beanstalk);      position(ego, 71, 77);      set.priority(ego, 8);      draw(ego);      move.obj(ego, 71, 77, 0, done);      }    else      {      print("You can't reach the beanstalk from here.");      }    }  }if (beanstalk.room != 6)  {  if (said("climb", "beanstalk"))    {    print("There is no beanstalk here to climb.");    }  }if (climbing.beanstalk)  {  if (egoHitSpecial &&       posn(ego, 60, 78, 93, 80))    {    erase(ego);    set.view(ego, View0);    reset(climbing.beanstalk);    position(ego, 70, 106);    release.priority(ego);    draw(ego);    }  if (egoHitSpecial &&       !posn(ego, 60, 78, 93, 80))    {    program.control();    set.priority(ego, 15);    get.posn(ego, temp.x, temp.y);    erase(ego);    set.view(ego, View105);    reset(climbing.beanstalk);    position.v(ego, temp.x, temp.y);    draw(ego);    temp.y = 106;    temp.step = 2;    move.obj.v(ego, temp.x, temp.y, temp.step, survivable.fall);    set(ego.stunned);    sound(s.ego.fall, fall.sound.done);    }  }--stunned.time;if (survivable.fall)  {  stop.sound();  reset(survivable.fall);  observe.blocks(ego);  release.priority(ego);  stop.motion(ego);  set.view(ego, View103);  stunned.time = 20;  set(keep.cycling);  shake.screen(2);  print("Ouch!");  set(ego.stunned);  sound(Sound4, sound.done);  }if (sound.done)  {  if (stunned.time > 0)    {    reset(sound.done);    sound(Sound4, sound.done);    }  }if (stunned.time == 1)  {  set.view(ego, View104);  end.of.loop(ego, stun.done);  }if (stun.done)  {  reset(stun.done);  reset(keep.cycling);  start.motion(ego);  set.view(ego, View0);  release.priority(ego);  player.control();  }if (edgeEgoHit != NOT_HIT)  {  reset(can.plant.beanstalk);  }if (edgeEgoHit == TOP_EDGE &&     climbing.beanstalk)  {  new.room(Logic70);  }if (edgeEgoHit == TOP_EDGE &&     !climbing.beanstalk)  {  new.room(Logic11);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic5);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic7);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic43);  }if (goat.following)  {  call(lgc.goat);  }if (beanstalk.room == 6)  {  call(lgc.beanstalk);  }return();[ Messages#message 1 "Inside the old, rotted stump you notice a small, canvas pouch."#message 2 "Inside the decaying tree stump, you see nothing interesting."#message 3 "You notice the pouch feels aged and tattered."#message 4 "You could get a much better look at it if it were in your  hands."#message 5 "There's no pouch here."#message 6 "From here you can see the stump is very old and nearly petrified."#message 7 "You can vaguely see the stump in the distance."#message 8 "It is only a rotted log."#message 9 "There is no reason to take this old log with you."#message 10 "I suggest you move closer to try that."#message 11 "You need to get closer to look at the log."#message 12 "There is nothing in the old log."#message 13 "The beans immediately sprout roots that reach deep into the fertile soil... leaves unfold themselves to the warm, loving sun... a rumbling is felt... and a mighty beanstalk now stretches up into the sky!"#message 14 "You can't reach the beanstalk from here."#message 15 "There is no beanstalk here to climb."#message 16 "Ouch!"#message 17 "You have to find it first."#message 18 "You are in the forest.  You can see a stump and a hollow log here."