#define a.door  o1#define door.opens f20#define door.closes f21if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  set.horizon(41);  if (goat.following)    {    load.logics(lgc.goat);    }  if (dead.goat.room == currentRoom)    {    add.to.pic(View62, 0, 0, 27, 127, 0, 0);    }  load.view(View20);  animate.obj(a.door);  set.view(a.door, View20);  set.priority(a.door, 8);  position(a.door, 101, 92);  load.sound(Sound19);  if (previousRoom == 66)    {    position(ego, 102, 98);    mountain.door.state = 2;    }  if (mountain.door.state == 2)    {    set.cel(a.door, 3);    draw(a.door);    ignore.objs(a.door);    ignore.blocks(ego);    stop.update(a.door);    }  if ((mountain.door.state == 0 ||       mountain.door.state == 1))    {    set.cel(a.door, 0);    draw(a.door);    observe.objs(a.door);    observe.blocks(ego);    stop.update(a.door);    }  draw(ego);  show.pic();  }if (said("check", "mountain"))  {  print("There seems to be a door built into the mountainside.");  }if (said("climb", "mountain"))  {  print("The mountain is much too steep and rocky for you to climb.");  }if (said("check", "door"))  {  if (posn(ego, 90, 93, 125, 114))    {    print("It is a huge wooden door built right into the bottom of a small "          "mountain!  It has a large keyhole.");    }  else    {    print("Don't be afraid.  Get close enough for a good look.");    }  }if (said("break", "door"))  {  if (posn(ego, 90, 93, 125, 114))    {    print("You strike the door with all your might!  To no avail.");    }  else    {    print("It will be difficult to do that from here.");    }  }if (said("knock", "door"))  {  if (posn(ego, 90, 93, 125, 114))    {    print("The only response you get is the echo of your pounding.");    }  else    {    print("It will be difficult to do that from here.");    }  }if (!posn(ego, 90, 93, 125, 114))  {  if ((said("open", "door") ||       said("close", "door") ||       said("turn", "knob") ||       said("open", "door", "gold key") ||       said("open", "door", "gold", "gold key")))    {    print("It will be difficult to do that from here.");    }  if (have.gold.key)    {    if ((said("use", "gold key") ||         said("lock", "door") ||         said("unlock", "door")))      {      print("It will be difficult to do that from here.");      }    }  }if (posn(ego, 90, 93, 125, 114))  {  if (have.gold.key)    {    if (said("use", "gold key"))      {      print("How do you want to use the key?");      }    if ((said("unlock", "door") ||         said("unlock", "door", "gold key") ||         said("unlock", "door", "gold", "gold key") ||         said("open", "door", "gold key") ||         said("open", "door", "gold", "gold key")))      {      if (mountain.door.state == 1)        {        print("The door is already unlocked.");        }      if (mountain.door.state == 2)        {        print("There is no need to unlock an already open door.");        }      if (mountain.door.state == 0)        {        print("Using the gold key, you unlock the huge door.");        mountain.door.state = 1;        if (!points.unlock.door)          {          set(points.unlock.door);          currentScore  += 2;          }        }      }    if (said("lock", "door"))      {      if (mountain.door.state == 0)        {        print("The door is already locked.");        }      if (mountain.door.state == 1)        {        print("You lock the massive door with the heavy gold key.");        mountain.door.state = 0;        }      if (mountain.door.state == 2)        {        print("You need to close the door before you can lock it.");        }      }    }  if (mountain.door.state == 0)    {    if ((said("open", "door") ||         said("turn", "knob")))      {      print("This massive door is securely locked.");      }    }  if (mountain.door.state == 2)    {    if ((said("open", "door") ||         said("turn", "knob")))      {      print("The door is already open.");      }    }  if (mountain.door.state == 1)    {    if ((said("open", "door") ||         said("turn", "knob")))      {      start.update(a.door);      sound(Sound19, done);      end.of.loop(a.door, door.opens);      mountain.door.state = 2;      }    }  if (said("close", "door"))    {    if ((mountain.door.state == 0 ||         mountain.door.state == 1))      {      print("The door is already closed.");      }    if (mountain.door.state == 2)      {      start.update(a.door);      reverse.loop(a.door, door.closes);      mountain.door.state = 1;      }    }  }if (door.opens)  {  reset(door.opens);  ignore.objs(a.door);  ignore.blocks(ego);  stop.update(a.door);  }if (door.closes)  {  reset(door.closes);  observe.objs(a.door);  observe.blocks(ego);  stop.update(a.door);  }if (!have.gold.key)  {  if (said("use", "gold key"))    {    print("You can't fool me!  You don't have a key.");    }  if (said("unlock", "door"))    {    print("You can't unlock the door without a key.");    }  if (said("lock", "door"))    {    print("You need a key to do that.");    }  }if ((said("check", "key hole") ||     said("look in", "key hole")))  {  if (posn(ego, 90, 93, 125, 114))    {    print("Through the keyhole you can dimly see a staircase. It looks like it "          "might go up into the mountain.");    }  else    {    print("There aren't many keyholes in the ground here.");    }  }if (posn(ego, 99, 93, 114, 94))  {  new.room(Logic66);  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic30);  }if (edgeEgoHit == RIGHT_EDGE)  {  new.room(Logic18);  }if (edgeEgoHit == LEFT_EDGE)  {  new.room(Logic20);  }if (edgeEgoHit == BOTTOM_EDGE)  {  new.room(Logic14);  }if (goat.following)  {  call(lgc.goat);  }return();[ Messages#message 1 "The mountain is much too steep and rocky for you to climb."#message 2 "It is a huge wooden door built right into the bottom of a small mountain!  It has a large keyhole."#message 3 "How do you want to use the key?"#message 4 "You can't fool me!  You don't have a key."#message 5 "The door is already unlocked."#message 6 "Using the gold key, you unlock the huge door."#message 7 "You can't unlock the door without a key."#message 8 "The door is already locked."#message 9 "You lock the massive door with the heavy gold key."#message 10 "You need a key to do that."#message 11 "This massive door is securely locked."#message 12 "Through the keyhole you can dimly see a staircase. It looks like it might go up into the mountain."#message 13 "You strike the door with all your might!  To no avail."#message 14 "Don't be afraid.  Get close enough for a good look."#message 15 "It will be difficult to do that from here."#message 16 "There aren't many keyholes in the ground here."#message 17 "There seems to be a door built into the mountainside."#message 18 "There is no need to unlock an already open door."#message 19 "You need to close the door before you can lock it."#message 20 "The door is already open."#message 21 "The door is already closed."#message 22 "The only response you get is the echo of your pounding."