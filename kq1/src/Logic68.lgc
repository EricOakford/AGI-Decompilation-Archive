#define a.dwarf o1#define fall.offscreen  f20#define dwarf.leaves    f21#define fell.off.stairs f22#define dwarf.will.come f23#define dwarf.in.room f24#define dwarf.sees.ego  f25#define dwarf.chase.ego f26#define dwarf.sound f27#define dwarf.sound.done    f28#define ego.pri v30if (newRoom)  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  load.view(View105);  load.sound(s.ego.fall);  random(0, 250, work);  if (work < 150 &&       previousRoom == 67)    {    load.sound(Sound16);    load.view(View111);    load.view(View115);    animate.obj(a.dwarf);    set.view(a.dwarf, View111);    set(dwarf.will.come);    observe.blocks(a.dwarf);    ignore.horizon(a.dwarf);    }  if (dwarf.will.come)    {Label1:    random(0, 150, work.2);    if (work.2 > 45)      {      goto(Label1);      }    }  set.horizon(40);  if (previousRoom == 67)    {    position(ego, 94, 160);    set.loop(ego, 0);    move.obj(ego, 95, 159, 0, done);    }  if (previousRoom == 69)    {    position(ego, 43, 41);    set.loop(ego, 0);    move.obj(ego, 44, 42, 0, done);    }  draw(ego);  show.pic();  }if (dwarf.in.room)  {  if (!dwarf.sound)    {    set(dwarf.sound);    sound(Sound16, dwarf.sound.done);    }  if (dwarf.sound.done)    {    reset(dwarf.sound);    reset(dwarf.sound.done);    }  }--work.2;if (work.2 == 1)  {  if (posn(ego, 0, 0, 159, 83))    {    position(a.dwarf, 96, 162);    }  else    {    position(a.dwarf, 30, 27);    }  draw(a.dwarf);  set(dwarf.in.room);  move.obj(a.dwarf, 130, 127, 2, dwarf.sees.ego);  }if (!dwarf.chase.ego)  {  distance(ego, a.dwarf, work.3);  }if (dwarf.sees.ego)  {  set(dwarf.chase.ego);  reset(dwarf.sees.ego);  follow.ego(a.dwarf, 10, menace.caught.ego);  }if ((said("check", "stairs") ||     said("check", "room")))  {  print("The stairs seem to go on forever.");  }if (said("check", "dwarf"))  {  if (dwarf.in.room)    {    print("This is a shy little dwarf.  He is too quick to catch.");    }  else    {    print("There is nobody here but you.");    }  }if ((said("speak", "dwarf") ||     said("hello") ||     said("say", "hello")))  {  if (dwarf.in.room)    {    print("The dwarf is not here for idle conversion.");    }  else    {    print("There is nobody here but you.");    }  }if (egoHitSpecial && !fell.off.stairs)  {  set(f145);  set(f146);  set(fell.off.stairs);  ignore.blocks(ego);  start.cycling(ego);  set(keep.cycling);  get.posn(ego, temp.x, temp.y);  get.priority(ego, ego.pri);  set.priority.v(ego, ego.pri);  if (!ego.invisible)    {    set.view(ego, View105);    }  print("Look out!  You are too close to the edge!  Oh, oh, you fell!");  if (temp.y < 130)    {    temp.y = 130;    }  else    {    temp.y = 165;    }  temp.step = 4;  move.obj.v(ego, temp.x, temp.y, temp.step, fall.offscreen);  sound(s.ego.fall, sound.done);  }if (fall.offscreen)  {  reset(fall.offscreen);  erase(ego);  set(certain.death);  }if (work.3 > 0 &&     work.3 < 11)  {  set(dwarf.chase.ego);  work.3 = 0;  set(menace.caught.ego);  }if (menace.caught.ego)  {  reset(menace.caught.ego);  work.3 = 0;  set(dwarf.chase.ego);  normal.motion(a.dwarf);  ignore.blocks(a.dwarf);  if (protected.spell)    {    print("It's a good thing you are protected by a spell.  That little dwarf "          "likes to steal treasures.");    set.view(a.dwarf, View115);    reset(dwarf.in.room);    end.of.loop(a.dwarf, dwarf.leaves);    }  else    {    if (ego.invisible)      {      print("Being invisible has protected you, and your treasures, from the "            "dwarf.");      set.view(a.dwarf, View115);      reset(dwarf.in.room);      end.of.loop(a.dwarf, dwarf.leaves);      }    else      {      if (have.mirror)        {        reset(have.mirror);        set(lost.mirror);        currentScore -= 8;        drop("magic mirror");        set(failed.quest);        reset(castle.locked);        --num.treasures;        }      else        {        if (have.shield)          {          reset(have.shield);          set(lost.shield);          currentScore -= 8;          drop("shield");          set(failed.quest);          reset(castle.locked);          --num.treasures;          }        else          {          if (have.chest)            {            reset(have.chest);            set(lost.chest);            currentScore -= 8;            drop("chest");            set(failed.quest);            reset(castle.locked);            --num.treasures;            }          else            {            if (have.diamonds)              {              reset(have.diamonds);              set(lost.diamonds);              currentScore -= 6;              drop("pouch of diamonds");              }            else              {              if (have.opened.walnut)                {                reset(have.opened.walnut);                set(lost.walnut);                currentScore -= 6;                drop("gold walnut");                }              else                {                if (have.egg)                  {                  reset(have.egg);                  set(lost.egg);                  currentScore -= 6;                  drop("gold egg");                  }                else                  {                  if (have.pouch)                    {                    reset(have.pouch);                    set(lost.pouch);                    currentScore -= 3;                    drop("pouch");                    }                  else                    {                    if (have.sceptre)                      {                      reset(have.sceptre);                      set(lost.sceptre);                      currentScore -= 6;                      drop("sceptre");                      }                    else                      {                      set.view(a.dwarf, View115);                      reset(dwarf.in.room);                      print("The quick, little dwarf came by to see what you "                            "had-- nothing interested him.");                      end.of.loop(a.dwarf, dwarf.leaves);                      goto(Label2);                      }                    }                  }                }              }            }          }        }      set.view(a.dwarf, View115);      reset(dwarf.in.room);      print("That little dwarf caught you by surprise.  Is your treasure still "            "OK?");      end.of.loop(a.dwarf, dwarf.leaves);      }    }  }Label2:if (dwarf.leaves)  {  erase(a.dwarf);  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic69);  }if (posn(ego, 0, 166, 159, 167))  {  new.room(Logic67);  }return();[ Messages#message 1 "The stairs seem to go on forever."#message 2 "This is a shy little dwarf.  He is too quick to catch."#message 3 "Look out!  You are too close to the edge!  Oh, oh, you fell!"#message 4 "That little dwarf caught you by surprise.  Is your treasure still OK?"#message 5 "The quick, little dwarf came by to see what you had-- nothing interested him."#message 6 "There is nobody here but you."#message 7 "It's a good thing you are protected by a spell.  That little dwarf likes to steal treasures."#message 8 "The dwarf is not here for idle conversion."#message 9 "Being invisible has protected you, and your treasures, from the dwarf."