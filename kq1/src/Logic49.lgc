if (isset(newRoom))  {  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  load.sound(s.ego.fall);  load.logics(lgc.swim);  call(lgc.swim);  load.view(v.ego.in.bucket);  load.view(v.bucket);  load.view(View74);  load.view(View105);  load.view(View99);  if (isset(falling.into.well))    {    set.view(ego, View105);    position(ego, 81, 48);    ignore.objs(ego);    ignore.blocks(ego);    set.priority(ego, 15);    set(keep.cycling);    set(lf0);    move.obj(ego, 81, 164, 3, lf1);    }  if (previousRoom == 12 &&       !isset(falling.into.well))    {    if (!isset(f162))      {      set(f162);      currentScore  += 1;      }    if (isset(climbing.rope))      {      set.view(ego, View74);      position(ego, 81, 48);      set.priority(ego, 15);      }    }  if (previousRoom == 52)    {    drown.swim = 2;    set.view(ego, View70);    set(lf3);    lv0 = 250;    position(ego, 75, 163);    }  if (isset(rope.lowered))    {    add.to.pic(View99, 0, 0, 84, 119, 4, 4);    discard.view(View99);    }  if (isset(bucket.lowered))    {    if (isset(ego.in.bucket))      {      animate.obj(o1);      set.view(o1, v.ego.in.bucket);      position(o1, 79, 150);      set.cel(o1, 0);      draw(o1);      add.to.pic(View99, 0, 0, 84, 119, 4, 4);      end.of.loop(o1, done);      goto(Label1);      }    else      {      add.to.pic(View99, 0, 0, 84, 119, 4, 4);      animate.obj(o1);      set.view(o1, v.bucket);      position(o1, 79, 150);      set.cel(o1, 0);      draw(o1);      stop.update(o1);      }    }  draw(ego);Label1:  show.pic();  }if ((isset(rope.lowered) ||     isset(bucket.lowered)))  {  if (said("check", "rope"))    {    print("It is a very long, sturdy rope.");    }  }if (isset(onWater))  {  observe.blocks(ego);  }else  {  ignore.blocks(ego);  }if (isset(falling.into.well) &&     !isset(lf1) &&     !isset(lf2) &&     !isset(lf4))  {  sound(s.ego.fall, sound.done);  set(lf4);  }if (isset(climbing.rope))  {  get.posn(ego, temp.x, temp.y);  if (temp.y > 115 &&       isset(bucket.lowered))    {    reset(climbing.rope);    set(falling.into.well);    set.view(ego, View105);    temp.y = 164;    ignore.objs(ego);    set.priority(ego, 15);    set(keep.cycling);    set(lf0);    temp.step = 3;    move.obj.v(ego, temp.x, temp.y, temp.step, lf2);    }  if (temp.y > 115 &&       isset(rope.lowered))    {    reset(climbing.rope);    set(falling.into.well);    set.view(ego, View105);    temp.y = 164;    ignore.objs(ego);    set.priority(ego, 15);    set(keep.cycling);    set(lf0);    temp.step = 3;    move.obj.v(ego, temp.x, temp.y, temp.step, lf2);    }  if ((temp.x < 79 ||       temp.x > 83))    {    if (temp.y > 70)      {      reset(climbing.rope);      set(falling.into.well);      set.view(ego, View105);      temp.y = 164;      ignore.objs(ego);      set.priority(ego, 15);      set(keep.cycling);      set(lf0);      temp.step = 3;      move.obj.v(ego, temp.x, temp.y, temp.step, lf2);      }    else      {      reset(climbing.rope);      set(falling.into.well);      set(lf5);      set.view(ego, View105);      temp.y = 164;      ignore.objs(ego);      set.priority(ego, 15);      set(keep.cycling);      set(lf0);      temp.step = 3;      move.obj.v(ego, temp.x, temp.y, temp.step, lf1);      }    }  }if (isset(lf1))  {  reset(lf1);  stop.sound();  erase(ego);  if (isset(falling.into.well) &&       !isset(lf5))    {    print("You should be more careful before trying that next time!");    }  else    {    print("I can see you need a little practice climbing rope!");    }  set(certain.death);  }if (isset(lf2))  {  reset(lf0);  reset(lf2);  reset(keep.cycling);  reset(falling.into.well);  release.priority(ego);  stop.sound();  set.view(ego, View93);  }if (drown.swim == 2 &&     !isset(lf3))  {  set(lf3);  lv0 = 250;  }--lv0;if (lv0 == 1 &&     isset(lf3))  {  erase(ego);  print("Your arms are like lead... from swimming.  You find it impossible... "        "to swim any longer.  You sink to the bottom... of the well....");  set(certain.death);  }if (!isset(climbing.rope) &&     !isset(lf0))  {  if ((said("climb", "rope") ||       said("a", "rope")))    {    if (!isset(rope.lowered) &&         !isset(bucket.lowered))      {      print("The rope is out of reach.");      }    if (isset(rope.lowered))      {      erase(ego);      drown.swim = 0;      reset(keep.cycling);      set.view(ego, View74);      position(ego, 81, 113);      set.priority(ego, 15);      draw(ego);      move.obj(ego, 81, 113, 0, done);      set(climbing.rope);      reset(lf3);      }    if (isset(bucket.lowered) &&         !isset(ego.in.bucket))      {      erase(ego);      drown.swim = 0;      reset(keep.cycling);      set.view(ego, View74);      position(ego, 81, 113);      set.priority(ego, 15);      draw(ego);      move.obj(ego, 81, 113, 0, done);      set(climbing.rope);      reset(lf3);      }    if (isset(ego.in.bucket))      {      start.update(o1);      erase(o1);      set.view(o1, v.bucket);      set.view(ego, View74);      position(o1, 78, 150);      position(ego, 81, 113);      set.cel(o1, 0);      draw(o1);      stop.update(o1);      set.priority(ego, 15);      draw(ego);      move.obj(ego, 81, 113, 0, done);      set(climbing.rope);      reset(ego.in.bucket);      }    }  if (isset(ego.in.bucket))    {    if ((said("enter", "water") ||         said("exit", "bucket") ||         said("enter", "water") ||         said("jump", "water") ||         said("get out", "bucket")))      {      start.update(o1);      erase(o1);      set.view(o1, v.bucket);      set.view(ego, View105);      position(o1, 79, 150);      position(ego, 81, 124);      set(keep.cycling);      move.obj(ego, 81, 164, 3, lf2);      set.cel(o1, 0);      draw(o1);      stop.update(o1);      set.priority(ego, 15);      draw(ego);      set(climbing.rope);      reset(ego.in.bucket);      }    }  }if ((said("climb", "well") ||     said("a", "well")))  {  print("You cannot climb the sides of the well.  They are too steep and "        "slippery.");  }if (said("check", "well"))  {  print("When you look upwards, you see the top of the well far, far above.");  }if (!isset(have.bucket))  {  if (said("check", "bucket"))    {    if (isset(bucket.lowered))      {      print("Although you can only see the bottom of the bucket, it looks like "            "a very nice bucket.");      }    else      {      print("The bucket is not here.");      }    }  if (said("acquire", "bucket"))    {    if (isset(bucket.lowered))      {      print("How are you going to get the bucket?");      }    else      {      print("The bucket is not here.");      }    }  if ((said("enter", "bucket") ||       said("get in", "bucket")))    {    if (isset(bucket.lowered) &&         !isset(ego.in.bucket))      {      print("I don't think that getting in the bucket right now will do you "            "very much good.");      }    }  }if ((said("untie", "rope") ||     said("untie", "bucket")))  {  if ((isset(climbing.rope) ||       isset(ego.in.bucket)))    {    print("The knot is tied very tightly.");    }  else    {    print("The rope is out of reach.");    }  }if (said("acquire", "rope"))  {  if ((isset(climbing.rope) ||       isset(ego.in.bucket)))    {    print("The rope is secured to the well with a very tight knot.");    }  else    {    print("The rope is out of reach.");    }  }if (said("break", "rope"))  {  if ((isset(climbing.rope) ||       isset(ego.in.bucket)))    {    print("The thick rope resists your efforts.");    }  else    {    print("The rope is out of reach.");    }  }if ((said("lower", "bucket") ||     said("raise", "bucket") ||     said("lower", "rope") ||     said("raise", "rope")))  {  print("A person in your position is in no position to raise or lower "        "anything.");  }if (!isset(have.dagger))  {  if (said("cut", "rope"))    {    print("You have nothing to cut the rope with.");    }  }if (isset(have.dagger))  {  if (said("cut", "rope"))    {    if (isset(climbing.rope) &&         isset(bucket.lowered))      {      print("Just before slitting the rope, you realize that it is not a very "            "wise move at this time.");      }    if (isset(ego.in.bucket))      {      print("Just before slitting the rope, you realize that it is not a very "            "wise move at this time.");      }    if (!isset(bucket.lowered))      {      print("There is no reason to cut the rope.");      }    if (drown.swim == 2 &&         isset(bucket.lowered))      {      print("You reach up out of the well water and cut the thick rope that "            "holds the bucket.");      start.update(o1);      erase(o1);      set(have.bucket);      set(cut.bucket);      reset(bucket.lowered);      set(rope.lowered);      currentScore  += 2;      get("water bucket");      if (isset(bucket.filled))        {        set(have.water);        get("water");        if (!isset(points.water))          {          set(points.water);          currentScore  += 2;          }        }      }    if (drown.swim == 1)      {      print("You have other things to think about right now.");      }    if (!isset(bucket.lowered) &&         !isset(rope.lowered))      {      print("The rope is out of reach.");      }    }  }if (!isset(have.water))  {  if (said("check", "water"))    {    print("This is murky well water.");    }  if (said("drink", "water"))    {    if ((drown.swim == 1 ||         drown.swim == 2))      {      print("The water does not taste as good as you expected.");      }    else      {      print("You need to be closer to the water to drink.");      }    }  if (said("acquire", "water"))    {    if (isset(have.bucket) &&         (drown.swim == 1 ||         drown.swim == 2))      {      print("In the midst of your activities, you fill the bucket with well "            "water.");      set(have.water);      if (!isset(points.water))        {        currentScore  += 2;        set(points.water);        }      }    else      {      print("There is no way for you to get water now.");      }    }  }if (drown.swim != 1 &&     drown.swim != 2)  {  if ((said("dive", "water") ||       said("dive", "a") ||       said("dive")))    {    print("Now is not the time to try diving.");    }  }if ((drown.swim == 1 ||     drown.swim == 2))  {  if ((said("dive", "water") ||       said("dive", "a") ||       said("dive")))    {    if (!isset(f164))      {      set(f164);      currentScore  += 2;      }    new.room(Logic52);    }  }if (edgeEgoHit == TOP_EDGE)  {  new.room(Logic12);  }call(lgc.swim);return();[ Messages#message 1 "I can see you need a little practice climbing rope!"#message 2 "You should be more careful before trying that next time!"#message 3 "Your arms are like lead... from swimming.  You find it impossible... to swim any longer.  You sink to the bottom... of the well...."#message 4 "The rope is out of reach."#message 5 "You cannot climb the sides of the well.  They are too steep and slippery."#message 6 "When you look upwards, you see the top of the well far, far above."#message 7 "Although you can only see the bottom of the bucket, it looks like a very nice bucket."#message 8 "The bucket is not here."#message 9 "How are you going to get the bucket?"#message 10 "This is murky well water."#message 11 "The water does not taste as good as you expected."#message 12 "In the midst of your activities, you fill the bucket with well water."#message 13 "The knot is tied very tightly."#message 14 "The rope is secured to the well with a very tight knot."#message 15 "The thick rope resists your efforts."#message 16 "You have nothing to cut the rope with."#message 17 "Just before slitting the rope, you realize that it is not a very wise move at this time."#message 18 "There is no reason to cut the rope."#message 19 "You reach up out of the well water and cut the thick rope that holds the bucket."#message 20 "You have other things to think about right now."#message 21 "The rope is out of reach."#message 22 "A person in your position is in no position to raise or lower anything."#message 23 "I don't think that getting in the bucket right now will do you very much good."#message 24 "You need to be closer to the water to drink."#message 25 "There is no way for you to get water now."#message 26 "Now is not the time to try diving."#message 27 "It is a very long, sturdy rope."