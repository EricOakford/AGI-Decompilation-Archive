if (errorNumber > 0)  {  call(lgcError);  }if (currentRoom == lgcMain)  {  configure.screen(1, 22, 0);  status.line.off();  set(noScript);  script.size(1);  program.control();  prevent.input();  set.key(48, 0, cNum0);  set.key(49, 0, cNum1);  set.key(50, 0, cNum2);  set.key(51, 0, cNum3);  set.key(52, 0, cNum4);  set.key(53, 0, cNum5);  set.key(54, 0, cNum6);  set.key(55, 0, cNum7);  set.key(56, 0, cNum8);  set.key(57, 0, cNum9);  set.key(67, 0, cRunContinuously);  set.key(99, 0, cRunContinuously);  set.key(72, 0, cHelp);  set.key(104, 0, cHelp);  set.key(77, 0, cRestart);  set.key(109, 0, cRestart);  set.key(13, 0, cReturn);  set.key(0, 60, cToggleSound);  set.key(27, 0, cPause);  set.key(0, 44, cQuit);  set.key(0, 67, cPrevPage);  set.key(0, 68, cNextPage);  numSelections = 0;  set(showOpeningLogo);  reset(demoRestarted);  reset(demoIsRunning);  new.room(rmDemoSelect);  }if (newRoom)  {  work = 220;mrLooper:  *work = 0;  reset.v(work);  if (work < 254)    {    ++work;    goto(mrLooper);    }  load.logics.v(currentRoom);  v54 = 0;  }if (currentRoom != rmDemoSelect)  {  if (controller(cPause))    {    set(demoPaused);    stop.sound();    print("Demonstration Paused");    }  }if (controller(cQuit))  {  set(demoPaused);  stop.sound();  quit(0);  }else  {  if (controller(cHelp) &&       currentRoom != 1)    {    set(demoPaused);    stop.sound();    print("Help:\n      M     - return to menu\n      F2    - toggle sound\n    "          "  ESC   - pause\n      Alt-Z - quit");    }  else    {    if (controller(cToggleSound))      {      set(demoPaused);      toggle(soundOn);      printTimeout = 6;      if (soundOn)        {        print("Sound now On");        }      else        {        print("Sound now Off");        }      }    else      {      if (controller(cRestart) &&           currentRoom != 1)        {        clear.text.rect(0, 0, 24, 40, BLACK);        numSelections = 0;        reset(willRunContinuously);        reset(demoIsRunning);        set(demoRestarted);        reset(showOpeningLogo);        new.room(rmDemoSelect);        }      }    }  }get.posn(ego, egoX, egoY);get.dir(ego, egoDir);if (egoDir == oldEgoDir &&     egoX == oldEgoX &&     egoY == oldEgoY)  {  stop.cycling(ego);  }else  {  start.cycling(ego);  }if ((egoDir <= STOPPED || noCycling))  {  stop.cycling(ego);  }if (keepCycling)  {  start.cycling(ego);  }++passInRoom;--scriptCycles;if (scriptCycles == 1)  {  set(scriptDone);  }if (elapsedSeconds != oldSeconds)  {  oldSeconds = elapsedSeconds;  set(aSecondPassed);  ++gameSeconds;  --scriptTimer;  if (scriptTimer == 1)    {    set(scriptDone);    }  }call.v(currentRoom);reset(aSecondPassed);get.posn(ego, oldEgoX, oldEgoY);oldEgoDir = egoDir;reset(demoPaused);return();[ Messages#message 1 "Sound now Off"#message 2 "Sound now On"#message 3 "Help:\n      M     - return to menu\n      F2    - toggle sound\n      ESC   - pause\n      Alt-Z - quit"#message 4 "Demonstration Paused"#message 5 "2"#message 6 "6"