if (errorNumber > 0)  {  call(lgcError);  }if (currentRoom == 0)  {  configure.screen(1, 22, 0);  status.line.off();  set(noScript);  script.size(1);  program.control();  prevent.input();  set.key(49, 0, cNum1);  set.key(50, 0, cNum2);  set.key(51, 0, cNum3);  set.key(52, 0, cNum4);  set.key(0, 59, cHelp);  set.key(0, 60, cToggleSound);  set.key(0, 62, cSpeed);  set.key(0, 66, cRunContinuously);  set.key(0, 67, cRunDemos);  set.key(0, 68, cRestart);  set.key(27, 0, cPause);  set.key(0, 44, cQuit);  set.key(43, 0, cCrescendo);  set.key(44, 0, cCrescendo);  set.key(45, 0, cDecrescendo);  set.game.id("DEMO");  whichDemo = 0;  set(selectedADemo);  reset(demoRolling);  animationInterval = NORMAL_SPEED;  new.room(rmDemoSelect);  }if (newRoom)  {  [Clear any local and dynamic flags and variables  work = 220;mrLooper:  *work = 0;  reset.v(work);  if (work < 254)    {    ++work;    goto(mrLooper);    }  load.logics.v(currentRoom);  secondsInRoom = 0;  set(disableGameFunctions);  }if (!disableGameFunctions)  {  if (currentRoom != rmDemoSelect)    {    if (controller(cPause))      {      print("Demonstration Paused");      }    }  if (controller(cQuit))    {    stop.sound();    quit(0);    }  else    {    if (controller(cHelp))      {      print("------ HELP FOR DEMOS ------\nF1  = See this help screen\nF2  = "            "Toggle sound\nF4  = Toggle speed\nF8  = Continuously run\n       "            "selected demo(s)\nF9  = Run selected demo(s)\nF10 = Return to "            "menu\n   *** Alt-Z to quit ***");      }    else      {      if (controller(cToggleSound))        {        toggle(soundOn);        if (soundOn)          {          printTimeout = 6;          print("Sound now On");          }        else          {          printTimeout = 6;          print("Sound now Off");          }        }      else        {        if (controller(cRestart) &&             currentRoom != rmDemoSelect)          {          clear.text.rect(0, 0, 24, 40, BLACK);          whichDemo = 0;          reset(willRunContinuously);          set(selectedADemo);          reset(selectedSQ);          reset(selectedDonald);          reset(selectedKQ3);          reset(selectedLSL);          reset(demoRolling);          new.room(rmDemoSelect);          }        else          {          if (controller(cSpeed))            {            if (animationInterval == NORMAL_SPEED)              {              print("Fast speed");              animationInterval = FAST_SPEED;              }            else              {              print("Normal speed");              animationInterval = NORMAL_SPEED;              }            }          else            {            if (controller(cCrescendo))              {              --attenuation;              }            else              {              if (controller(cDecrescendo))                {                if (attenuation < 15)                  {                  ++attenuation;                  }                }              }            }          }        }      }    }  }else  {  reset(disableGameFunctions);  }call.v(currentRoom);reset(fFlag31);return();[ Messages#message 1 "Demonstration Paused"#message 3 "Sound now Off"#message 4 "Sound now On"#message 5 "Normal speed"#message 6 "Fast speed"#message 12 "DEMO"#message 13 "------ HELP FOR DEMOS ------\nF1  = See this help screen\nF2  = Toggle sound\nF4  = Toggle speed\nF8  = Continuously run\n       selected demo(s)\nF9  = Run selected demo(s)\nF10 = Return to menu\n   *** Alt-Z to quit ***"