#define a.val   o2#define a.flags o3#define a.door  o4#define win.delay   v31#define thanks.delay    v32#define credits.1   v33#define credits.2   v34#define credits.3   v35#define door.opens  f31#define door.closes f32#define val.moved   f33#define ego.moved   f34if (newRoom)  {  load.view(View105);  load.view(View106);  load.view(View174);  load.view(View116);  load.pic(currentRoom);  draw.pic(currentRoom);  animate.obj(a.val);  animate.obj(a.door);  animate.obj(a.flags);  ignore.horizon(a.flags);  if (previousRoom == 107)    {    set.view(ego, View105);    work = 2;    cycle.time(ego, work);    }  else    {    set.view(ego, View0);    }  set.view(a.val, View106);  set.view(a.door, View174);  work = 2;  cycle.time(ego, work);  set.cel(a.door, 0);  set.view(a.flags, View116);  position(ego, 110, 152);  position(a.val, 117, 152);  position(a.door, 105, 119);  position(a.flags, 116, 18);  if (previousRoom == 107)    {    set.loop(ego, 1);    }  else    {    set.loop(ego, 3);    }  set.loop(a.val, 1);  move.obj(ego, 110, 120, 0, ego.moved);  move.obj(a.val, 117, 120, 0, val.moved);  timer.1 = 50;  draw(ego);  if (previousRoom == 107)    {    draw(a.val);    }  draw(a.door);  start.cycling(a.flags);  draw(a.flags);  show.pic();  end.of.loop(a.door, door.closes);  }program.control();if (ego.moved)  {  reset(ego.moved);  program.control();  }if (door.closes)  {  reset(door.closes);  }--timer.1;if (timer.1 == 1)  {  set.priority(ego, 3);  set.priority(a.val, 3);  reverse.loop(a.door, door.opens);  }if (door.opens)  {  reset(door.opens);  accept.input();  if (previousRoom == 107)    {    printTimeout = 15;    print("If you have enjoyed this game, please ask your dealer about "          "availability of:");    win.delay = 40;    }  else    {    printTimeout = 10;    print("It is unfortunate that you have returned to Daventry without a "          "bride.");    thanks.delay = 30;    }  }--win.delay;--thanks.delay;--credits.1;--credits.2;--credits.3;if (win.delay == 1)  {  printTimeout = 15;  print("\"King's Quest III--To heir is human, to really foul things up takes a "        "computer\".");  thanks.delay = 30;  }if (thanks.delay == 1)  {  printTimeout = 15;  print("Thank you from the King's Quest development team:");  credits.1 = 15;  }if (credits.1 == 1)  {  printTimeout = 15;  print("Ken, Roberta, Sol, Jeff, Chris, Scott, Doug, Mark, Al, Dale, and Emo.");  credits.2 = 30;  }if (credits.2 == 1)  {  printTimeout = 15;  print("Thank you from the King's Quest quality assurance team:");  credits.3 = 15;  }if (credits.3 == 1)  {  printTimeout = 15;  print("Larry, Susan, Russ, Bob and Kim.");  thanks.delay = 30;  }if (val.moved)  {  reset(val.moved);  stop.cycling(a.val);  }if (!haveMatch &&     said("anyword", "anyword"))  {  print("At this point, I can only permit you to: Restore Game, Restart the "        "Game or Take Inventory. Sorry.");  }return();[ Messages#message 1 "If you have enjoyed this game, please ask your dealer about availability of:"#message 2 "\"King's Quest III--To heir is human, to really foul things up takes a computer\"."#message 3 "It is unfortunate that you have returned to Daventry without a bride."#message 4 "Thank you from the King's Quest development team:"#message 5 "Ken, Roberta, Sol, Jeff, Chris, Scott, Doug, Mark, Al, Dale, and Emo."#message 6 "At this point, I can only permit you to: Restore Game, Restart the Game or Take Inventory. Sorry."#message 7 "Thank you from the King's Quest quality assurance team:"#message 8 "Larry, Susan, Russ, Bob and Kim."